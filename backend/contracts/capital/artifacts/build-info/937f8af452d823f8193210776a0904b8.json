{
	"id": "937f8af452d823f8193210776a0904b8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/capital/MCR.sol": {
				"content": "\n\npragma solidity >= 0.8.18;\nimport \"../interfaces/IMCR.sol\";\nimport \"../interfaces/ICover.sol\";\nimport \"../libraries/Math.sol\";\nimport \"../Master.sol\";\n\nuint constant BASIS_PRECISION = 10000;\ncontract MCR is IMCR {\n  Master master;\n  uint112 public mcrFloor = 10000; // in basis point\n  uint112 public mcr;\n  uint112 public desiredMCR;\n  uint24 public gearingFactor = 48000; // in basis point\n  constructor (address masterAddress){\n    master = Master(masterAddress);\n  }\n  event MCRUpdated(\n    uint mcr,\n    uint desiredMCR,\n    uint mcrFloor,\n    uint mcrETHWithGear,\n    uint totalSumAssured\n  );\n  function updateMCRInternal() public {\n    _updateMCR();\n  }\n\n  function _updateMCR() internal {\n\n    // the desiredMCR cannot fall below the mcrFloor but may have a higher or lower target value based\n    // on the changes in the totalSumAssured in the system.\n    uint totalSumAssured = getAllSumAssurance();\n    uint gearedMCR = totalSumAssured * BASIS_PRECISION / gearingFactor;\n    uint112 newDesiredMCR = uint112(Math.max(gearedMCR, mcrFloor));\n\n    desiredMCR = uint112(Math.max(gearedMCR, mcrFloor));\n    \n      \n    emit MCRUpdated(mcr, desiredMCR, mcrFloor, gearedMCR, totalSumAssured);\n  }\n\n  \n  function getAllSumAssurance() public view returns (uint) {\n\n    ICover _cover = ICover(master.CoverAddress());\n\n    uint totalActiveCoverAmountInEth = _cover.totalActiveCoverInETH();\n    return totalActiveCoverAmountInEth;\n  }\n\n\n  /**\n   * @dev Calculates the current virtual MCR value. The virtual MCR value moves towards the desiredMCR value away\n   * from the stored mcr value at constant velocity based on how much time passed from the lastUpdateTime.\n   * The total change in virtual MCR cannot exceed 1% of stored mcr.\n   *\n   * This approach allows for the MCR to change smoothly across time without sudden jumps between values, while\n   * always progressing towards the desiredMCR goal. The desiredMCR can change subject to the call of _updateMCR\n   * so the virtual MCR value may change direction and start decreasing instead of increasing or vice-versa.\n   *\n   * @return mcr\n   */\n  function getMCR() public view returns (uint) {\n    \n    // uint basisPointsAdjustment = _maxMCRIncrement * (block.timestamp - _lastUpdateTime) / 1 days;\n    // basisPointsAdjustment = Math.min(basisPointsAdjustment, MAX_MCR_ADJUSTMENT);\n\n    return desiredMCR;\n  }\n\n}"
			},
			"contracts/Master.sol": {
				"content": "pragma solidity ^0.8.0;\n\ncontract Master {\n    address public  PoolAddress = address(0x0);\n    address public  CommissionDestination = address(0x0);\n    address public  CoverAddress = address(0x0);\n    address public  MCRAddress = address(0x0);\n    address public  AssessmentAddress = address(0x0);\n\n    function setPoolAddress (address x) public {\n        PoolAddress = x;\n    }\n    function setCommissionDestination (address x) public{\n        CommissionDestination = x;\n    }\n    function setCoverAddress (address x) public {\n        CoverAddress = x;\n    }\n    function setMCRAddress (address x) public {\n        MCRAddress = x;\n    }\n    function setAssessmentAddress(address x) public {\n        AssessmentAddress = x;\n    }\n}"
			},
			"contracts/libraries/Math.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\n\npragma solidity ^0.8.18;\n\n/**\n * @dev Simple library that defines min, max and babylonian sqrt functions\n */\nlibrary Math {\n\n  function min(uint a, uint b) internal pure returns (uint) {\n    return a < b ? a : b;\n  }\n\n  function max(uint a, uint b) internal pure returns (uint) {\n    return a > b ? a : b;\n  }\n\n  function sum(uint[] memory items) internal pure returns (uint) {\n    uint count = items.length;\n    uint total;\n\n    for (uint i = 0; i < count; i++) {\n      total += items[i];\n    }\n\n    return total;\n  }\n\n  function divRound(uint a, uint b) internal pure returns (uint) {\n    return (a + b / 2) / b;\n  }\n\n  function divCeil(uint a, uint b) internal pure returns (uint) {\n    return (a + b - 1) / b;\n  }\n\n  function roundUp(uint a, uint b) internal pure returns (uint) {\n    return divCeil(a, b) * b;\n  }\n\n  // babylonian method\n  function sqrt(uint y) internal pure returns (uint) {\n\n    if (y > 3) {\n      uint z = y;\n      uint x = y / 2 + 1;\n      while (x < z) {\n        z = x;\n        x = (y / x + x) / 2;\n      }\n      return z;\n    }\n\n    if (y != 0) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n}\n"
			},
			"contracts/interfaces/ICover.sol": {
				"content": "pragma solidity >=0.5.0;\nimport \"./ICoverNFT.sol\";\n\nstruct BuyCoverParams {\n    address token0;\n    address token1;\n    uint token1Qty;\n    uint token0Qty;\n    uint lowerBoundRatio;\n    uint upperBoundRatio;\n    uint period;\n    string pairStr;\n}\n\nstruct CoverData {\n  uint256 amountPaidOut;\n  uint256 totalClaimAmount;\n  uint256 start;\n  uint256 period; // seconds\n \n    address token0;\n    address token1;\n    uint256 token0Qty;\n    uint256 token1Qty;\n    uint256 lowerBoundRatio;\n    uint256 upperBoundRatio;\n    string pairStr;\n}\n\n\n\ninterface ICover {\n    //mapping(uint => CoverData) private _coverData; _coverData[coverId]\n    function buyCover(BuyCoverParams calldata params) external payable returns (uint coverId); \n    function coverPrice(BuyCoverParams calldata params) external returns (uint price); // oracle is not involved\n    // function retrievePayment(uint premiumInPaymentAsset, uint paymentAsset) external returns (bool success); // pay premium to Pool\n    function coverDataCount() external view returns (uint count);\n\n    function getCoverData(uint coverId) external view returns (CoverData memory coverData);\n    function totalActiveCoverInETH()external view returns (uint);\n    function decActiveCoverInETH(uint ) external;\n    // ETH transfers\n    error InsufficientEthSent();\n    error SendingEthToPoolFailed();\n    error SendingEthToCommissionDestinationFailed();\n    error ReturningEthRemainderToSenderFailed();\n}"
			},
			"contracts/interfaces/IMCR.sol": {
				"content": "interface IMCR{\n    function getMCR() view external returns (uint);\n    function updateMCRInternal() external;\n}"
			},
			"contracts/interfaces/ICoverNFT.sol": {
				"content": "\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol\";\n\ninterface ICoverNFT is IERC721{\n    function isApprovedOrOwner(address spender, uint tokenId) external returns (bool);\n\n    function mint(address to) external returns (uint tokenId); // coverdata is stored in Cover \n    function totalSupply() external view returns (uint);\n\n    error NotOperator();\n    error NotMinted();\n    error WrongFrom();\n    error InvalidRecipient();\n    error InvalidNewOperatorAddress();\n    error InvalidNewNFTDescriptorAddress();\n    error NotAuthorized();\n    error UnsafeRecipient();\n    error AlreadyMinted();\n    // function changeOperator(address newOperator) external;\n\n    // function totalSupply() external view returns (uint);\n\n    // function name() external view returns (string memory);\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\n\npragma solidity >= 0.8.0;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.19;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Master.sol": {
				"Master": {
					"abi": [
						{
							"inputs": [],
							"name": "AssessmentAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "CommissionDestination",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "CoverAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MCRAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PoolAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "x",
									"type": "address"
								}
							],
							"name": "setAssessmentAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "x",
									"type": "address"
								}
							],
							"name": "setCommissionDestination",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "x",
									"type": "address"
								}
							],
							"name": "setCoverAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "x",
									"type": "address"
								}
							],
							"name": "setMCRAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "x",
									"type": "address"
								}
							],
							"name": "setPoolAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Master.sol\":25:731  contract Master {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Master.sol\":85:88  0x0 */\n  0x00\n    /* \"contracts/Master.sol\":47:89  address public  PoolAddress = address(0x0) */\n  dup1\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Master.sol\":143:146  0x0 */\n  0x00\n    /* \"contracts/Master.sol\":95:147  address public  CommissionDestination = address(0x0) */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Master.sol\":192:195  0x0 */\n  0x00\n    /* \"contracts/Master.sol\":153:196  address public  CoverAddress = address(0x0) */\n  0x02\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Master.sol\":239:242  0x0 */\n  0x00\n    /* \"contracts/Master.sol\":202:243  address public  MCRAddress = address(0x0) */\n  0x03\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Master.sol\":293:296  0x0 */\n  0x00\n    /* \"contracts/Master.sol\":249:297  address public  AssessmentAddress = address(0x0) */\n  0x04\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Master.sol\":25:731  contract Master {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Master.sol\":25:731  contract Master {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9ccc903d\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x9ccc903d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe07ee06d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xe67cdafd\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xe9e15b4f\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xff5f1b9f\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x6178cfca\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x7346d3f8\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x75924419\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x7abc3964\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x88ea0751\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Master.sol\":384:478  function setCommissionDestination (address x) public{... */\n    tag_3:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      stop\n        /* \"contracts/Master.sol\":565:638  function setMCRAddress (address x) public {... */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_19:\n      tag_20\n      jump\t// in\n    tag_18:\n      stop\n        /* \"contracts/Master.sol\":643:729  function setAssessmentAddress(address x) public {... */\n    tag_5:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_22:\n      tag_23\n      jump\t// in\n    tag_21:\n      stop\n        /* \"contracts/Master.sol\":95:147  address public  CommissionDestination = address(0x0) */\n    tag_6:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Master.sol\":202:243  address public  MCRAddress = address(0x0) */\n    tag_7:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Master.sol\":47:89  address public  PoolAddress = address(0x0) */\n    tag_8:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Master.sol\":483:560  function setCoverAddress (address x) public {... */\n    tag_9:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n    tag_34:\n      stop\n        /* \"contracts/Master.sol\":153:196  address public  CoverAddress = address(0x0) */\n    tag_10:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Master.sol\":304:379  function setPoolAddress (address x) public {... */\n    tag_11:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n    tag_40:\n      stop\n        /* \"contracts/Master.sol\":249:297  address public  AssessmentAddress = address(0x0) */\n    tag_12:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Master.sol\":384:478  function setCommissionDestination (address x) public{... */\n    tag_17:\n        /* \"contracts/Master.sol\":470:471  x */\n      dup1\n        /* \"contracts/Master.sol\":446:467  CommissionDestination */\n      0x01\n      0x00\n        /* \"contracts/Master.sol\":446:471  CommissionDestination = x */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Master.sol\":384:478  function setCommissionDestination (address x) public{... */\n      pop\n      jump\t// out\n        /* \"contracts/Master.sol\":565:638  function setMCRAddress (address x) public {... */\n    tag_20:\n        /* \"contracts/Master.sol\":630:631  x */\n      dup1\n        /* \"contracts/Master.sol\":617:627  MCRAddress */\n      0x03\n      0x00\n        /* \"contracts/Master.sol\":617:631  MCRAddress = x */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Master.sol\":565:638  function setMCRAddress (address x) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/Master.sol\":643:729  function setAssessmentAddress(address x) public {... */\n    tag_23:\n        /* \"contracts/Master.sol\":721:722  x */\n      dup1\n        /* \"contracts/Master.sol\":701:718  AssessmentAddress */\n      0x04\n      0x00\n        /* \"contracts/Master.sol\":701:722  AssessmentAddress = x */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Master.sol\":643:729  function setAssessmentAddress(address x) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/Master.sol\":95:147  address public  CommissionDestination = address(0x0) */\n    tag_25:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Master.sol\":202:243  address public  MCRAddress = address(0x0) */\n    tag_29:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Master.sol\":47:89  address public  PoolAddress = address(0x0) */\n    tag_32:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Master.sol\":483:560  function setCoverAddress (address x) public {... */\n    tag_36:\n        /* \"contracts/Master.sol\":552:553  x */\n      dup1\n        /* \"contracts/Master.sol\":537:549  CoverAddress */\n      0x02\n      0x00\n        /* \"contracts/Master.sol\":537:553  CoverAddress = x */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Master.sol\":483:560  function setCoverAddress (address x) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/Master.sol\":153:196  address public  CoverAddress = address(0x0) */\n    tag_38:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Master.sol\":304:379  function setPoolAddress (address x) public {... */\n    tag_42:\n        /* \"contracts/Master.sol\":371:372  x */\n      dup1\n        /* \"contracts/Master.sol\":357:368  PoolAddress */\n      0x00\n      dup1\n        /* \"contracts/Master.sol\":357:372  PoolAddress = x */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Master.sol\":304:379  function setPoolAddress (address x) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/Master.sol\":249:297  address public  AssessmentAddress = address(0x0) */\n    tag_44:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_52:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_54:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_55:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_65\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_54\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_56:\n        /* \"#utility.yul\":641:665   */\n      tag_67\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_55\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_68\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_68:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_57:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_70\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_56\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_16:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_72\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_73\n      tag_52\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":917:1036   */\n    tag_72:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_74\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_57\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1294   */\n    tag_58:\n        /* \"#utility.yul\":1263:1287   */\n      tag_76\n        /* \"#utility.yul\":1281:1286   */\n      dup2\n        /* \"#utility.yul\":1263:1287   */\n      tag_55\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":1258:1261   */\n      dup3\n        /* \"#utility.yul\":1251:1288   */\n      mstore\n        /* \"#utility.yul\":1176:1294   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1300:1522   */\n    tag_27:\n        /* \"#utility.yul\":1393:1397   */\n      0x00\n        /* \"#utility.yul\":1431:1433   */\n      0x20\n        /* \"#utility.yul\":1420:1429   */\n      dup3\n        /* \"#utility.yul\":1416:1434   */\n      add\n        /* \"#utility.yul\":1408:1434   */\n      swap1\n      pop\n        /* \"#utility.yul\":1444:1515   */\n      tag_78\n        /* \"#utility.yul\":1512:1513   */\n      0x00\n        /* \"#utility.yul\":1501:1510   */\n      dup4\n        /* \"#utility.yul\":1497:1514   */\n      add\n        /* \"#utility.yul\":1488:1494   */\n      dup5\n        /* \"#utility.yul\":1444:1515   */\n      tag_58\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1300:1522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c72efe2fd6e2e609983ffb535836ee760ea96e0e0381ff41a2b864729349128964736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561015957600080fd5b506104c4806101696000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80639ccc903d116100665780639ccc903d14610133578063e07ee06d14610151578063e67cdafd1461016d578063e9e15b4f1461018b578063ff5f1b9f146101a75761009e565b80636178cfca146100a35780637346d3f8146100bf57806375924419146100db5780637abc3964146100f757806388ea075114610115575b600080fd5b6100bd60048036038101906100b89190610437565b6101c5565b005b6100d960048036038101906100d49190610437565b610209565b005b6100f560048036038101906100f09190610437565b61024d565b005b6100ff610291565b60405161010c9190610473565b60405180910390f35b61011d6102b7565b60405161012a9190610473565b60405180910390f35b61013b6102dd565b6040516101489190610473565b60405180910390f35b61016b60048036038101906101669190610437565b610301565b005b610175610345565b6040516101829190610473565b60405180910390f35b6101a560048036038101906101a09190610437565b61036b565b005b6101af6103ae565b6040516101bc9190610473565b60405180910390f35b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610404826103d9565b9050919050565b610414816103f9565b811461041f57600080fd5b50565b6000813590506104318161040b565b92915050565b60006020828403121561044d5761044c6103d4565b5b600061045b84828501610422565b91505092915050565b61046d816103f9565b82525050565b60006020820190506104886000830184610464565b9291505056fea2646970667358221220c72efe2fd6e2e609983ffb535836ee760ea96e0e0381ff41a2b864729349128964736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C4 DUP1 PUSH2 0x169 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9CCC903D GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x9CCC903D EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0xE07EE06D EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0xE67CDAFD EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xE9E15B4F EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0xFF5F1B9F EQ PUSH2 0x1A7 JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x6178CFCA EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x7346D3F8 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0x75924419 EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x7ABC3964 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x88EA0751 EQ PUSH2 0x115 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH2 0x1C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH2 0x209 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH2 0x24D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFF PUSH2 0x291 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH2 0x2B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH2 0x2DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH2 0x301 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x175 PUSH2 0x345 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH2 0x36B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AF PUSH2 0x3AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x404 DUP3 PUSH2 0x3D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x414 DUP2 PUSH2 0x3F9 JUMP JUMPDEST DUP2 EQ PUSH2 0x41F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x431 DUP2 PUSH2 0x40B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x44D JUMPI PUSH2 0x44C PUSH2 0x3D4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x45B DUP5 DUP3 DUP6 ADD PUSH2 0x422 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x46D DUP2 PUSH2 0x3F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x488 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x464 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0x2E INVALID 0x2F 0xD6 0xE2 0xE6 MULMOD SWAP9 EXTCODEHASH 0xFB MSTORE8 PC CALLDATASIZE 0xEE PUSH23 0xEA96E0E0381FF41A2B864729349128964736F6C634300 ADDMOD SGT STOP CALLER ",
							"sourceMap": "25:706:0:-:0;;;85:3;47:42;;;;;;;;;;;;;;;;;;;;143:3;95:52;;;;;;;;;;;;;;;;;;;;192:3;153:43;;;;;;;;;;;;;;;;;;;;239:3;202:41;;;;;;;;;;;;;;;;;;;;293:3;249:48;;;;;;;;;;;;;;;;;;;;25:706;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@AssessmentAddress_31": {
									"entryPoint": 942,
									"id": 31,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@CommissionDestination_13": {
									"entryPoint": 657,
									"id": 13,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@CoverAddress_19": {
									"entryPoint": 837,
									"id": 19,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MCRAddress_25": {
									"entryPoint": 695,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PoolAddress_7": {
									"entryPoint": 733,
									"id": 7,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setAssessmentAddress_81": {
									"entryPoint": 589,
									"id": 81,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setCommissionDestination_51": {
									"entryPoint": 453,
									"id": 51,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setCoverAddress_61": {
									"entryPoint": 769,
									"id": 61,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMCRAddress_71": {
									"entryPoint": 521,
									"id": 71,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setPoolAddress_41": {
									"entryPoint": 875,
									"id": 41,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1058,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1124,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1017,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 980,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1035,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1525:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:8",
														"type": ""
													}
												],
												"src": "466:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:8"
															},
															"nodeType": "YulIf",
															"src": "621:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:8",
														"type": ""
													}
												],
												"src": "568:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:8",
														"type": ""
													}
												],
												"src": "696:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:8"
															},
															"nodeType": "YulIf",
															"src": "917:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:8",
														"type": ""
													}
												],
												"src": "841:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1241:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1258:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1281:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1263:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1263:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1251:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1229:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1236:3:8",
														"type": ""
													}
												],
												"src": "1176:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1398:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1408:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1420:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1431:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1416:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1416:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1408:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1488:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1501:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1512:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1497:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1444:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1444:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1444:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1370:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1382:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1393:4:8",
														"type": ""
													}
												],
												"src": "1300:222:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061009e5760003560e01c80639ccc903d116100665780639ccc903d14610133578063e07ee06d14610151578063e67cdafd1461016d578063e9e15b4f1461018b578063ff5f1b9f146101a75761009e565b80636178cfca146100a35780637346d3f8146100bf57806375924419146100db5780637abc3964146100f757806388ea075114610115575b600080fd5b6100bd60048036038101906100b89190610437565b6101c5565b005b6100d960048036038101906100d49190610437565b610209565b005b6100f560048036038101906100f09190610437565b61024d565b005b6100ff610291565b60405161010c9190610473565b60405180910390f35b61011d6102b7565b60405161012a9190610473565b60405180910390f35b61013b6102dd565b6040516101489190610473565b60405180910390f35b61016b60048036038101906101669190610437565b610301565b005b610175610345565b6040516101829190610473565b60405180910390f35b6101a560048036038101906101a09190610437565b61036b565b005b6101af6103ae565b6040516101bc9190610473565b60405180910390f35b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610404826103d9565b9050919050565b610414816103f9565b811461041f57600080fd5b50565b6000813590506104318161040b565b92915050565b60006020828403121561044d5761044c6103d4565b5b600061045b84828501610422565b91505092915050565b61046d816103f9565b82525050565b60006020820190506104886000830184610464565b9291505056fea2646970667358221220c72efe2fd6e2e609983ffb535836ee760ea96e0e0381ff41a2b864729349128964736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9CCC903D GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x9CCC903D EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0xE07EE06D EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0xE67CDAFD EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xE9E15B4F EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0xFF5F1B9F EQ PUSH2 0x1A7 JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x6178CFCA EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x7346D3F8 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0x75924419 EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x7ABC3964 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x88EA0751 EQ PUSH2 0x115 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH2 0x1C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH2 0x209 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH2 0x24D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFF PUSH2 0x291 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH2 0x2B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH2 0x2DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH2 0x301 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x175 PUSH2 0x345 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH2 0x36B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AF PUSH2 0x3AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x404 DUP3 PUSH2 0x3D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x414 DUP2 PUSH2 0x3F9 JUMP JUMPDEST DUP2 EQ PUSH2 0x41F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x431 DUP2 PUSH2 0x40B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x44D JUMPI PUSH2 0x44C PUSH2 0x3D4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x45B DUP5 DUP3 DUP6 ADD PUSH2 0x422 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x46D DUP2 PUSH2 0x3F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x488 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x464 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0x2E INVALID 0x2F 0xD6 0xE2 0xE6 MULMOD SWAP9 EXTCODEHASH 0xFB MSTORE8 PC CALLDATASIZE 0xEE PUSH23 0xEA96E0E0381FF41A2B864729349128964736F6C634300 ADDMOD SGT STOP CALLER ",
							"sourceMap": "25:706:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;384:94;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;565:73;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;643:86;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;95:52;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;202:41;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;47:42;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;483:77;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;153:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;304:75;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;249:48;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;384:94;470:1;446:21;;:25;;;;;;;;;;;;;;;;;;384:94;:::o;565:73::-;630:1;617:10;;:14;;;;;;;;;;;;;;;;;;565:73;:::o;643:86::-;721:1;701:17;;:21;;;;;;;;;;;;;;;;;;643:86;:::o;95:52::-;;;;;;;;;;;;;:::o;202:41::-;;;;;;;;;;;;;:::o;47:42::-;;;;;;;;;;;;:::o;483:77::-;552:1;537:12;;:16;;;;;;;;;;;;;;;;;;483:77;:::o;153:43::-;;;;;;;;;;;;;:::o;304:75::-;371:1;357:11;;:15;;;;;;;;;;;;;;;;;;304:75;:::o;249:48::-;;;;;;;;;;;;;:::o;88:117:8:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:118::-;1263:24;1281:5;1263:24;:::i;:::-;1258:3;1251:37;1176:118;;:::o;1300:222::-;1393:4;1431:2;1420:9;1416:18;1408:26;;1444:71;1512:1;1501:9;1497:17;1488:6;1444:71;:::i;:::-;1300:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "244000",
								"executionCost": "121622",
								"totalCost": "365622"
							},
							"external": {
								"AssessmentAddress()": "2602",
								"CommissionDestination()": "2581",
								"CoverAddress()": "2558",
								"MCRAddress()": "2603",
								"PoolAddress()": "2511",
								"setAssessmentAddress(address)": "24767",
								"setCommissionDestination(address)": "24723",
								"setCoverAddress(address)": "24744",
								"setMCRAddress(address)": "24745",
								"setPoolAddress(address)": "24788"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 731,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 25,
									"end": 731,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25,
									"end": 731,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 85,
									"end": 88,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 47,
									"end": 89,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 47,
									"end": 89,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 47,
									"end": 89,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 47,
									"end": 89,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 47,
									"end": 89,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 47,
									"end": 89,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 47,
									"end": 89,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 47,
									"end": 89,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 47,
									"end": 89,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 47,
									"end": 89,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 47,
									"end": 89,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 47,
									"end": 89,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 47,
									"end": 89,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 47,
									"end": 89,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 47,
									"end": 89,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 47,
									"end": 89,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 47,
									"end": 89,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 47,
									"end": 89,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 47,
									"end": 89,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 47,
									"end": 89,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 143,
									"end": 146,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 147,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 95,
									"end": 147,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 147,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 95,
									"end": 147,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 95,
									"end": 147,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 95,
									"end": 147,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 95,
									"end": 147,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 95,
									"end": 147,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 95,
									"end": 147,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 95,
									"end": 147,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 95,
									"end": 147,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 95,
									"end": 147,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 95,
									"end": 147,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 95,
									"end": 147,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 95,
									"end": 147,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 95,
									"end": 147,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 95,
									"end": 147,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 95,
									"end": 147,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 95,
									"end": 147,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 95,
									"end": 147,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 192,
									"end": 195,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 153,
									"end": 196,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 153,
									"end": 196,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 153,
									"end": 196,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 153,
									"end": 196,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 153,
									"end": 196,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 153,
									"end": 196,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 153,
									"end": 196,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 153,
									"end": 196,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 153,
									"end": 196,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 153,
									"end": 196,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 153,
									"end": 196,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 153,
									"end": 196,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 153,
									"end": 196,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 153,
									"end": 196,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 153,
									"end": 196,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 153,
									"end": 196,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 153,
									"end": 196,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 153,
									"end": 196,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 153,
									"end": 196,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 153,
									"end": 196,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 239,
									"end": 242,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 243,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 202,
									"end": 243,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 243,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 202,
									"end": 243,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 202,
									"end": 243,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 202,
									"end": 243,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 202,
									"end": 243,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 202,
									"end": 243,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 202,
									"end": 243,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 202,
									"end": 243,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 202,
									"end": 243,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 202,
									"end": 243,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 202,
									"end": 243,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 202,
									"end": 243,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 202,
									"end": 243,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 202,
									"end": 243,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 202,
									"end": 243,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 202,
									"end": 243,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 202,
									"end": 243,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 243,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 293,
									"end": 296,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 297,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 249,
									"end": 297,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 297,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 249,
									"end": 297,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 249,
									"end": 297,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 249,
									"end": 297,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 249,
									"end": 297,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 249,
									"end": 297,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 249,
									"end": 297,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 249,
									"end": 297,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 249,
									"end": 297,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 249,
									"end": 297,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 249,
									"end": 297,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 249,
									"end": 297,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 249,
									"end": 297,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 249,
									"end": 297,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 249,
									"end": 297,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 249,
									"end": 297,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 249,
									"end": 297,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 249,
									"end": 297,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25,
									"end": 731,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 25,
									"end": 731,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 731,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 25,
									"end": 731,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25,
									"end": 731,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 25,
									"end": 731,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 731,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 731,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 25,
									"end": 731,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25,
									"end": 731,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25,
									"end": 731,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25,
									"end": 731,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 731,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 731,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 731,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 731,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 25,
									"end": 731,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 731,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c72efe2fd6e2e609983ffb535836ee760ea96e0e0381ff41a2b864729349128964736f6c63430008130033",
									".code": [
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 0,
											"value": "9CCC903D"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 0,
											"value": "9CCC903D"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 0,
											"value": "E07EE06D"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 0,
											"value": "E67CDAFD"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 0,
											"value": "E9E15B4F"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 0,
											"value": "FF5F1B9F"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 0,
											"value": "6178CFCA"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 0,
											"value": "7346D3F8"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 0,
											"value": "75924419"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 0,
											"value": "7ABC3964"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 0,
											"value": "88EA0751"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25,
											"end": 731,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 384,
											"end": 478,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 384,
											"end": 478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 384,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 384,
											"end": 478,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 384,
											"end": 478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 478,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 384,
											"end": 478,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 384,
											"end": 478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 384,
											"end": 478,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 384,
											"end": 478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 384,
											"end": 478,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 384,
											"end": 478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 384,
											"end": 478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 384,
											"end": 478,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 384,
											"end": 478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 384,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 384,
											"end": 478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 384,
											"end": 478,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 384,
											"end": 478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 384,
											"end": 478,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 565,
											"end": 638,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 565,
											"end": 638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 565,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 565,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 565,
											"end": 638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 565,
											"end": 638,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 565,
											"end": 638,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 565,
											"end": 638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 565,
											"end": 638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 565,
											"end": 638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 565,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 565,
											"end": 638,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 565,
											"end": 638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 565,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 565,
											"end": 638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 565,
											"end": 638,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 565,
											"end": 638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 565,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 565,
											"end": 638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 565,
											"end": 638,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 565,
											"end": 638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 565,
											"end": 638,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 643,
											"end": 729,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 643,
											"end": 729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 643,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 643,
											"end": 729,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 643,
											"end": 729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 729,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 643,
											"end": 729,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 643,
											"end": 729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 643,
											"end": 729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 643,
											"end": 729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 643,
											"end": 729,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 643,
											"end": 729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 643,
											"end": 729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 643,
											"end": 729,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 643,
											"end": 729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 643,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 643,
											"end": 729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 643,
											"end": 729,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 643,
											"end": 729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 643,
											"end": 729,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 95,
											"end": 147,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 95,
											"end": 147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 95,
											"end": 147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 95,
											"end": 147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 95,
											"end": 147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 95,
											"end": 147,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 95,
											"end": 147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 95,
											"end": 147,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 95,
											"end": 147,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 95,
											"end": 147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 95,
											"end": 147,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 95,
											"end": 147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 95,
											"end": 147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 95,
											"end": 147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 95,
											"end": 147,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 95,
											"end": 147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 95,
											"end": 147,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 95,
											"end": 147,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 95,
											"end": 147,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 95,
											"end": 147,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 95,
											"end": 147,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 95,
											"end": 147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 95,
											"end": 147,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 202,
											"end": 243,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 202,
											"end": 243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 202,
											"end": 243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 202,
											"end": 243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 202,
											"end": 243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 202,
											"end": 243,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 202,
											"end": 243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 202,
											"end": 243,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 243,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 202,
											"end": 243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 202,
											"end": 243,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 202,
											"end": 243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 202,
											"end": 243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 202,
											"end": 243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 202,
											"end": 243,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 202,
											"end": 243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 202,
											"end": 243,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 243,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 202,
											"end": 243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 202,
											"end": 243,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 202,
											"end": 243,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 202,
											"end": 243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 202,
											"end": 243,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 47,
											"end": 89,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 47,
											"end": 89,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47,
											"end": 89,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 47,
											"end": 89,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 47,
											"end": 89,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47,
											"end": 89,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 47,
											"end": 89,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47,
											"end": 89,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47,
											"end": 89,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47,
											"end": 89,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 47,
											"end": 89,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47,
											"end": 89,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47,
											"end": 89,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 47,
											"end": 89,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47,
											"end": 89,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 47,
											"end": 89,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47,
											"end": 89,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47,
											"end": 89,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47,
											"end": 89,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47,
											"end": 89,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47,
											"end": 89,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47,
											"end": 89,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47,
											"end": 89,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 483,
											"end": 560,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 483,
											"end": 560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 483,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 483,
											"end": 560,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 483,
											"end": 560,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 483,
											"end": 560,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 483,
											"end": 560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 483,
											"end": 560,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 483,
											"end": 560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 483,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 483,
											"end": 560,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 483,
											"end": 560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 483,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 483,
											"end": 560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 483,
											"end": 560,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 483,
											"end": 560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 483,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 483,
											"end": 560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 483,
											"end": 560,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 483,
											"end": 560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 483,
											"end": 560,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 153,
											"end": 196,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 153,
											"end": 196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 153,
											"end": 196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 153,
											"end": 196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 153,
											"end": 196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 153,
											"end": 196,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 153,
											"end": 196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 153,
											"end": 196,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 153,
											"end": 196,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 153,
											"end": 196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 153,
											"end": 196,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 153,
											"end": 196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 153,
											"end": 196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 153,
											"end": 196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 153,
											"end": 196,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 153,
											"end": 196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 153,
											"end": 196,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 153,
											"end": 196,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 153,
											"end": 196,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 153,
											"end": 196,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 153,
											"end": 196,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 153,
											"end": 196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 153,
											"end": 196,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 304,
											"end": 379,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 304,
											"end": 379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 304,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 304,
											"end": 379,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 304,
											"end": 379,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 304,
											"end": 379,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 304,
											"end": 379,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 304,
											"end": 379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 304,
											"end": 379,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 304,
											"end": 379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 304,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 304,
											"end": 379,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 304,
											"end": 379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 304,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 304,
											"end": 379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 304,
											"end": 379,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 304,
											"end": 379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 304,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 304,
											"end": 379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 304,
											"end": 379,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 304,
											"end": 379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 304,
											"end": 379,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 249,
											"end": 297,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 249,
											"end": 297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 249,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 249,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 249,
											"end": 297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 249,
											"end": 297,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 249,
											"end": 297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 249,
											"end": 297,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 249,
											"end": 297,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 249,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 249,
											"end": 297,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 249,
											"end": 297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 249,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 249,
											"end": 297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 249,
											"end": 297,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 249,
											"end": 297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 249,
											"end": 297,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 249,
											"end": 297,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 249,
											"end": 297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 249,
											"end": 297,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 249,
											"end": 297,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 249,
											"end": 297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 249,
											"end": 297,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 384,
											"end": 478,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 384,
											"end": 478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 470,
											"end": 471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 446,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 446,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 446,
											"end": 471,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 446,
											"end": 471,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 446,
											"end": 471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 446,
											"end": 471,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 446,
											"end": 471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 446,
											"end": 471,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 446,
											"end": 471,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 446,
											"end": 471,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 446,
											"end": 471,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 446,
											"end": 471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 446,
											"end": 471,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 446,
											"end": 471,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 446,
											"end": 471,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 446,
											"end": 471,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 446,
											"end": 471,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 446,
											"end": 471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 446,
											"end": 471,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 446,
											"end": 471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 384,
											"end": 478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 384,
											"end": 478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 565,
											"end": 638,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 565,
											"end": 638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 630,
											"end": 631,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 627,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 617,
											"end": 627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 617,
											"end": 631,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 617,
											"end": 631,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 617,
											"end": 631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 617,
											"end": 631,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 617,
											"end": 631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 617,
											"end": 631,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 617,
											"end": 631,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 617,
											"end": 631,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 617,
											"end": 631,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 617,
											"end": 631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 631,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 617,
											"end": 631,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 617,
											"end": 631,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 617,
											"end": 631,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 617,
											"end": 631,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 617,
											"end": 631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 631,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 617,
											"end": 631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 565,
											"end": 638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 565,
											"end": 638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 643,
											"end": 729,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 643,
											"end": 729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 721,
											"end": 722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 701,
											"end": 718,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 701,
											"end": 718,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 722,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 701,
											"end": 722,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 701,
											"end": 722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 701,
											"end": 722,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 701,
											"end": 722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 701,
											"end": 722,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 701,
											"end": 722,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 701,
											"end": 722,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 701,
											"end": 722,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 701,
											"end": 722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 701,
											"end": 722,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 701,
											"end": 722,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 701,
											"end": 722,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 701,
											"end": 722,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 701,
											"end": 722,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 701,
											"end": 722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 701,
											"end": 722,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 701,
											"end": 722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 643,
											"end": 729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 643,
											"end": 729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 95,
											"end": 147,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 95,
											"end": 147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 95,
											"end": 147,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 95,
											"end": 147,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 95,
											"end": 147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 95,
											"end": 147,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 95,
											"end": 147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 95,
											"end": 147,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 95,
											"end": 147,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 95,
											"end": 147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 95,
											"end": 147,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 95,
											"end": 147,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 95,
											"end": 147,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 95,
											"end": 147,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 95,
											"end": 147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 202,
											"end": 243,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 202,
											"end": 243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 202,
											"end": 243,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 202,
											"end": 243,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 202,
											"end": 243,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 202,
											"end": 243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 202,
											"end": 243,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 202,
											"end": 243,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 202,
											"end": 243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 202,
											"end": 243,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 202,
											"end": 243,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 202,
											"end": 243,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 202,
											"end": 243,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 202,
											"end": 243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47,
											"end": 89,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 47,
											"end": 89,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47,
											"end": 89,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47,
											"end": 89,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47,
											"end": 89,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47,
											"end": 89,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47,
											"end": 89,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 47,
											"end": 89,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 47,
											"end": 89,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47,
											"end": 89,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 47,
											"end": 89,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47,
											"end": 89,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47,
											"end": 89,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47,
											"end": 89,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 483,
											"end": 560,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 483,
											"end": 560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 552,
											"end": 553,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 537,
											"end": 549,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 537,
											"end": 549,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 537,
											"end": 553,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 537,
											"end": 553,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 537,
											"end": 553,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 537,
											"end": 553,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 537,
											"end": 553,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 537,
											"end": 553,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 537,
											"end": 553,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 537,
											"end": 553,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 537,
											"end": 553,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 537,
											"end": 553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 537,
											"end": 553,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 537,
											"end": 553,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 537,
											"end": 553,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 537,
											"end": 553,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 537,
											"end": 553,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 537,
											"end": 553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 537,
											"end": 553,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 537,
											"end": 553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 483,
											"end": 560,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 483,
											"end": 560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 153,
											"end": 196,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 153,
											"end": 196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 153,
											"end": 196,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 153,
											"end": 196,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 153,
											"end": 196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 153,
											"end": 196,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 153,
											"end": 196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 153,
											"end": 196,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 153,
											"end": 196,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 153,
											"end": 196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 153,
											"end": 196,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 153,
											"end": 196,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 153,
											"end": 196,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 153,
											"end": 196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 153,
											"end": 196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 304,
											"end": 379,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 304,
											"end": 379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 371,
											"end": 372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 357,
											"end": 368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 357,
											"end": 372,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 357,
											"end": 372,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 357,
											"end": 372,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 357,
											"end": 372,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 357,
											"end": 372,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 357,
											"end": 372,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 357,
											"end": 372,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 357,
											"end": 372,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 357,
											"end": 372,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 357,
											"end": 372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 357,
											"end": 372,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 357,
											"end": 372,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 357,
											"end": 372,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 357,
											"end": 372,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 357,
											"end": 372,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 357,
											"end": 372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 357,
											"end": 372,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 357,
											"end": 372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 304,
											"end": 379,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 304,
											"end": 379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 249,
											"end": 297,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 249,
											"end": 297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 249,
											"end": 297,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 249,
											"end": 297,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 249,
											"end": 297,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 249,
											"end": 297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 249,
											"end": 297,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 249,
											"end": 297,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 249,
											"end": 297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 249,
											"end": 297,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 249,
											"end": 297,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 249,
											"end": 297,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 249,
											"end": 297,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 249,
											"end": 297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 1281,
											"end": 1286,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 1263,
											"end": 1287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1261,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1251,
											"end": 1288,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1393,
											"end": 1397,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1431,
											"end": 1433,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1420,
											"end": 1429,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1416,
											"end": 1434,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1434,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1434,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 1512,
											"end": 1513,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1510,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1497,
											"end": 1514,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 1444,
											"end": 1515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1300,
											"end": 1522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"contracts/Master.sol",
								"contracts/capital/MCR.sol",
								"contracts/interfaces/ICover.sol",
								"contracts/interfaces/ICoverNFT.sol",
								"contracts/interfaces/IMCR.sol",
								"contracts/libraries/Math.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"AssessmentAddress()": "ff5f1b9f",
							"CommissionDestination()": "7abc3964",
							"CoverAddress()": "e67cdafd",
							"MCRAddress()": "88ea0751",
							"PoolAddress()": "9ccc903d",
							"setAssessmentAddress(address)": "75924419",
							"setCommissionDestination(address)": "6178cfca",
							"setCoverAddress(address)": "e07ee06d",
							"setMCRAddress(address)": "7346d3f8",
							"setPoolAddress(address)": "e9e15b4f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AssessmentAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CommissionDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CoverAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MCRAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"x\",\"type\":\"address\"}],\"name\":\"setAssessmentAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"x\",\"type\":\"address\"}],\"name\":\"setCommissionDestination\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"x\",\"type\":\"address\"}],\"name\":\"setCoverAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"x\",\"type\":\"address\"}],\"name\":\"setMCRAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"x\",\"type\":\"address\"}],\"name\":\"setPoolAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Master.sol\":\"Master\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Master.sol\":{\"keccak256\":\"0x3d3184b9516122e6fb70e4b5d512b6a0219abe38c4792b9cbf382dbffb880c65\",\"urls\":[\"bzz-raw://e1bb612708fc4fd742569a13ff47a2b359e21044f201e7eb99316a25c648203a\",\"dweb:/ipfs/QmZZwWpCLopjSVdjPNR1LxxrBXp7wFEgmqzYuQUQFh1z6J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/Master.sol:Master",
								"label": "PoolAddress",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 13,
								"contract": "contracts/Master.sol:Master",
								"label": "CommissionDestination",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 19,
								"contract": "contracts/Master.sol:Master",
								"label": "CoverAddress",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 25,
								"contract": "contracts/Master.sol:Master",
								"label": "MCRAddress",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 31,
								"contract": "contracts/Master.sol:Master",
								"label": "AssessmentAddress",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/capital/MCR.sol": {
				"MCR": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "masterAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "mcr",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "desiredMCR",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "mcrFloor",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "mcrETHWithGear",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalSumAssured",
									"type": "uint256"
								}
							],
							"name": "MCRUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "desiredMCR",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "",
									"type": "uint112"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "gearingFactor",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllSumAssurance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMCR",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mcr",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "",
									"type": "uint112"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mcrFloor",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "",
									"type": "uint112"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "updateMCRInternal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getMCR()": {
								"details": "Calculates the current virtual MCR value. The virtual MCR value moves towards the desiredMCR value away from the stored mcr value at constant velocity based on how much time passed from the lastUpdateTime. The total change in virtual MCR cannot exceed 1% of stored mcr. This approach allows for the MCR to change smoothly across time without sudden jumps between values, while always progressing towards the desiredMCR goal. The desiredMCR can change subject to the call of _updateMCR so the virtual MCR value may change direction and start decreasing instead of increasing or vice-versa.",
								"returns": {
									"_0": "mcr"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/capital/MCR.sol\":193:2370  contract MCR is IMCR {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/capital/MCR.sol\":261:266  10000 */\n  0x2710\n    /* \"contracts/capital/MCR.sol\":235:266  uint112 public mcrFloor = 10000 */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/capital/MCR.sol\":369:374  48000 */\n  0xbb80\n    /* \"contracts/capital/MCR.sol\":339:374  uint24 public gearingFactor = 48000 */\n  0x02\n  exp(0x0100, 0x0e)\n  dup2\n  sload\n  dup2\n  0xffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/capital/MCR.sol\":396:472  constructor (address masterAddress){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/capital/MCR.sol\":453:466  masterAddress */\n  dup1\n    /* \"contracts/capital/MCR.sol\":437:443  master */\n  0x00\n  dup1\n    /* \"contracts/capital/MCR.sol\":437:467  master = Master(masterAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/capital/MCR.sol\":396:472  constructor (address masterAddress){... */\n  pop\n    /* \"contracts/capital/MCR.sol\":193:2370  contract MCR is IMCR {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/capital/MCR.sol\":193:2370  contract MCR is IMCR {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/capital/MCR.sol\":193:2370  contract MCR is IMCR {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa8a41a68\n      gt\n      tag_10\n      jumpi\n      dup1\n      0xa8a41a68\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xaa5da046\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xb3452487\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xb8caedc4\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x017e7d8f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x44936b10\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x7a2dbb6f\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/capital/MCR.sol\":310:335  uint112 public desiredMCR */\n    tag_3:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/capital/MCR.sol\":2103:2367  function getMCR() public view returns (uint) {... */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/capital/MCR.sol\":235:266  uint112 public mcrFloor = 10000 */\n    tag_5:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/capital/MCR.sol\":339:374  uint24 public gearingFactor = 48000 */\n    tag_6:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/capital/MCR.sol\":604:663  function updateMCRInternal() public {... */\n    tag_7:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      stop\n        /* \"contracts/capital/MCR.sol\":1209:1435  function getAllSumAssurance() public view returns (uint) {... */\n    tag_8:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/capital/MCR.sol\":288:306  uint112 public mcr */\n    tag_9:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/capital/MCR.sol\":310:335  uint112 public desiredMCR */\n    tag_12:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/capital/MCR.sol\":2103:2367  function getMCR() public view returns (uint) {... */\n    tag_16:\n        /* \"contracts/capital/MCR.sol\":2142:2146  uint */\n      0x00\n        /* \"contracts/capital/MCR.sol\":2352:2362  desiredMCR */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/capital/MCR.sol\":2345:2362  return desiredMCR */\n      0xffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n        /* \"contracts/capital/MCR.sol\":2103:2367  function getMCR() public view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/capital/MCR.sol\":235:266  uint112 public mcrFloor = 10000 */\n    tag_20:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/capital/MCR.sol\":339:374  uint24 public gearingFactor = 48000 */\n    tag_23:\n      0x02\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/capital/MCR.sol\":604:663  function updateMCRInternal() public {... */\n    tag_27:\n        /* \"contracts/capital/MCR.sol\":646:658  _updateMCR() */\n      tag_36\n        /* \"contracts/capital/MCR.sol\":646:656  _updateMCR */\n      tag_37\n        /* \"contracts/capital/MCR.sol\":646:658  _updateMCR() */\n      jump\t// in\n    tag_36:\n        /* \"contracts/capital/MCR.sol\":604:663  function updateMCRInternal() public {... */\n      jump\t// out\n        /* \"contracts/capital/MCR.sol\":1209:1435  function getAllSumAssurance() public view returns (uint) {... */\n    tag_29:\n        /* \"contracts/capital/MCR.sol\":1260:1264  uint */\n      0x00\n        /* \"contracts/capital/MCR.sol\":1273:1286  ICover _cover */\n      dup1\n        /* \"contracts/capital/MCR.sol\":1296:1302  master */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/capital/MCR.sol\":1296:1315  master.CoverAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe67cdafd\n        /* \"contracts/capital/MCR.sol\":1296:1317  master.CoverAddress() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_40\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_40:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"contracts/capital/MCR.sol\":1273:1318  ICover _cover = ICover(master.CoverAddress()) */\n      swap1\n      pop\n        /* \"contracts/capital/MCR.sol\":1325:1357  uint totalActiveCoverAmountInEth */\n      0x00\n        /* \"contracts/capital/MCR.sol\":1360:1366  _cover */\n      dup2\n        /* \"contracts/capital/MCR.sol\":1360:1388  _cover.totalActiveCoverInETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xed3b657a\n        /* \"contracts/capital/MCR.sol\":1360:1390  _cover.totalActiveCoverInETH() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_44\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_44:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"contracts/capital/MCR.sol\":1325:1390  uint totalActiveCoverAmountInEth = _cover.totalActiveCoverInETH() */\n      swap1\n      pop\n        /* \"contracts/capital/MCR.sol\":1403:1430  totalActiveCoverAmountInEth */\n      dup1\n        /* \"contracts/capital/MCR.sol\":1396:1430  return totalActiveCoverAmountInEth */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/capital/MCR.sol\":1209:1435  function getAllSumAssurance() public view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/capital/MCR.sol\":288:306  uint112 public mcr */\n    tag_32:\n      0x01\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/capital/MCR.sol\":667:1202  function _updateMCR() internal {... */\n    tag_37:\n        /* \"contracts/capital/MCR.sol\":868:888  uint totalSumAssured */\n      0x00\n        /* \"contracts/capital/MCR.sol\":891:911  getAllSumAssurance() */\n      tag_48\n        /* \"contracts/capital/MCR.sol\":891:909  getAllSumAssurance */\n      tag_29\n        /* \"contracts/capital/MCR.sol\":891:911  getAllSumAssurance() */\n      jump\t// in\n    tag_48:\n        /* \"contracts/capital/MCR.sol\":868:911  uint totalSumAssured = getAllSumAssurance() */\n      swap1\n      pop\n        /* \"contracts/capital/MCR.sol\":917:931  uint gearedMCR */\n      0x00\n        /* \"contracts/capital/MCR.sol\":970:983  gearingFactor */\n      0x02\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffff\n      and\n        /* \"contracts/capital/MCR.sol\":934:983  totalSumAssured * BASIS_PRECISION / gearingFactor */\n      0xffffff\n      and\n        /* \"contracts/capital/MCR.sol\":186:191  10000 */\n      0x2710\n        /* \"contracts/capital/MCR.sol\":934:949  totalSumAssured */\n      dup4\n        /* \"contracts/capital/MCR.sol\":934:967  totalSumAssured * BASIS_PRECISION */\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n        /* \"contracts/capital/MCR.sol\":934:983  totalSumAssured * BASIS_PRECISION / gearingFactor */\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"contracts/capital/MCR.sol\":917:983  uint gearedMCR = totalSumAssured * BASIS_PRECISION / gearingFactor */\n      swap1\n      pop\n        /* \"contracts/capital/MCR.sol\":989:1010  uint112 newDesiredMCR */\n      0x00\n        /* \"contracts/capital/MCR.sol\":1021:1050  Math.max(gearedMCR, mcrFloor) */\n      tag_53\n        /* \"contracts/capital/MCR.sol\":1030:1039  gearedMCR */\n      dup3\n        /* \"contracts/capital/MCR.sol\":1041:1049  mcrFloor */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/capital/MCR.sol\":1021:1050  Math.max(gearedMCR, mcrFloor) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/capital/MCR.sol\":1021:1029  Math.max */\n      tag_54\n        /* \"contracts/capital/MCR.sol\":1021:1050  Math.max(gearedMCR, mcrFloor) */\n      jump\t// in\n    tag_53:\n        /* \"contracts/capital/MCR.sol\":989:1051  uint112 newDesiredMCR = uint112(Math.max(gearedMCR, mcrFloor)) */\n      swap1\n      pop\n        /* \"contracts/capital/MCR.sol\":1079:1108  Math.max(gearedMCR, mcrFloor) */\n      tag_55\n        /* \"contracts/capital/MCR.sol\":1088:1097  gearedMCR */\n      dup3\n        /* \"contracts/capital/MCR.sol\":1099:1107  mcrFloor */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/capital/MCR.sol\":1079:1108  Math.max(gearedMCR, mcrFloor) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/capital/MCR.sol\":1079:1087  Math.max */\n      tag_54\n        /* \"contracts/capital/MCR.sol\":1079:1108  Math.max(gearedMCR, mcrFloor) */\n      jump\t// in\n    tag_55:\n        /* \"contracts/capital/MCR.sol\":1058:1068  desiredMCR */\n      0x02\n      0x00\n        /* \"contracts/capital/MCR.sol\":1058:1109  desiredMCR = uint112(Math.max(gearedMCR, mcrFloor)) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/capital/MCR.sol\":1132:1197  MCRUpdated(mcr, desiredMCR, mcrFloor, gearedMCR, totalSumAssured) */\n      0x6e87c25e322c4ad68faf7916d0788baaf714d806fe887a84ee4b84ad9666f686\n        /* \"contracts/capital/MCR.sol\":1143:1146  mcr */\n      0x01\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/capital/MCR.sol\":1148:1158  desiredMCR */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/capital/MCR.sol\":1160:1168  mcrFloor */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/capital/MCR.sol\":1170:1179  gearedMCR */\n      dup6\n        /* \"contracts/capital/MCR.sol\":1181:1196  totalSumAssured */\n      dup8\n        /* \"contracts/capital/MCR.sol\":1132:1197  MCRUpdated(mcr, desiredMCR, mcrFloor, gearedMCR, totalSumAssured) */\n      mload(0x40)\n      tag_56\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/capital/MCR.sol\":698:1202  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/capital/MCR.sol\":667:1202  function _updateMCR() internal {... */\n      jump\t// out\n        /* \"contracts/libraries/Math.sol\":262:351  function max(uint a, uint b) internal pure returns (uint) {... */\n    tag_54:\n        /* \"contracts/libraries/Math.sol\":314:318  uint */\n      0x00\n        /* \"contracts/libraries/Math.sol\":337:338  b */\n      dup2\n        /* \"contracts/libraries/Math.sol\":333:334  a */\n      dup4\n        /* \"contracts/libraries/Math.sol\":333:338  a > b */\n      gt\n        /* \"contracts/libraries/Math.sol\":333:346  a > b ? a : b */\n      tag_59\n      jumpi\n        /* \"contracts/libraries/Math.sol\":345:346  b */\n      dup2\n        /* \"contracts/libraries/Math.sol\":333:346  a > b ? a : b */\n      jump(tag_60)\n    tag_59:\n        /* \"contracts/libraries/Math.sol\":341:342  a */\n      dup3\n        /* \"contracts/libraries/Math.sol\":333:346  a > b ? a : b */\n    tag_60:\n        /* \"contracts/libraries/Math.sol\":326:346  return a > b ? a : b */\n      swap1\n      pop\n        /* \"contracts/libraries/Math.sol\":262:351  function max(uint a, uint b) internal pure returns (uint) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:121   */\n    tag_61:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:114   */\n      0xffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:115   */\n      and\n        /* \"#utility.yul\":62:115   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:121   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":127:245   */\n    tag_62:\n        /* \"#utility.yul\":214:238   */\n      tag_84\n        /* \"#utility.yul\":232:237   */\n      dup2\n        /* \"#utility.yul\":214:238   */\n      tag_61\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":209:212   */\n      dup3\n        /* \"#utility.yul\":202:239   */\n      mstore\n        /* \"#utility.yul\":127:245   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":251:473   */\n    tag_14:\n        /* \"#utility.yul\":344:348   */\n      0x00\n        /* \"#utility.yul\":382:384   */\n      0x20\n        /* \"#utility.yul\":371:380   */\n      dup3\n        /* \"#utility.yul\":367:385   */\n      add\n        /* \"#utility.yul\":359:385   */\n      swap1\n      pop\n        /* \"#utility.yul\":395:466   */\n      tag_86\n        /* \"#utility.yul\":463:464   */\n      0x00\n        /* \"#utility.yul\":452:461   */\n      dup4\n        /* \"#utility.yul\":448:465   */\n      add\n        /* \"#utility.yul\":439:445   */\n      dup5\n        /* \"#utility.yul\":395:466   */\n      tag_62\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":251:473   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":479:556   */\n    tag_63:\n        /* \"#utility.yul\":516:523   */\n      0x00\n        /* \"#utility.yul\":545:550   */\n      dup2\n        /* \"#utility.yul\":534:550   */\n      swap1\n      pop\n        /* \"#utility.yul\":479:556   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":562:680   */\n    tag_64:\n        /* \"#utility.yul\":649:673   */\n      tag_89\n        /* \"#utility.yul\":667:672   */\n      dup2\n        /* \"#utility.yul\":649:673   */\n      tag_63\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":644:647   */\n      dup3\n        /* \"#utility.yul\":637:674   */\n      mstore\n        /* \"#utility.yul\":562:680   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":686:908   */\n    tag_18:\n        /* \"#utility.yul\":779:783   */\n      0x00\n        /* \"#utility.yul\":817:819   */\n      0x20\n        /* \"#utility.yul\":806:815   */\n      dup3\n        /* \"#utility.yul\":802:820   */\n      add\n        /* \"#utility.yul\":794:820   */\n      swap1\n      pop\n        /* \"#utility.yul\":830:901   */\n      tag_91\n        /* \"#utility.yul\":898:899   */\n      0x00\n        /* \"#utility.yul\":887:896   */\n      dup4\n        /* \"#utility.yul\":883:900   */\n      add\n        /* \"#utility.yul\":874:880   */\n      dup5\n        /* \"#utility.yul\":830:901   */\n      tag_64\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":686:908   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":914:1005   */\n    tag_65:\n        /* \"#utility.yul\":950:957   */\n      0x00\n        /* \"#utility.yul\":990:998   */\n      0xffffff\n        /* \"#utility.yul\":983:988   */\n      dup3\n        /* \"#utility.yul\":979:999   */\n      and\n        /* \"#utility.yul\":968:999   */\n      swap1\n      pop\n        /* \"#utility.yul\":914:1005   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1011:1126   */\n    tag_66:\n        /* \"#utility.yul\":1096:1119   */\n      tag_94\n        /* \"#utility.yul\":1113:1118   */\n      dup2\n        /* \"#utility.yul\":1096:1119   */\n      tag_65\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":1091:1094   */\n      dup3\n        /* \"#utility.yul\":1084:1120   */\n      mstore\n        /* \"#utility.yul\":1011:1126   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1132:1350   */\n    tag_25:\n        /* \"#utility.yul\":1223:1227   */\n      0x00\n        /* \"#utility.yul\":1261:1263   */\n      0x20\n        /* \"#utility.yul\":1250:1259   */\n      dup3\n        /* \"#utility.yul\":1246:1264   */\n      add\n        /* \"#utility.yul\":1238:1264   */\n      swap1\n      pop\n        /* \"#utility.yul\":1274:1343   */\n      tag_96\n        /* \"#utility.yul\":1340:1341   */\n      0x00\n        /* \"#utility.yul\":1329:1338   */\n      dup4\n        /* \"#utility.yul\":1325:1342   */\n      add\n        /* \"#utility.yul\":1316:1322   */\n      dup5\n        /* \"#utility.yul\":1274:1343   */\n      tag_66\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":1132:1350   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1437:1554   */\n    tag_68:\n        /* \"#utility.yul\":1546:1547   */\n      0x00\n        /* \"#utility.yul\":1543:1544   */\n      dup1\n        /* \"#utility.yul\":1536:1548   */\n      revert\n        /* \"#utility.yul\":1683:1809   */\n    tag_70:\n        /* \"#utility.yul\":1720:1727   */\n      0x00\n        /* \"#utility.yul\":1760:1802   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1753:1758   */\n      dup3\n        /* \"#utility.yul\":1749:1803   */\n      and\n        /* \"#utility.yul\":1738:1803   */\n      swap1\n      pop\n        /* \"#utility.yul\":1683:1809   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1815:1911   */\n    tag_71:\n        /* \"#utility.yul\":1852:1859   */\n      0x00\n        /* \"#utility.yul\":1881:1905   */\n      tag_102\n        /* \"#utility.yul\":1899:1904   */\n      dup3\n        /* \"#utility.yul\":1881:1905   */\n      tag_70\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":1870:1905   */\n      swap1\n      pop\n        /* \"#utility.yul\":1815:1911   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1917:2039   */\n    tag_72:\n        /* \"#utility.yul\":1990:2014   */\n      tag_104\n        /* \"#utility.yul\":2008:2013   */\n      dup2\n        /* \"#utility.yul\":1990:2014   */\n      tag_71\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":1983:1988   */\n      dup2\n        /* \"#utility.yul\":1980:2015   */\n      eq\n        /* \"#utility.yul\":1970:2033   */\n      tag_105\n      jumpi\n        /* \"#utility.yul\":2029:2030   */\n      0x00\n        /* \"#utility.yul\":2026:2027   */\n      dup1\n        /* \"#utility.yul\":2019:2031   */\n      revert\n        /* \"#utility.yul\":1970:2033   */\n    tag_105:\n        /* \"#utility.yul\":1917:2039   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2045:2188   */\n    tag_73:\n        /* \"#utility.yul\":2102:2107   */\n      0x00\n        /* \"#utility.yul\":2133:2139   */\n      dup2\n        /* \"#utility.yul\":2127:2140   */\n      mload\n        /* \"#utility.yul\":2118:2140   */\n      swap1\n      pop\n        /* \"#utility.yul\":2149:2182   */\n      tag_107\n        /* \"#utility.yul\":2176:2181   */\n      dup2\n        /* \"#utility.yul\":2149:2182   */\n      tag_72\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":2045:2188   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2194:2545   */\n    tag_42:\n        /* \"#utility.yul\":2264:2270   */\n      0x00\n        /* \"#utility.yul\":2313:2315   */\n      0x20\n        /* \"#utility.yul\":2301:2310   */\n      dup3\n        /* \"#utility.yul\":2292:2299   */\n      dup5\n        /* \"#utility.yul\":2288:2311   */\n      sub\n        /* \"#utility.yul\":2284:2316   */\n      slt\n        /* \"#utility.yul\":2281:2400   */\n      iszero\n      tag_109\n      jumpi\n        /* \"#utility.yul\":2319:2398   */\n      tag_110\n      tag_68\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":2281:2400   */\n    tag_109:\n        /* \"#utility.yul\":2439:2440   */\n      0x00\n        /* \"#utility.yul\":2464:2528   */\n      tag_111\n        /* \"#utility.yul\":2520:2527   */\n      dup5\n        /* \"#utility.yul\":2511:2517   */\n      dup3\n        /* \"#utility.yul\":2500:2509   */\n      dup6\n        /* \"#utility.yul\":2496:2518   */\n      add\n        /* \"#utility.yul\":2464:2528   */\n      tag_73\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":2454:2528   */\n      swap2\n      pop\n        /* \"#utility.yul\":2410:2538   */\n      pop\n        /* \"#utility.yul\":2194:2545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2551:2673   */\n    tag_74:\n        /* \"#utility.yul\":2624:2648   */\n      tag_113\n        /* \"#utility.yul\":2642:2647   */\n      dup2\n        /* \"#utility.yul\":2624:2648   */\n      tag_63\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":2617:2622   */\n      dup2\n        /* \"#utility.yul\":2614:2649   */\n      eq\n        /* \"#utility.yul\":2604:2667   */\n      tag_114\n      jumpi\n        /* \"#utility.yul\":2663:2664   */\n      0x00\n        /* \"#utility.yul\":2660:2661   */\n      dup1\n        /* \"#utility.yul\":2653:2665   */\n      revert\n        /* \"#utility.yul\":2604:2667   */\n    tag_114:\n        /* \"#utility.yul\":2551:2673   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2679:2822   */\n    tag_75:\n        /* \"#utility.yul\":2736:2741   */\n      0x00\n        /* \"#utility.yul\":2767:2773   */\n      dup2\n        /* \"#utility.yul\":2761:2774   */\n      mload\n        /* \"#utility.yul\":2752:2774   */\n      swap1\n      pop\n        /* \"#utility.yul\":2783:2816   */\n      tag_116\n        /* \"#utility.yul\":2810:2815   */\n      dup2\n        /* \"#utility.yul\":2783:2816   */\n      tag_74\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":2679:2822   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2828:3179   */\n    tag_46:\n        /* \"#utility.yul\":2898:2904   */\n      0x00\n        /* \"#utility.yul\":2947:2949   */\n      0x20\n        /* \"#utility.yul\":2935:2944   */\n      dup3\n        /* \"#utility.yul\":2926:2933   */\n      dup5\n        /* \"#utility.yul\":2922:2945   */\n      sub\n        /* \"#utility.yul\":2918:2950   */\n      slt\n        /* \"#utility.yul\":2915:3034   */\n      iszero\n      tag_118\n      jumpi\n        /* \"#utility.yul\":2953:3032   */\n      tag_119\n      tag_68\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":2915:3034   */\n    tag_118:\n        /* \"#utility.yul\":3073:3074   */\n      0x00\n        /* \"#utility.yul\":3098:3162   */\n      tag_120\n        /* \"#utility.yul\":3154:3161   */\n      dup5\n        /* \"#utility.yul\":3145:3151   */\n      dup3\n        /* \"#utility.yul\":3134:3143   */\n      dup6\n        /* \"#utility.yul\":3130:3152   */\n      add\n        /* \"#utility.yul\":3098:3162   */\n      tag_75\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":3088:3162   */\n      swap2\n      pop\n        /* \"#utility.yul\":3044:3172   */\n      pop\n        /* \"#utility.yul\":2828:3179   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3185:3365   */\n    tag_76:\n        /* \"#utility.yul\":3233:3310   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3230:3231   */\n      0x00\n        /* \"#utility.yul\":3223:3311   */\n      mstore\n        /* \"#utility.yul\":3330:3334   */\n      0x11\n        /* \"#utility.yul\":3327:3328   */\n      0x04\n        /* \"#utility.yul\":3320:3335   */\n      mstore\n        /* \"#utility.yul\":3354:3358   */\n      0x24\n        /* \"#utility.yul\":3351:3352   */\n      0x00\n        /* \"#utility.yul\":3344:3359   */\n      revert\n        /* \"#utility.yul\":3371:3781   */\n    tag_50:\n        /* \"#utility.yul\":3411:3418   */\n      0x00\n        /* \"#utility.yul\":3434:3454   */\n      tag_123\n        /* \"#utility.yul\":3452:3453   */\n      dup3\n        /* \"#utility.yul\":3434:3454   */\n      tag_63\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":3429:3454   */\n      swap2\n      pop\n        /* \"#utility.yul\":3468:3488   */\n      tag_124\n        /* \"#utility.yul\":3486:3487   */\n      dup4\n        /* \"#utility.yul\":3468:3488   */\n      tag_63\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":3463:3488   */\n      swap3\n      pop\n        /* \"#utility.yul\":3523:3524   */\n      dup3\n        /* \"#utility.yul\":3520:3521   */\n      dup3\n        /* \"#utility.yul\":3516:3525   */\n      mul\n        /* \"#utility.yul\":3545:3575   */\n      tag_125\n        /* \"#utility.yul\":3563:3574   */\n      dup2\n        /* \"#utility.yul\":3545:3575   */\n      tag_63\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":3534:3575   */\n      swap2\n      pop\n        /* \"#utility.yul\":3724:3725   */\n      dup3\n        /* \"#utility.yul\":3715:3722   */\n      dup3\n        /* \"#utility.yul\":3711:3726   */\n      div\n        /* \"#utility.yul\":3708:3709   */\n      dup5\n        /* \"#utility.yul\":3705:3727   */\n      eq\n        /* \"#utility.yul\":3685:3686   */\n      dup4\n        /* \"#utility.yul\":3678:3687   */\n      iszero\n        /* \"#utility.yul\":3658:3741   */\n      or\n        /* \"#utility.yul\":3635:3774   */\n      tag_126\n      jumpi\n        /* \"#utility.yul\":3754:3772   */\n      tag_127\n      tag_76\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":3635:3774   */\n    tag_126:\n        /* \"#utility.yul\":3419:3781   */\n      pop\n        /* \"#utility.yul\":3371:3781   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3787:3967   */\n    tag_77:\n        /* \"#utility.yul\":3835:3912   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3832:3833   */\n      0x00\n        /* \"#utility.yul\":3825:3913   */\n      mstore\n        /* \"#utility.yul\":3932:3936   */\n      0x12\n        /* \"#utility.yul\":3929:3930   */\n      0x04\n        /* \"#utility.yul\":3922:3937   */\n      mstore\n        /* \"#utility.yul\":3956:3960   */\n      0x24\n        /* \"#utility.yul\":3953:3954   */\n      0x00\n        /* \"#utility.yul\":3946:3961   */\n      revert\n        /* \"#utility.yul\":3973:4158   */\n    tag_52:\n        /* \"#utility.yul\":4013:4014   */\n      0x00\n        /* \"#utility.yul\":4030:4050   */\n      tag_130\n        /* \"#utility.yul\":4048:4049   */\n      dup3\n        /* \"#utility.yul\":4030:4050   */\n      tag_63\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":4025:4050   */\n      swap2\n      pop\n        /* \"#utility.yul\":4064:4084   */\n      tag_131\n        /* \"#utility.yul\":4082:4083   */\n      dup4\n        /* \"#utility.yul\":4064:4084   */\n      tag_63\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":4059:4084   */\n      swap3\n      pop\n        /* \"#utility.yul\":4103:4104   */\n      dup3\n        /* \"#utility.yul\":4093:4128   */\n      tag_132\n      jumpi\n        /* \"#utility.yul\":4108:4126   */\n      tag_133\n      tag_77\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":4093:4128   */\n    tag_132:\n        /* \"#utility.yul\":4150:4151   */\n      dup3\n        /* \"#utility.yul\":4147:4148   */\n      dup3\n        /* \"#utility.yul\":4143:4152   */\n      div\n        /* \"#utility.yul\":4138:4152   */\n      swap1\n      pop\n        /* \"#utility.yul\":3973:4158   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4164:4224   */\n    tag_78:\n        /* \"#utility.yul\":4192:4195   */\n      0x00\n        /* \"#utility.yul\":4213:4218   */\n      dup2\n        /* \"#utility.yul\":4206:4218   */\n      swap1\n      pop\n        /* \"#utility.yul\":4164:4224   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4230:4372   */\n    tag_79:\n        /* \"#utility.yul\":4280:4289   */\n      0x00\n        /* \"#utility.yul\":4313:4366   */\n      tag_136\n        /* \"#utility.yul\":4331:4365   */\n      tag_137\n        /* \"#utility.yul\":4340:4364   */\n      tag_138\n        /* \"#utility.yul\":4358:4363   */\n      dup5\n        /* \"#utility.yul\":4340:4364   */\n      tag_61\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":4331:4365   */\n      tag_78\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":4313:4366   */\n      tag_63\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":4300:4366   */\n      swap1\n      pop\n        /* \"#utility.yul\":4230:4372   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4378:4509   */\n    tag_80:\n        /* \"#utility.yul\":4465:4502   */\n      tag_140\n        /* \"#utility.yul\":4496:4501   */\n      dup2\n        /* \"#utility.yul\":4465:4502   */\n      tag_79\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":4460:4463   */\n      dup3\n        /* \"#utility.yul\":4453:4503   */\n      mstore\n        /* \"#utility.yul\":4378:4509   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:5179   */\n    tag_57:\n        /* \"#utility.yul\":4720:4724   */\n      0x00\n        /* \"#utility.yul\":4758:4761   */\n      0xa0\n        /* \"#utility.yul\":4747:4756   */\n      dup3\n        /* \"#utility.yul\":4743:4762   */\n      add\n        /* \"#utility.yul\":4735:4762   */\n      swap1\n      pop\n        /* \"#utility.yul\":4772:4843   */\n      tag_142\n        /* \"#utility.yul\":4840:4841   */\n      0x00\n        /* \"#utility.yul\":4829:4838   */\n      dup4\n        /* \"#utility.yul\":4825:4842   */\n      add\n        /* \"#utility.yul\":4816:4822   */\n      dup9\n        /* \"#utility.yul\":4772:4843   */\n      tag_80\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":4853:4925   */\n      tag_143\n        /* \"#utility.yul\":4921:4923   */\n      0x20\n        /* \"#utility.yul\":4910:4919   */\n      dup4\n        /* \"#utility.yul\":4906:4924   */\n      add\n        /* \"#utility.yul\":4897:4903   */\n      dup8\n        /* \"#utility.yul\":4853:4925   */\n      tag_80\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":4935:5007   */\n      tag_144\n        /* \"#utility.yul\":5003:5005   */\n      0x40\n        /* \"#utility.yul\":4992:5001   */\n      dup4\n        /* \"#utility.yul\":4988:5006   */\n      add\n        /* \"#utility.yul\":4979:4985   */\n      dup7\n        /* \"#utility.yul\":4935:5007   */\n      tag_80\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":5017:5089   */\n      tag_145\n        /* \"#utility.yul\":5085:5087   */\n      0x60\n        /* \"#utility.yul\":5074:5083   */\n      dup4\n        /* \"#utility.yul\":5070:5088   */\n      add\n        /* \"#utility.yul\":5061:5067   */\n      dup6\n        /* \"#utility.yul\":5017:5089   */\n      tag_64\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":5099:5172   */\n      tag_146\n        /* \"#utility.yul\":5167:5170   */\n      0x80\n        /* \"#utility.yul\":5156:5165   */\n      dup4\n        /* \"#utility.yul\":5152:5171   */\n      add\n        /* \"#utility.yul\":5143:5149   */\n      dup5\n        /* \"#utility.yul\":5099:5172   */\n      tag_64\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":4515:5179   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b28ae339143e2159bf827604d0fe70710fbc209fe4571558b377e869a446ad9064736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_118": {
									"entryPoint": null,
									"id": 118,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 286,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 208,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 263,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:8",
														"type": ""
													}
												],
												"src": "466:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:8"
															},
															"nodeType": "YulIf",
															"src": "621:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:8",
														"type": ""
													}
												],
												"src": "568:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:8",
														"type": ""
													}
												],
												"src": "696:143:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:8"
															},
															"nodeType": "YulIf",
															"src": "932:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:8",
														"type": ""
													}
												],
												"src": "845:351:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052612710600160006101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff16021790555061bb806002600e6101000a81548162ffffff021916908362ffffff16021790555034801561006857600080fd5b50604051610934380380610934833981810160405281019061008a9190610133565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610160565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610100826100d5565b9050919050565b610110816100f5565b811461011b57600080fd5b50565b60008151905061012d81610107565b92915050565b600060208284031215610149576101486100d0565b5b60006101578482850161011e565b91505092915050565b6107c58061016f6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063a8a41a681161005b578063a8a41a68146100dc578063aa5da046146100fa578063b345248714610104578063b8caedc4146101225761007d565b8063017e7d8f1461008257806344936b10146100a05780637a2dbb6f146100be575b600080fd5b61008a610140565b60405161009791906104bf565b60405180910390f35b6100a8610160565b6040516100b591906104f3565b60405180910390f35b6100c6610194565b6040516100d391906104bf565b60405180910390f35b6100e46101b4565b6040516100f1919061052c565b60405180910390f35b6101026101c9565b005b61010c6101d3565b60405161011991906104f3565b60405180910390f35b61012a6102e2565b60405161013791906104bf565b60405180910390f35b600260009054906101000a90046dffffffffffffffffffffffffffff1681565b6000600260009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16905090565b600160009054906101000a90046dffffffffffffffffffffffffffff1681565b6002600e9054906101000a900462ffffff1681565b6101d1610302565b565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e67cdafd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610241573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026591906105aa565b905060008173ffffffffffffffffffffffffffffffffffffffff1663ed3b657a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d89190610603565b9050809250505090565b6001600e9054906101000a90046dffffffffffffffffffffffffffff1681565b600061030c6101d3565b905060006002600e9054906101000a900462ffffff1662ffffff1661271083610335919061065f565b61033f91906106d0565b9050600061037982600160009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1661047d565b90506103b182600160009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1661047d565b600260006101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff1602179055507f6e87c25e322c4ad68faf7916d0788baaf714d806fe887a84ee4b84ad9666f6866001600e9054906101000a90046dffffffffffffffffffffffffffff16600260009054906101000a90046dffffffffffffffffffffffffffff16600160009054906101000a90046dffffffffffffffffffffffffffff16858760405161047095949392919061073c565b60405180910390a1505050565b600081831161048c578161048e565b825b905092915050565b60006dffffffffffffffffffffffffffff82169050919050565b6104b981610496565b82525050565b60006020820190506104d460008301846104b0565b92915050565b6000819050919050565b6104ed816104da565b82525050565b600060208201905061050860008301846104e4565b92915050565b600062ffffff82169050919050565b6105268161050e565b82525050565b6000602082019050610541600083018461051d565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105778261054c565b9050919050565b6105878161056c565b811461059257600080fd5b50565b6000815190506105a48161057e565b92915050565b6000602082840312156105c0576105bf610547565b5b60006105ce84828501610595565b91505092915050565b6105e0816104da565b81146105eb57600080fd5b50565b6000815190506105fd816105d7565b92915050565b60006020828403121561061957610618610547565b5b6000610627848285016105ee565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061066a826104da565b9150610675836104da565b9250828202610683816104da565b9150828204841483151761069a57610699610630565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006106db826104da565b91506106e6836104da565b9250826106f6576106f56106a1565b5b828204905092915050565b6000819050919050565b600061072661072161071c84610496565b610701565b6104da565b9050919050565b6107368161070b565b82525050565b600060a082019050610751600083018861072d565b61075e602083018761072d565b61076b604083018661072d565b61077860608301856104e4565b61078560808301846104e4565b969550505050505056fea2646970667358221220b28ae339143e2159bf827604d0fe70710fbc209fe4571558b377e869a446ad9064736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x2710 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xBB80 PUSH1 0x2 PUSH1 0xE PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x934 CODESIZE SUB DUP1 PUSH2 0x934 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x8A SWAP2 SWAP1 PUSH2 0x133 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x160 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 PUSH2 0xD5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x110 DUP2 PUSH2 0xF5 JUMP JUMPDEST DUP2 EQ PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x12D DUP2 PUSH2 0x107 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x149 JUMPI PUSH2 0x148 PUSH2 0xD0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x157 DUP5 DUP3 DUP6 ADD PUSH2 0x11E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7C5 DUP1 PUSH2 0x16F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA8A41A68 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA8A41A68 EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0xAA5DA046 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0xB3452487 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0xB8CAEDC4 EQ PUSH2 0x122 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x17E7D8F EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x44936B10 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x7A2DBB6F EQ PUSH2 0xBE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x140 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA8 PUSH2 0x160 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x4F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC6 PUSH2 0x194 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE4 PUSH2 0x1B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0x52C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x102 PUSH2 0x1C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10C PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x4F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12A PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0x302 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE67CDAFD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x241 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x5AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xED3B657A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x603 JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30C PUSH2 0x1D3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND PUSH2 0x2710 DUP4 PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x65F JUMP JUMPDEST PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x6D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x379 DUP3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x47D JUMP JUMPDEST SWAP1 POP PUSH2 0x3B1 DUP3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x47D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x6E87C25E322C4AD68FAF7916D0788BAAF714D806FE887A84EE4B84AD9666F686 PUSH1 0x1 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x470 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x73C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT PUSH2 0x48C JUMPI DUP2 PUSH2 0x48E JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4B9 DUP2 PUSH2 0x496 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4D4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4ED DUP2 PUSH2 0x4DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x508 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x526 DUP2 PUSH2 0x50E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x541 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x51D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x577 DUP3 PUSH2 0x54C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x587 DUP2 PUSH2 0x56C JUMP JUMPDEST DUP2 EQ PUSH2 0x592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5A4 DUP2 PUSH2 0x57E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5C0 JUMPI PUSH2 0x5BF PUSH2 0x547 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5CE DUP5 DUP3 DUP6 ADD PUSH2 0x595 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5E0 DUP2 PUSH2 0x4DA JUMP JUMPDEST DUP2 EQ PUSH2 0x5EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5FD DUP2 PUSH2 0x5D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x619 JUMPI PUSH2 0x618 PUSH2 0x547 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x627 DUP5 DUP3 DUP6 ADD PUSH2 0x5EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x66A DUP3 PUSH2 0x4DA JUMP JUMPDEST SWAP2 POP PUSH2 0x675 DUP4 PUSH2 0x4DA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x683 DUP2 PUSH2 0x4DA JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x69A JUMPI PUSH2 0x699 PUSH2 0x630 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6DB DUP3 PUSH2 0x4DA JUMP JUMPDEST SWAP2 POP PUSH2 0x6E6 DUP4 PUSH2 0x4DA JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x6F6 JUMPI PUSH2 0x6F5 PUSH2 0x6A1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x726 PUSH2 0x721 PUSH2 0x71C DUP5 PUSH2 0x496 JUMP JUMPDEST PUSH2 0x701 JUMP JUMPDEST PUSH2 0x4DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x736 DUP2 PUSH2 0x70B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x751 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x72D JUMP JUMPDEST PUSH2 0x75E PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x72D JUMP JUMPDEST PUSH2 0x76B PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x72D JUMP JUMPDEST PUSH2 0x778 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x4E4 JUMP JUMPDEST PUSH2 0x785 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x4E4 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 DUP11 0xE3 CODECOPY EQ RETURNDATACOPY 0x21 MSIZE 0xBF DUP3 PUSH23 0x4D0FE70710FBC209FE4571558B377E869A446AD906473 PUSH16 0x6C634300081300330000000000000000 ",
							"sourceMap": "193:2177:1:-:0;;;261:5;235:31;;;;;;;;;;;;;;;;;;;;369:5;339:35;;;;;;;;;;;;;;;;;;;;396:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;453:13;437:6;;:30;;;;;;;;;;;;;;;;;;396:76;193:2177;;88:117:8;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;193:2177:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_updateMCR_184": {
									"entryPoint": 770,
									"id": 184,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@desiredMCR_103": {
									"entryPoint": 320,
									"id": 103,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@gearingFactor_106": {
									"entryPoint": 436,
									"id": 106,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getAllSumAssurance_207": {
									"entryPoint": 467,
									"id": 207,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getMCR_216": {
									"entryPoint": 352,
									"id": 216,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@max_399": {
									"entryPoint": 1149,
									"id": 399,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mcrFloor_99": {
									"entryPoint": 404,
									"id": 99,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mcr_101": {
									"entryPoint": 738,
									"id": 101,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateMCRInternal_137": {
									"entryPoint": 457,
									"id": 137,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1429,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1539,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint112_to_t_uint112_fromStack": {
									"entryPoint": 1200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint112_to_t_uint256_fromStack": {
									"entryPoint": 1837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24_fromStack": {
									"entryPoint": 1309,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint112__to_t_uint112__fromStack_reversed": {
									"entryPoint": 1215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint112_t_uint112_t_uint112_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 1852,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed": {
									"entryPoint": 1324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1631,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1388,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint112": {
									"entryPoint": 1174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1356,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint24": {
									"entryPoint": 1294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint112_to_t_uint256": {
									"entryPoint": 1803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1584,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 1697,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1351,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1406,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1495,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5182:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:69:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:30:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:42:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint112",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:8",
														"type": ""
													}
												],
												"src": "7:114:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "192:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "209:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "232:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint112",
																			"nodeType": "YulIdentifier",
																			"src": "214:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "214:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "202:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "202:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint112_to_t_uint112_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "180:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "187:3:8",
														"type": ""
													}
												],
												"src": "127:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "359:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "371:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "382:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "367:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "367:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "359:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "439:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "452:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "463:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "448:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "448:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint112_to_t_uint112_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "395:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "395:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint112__to_t_uint112__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "321:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "333:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "344:4:8",
														"type": ""
													}
												],
												"src": "251:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "524:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "534:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "545:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "534:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "506:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "516:7:8",
														"type": ""
													}
												],
												"src": "479:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "627:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "644:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "667:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "649:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "649:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "637:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "637:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "637:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "615:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "622:3:8",
														"type": ""
													}
												],
												"src": "562:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "784:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "794:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "806:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "817:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "802:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "802:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "794:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "874:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "887:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "898:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "883:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "883:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "830:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "830:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "830:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "756:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "768:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "779:4:8",
														"type": ""
													}
												],
												"src": "686:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "958:47:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "968:31:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "983:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "990:8:8",
																		"type": "",
																		"value": "0xffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:20:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "968:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "940:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "950:7:8",
														"type": ""
													}
												],
												"src": "914:91:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1074:52:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1091:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1113:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nodeType": "YulIdentifier",
																			"src": "1096:16:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1096:23:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1084:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1084:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1084:36:8"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1062:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1069:3:8",
														"type": ""
													}
												],
												"src": "1011:115:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1228:122:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1238:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1250:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1261:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1246:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1246:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1238:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1316:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1329:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1340:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1325:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1325:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint24_to_t_uint24_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1274:41:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1274:69:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1274:69:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1200:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1212:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1223:4:8",
														"type": ""
													}
												],
												"src": "1132:218:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1396:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1406:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1422:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1416:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1416:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1406:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1389:6:8",
														"type": ""
													}
												],
												"src": "1356:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1526:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1543:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1546:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1536:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1536:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1437:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1649:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1666:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1669:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1659:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1659:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1659:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1560:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1728:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1738:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1753:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1760:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1749:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1749:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1738:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1710:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1720:7:8",
														"type": ""
													}
												],
												"src": "1683:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1860:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1870:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1899:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1881:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1881:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1870:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1842:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1852:7:8",
														"type": ""
													}
												],
												"src": "1815:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1960:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2017:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2026:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2029:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2019:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2019:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2019:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1983:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2008:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1990:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1990:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1980:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1980:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1973:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1973:43:8"
															},
															"nodeType": "YulIf",
															"src": "1970:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1953:5:8",
														"type": ""
													}
												],
												"src": "1917:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2108:80:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2118:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2133:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2127:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2127:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2118:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2176:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2149:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2149:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2149:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2086:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2094:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2102:5:8",
														"type": ""
													}
												],
												"src": "2045:143:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2271:274:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2317:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2319:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2319:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2319:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2292:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2301:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2288:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2288:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2313:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2284:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2284:32:8"
															},
															"nodeType": "YulIf",
															"src": "2281:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "2410:128:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2425:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2439:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2429:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2454:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2500:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2511:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2496:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2496:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2520:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2464:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2464:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2454:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2241:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2252:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2264:6:8",
														"type": ""
													}
												],
												"src": "2194:351:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2594:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2651:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2660:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2653:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2653:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2653:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2617:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2642:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2624:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2624:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2614:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2614:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2607:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2607:43:8"
															},
															"nodeType": "YulIf",
															"src": "2604:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2587:5:8",
														"type": ""
													}
												],
												"src": "2551:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2742:80:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2752:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2767:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2761:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2761:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2752:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2810:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2783:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2783:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2783:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2720:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2728:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2736:5:8",
														"type": ""
													}
												],
												"src": "2679:143:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2905:274:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2951:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2953:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2953:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2953:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2926:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2935:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2922:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2922:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2947:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2918:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2918:32:8"
															},
															"nodeType": "YulIf",
															"src": "2915:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "3044:128:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3059:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3073:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3063:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3088:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3134:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3145:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3130:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3130:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3154:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3098:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3098:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3088:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2875:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2886:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2898:6:8",
														"type": ""
													}
												],
												"src": "2828:351:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3213:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3230:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3233:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3223:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3223:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3223:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3327:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3330:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3320:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3320:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3320:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3351:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3354:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3344:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3344:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3344:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3185:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3419:362:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3429:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3452:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3434:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3434:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3429:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3463:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3486:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3468:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3468:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3463:1:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3497:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3520:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3523:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "3516:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3516:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "3501:11:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3534:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "3563:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3545:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3545:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "3534:7:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3752:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3754:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3754:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3754:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "3685:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3678:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3678:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "3708:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "3715:7:8"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "3724:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "3711:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3711:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "3705:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3705:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "3658:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3658:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3638:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3638:113:8"
															},
															"nodeType": "YulIf",
															"src": "3635:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3402:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3405:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "3411:7:8",
														"type": ""
													}
												],
												"src": "3371:410:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3815:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3832:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3835:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3825:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3825:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3825:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3929:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3932:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3922:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3922:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3922:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3953:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3956:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3946:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3946:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3946:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "3787:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4015:143:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4025:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4048:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4030:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4030:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4025:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4059:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4082:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4064:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4064:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4059:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4106:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "4108:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4108:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4108:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4103:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4096:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4096:9:8"
															},
															"nodeType": "YulIf",
															"src": "4093:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4138:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4147:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4150:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4143:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4143:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4138:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4004:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4007:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "4013:1:8",
														"type": ""
													}
												],
												"src": "3973:185:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4196:28:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4206:12:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4213:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4206:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4182:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4192:3:8",
														"type": ""
													}
												],
												"src": "4164:60:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4290:82:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4300:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4358:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint112",
																					"nodeType": "YulIdentifier",
																					"src": "4340:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4340:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "4331:8:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4331:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4313:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4313:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4300:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint112_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4270:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4280:9:8",
														"type": ""
													}
												],
												"src": "4230:142:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4443:66:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4460:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4496:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_uint112_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4465:30:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4465:37:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4453:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4453:50:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4453:50:8"
														}
													]
												},
												"name": "abi_encode_t_uint112_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4431:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4438:3:8",
														"type": ""
													}
												],
												"src": "4378:131:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4725:454:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4735:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4747:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4758:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4743:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4743:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4735:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4816:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4829:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4840:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4825:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4825:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint112_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4772:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4772:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4772:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4897:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4910:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4921:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4906:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4906:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint112_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4853:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4853:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4853:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4979:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4992:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5003:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4988:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4988:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint112_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4935:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4935:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4935:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "5061:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5074:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5085:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5070:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5070:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5017:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5017:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5017:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "5143:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5156:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5167:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5152:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5152:19:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5099:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5099:73:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5099:73:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint112_t_uint112_t_uint112_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4665:9:8",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4677:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4685:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4693:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4701:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4709:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4720:4:8",
														"type": ""
													}
												],
												"src": "4515:664:8"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint112(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffff)\n    }\n\n    function abi_encode_t_uint112_to_t_uint112_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint112(value))\n    }\n\n    function abi_encode_tuple_t_uint112__to_t_uint112__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint112_to_t_uint112_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function abi_encode_t_uint24_to_t_uint24_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint112_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint112(value)))\n    }\n\n    function abi_encode_t_uint112_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint112_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint112_t_uint112_t_uint112_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint112_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint112_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint112_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c8063a8a41a681161005b578063a8a41a68146100dc578063aa5da046146100fa578063b345248714610104578063b8caedc4146101225761007d565b8063017e7d8f1461008257806344936b10146100a05780637a2dbb6f146100be575b600080fd5b61008a610140565b60405161009791906104bf565b60405180910390f35b6100a8610160565b6040516100b591906104f3565b60405180910390f35b6100c6610194565b6040516100d391906104bf565b60405180910390f35b6100e46101b4565b6040516100f1919061052c565b60405180910390f35b6101026101c9565b005b61010c6101d3565b60405161011991906104f3565b60405180910390f35b61012a6102e2565b60405161013791906104bf565b60405180910390f35b600260009054906101000a90046dffffffffffffffffffffffffffff1681565b6000600260009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16905090565b600160009054906101000a90046dffffffffffffffffffffffffffff1681565b6002600e9054906101000a900462ffffff1681565b6101d1610302565b565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e67cdafd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610241573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026591906105aa565b905060008173ffffffffffffffffffffffffffffffffffffffff1663ed3b657a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d89190610603565b9050809250505090565b6001600e9054906101000a90046dffffffffffffffffffffffffffff1681565b600061030c6101d3565b905060006002600e9054906101000a900462ffffff1662ffffff1661271083610335919061065f565b61033f91906106d0565b9050600061037982600160009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1661047d565b90506103b182600160009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1661047d565b600260006101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff1602179055507f6e87c25e322c4ad68faf7916d0788baaf714d806fe887a84ee4b84ad9666f6866001600e9054906101000a90046dffffffffffffffffffffffffffff16600260009054906101000a90046dffffffffffffffffffffffffffff16600160009054906101000a90046dffffffffffffffffffffffffffff16858760405161047095949392919061073c565b60405180910390a1505050565b600081831161048c578161048e565b825b905092915050565b60006dffffffffffffffffffffffffffff82169050919050565b6104b981610496565b82525050565b60006020820190506104d460008301846104b0565b92915050565b6000819050919050565b6104ed816104da565b82525050565b600060208201905061050860008301846104e4565b92915050565b600062ffffff82169050919050565b6105268161050e565b82525050565b6000602082019050610541600083018461051d565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105778261054c565b9050919050565b6105878161056c565b811461059257600080fd5b50565b6000815190506105a48161057e565b92915050565b6000602082840312156105c0576105bf610547565b5b60006105ce84828501610595565b91505092915050565b6105e0816104da565b81146105eb57600080fd5b50565b6000815190506105fd816105d7565b92915050565b60006020828403121561061957610618610547565b5b6000610627848285016105ee565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061066a826104da565b9150610675836104da565b9250828202610683816104da565b9150828204841483151761069a57610699610630565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006106db826104da565b91506106e6836104da565b9250826106f6576106f56106a1565b5b828204905092915050565b6000819050919050565b600061072661072161071c84610496565b610701565b6104da565b9050919050565b6107368161070b565b82525050565b600060a082019050610751600083018861072d565b61075e602083018761072d565b61076b604083018661072d565b61077860608301856104e4565b61078560808301846104e4565b969550505050505056fea2646970667358221220b28ae339143e2159bf827604d0fe70710fbc209fe4571558b377e869a446ad9064736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA8A41A68 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA8A41A68 EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0xAA5DA046 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0xB3452487 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0xB8CAEDC4 EQ PUSH2 0x122 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x17E7D8F EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x44936B10 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x7A2DBB6F EQ PUSH2 0xBE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x140 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA8 PUSH2 0x160 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x4F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC6 PUSH2 0x194 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE4 PUSH2 0x1B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0x52C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x102 PUSH2 0x1C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10C PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x4F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12A PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0x302 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE67CDAFD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x241 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x5AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xED3B657A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x603 JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30C PUSH2 0x1D3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND PUSH2 0x2710 DUP4 PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x65F JUMP JUMPDEST PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x6D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x379 DUP3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x47D JUMP JUMPDEST SWAP1 POP PUSH2 0x3B1 DUP3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x47D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x6E87C25E322C4AD68FAF7916D0788BAAF714D806FE887A84EE4B84AD9666F686 PUSH1 0x1 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x470 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x73C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT PUSH2 0x48C JUMPI DUP2 PUSH2 0x48E JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4B9 DUP2 PUSH2 0x496 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4D4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4ED DUP2 PUSH2 0x4DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x508 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x526 DUP2 PUSH2 0x50E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x541 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x51D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x577 DUP3 PUSH2 0x54C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x587 DUP2 PUSH2 0x56C JUMP JUMPDEST DUP2 EQ PUSH2 0x592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5A4 DUP2 PUSH2 0x57E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5C0 JUMPI PUSH2 0x5BF PUSH2 0x547 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5CE DUP5 DUP3 DUP6 ADD PUSH2 0x595 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5E0 DUP2 PUSH2 0x4DA JUMP JUMPDEST DUP2 EQ PUSH2 0x5EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5FD DUP2 PUSH2 0x5D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x619 JUMPI PUSH2 0x618 PUSH2 0x547 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x627 DUP5 DUP3 DUP6 ADD PUSH2 0x5EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x66A DUP3 PUSH2 0x4DA JUMP JUMPDEST SWAP2 POP PUSH2 0x675 DUP4 PUSH2 0x4DA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x683 DUP2 PUSH2 0x4DA JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x69A JUMPI PUSH2 0x699 PUSH2 0x630 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6DB DUP3 PUSH2 0x4DA JUMP JUMPDEST SWAP2 POP PUSH2 0x6E6 DUP4 PUSH2 0x4DA JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x6F6 JUMPI PUSH2 0x6F5 PUSH2 0x6A1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x726 PUSH2 0x721 PUSH2 0x71C DUP5 PUSH2 0x496 JUMP JUMPDEST PUSH2 0x701 JUMP JUMPDEST PUSH2 0x4DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x736 DUP2 PUSH2 0x70B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x751 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x72D JUMP JUMPDEST PUSH2 0x75E PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x72D JUMP JUMPDEST PUSH2 0x76B PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x72D JUMP JUMPDEST PUSH2 0x778 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x4E4 JUMP JUMPDEST PUSH2 0x785 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x4E4 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 DUP11 0xE3 CODECOPY EQ RETURNDATACOPY 0x21 MSIZE 0xBF DUP3 PUSH23 0x4D0FE70710FBC209FE4571558B377E869A446AD906473 PUSH16 0x6C634300081300330000000000000000 ",
							"sourceMap": "193:2177:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;310:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2103:264;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;235:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;339:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;604:59;;;:::i;:::-;;1209:226;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;288:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;310:25;;;;;;;;;;;;;:::o;2103:264::-;2142:4;2352:10;;;;;;;;;;;2345:17;;;;2103:264;:::o;235:31::-;;;;;;;;;;;;;:::o;339:35::-;;;;;;;;;;;;;:::o;604:59::-;646:12;:10;:12::i;:::-;604:59::o;1209:226::-;1260:4;1273:13;1296:6;;;;;;;;;;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1273:45;;1325:32;1360:6;:28;;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1325:65;;1403:27;1396:34;;;;1209:226;:::o;288:18::-;;;;;;;;;;;;;:::o;667:535::-;868:20;891;:18;:20::i;:::-;868:43;;917:14;970:13;;;;;;;;;;;934:49;;186:5;934:15;:33;;;;:::i;:::-;:49;;;;:::i;:::-;917:66;;989:21;1021:29;1030:9;1041:8;;;;;;;;;;;1021:29;;:8;:29::i;:::-;989:62;;1079:29;1088:9;1099:8;;;;;;;;;;;1079:29;;:8;:29::i;:::-;1058:10;;:51;;;;;;;;;;;;;;;;;;1132:65;1143:3;;;;;;;;;;;1148:10;;;;;;;;;;;1160:8;;;;;;;;;;;1170:9;1181:15;1132:65;;;;;;;;;;:::i;:::-;;;;;;;;698:504;;;667:535::o;262:89:5:-;314:4;337:1;333;:5;:13;;345:1;333:13;;;341:1;333:13;326:20;;262:89;;;;:::o;7:114:8:-;44:7;84:30;77:5;73:42;62:53;;7:114;;;:::o;127:118::-;214:24;232:5;214:24;:::i;:::-;209:3;202:37;127:118;;:::o;251:222::-;344:4;382:2;371:9;367:18;359:26;;395:71;463:1;452:9;448:17;439:6;395:71;:::i;:::-;251:222;;;;:::o;479:77::-;516:7;545:5;534:16;;479:77;;;:::o;562:118::-;649:24;667:5;649:24;:::i;:::-;644:3;637:37;562:118;;:::o;686:222::-;779:4;817:2;806:9;802:18;794:26;;830:71;898:1;887:9;883:17;874:6;830:71;:::i;:::-;686:222;;;;:::o;914:91::-;950:7;990:8;983:5;979:20;968:31;;914:91;;;:::o;1011:115::-;1096:23;1113:5;1096:23;:::i;:::-;1091:3;1084:36;1011:115;;:::o;1132:218::-;1223:4;1261:2;1250:9;1246:18;1238:26;;1274:69;1340:1;1329:9;1325:17;1316:6;1274:69;:::i;:::-;1132:218;;;;:::o;1437:117::-;1546:1;1543;1536:12;1683:126;1720:7;1760:42;1753:5;1749:54;1738:65;;1683:126;;;:::o;1815:96::-;1852:7;1881:24;1899:5;1881:24;:::i;:::-;1870:35;;1815:96;;;:::o;1917:122::-;1990:24;2008:5;1990:24;:::i;:::-;1983:5;1980:35;1970:63;;2029:1;2026;2019:12;1970:63;1917:122;:::o;2045:143::-;2102:5;2133:6;2127:13;2118:22;;2149:33;2176:5;2149:33;:::i;:::-;2045:143;;;;:::o;2194:351::-;2264:6;2313:2;2301:9;2292:7;2288:23;2284:32;2281:119;;;2319:79;;:::i;:::-;2281:119;2439:1;2464:64;2520:7;2511:6;2500:9;2496:22;2464:64;:::i;:::-;2454:74;;2410:128;2194:351;;;;:::o;2551:122::-;2624:24;2642:5;2624:24;:::i;:::-;2617:5;2614:35;2604:63;;2663:1;2660;2653:12;2604:63;2551:122;:::o;2679:143::-;2736:5;2767:6;2761:13;2752:22;;2783:33;2810:5;2783:33;:::i;:::-;2679:143;;;;:::o;2828:351::-;2898:6;2947:2;2935:9;2926:7;2922:23;2918:32;2915:119;;;2953:79;;:::i;:::-;2915:119;3073:1;3098:64;3154:7;3145:6;3134:9;3130:22;3098:64;:::i;:::-;3088:74;;3044:128;2828:351;;;;:::o;3185:180::-;3233:77;3230:1;3223:88;3330:4;3327:1;3320:15;3354:4;3351:1;3344:15;3371:410;3411:7;3434:20;3452:1;3434:20;:::i;:::-;3429:25;;3468:20;3486:1;3468:20;:::i;:::-;3463:25;;3523:1;3520;3516:9;3545:30;3563:11;3545:30;:::i;:::-;3534:41;;3724:1;3715:7;3711:15;3708:1;3705:22;3685:1;3678:9;3658:83;3635:139;;3754:18;;:::i;:::-;3635:139;3419:362;3371:410;;;;:::o;3787:180::-;3835:77;3832:1;3825:88;3932:4;3929:1;3922:15;3956:4;3953:1;3946:15;3973:185;4013:1;4030:20;4048:1;4030:20;:::i;:::-;4025:25;;4064:20;4082:1;4064:20;:::i;:::-;4059:25;;4103:1;4093:35;;4108:18;;:::i;:::-;4093:35;4150:1;4147;4143:9;4138:14;;3973:185;;;;:::o;4164:60::-;4192:3;4213:5;4206:12;;4164:60;;;:::o;4230:142::-;4280:9;4313:53;4331:34;4340:24;4358:5;4340:24;:::i;:::-;4331:34;:::i;:::-;4313:53;:::i;:::-;4300:66;;4230:142;;;:::o;4378:131::-;4465:37;4496:5;4465:37;:::i;:::-;4460:3;4453:50;4378:131;;:::o;4515:664::-;4720:4;4758:3;4747:9;4743:19;4735:27;;4772:71;4840:1;4829:9;4825:17;4816:6;4772:71;:::i;:::-;4853:72;4921:2;4910:9;4906:18;4897:6;4853:72;:::i;:::-;4935;5003:2;4992:9;4988:18;4979:6;4935:72;:::i;:::-;5017;5085:2;5074:9;5070:18;5061:6;5017:72;:::i;:::-;5099:73;5167:3;5156:9;5152:19;5143:6;5099:73;:::i;:::-;4515:664;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "397800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"desiredMCR()": "2472",
								"gearingFactor()": "2521",
								"getAllSumAssurance()": "infinite",
								"getMCR()": "2502",
								"mcr()": "2587",
								"mcrFloor()": "2516",
								"updateMCRInternal()": "infinite"
							},
							"internal": {
								"_updateMCR()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 193,
									"end": 2370,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 193,
									"end": 2370,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 193,
									"end": 2370,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 261,
									"end": 266,
									"name": "PUSH",
									"source": 1,
									"value": "2710"
								},
								{
									"begin": 235,
									"end": 266,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 235,
									"end": 266,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 235,
									"end": 266,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 235,
									"end": 266,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 235,
									"end": 266,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 235,
									"end": 266,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 235,
									"end": 266,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 235,
									"end": 266,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 235,
									"end": 266,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 235,
									"end": 266,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 235,
									"end": 266,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 235,
									"end": 266,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 235,
									"end": 266,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 235,
									"end": 266,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 235,
									"end": 266,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 235,
									"end": 266,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 235,
									"end": 266,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 235,
									"end": 266,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 235,
									"end": 266,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 235,
									"end": 266,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 369,
									"end": 374,
									"name": "PUSH",
									"source": 1,
									"value": "BB80"
								},
								{
									"begin": 339,
									"end": 374,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 339,
									"end": 374,
									"name": "PUSH",
									"source": 1,
									"value": "E"
								},
								{
									"begin": 339,
									"end": 374,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 339,
									"end": 374,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 339,
									"end": 374,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 339,
									"end": 374,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 339,
									"end": 374,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 339,
									"end": 374,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFF"
								},
								{
									"begin": 339,
									"end": 374,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 339,
									"end": 374,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 339,
									"end": 374,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 339,
									"end": 374,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 339,
									"end": 374,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 339,
									"end": 374,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFF"
								},
								{
									"begin": 339,
									"end": 374,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 339,
									"end": 374,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 339,
									"end": 374,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 339,
									"end": 374,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 339,
									"end": 374,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 339,
									"end": 374,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 396,
									"end": 472,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 396,
									"end": 472,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 396,
									"end": 472,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 396,
									"end": 472,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 396,
									"end": 472,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 396,
									"end": 472,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 396,
									"end": 472,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 396,
									"end": 472,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 396,
									"end": 472,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 396,
									"end": 472,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 396,
									"end": 472,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 396,
									"end": 472,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 396,
									"end": 472,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 396,
									"end": 472,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 396,
									"end": 472,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 396,
									"end": 472,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 396,
									"end": 472,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 396,
									"end": 472,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 396,
									"end": 472,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 396,
									"end": 472,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 396,
									"end": 472,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 396,
									"end": 472,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 396,
									"end": 472,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 396,
									"end": 472,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 396,
									"end": 472,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 396,
									"end": 472,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 396,
									"end": 472,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 396,
									"end": 472,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 396,
									"end": 472,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 396,
									"end": 472,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 396,
									"end": 472,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 396,
									"end": 472,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 396,
									"end": 472,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 396,
									"end": 472,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 396,
									"end": 472,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 453,
									"end": 466,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 437,
									"end": 443,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 437,
									"end": 443,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 437,
									"end": 467,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 437,
									"end": 467,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 437,
									"end": 467,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 437,
									"end": 467,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 437,
									"end": 467,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 437,
									"end": 467,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 437,
									"end": 467,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 437,
									"end": 467,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 437,
									"end": 467,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 437,
									"end": 467,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 437,
									"end": 467,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 437,
									"end": 467,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 437,
									"end": 467,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 437,
									"end": 467,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 437,
									"end": 467,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 437,
									"end": 467,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 437,
									"end": 467,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 437,
									"end": 467,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 396,
									"end": 472,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 193,
									"end": 2370,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 193,
									"end": 2370,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 193,
									"end": 2370,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 193,
									"end": 2370,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 193,
									"end": 2370,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 193,
									"end": 2370,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 193,
									"end": 2370,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 193,
									"end": 2370,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 193,
									"end": 2370,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 193,
									"end": 2370,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 193,
									"end": 2370,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b28ae339143e2159bf827604d0fe70710fbc209fe4571558b377e869a446ad9064736f6c63430008130033",
									".code": [
										{
											"begin": 193,
											"end": 2370,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "PUSH",
											"source": 1,
											"value": "A8A41A68"
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "PUSH",
											"source": 1,
											"value": "A8A41A68"
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "PUSH",
											"source": 1,
											"value": "AA5DA046"
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "PUSH",
											"source": 1,
											"value": "B3452487"
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "PUSH",
											"source": 1,
											"value": "B8CAEDC4"
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "PUSH",
											"source": 1,
											"value": "17E7D8F"
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "PUSH",
											"source": 1,
											"value": "44936B10"
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "PUSH",
											"source": 1,
											"value": "7A2DBB6F"
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 193,
											"end": 2370,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 310,
											"end": 335,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 310,
											"end": 335,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 310,
											"end": 335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 310,
											"end": 335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 310,
											"end": 335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 310,
											"end": 335,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 310,
											"end": 335,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 310,
											"end": 335,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 310,
											"end": 335,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 310,
											"end": 335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 310,
											"end": 335,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 310,
											"end": 335,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 310,
											"end": 335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 310,
											"end": 335,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 310,
											"end": 335,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 310,
											"end": 335,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 310,
											"end": 335,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 310,
											"end": 335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 335,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 310,
											"end": 335,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 310,
											"end": 335,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 335,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2367,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2103,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2103,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2103,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2367,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2103,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2367,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2103,
											"end": 2367,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2103,
											"end": 2367,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2103,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2367,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2103,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2367,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2103,
											"end": 2367,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2367,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2367,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2367,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2367,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 235,
											"end": 266,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 235,
											"end": 266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 235,
											"end": 266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 235,
											"end": 266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 235,
											"end": 266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 235,
											"end": 266,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 235,
											"end": 266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 235,
											"end": 266,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 235,
											"end": 266,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 235,
											"end": 266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 235,
											"end": 266,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 235,
											"end": 266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 235,
											"end": 266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 235,
											"end": 266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 235,
											"end": 266,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 235,
											"end": 266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 235,
											"end": 266,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 235,
											"end": 266,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 235,
											"end": 266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 235,
											"end": 266,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 235,
											"end": 266,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 235,
											"end": 266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 235,
											"end": 266,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 339,
											"end": 374,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 339,
											"end": 374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 339,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 339,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 339,
											"end": 374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 339,
											"end": 374,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 339,
											"end": 374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 339,
											"end": 374,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 374,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 339,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 339,
											"end": 374,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 339,
											"end": 374,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 339,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 339,
											"end": 374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 339,
											"end": 374,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 339,
											"end": 374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 339,
											"end": 374,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 374,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 339,
											"end": 374,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 339,
											"end": 374,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 339,
											"end": 374,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 339,
											"end": 374,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 339,
											"end": 374,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 604,
											"end": 663,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 604,
											"end": 663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 604,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 604,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 604,
											"end": 663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 604,
											"end": 663,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 604,
											"end": 663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 604,
											"end": 663,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1435,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1209,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1209,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1209,
											"end": 1435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1435,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1209,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1435,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1209,
											"end": 1435,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1209,
											"end": 1435,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1209,
											"end": 1435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1435,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1209,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1435,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1209,
											"end": 1435,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1435,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1435,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1435,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1435,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 288,
											"end": 306,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 288,
											"end": 306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 288,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 288,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 288,
											"end": 306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 288,
											"end": 306,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 288,
											"end": 306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 288,
											"end": 306,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 288,
											"end": 306,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 288,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 288,
											"end": 306,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 288,
											"end": 306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 288,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 288,
											"end": 306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 288,
											"end": 306,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 288,
											"end": 306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 288,
											"end": 306,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 288,
											"end": 306,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 288,
											"end": 306,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 288,
											"end": 306,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 288,
											"end": 306,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 288,
											"end": 306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 288,
											"end": 306,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 310,
											"end": 335,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 310,
											"end": 335,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 310,
											"end": 335,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 310,
											"end": 335,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 335,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 335,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 310,
											"end": 335,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 335,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 310,
											"end": 335,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 310,
											"end": 335,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 335,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 310,
											"end": 335,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 310,
											"end": 335,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 310,
											"end": 335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 310,
											"end": 335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2367,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2103,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2146,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2352,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2352,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2352,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2352,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2352,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2352,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2352,
											"end": 2362,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2352,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2352,
											"end": 2362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2352,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2352,
											"end": 2362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2345,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2345,
											"end": 2362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2345,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2345,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 235,
											"end": 266,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 235,
											"end": 266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 235,
											"end": 266,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 235,
											"end": 266,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 235,
											"end": 266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 235,
											"end": 266,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 235,
											"end": 266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 235,
											"end": 266,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 235,
											"end": 266,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 235,
											"end": 266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 235,
											"end": 266,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 235,
											"end": 266,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 235,
											"end": 266,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 235,
											"end": 266,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 235,
											"end": 266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 339,
											"end": 374,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 339,
											"end": 374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 339,
											"end": 374,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 339,
											"end": 374,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 339,
											"end": 374,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 339,
											"end": 374,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 339,
											"end": 374,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 339,
											"end": 374,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 339,
											"end": 374,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 339,
											"end": 374,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 339,
											"end": 374,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 339,
											"end": 374,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFF"
										},
										{
											"begin": 339,
											"end": 374,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 339,
											"end": 374,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 339,
											"end": 374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 604,
											"end": 663,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 604,
											"end": 663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 646,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 646,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 646,
											"end": 658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 646,
											"end": 658,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 646,
											"end": 658,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 604,
											"end": 663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1435,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1209,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1260,
											"end": 1264,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1302,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1296,
											"end": 1302,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1302,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1302,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1296,
											"end": 1302,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1302,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1302,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1296,
											"end": 1302,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1315,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1296,
											"end": 1315,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1315,
											"name": "PUSH",
											"source": 1,
											"value": "E67CDAFD"
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1296,
											"end": 1317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1318,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1318,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1388,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1360,
											"end": 1388,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1388,
											"name": "PUSH",
											"source": 1,
											"value": "ED3B657A"
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1360,
											"end": 1390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 1390,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 1390,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1430,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1430,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 288,
											"end": 306,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 288,
											"end": 306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 288,
											"end": 306,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 288,
											"end": 306,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 288,
											"end": 306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 288,
											"end": 306,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 288,
											"end": 306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 288,
											"end": 306,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 288,
											"end": 306,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 288,
											"end": 306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 288,
											"end": 306,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 288,
											"end": 306,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 288,
											"end": 306,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 288,
											"end": 306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 288,
											"end": 306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 667,
											"end": 1202,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 667,
											"end": 1202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 868,
											"end": 888,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 891,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 891,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 891,
											"end": 911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 891,
											"end": 911,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 891,
											"end": 911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 868,
											"end": 911,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 868,
											"end": 911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 917,
											"end": 931,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 970,
											"end": 983,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 970,
											"end": 983,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 970,
											"end": 983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 970,
											"end": 983,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 970,
											"end": 983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 970,
											"end": 983,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 970,
											"end": 983,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 970,
											"end": 983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 970,
											"end": 983,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 970,
											"end": 983,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFF"
										},
										{
											"begin": 970,
											"end": 983,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 934,
											"end": 983,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFF"
										},
										{
											"begin": 934,
											"end": 983,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 186,
											"end": 191,
											"name": "PUSH",
											"source": 1,
											"value": "2710"
										},
										{
											"begin": 934,
											"end": 949,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 934,
											"end": 967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 934,
											"end": 967,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 934,
											"end": 967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 934,
											"end": 967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 934,
											"end": 967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 934,
											"end": 967,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 934,
											"end": 967,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 934,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 934,
											"end": 983,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 934,
											"end": 983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 934,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 934,
											"end": 983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 934,
											"end": 983,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 934,
											"end": 983,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 917,
											"end": 983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 917,
											"end": 983,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1030,
											"end": 1039,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1041,
											"end": 1049,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1041,
											"end": 1049,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1041,
											"end": 1049,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1041,
											"end": 1049,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1041,
											"end": 1049,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1041,
											"end": 1049,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1041,
											"end": 1049,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1041,
											"end": 1049,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1041,
											"end": 1049,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1041,
											"end": 1049,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1041,
											"end": 1049,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1050,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1021,
											"end": 1050,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1021,
											"end": 1050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1050,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1021,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1088,
											"end": 1097,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1107,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1099,
											"end": 1107,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1107,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1107,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1099,
											"end": 1107,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1107,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1107,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1099,
											"end": 1107,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1108,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1079,
											"end": 1108,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1079,
											"end": 1108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1108,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1079,
											"end": 1108,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1068,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1058,
											"end": 1068,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1058,
											"end": 1109,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1058,
											"end": 1109,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1109,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1109,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1109,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1109,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1058,
											"end": 1109,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1109,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1109,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1109,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1109,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1058,
											"end": 1109,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1109,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1109,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1109,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1109,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1197,
											"name": "PUSH",
											"source": 1,
											"value": "6E87C25E322C4AD68FAF7916D0788BAAF714D806FE887A84EE4B84AD9666F686"
										},
										{
											"begin": 1143,
											"end": 1146,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1143,
											"end": 1146,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 1143,
											"end": 1146,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1146,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1146,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1146,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1143,
											"end": 1146,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1146,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1146,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1146,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1143,
											"end": 1146,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1148,
											"end": 1158,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1148,
											"end": 1158,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1148,
											"end": 1158,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1148,
											"end": 1158,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1148,
											"end": 1158,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1148,
											"end": 1158,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1148,
											"end": 1158,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1148,
											"end": 1158,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1148,
											"end": 1158,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1148,
											"end": 1158,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1148,
											"end": 1158,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1160,
											"end": 1168,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1160,
											"end": 1168,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1160,
											"end": 1168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1160,
											"end": 1168,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1160,
											"end": 1168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1160,
											"end": 1168,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1160,
											"end": 1168,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1160,
											"end": 1168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1160,
											"end": 1168,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1160,
											"end": 1168,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1160,
											"end": 1168,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1181,
											"end": 1196,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1197,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1132,
											"end": 1197,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1132,
											"end": 1197,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1197,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1197,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1197,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1197,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1197,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1132,
											"end": 1197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1197,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1132,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1197,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1132,
											"end": 1197,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1197,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1197,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1197,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1197,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1197,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 698,
											"end": 1202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 698,
											"end": 1202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 698,
											"end": 1202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 667,
											"end": 1202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 262,
											"end": 351,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 262,
											"end": 351,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 314,
											"end": 318,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 338,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 333,
											"end": 334,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 333,
											"end": 338,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 333,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 333,
											"end": 346,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 345,
											"end": 346,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 333,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 333,
											"end": 346,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 333,
											"end": 346,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 333,
											"end": 346,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 341,
											"end": 342,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 333,
											"end": 346,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 333,
											"end": 346,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 326,
											"end": 346,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 326,
											"end": 346,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 262,
											"end": 351,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 262,
											"end": 351,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 262,
											"end": 351,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 262,
											"end": 351,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 262,
											"end": 351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 121,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 7,
											"end": 121,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 114,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 73,
											"end": 115,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 62,
											"end": 115,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 62,
											"end": 115,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 121,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 121,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 121,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 127,
											"end": 245,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 127,
											"end": 245,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 214,
											"end": 238,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 214,
											"end": 238,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 214,
											"end": 238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 214,
											"end": 238,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 214,
											"end": 238,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 209,
											"end": 212,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 202,
											"end": 239,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 127,
											"end": 245,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 127,
											"end": 245,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 127,
											"end": 245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 251,
											"end": 473,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 251,
											"end": 473,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 344,
											"end": 348,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 382,
											"end": 384,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 371,
											"end": 380,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 367,
											"end": 385,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 359,
											"end": 385,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 359,
											"end": 385,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 395,
											"end": 466,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 463,
											"end": 464,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 452,
											"end": 461,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 448,
											"end": 465,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 439,
											"end": 445,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 395,
											"end": 466,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 395,
											"end": 466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 395,
											"end": 466,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 395,
											"end": 466,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 251,
											"end": 473,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 251,
											"end": 473,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 251,
											"end": 473,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 251,
											"end": 473,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 251,
											"end": 473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 479,
											"end": 556,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 479,
											"end": 556,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 516,
											"end": 523,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 545,
											"end": 550,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 534,
											"end": 550,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 534,
											"end": 550,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 479,
											"end": 556,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 479,
											"end": 556,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 479,
											"end": 556,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 479,
											"end": 556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 562,
											"end": 680,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 562,
											"end": 680,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 649,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 667,
											"end": 672,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 649,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 649,
											"end": 673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 649,
											"end": 673,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 649,
											"end": 673,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 644,
											"end": 647,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 637,
											"end": 674,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 562,
											"end": 680,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 562,
											"end": 680,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 562,
											"end": 680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 686,
											"end": 908,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 686,
											"end": 908,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 779,
											"end": 783,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 819,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 806,
											"end": 815,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 802,
											"end": 820,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 794,
											"end": 820,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 794,
											"end": 820,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 830,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 898,
											"end": 899,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 896,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 883,
											"end": 900,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 874,
											"end": 880,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 830,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 830,
											"end": 901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 830,
											"end": 901,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 830,
											"end": 901,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 686,
											"end": 908,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 686,
											"end": 908,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 686,
											"end": 908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 686,
											"end": 908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 686,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 914,
											"end": 1005,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 914,
											"end": 1005,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 950,
											"end": 957,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 990,
											"end": 998,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFF"
										},
										{
											"begin": 983,
											"end": 988,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 979,
											"end": 999,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 968,
											"end": 999,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 968,
											"end": 999,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 914,
											"end": 1005,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 914,
											"end": 1005,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 914,
											"end": 1005,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 914,
											"end": 1005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1011,
											"end": 1126,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 1011,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1096,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 1113,
											"end": 1118,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1096,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 1096,
											"end": 1119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1096,
											"end": 1119,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 1096,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1094,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1120,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1011,
											"end": 1126,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1011,
											"end": 1126,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1011,
											"end": 1126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1132,
											"end": 1350,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 1132,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1223,
											"end": 1227,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1261,
											"end": 1263,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1250,
											"end": 1259,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1264,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1238,
											"end": 1264,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1238,
											"end": 1264,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1274,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 1340,
											"end": 1341,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1338,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1325,
											"end": 1342,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1316,
											"end": 1322,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1274,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 1274,
											"end": 1343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1274,
											"end": 1343,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 1274,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1132,
											"end": 1350,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1132,
											"end": 1350,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1132,
											"end": 1350,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1132,
											"end": 1350,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1132,
											"end": 1350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1437,
											"end": 1554,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 1437,
											"end": 1554,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1546,
											"end": 1547,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1543,
											"end": 1544,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1536,
											"end": 1548,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1809,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 1683,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1720,
											"end": 1727,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1802,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1753,
											"end": 1758,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1749,
											"end": 1803,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1803,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1803,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1809,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1809,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1809,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1815,
											"end": 1911,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 1815,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1859,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1881,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 1899,
											"end": 1904,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1881,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 1881,
											"end": 1905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1881,
											"end": 1905,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 1881,
											"end": 1905,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1905,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1905,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1815,
											"end": 1911,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1815,
											"end": 1911,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1815,
											"end": 1911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1815,
											"end": 1911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1917,
											"end": 2039,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 1917,
											"end": 2039,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 2008,
											"end": 2013,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 1990,
											"end": 2014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2014,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 1990,
											"end": 2014,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1983,
											"end": 1988,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2015,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1970,
											"end": 2033,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 1970,
											"end": 2033,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2029,
											"end": 2030,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2026,
											"end": 2027,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2019,
											"end": 2031,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1970,
											"end": 2033,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 1970,
											"end": 2033,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1917,
											"end": 2039,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1917,
											"end": 2039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2045,
											"end": 2188,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 2045,
											"end": 2188,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2102,
											"end": 2107,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2139,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2127,
											"end": 2140,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2118,
											"end": 2140,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2118,
											"end": 2140,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2149,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 2176,
											"end": 2181,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2149,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 2149,
											"end": 2182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2149,
											"end": 2182,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 2149,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2045,
											"end": 2188,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2045,
											"end": 2188,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2045,
											"end": 2188,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2045,
											"end": 2188,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2045,
											"end": 2188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2545,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 2194,
											"end": 2545,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2264,
											"end": 2270,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2313,
											"end": 2315,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2301,
											"end": 2310,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2292,
											"end": 2299,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2288,
											"end": 2311,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2284,
											"end": 2316,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2281,
											"end": 2400,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2281,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 2281,
											"end": 2400,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 2319,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 2319,
											"end": 2398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2398,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 2319,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2281,
											"end": 2400,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 2281,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2439,
											"end": 2440,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 2520,
											"end": 2527,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2500,
											"end": 2509,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2496,
											"end": 2518,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2464,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 2464,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2464,
											"end": 2528,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 2464,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2454,
											"end": 2528,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2454,
											"end": 2528,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2538,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2545,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2545,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2545,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2545,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2551,
											"end": 2673,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 2551,
											"end": 2673,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2624,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 2642,
											"end": 2647,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2624,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 2624,
											"end": 2648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2624,
											"end": 2648,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 2624,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2622,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2614,
											"end": 2649,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2604,
											"end": 2667,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 2604,
											"end": 2667,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2663,
											"end": 2664,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2660,
											"end": 2661,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2653,
											"end": 2665,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2604,
											"end": 2667,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 2604,
											"end": 2667,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2551,
											"end": 2673,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2551,
											"end": 2673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2679,
											"end": 2822,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 2679,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2741,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 2773,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2761,
											"end": 2774,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2752,
											"end": 2774,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2752,
											"end": 2774,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2783,
											"end": 2816,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 2810,
											"end": 2815,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2783,
											"end": 2816,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 2783,
											"end": 2816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2783,
											"end": 2816,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 2783,
											"end": 2816,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2679,
											"end": 2822,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2679,
											"end": 2822,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2679,
											"end": 2822,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2679,
											"end": 2822,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2679,
											"end": 2822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2828,
											"end": 3179,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 2828,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2898,
											"end": 2904,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2947,
											"end": 2949,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2935,
											"end": 2944,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2926,
											"end": 2933,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2922,
											"end": 2945,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2918,
											"end": 2950,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2915,
											"end": 3034,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2915,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 2915,
											"end": 3034,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2953,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 2953,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 2953,
											"end": 3032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2953,
											"end": 3032,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 2953,
											"end": 3032,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2915,
											"end": 3034,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 2915,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3073,
											"end": 3074,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3162,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 3154,
											"end": 3161,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3145,
											"end": 3151,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3134,
											"end": 3143,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3130,
											"end": 3152,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3098,
											"end": 3162,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 3098,
											"end": 3162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3098,
											"end": 3162,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 3098,
											"end": 3162,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3162,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3162,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3044,
											"end": 3172,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2828,
											"end": 3179,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2828,
											"end": 3179,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2828,
											"end": 3179,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2828,
											"end": 3179,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2828,
											"end": 3179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3185,
											"end": 3365,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 3185,
											"end": 3365,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3230,
											"end": 3231,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3223,
											"end": 3311,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3330,
											"end": 3334,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 3327,
											"end": 3328,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3320,
											"end": 3335,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3354,
											"end": 3358,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3351,
											"end": 3352,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3344,
											"end": 3359,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3371,
											"end": 3781,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 3371,
											"end": 3781,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3411,
											"end": 3418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3434,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 3452,
											"end": 3453,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3434,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 3434,
											"end": 3454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3434,
											"end": 3454,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 3434,
											"end": 3454,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3429,
											"end": 3454,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3429,
											"end": 3454,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3468,
											"end": 3488,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 3486,
											"end": 3487,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3468,
											"end": 3488,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 3468,
											"end": 3488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3468,
											"end": 3488,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 3468,
											"end": 3488,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3488,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3488,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3523,
											"end": 3524,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3520,
											"end": 3521,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3516,
											"end": 3525,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3545,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 3563,
											"end": 3574,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3545,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 3545,
											"end": 3575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3545,
											"end": 3575,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 3545,
											"end": 3575,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3534,
											"end": 3575,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3534,
											"end": 3575,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3724,
											"end": 3725,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3715,
											"end": 3722,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3711,
											"end": 3726,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3709,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3705,
											"end": 3727,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 3686,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3678,
											"end": 3687,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3658,
											"end": 3741,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 3635,
											"end": 3774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 3635,
											"end": 3774,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3754,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 3754,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 3754,
											"end": 3772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3754,
											"end": 3772,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 3754,
											"end": 3772,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3635,
											"end": 3774,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 3635,
											"end": 3774,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3419,
											"end": 3781,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3371,
											"end": 3781,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3371,
											"end": 3781,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3371,
											"end": 3781,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3371,
											"end": 3781,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3371,
											"end": 3781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3787,
											"end": 3967,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 3787,
											"end": 3967,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3835,
											"end": 3912,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3832,
											"end": 3833,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3825,
											"end": 3913,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3932,
											"end": 3936,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 3929,
											"end": 3930,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3922,
											"end": 3937,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3956,
											"end": 3960,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3953,
											"end": 3954,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3946,
											"end": 3961,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3973,
											"end": 4158,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 3973,
											"end": 4158,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4013,
											"end": 4014,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4030,
											"end": 4050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 4048,
											"end": 4049,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4030,
											"end": 4050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 4030,
											"end": 4050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4030,
											"end": 4050,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 4030,
											"end": 4050,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4025,
											"end": 4050,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4025,
											"end": 4050,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4064,
											"end": 4084,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 4082,
											"end": 4083,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4064,
											"end": 4084,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 4064,
											"end": 4084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4064,
											"end": 4084,
											"name": "tag",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 4064,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4059,
											"end": 4084,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4059,
											"end": 4084,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4103,
											"end": 4104,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4093,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 4093,
											"end": 4128,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 4108,
											"end": 4126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4093,
											"end": 4128,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 4093,
											"end": 4128,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4150,
											"end": 4151,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4147,
											"end": 4148,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4143,
											"end": 4152,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 4138,
											"end": 4152,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4138,
											"end": 4152,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3973,
											"end": 4158,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3973,
											"end": 4158,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3973,
											"end": 4158,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3973,
											"end": 4158,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3973,
											"end": 4158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4164,
											"end": 4224,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 4164,
											"end": 4224,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4192,
											"end": 4195,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4213,
											"end": 4218,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4206,
											"end": 4218,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4206,
											"end": 4218,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4164,
											"end": 4224,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4164,
											"end": 4224,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4164,
											"end": 4224,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4164,
											"end": 4224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4372,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 4230,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4280,
											"end": 4289,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4313,
											"end": 4366,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 4340,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 4358,
											"end": 4363,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4340,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 4340,
											"end": 4364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4340,
											"end": 4364,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 4340,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 4331,
											"end": 4365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4313,
											"end": 4366,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 4313,
											"end": 4366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4313,
											"end": 4366,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 4313,
											"end": 4366,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4300,
											"end": 4366,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4300,
											"end": 4366,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4372,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4372,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4372,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4378,
											"end": 4509,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 4378,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4465,
											"end": 4502,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 4496,
											"end": 4501,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4465,
											"end": 4502,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 4465,
											"end": 4502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4465,
											"end": 4502,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 4465,
											"end": 4502,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4460,
											"end": 4463,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4453,
											"end": 4503,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4378,
											"end": 4509,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4378,
											"end": 4509,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4378,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4515,
											"end": 5179,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 4515,
											"end": 5179,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4720,
											"end": 4724,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4758,
											"end": 4761,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 4747,
											"end": 4756,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4735,
											"end": 4762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4735,
											"end": 4762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4772,
											"end": 4843,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 4840,
											"end": 4841,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4829,
											"end": 4838,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4825,
											"end": 4842,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4816,
											"end": 4822,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4772,
											"end": 4843,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 4772,
											"end": 4843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4772,
											"end": 4843,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 4772,
											"end": 4843,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 4921,
											"end": 4923,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4910,
											"end": 4919,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4906,
											"end": 4924,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4897,
											"end": 4903,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 4853,
											"end": 4925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 4925,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 4853,
											"end": 4925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4935,
											"end": 5007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 5003,
											"end": 5005,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4992,
											"end": 5001,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4988,
											"end": 5006,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4979,
											"end": 4985,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4935,
											"end": 5007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 4935,
											"end": 5007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4935,
											"end": 5007,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 4935,
											"end": 5007,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5017,
											"end": 5089,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 5085,
											"end": 5087,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5074,
											"end": 5083,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5070,
											"end": 5088,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5061,
											"end": 5067,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5017,
											"end": 5089,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5017,
											"end": 5089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5017,
											"end": 5089,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 5017,
											"end": 5089,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5099,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 5167,
											"end": 5170,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 5156,
											"end": 5165,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5152,
											"end": 5171,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5143,
											"end": 5149,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5099,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5099,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5099,
											"end": 5172,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 5099,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4515,
											"end": 5179,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 4515,
											"end": 5179,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 4515,
											"end": 5179,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4515,
											"end": 5179,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4515,
											"end": 5179,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4515,
											"end": 5179,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4515,
											"end": 5179,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4515,
											"end": 5179,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4515,
											"end": 5179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"contracts/Master.sol",
								"contracts/capital/MCR.sol",
								"contracts/interfaces/ICover.sol",
								"contracts/interfaces/ICoverNFT.sol",
								"contracts/interfaces/IMCR.sol",
								"contracts/libraries/Math.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"desiredMCR()": "017e7d8f",
							"gearingFactor()": "a8a41a68",
							"getAllSumAssurance()": "b3452487",
							"getMCR()": "44936b10",
							"mcr()": "b8caedc4",
							"mcrFloor()": "7a2dbb6f",
							"updateMCRInternal()": "aa5da046"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"masterAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mcr\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"desiredMCR\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mcrFloor\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mcrETHWithGear\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalSumAssured\",\"type\":\"uint256\"}],\"name\":\"MCRUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"desiredMCR\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"\",\"type\":\"uint112\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gearingFactor\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllSumAssurance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMCR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mcr\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"\",\"type\":\"uint112\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mcrFloor\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"\",\"type\":\"uint112\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateMCRInternal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getMCR()\":{\"details\":\"Calculates the current virtual MCR value. The virtual MCR value moves towards the desiredMCR value away from the stored mcr value at constant velocity based on how much time passed from the lastUpdateTime. The total change in virtual MCR cannot exceed 1% of stored mcr. This approach allows for the MCR to change smoothly across time without sudden jumps between values, while always progressing towards the desiredMCR goal. The desiredMCR can change subject to the call of _updateMCR so the virtual MCR value may change direction and start decreasing instead of increasing or vice-versa.\",\"returns\":{\"_0\":\"mcr\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/capital/MCR.sol\":\"MCR\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Master.sol\":{\"keccak256\":\"0x3d3184b9516122e6fb70e4b5d512b6a0219abe38c4792b9cbf382dbffb880c65\",\"urls\":[\"bzz-raw://e1bb612708fc4fd742569a13ff47a2b359e21044f201e7eb99316a25c648203a\",\"dweb:/ipfs/QmZZwWpCLopjSVdjPNR1LxxrBXp7wFEgmqzYuQUQFh1z6J\"]},\"contracts/capital/MCR.sol\":{\"keccak256\":\"0x493e5e75fde61d738ab718997266f331ff4f2b118b4bd39222b5aa82acf47789\",\"urls\":[\"bzz-raw://05a9d26b666201ca0e89d1f089d113277ce7dcbb909bdd5a634130f7ccc3c89b\",\"dweb:/ipfs/QmYNhV7bqifhNsCG5pHrGKi98cDvzLbv18qnnJd4ECupE1\"]},\"contracts/interfaces/ICover.sol\":{\"keccak256\":\"0x618e047fdc777235144edfe506efa4cf92b8d7078c625a1f6a35274ded18b539\",\"urls\":[\"bzz-raw://1b6bbde4fd32cf465f535b0fa2d60c1a5d10a9d790ff55272d636fab8472d7d9\",\"dweb:/ipfs/Qmbu29eAmxZ5ZYYLNH9J7SsVEsvmBp9AxLFsm6jMwSAtoK\"]},\"contracts/interfaces/ICoverNFT.sol\":{\"keccak256\":\"0x79d602e1cd332d73b59651d0af301a23071e4ca225097b24d80f9947393e2582\",\"urls\":[\"bzz-raw://a8b78909a6db032e68906729c03fb6e3b8183264fc34fe4009c4c0a598a00a7a\",\"dweb:/ipfs/QmaGEKqDiifEftwiPbBEnaduhZzUwzEBbj89xEdzkx1iB7\"]},\"contracts/interfaces/IMCR.sol\":{\"keccak256\":\"0xfe501e970cfca32e379ff35233f5c149a6b84345e2d76cc4e9d3f351ae9c9317\",\"urls\":[\"bzz-raw://8c67be9e233b4f1f26aee5cbbd19a0b65d64b5a416089940498e906347753317\",\"dweb:/ipfs/QmS1D3y8xGr11FpZu51KzbFTHrwYYMMAk3mazP4mCZW8VJ\"]},\"contracts/libraries/Math.sol\":{\"keccak256\":\"0x57f526a92c1f4d0de03da446b736d2e7688929e49353628cc7e23e93d81b49c9\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://172b2b8cf28838b698acb7e9927ece6898c62b9627470504051dbae0ce5945ce\",\"dweb:/ipfs/QmZLHfcgt3fQz85h183rH96vkkAg9mDPXKfWV4ECCefn43\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x55036158b0f3523fa36f2a576743f39dd46bb84bee57e51cd2406c906638cea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c5558c241a34b3fa54c848d99844850c88b03869b47e1fc05f6f261c54aaa35\",\"dweb:/ipfs/QmbeeMn9RKhT8DmEvDCNdfiDGtDw1YVB2D5HTLqTzefYPb\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x39194d726021816f8a5f2b821574349a4884833cf841378dc8e6862e5f789ed6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08cfffa942e4589c4d927db3fecfea998e9486ff41f48ee905fdda34d152a846\",\"dweb:/ipfs/QmQKwHL48iBd5XzRAnSNnGBXo6Ykt22iADEReEusX1SQvK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 96,
								"contract": "contracts/capital/MCR.sol:MCR",
								"label": "master",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(Master)82"
							},
							{
								"astId": 99,
								"contract": "contracts/capital/MCR.sol:MCR",
								"label": "mcrFloor",
								"offset": 0,
								"slot": "1",
								"type": "t_uint112"
							},
							{
								"astId": 101,
								"contract": "contracts/capital/MCR.sol:MCR",
								"label": "mcr",
								"offset": 14,
								"slot": "1",
								"type": "t_uint112"
							},
							{
								"astId": 103,
								"contract": "contracts/capital/MCR.sol:MCR",
								"label": "desiredMCR",
								"offset": 0,
								"slot": "2",
								"type": "t_uint112"
							},
							{
								"astId": 106,
								"contract": "contracts/capital/MCR.sol:MCR",
								"label": "gearingFactor",
								"offset": 14,
								"slot": "2",
								"type": "t_uint24"
							}
						],
						"types": {
							"t_contract(Master)82": {
								"encoding": "inplace",
								"label": "contract Master",
								"numberOfBytes": "20"
							},
							"t_uint112": {
								"encoding": "inplace",
								"label": "uint112",
								"numberOfBytes": "14"
							},
							"t_uint24": {
								"encoding": "inplace",
								"label": "uint24",
								"numberOfBytes": "3"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/ICover.sol": {
				"ICover": {
					"abi": [
						{
							"inputs": [],
							"name": "InsufficientEthSent",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReturningEthRemainderToSenderFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SendingEthToCommissionDestinationFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SendingEthToPoolFailed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "token0",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "token1",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "token1Qty",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "token0Qty",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lowerBoundRatio",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "upperBoundRatio",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "period",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "pairStr",
											"type": "string"
										}
									],
									"internalType": "struct BuyCoverParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "buyCover",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "coverId",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "coverDataCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "count",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "token0",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "token1",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "token1Qty",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "token0Qty",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lowerBoundRatio",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "upperBoundRatio",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "period",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "pairStr",
											"type": "string"
										}
									],
									"internalType": "struct BuyCoverParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "coverPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "decActiveCoverInETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "coverId",
									"type": "uint256"
								}
							],
							"name": "getCoverData",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "amountPaidOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "totalClaimAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "start",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "period",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "token0",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "token1",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "token0Qty",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "token1Qty",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lowerBoundRatio",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "upperBoundRatio",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "pairStr",
											"type": "string"
										}
									],
									"internalType": "struct CoverData",
									"name": "coverData",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalActiveCoverInETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"buyCover((address,address,uint256,uint256,uint256,uint256,uint256,string))": "a71467a8",
							"coverDataCount()": "404730f4",
							"coverPrice((address,address,uint256,uint256,uint256,uint256,uint256,string))": "6c57b95d",
							"decActiveCoverInETH(uint256)": "4b61a44b",
							"getCoverData(uint256)": "00407d2a",
							"totalActiveCoverInETH()": "ed3b657a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InsufficientEthSent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReturningEthRemainderToSenderFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SendingEthToCommissionDestinationFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SendingEthToPoolFailed\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"token1Qty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0Qty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerBoundRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upperBoundRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pairStr\",\"type\":\"string\"}],\"internalType\":\"struct BuyCoverParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"buyCover\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"coverId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"coverDataCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"token1Qty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0Qty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerBoundRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upperBoundRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pairStr\",\"type\":\"string\"}],\"internalType\":\"struct BuyCoverParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"coverPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"decActiveCoverInETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"coverId\",\"type\":\"uint256\"}],\"name\":\"getCoverData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amountPaidOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalClaimAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"token0Qty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1Qty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerBoundRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upperBoundRatio\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pairStr\",\"type\":\"string\"}],\"internalType\":\"struct CoverData\",\"name\":\"coverData\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalActiveCoverInETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ICover.sol\":\"ICover\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ICover.sol\":{\"keccak256\":\"0x618e047fdc777235144edfe506efa4cf92b8d7078c625a1f6a35274ded18b539\",\"urls\":[\"bzz-raw://1b6bbde4fd32cf465f535b0fa2d60c1a5d10a9d790ff55272d636fab8472d7d9\",\"dweb:/ipfs/Qmbu29eAmxZ5ZYYLNH9J7SsVEsvmBp9AxLFsm6jMwSAtoK\"]},\"contracts/interfaces/ICoverNFT.sol\":{\"keccak256\":\"0x79d602e1cd332d73b59651d0af301a23071e4ca225097b24d80f9947393e2582\",\"urls\":[\"bzz-raw://a8b78909a6db032e68906729c03fb6e3b8183264fc34fe4009c4c0a598a00a7a\",\"dweb:/ipfs/QmaGEKqDiifEftwiPbBEnaduhZzUwzEBbj89xEdzkx1iB7\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x55036158b0f3523fa36f2a576743f39dd46bb84bee57e51cd2406c906638cea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c5558c241a34b3fa54c848d99844850c88b03869b47e1fc05f6f261c54aaa35\",\"dweb:/ipfs/QmbeeMn9RKhT8DmEvDCNdfiDGtDw1YVB2D5HTLqTzefYPb\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x39194d726021816f8a5f2b821574349a4884833cf841378dc8e6862e5f789ed6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08cfffa942e4589c4d927db3fecfea998e9486ff41f48ee905fdda34d152a846\",\"dweb:/ipfs/QmQKwHL48iBd5XzRAnSNnGBXo6Ykt22iADEReEusX1SQvK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/ICoverNFT.sol": {
				"ICoverNFT": {
					"abi": [
						{
							"inputs": [],
							"name": "AlreadyMinted",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidNewNFTDescriptorAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidNewOperatorAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidRecipient",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotAuthorized",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotMinted",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotOperator",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UnsafeRecipient",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "WrongFrom",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "isApprovedOrOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"isApprovedOrOwner(address,uint256)": "430c2081",
							"mint(address)": "6a627842",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AlreadyMinted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNewNFTDescriptorAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNewOperatorAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotMinted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsafeRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongFrom\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"isApprovedOrOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ICoverNFT.sol\":\"ICoverNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ICoverNFT.sol\":{\"keccak256\":\"0x79d602e1cd332d73b59651d0af301a23071e4ca225097b24d80f9947393e2582\",\"urls\":[\"bzz-raw://a8b78909a6db032e68906729c03fb6e3b8183264fc34fe4009c4c0a598a00a7a\",\"dweb:/ipfs/QmaGEKqDiifEftwiPbBEnaduhZzUwzEBbj89xEdzkx1iB7\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x55036158b0f3523fa36f2a576743f39dd46bb84bee57e51cd2406c906638cea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c5558c241a34b3fa54c848d99844850c88b03869b47e1fc05f6f261c54aaa35\",\"dweb:/ipfs/QmbeeMn9RKhT8DmEvDCNdfiDGtDw1YVB2D5HTLqTzefYPb\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x39194d726021816f8a5f2b821574349a4884833cf841378dc8e6862e5f789ed6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08cfffa942e4589c4d927db3fecfea998e9486ff41f48ee905fdda34d152a846\",\"dweb:/ipfs/QmQKwHL48iBd5XzRAnSNnGBXo6Ykt22iADEReEusX1SQvK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IMCR.sol": {
				"IMCR": {
					"abi": [
						{
							"inputs": [],
							"name": "getMCR",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "updateMCRInternal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getMCR()": "44936b10",
							"updateMCRInternal()": "aa5da046"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getMCR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateMCRInternal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IMCR.sol\":\"IMCR\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IMCR.sol\":{\"keccak256\":\"0xfe501e970cfca32e379ff35233f5c149a6b84345e2d76cc4e9d3f351ae9c9317\",\"urls\":[\"bzz-raw://8c67be9e233b4f1f26aee5cbbd19a0b65d64b5a416089940498e906347753317\",\"dweb:/ipfs/QmS1D3y8xGr11FpZu51KzbFTHrwYYMMAk3mazP4mCZW8VJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Simple library that defines min, max and babylonian sqrt functions",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/Math.sol\":151:1160  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/Math.sol\":151:1160  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220256faa1093e54374dabaafd0efdb9b6bb83f6e731973f05c1db7aa74c3fec18064736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220256faa1093e54374dabaafd0efdb9b6bb83f6e731973f05c1db7aa74c3fec18064736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 PUSH16 0xAA1093E54374DABAAFD0EFDB9B6BB83F PUSH15 0x731973F05C1DB7AA74C3FEC1806473 PUSH16 0x6C634300081300330000000000000000 ",
							"sourceMap": "151:1009:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220256faa1093e54374dabaafd0efdb9b6bb83f6e731973f05c1db7aa74c3fec18064736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 PUSH16 0xAA1093E54374DABAAFD0EFDB9B6BB83F PUSH15 0x731973F05C1DB7AA74C3FEC1806473 PUSH16 0x6C634300081300330000000000000000 ",
							"sourceMap": "151:1009:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"divCeil(uint256,uint256)": "infinite",
								"divRound(uint256,uint256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"roundUp(uint256,uint256)": "infinite",
								"sqrt(uint256)": "infinite",
								"sum(uint256[] memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 151,
									"end": 1160,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 151,
									"end": 1160,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 151,
									"end": 1160,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 151,
									"end": 1160,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 151,
									"end": 1160,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 151,
									"end": 1160,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 151,
									"end": 1160,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 151,
									"end": 1160,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 151,
									"end": 1160,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 151,
									"end": 1160,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 151,
									"end": 1160,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 151,
									"end": 1160,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 151,
									"end": 1160,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 151,
									"end": 1160,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 151,
									"end": 1160,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 151,
									"end": 1160,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 151,
									"end": 1160,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 151,
									"end": 1160,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 151,
									"end": 1160,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 151,
									"end": 1160,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 151,
									"end": 1160,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 151,
									"end": 1160,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 151,
									"end": 1160,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 151,
									"end": 1160,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 151,
									"end": 1160,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 151,
									"end": 1160,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 151,
									"end": 1160,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 151,
									"end": 1160,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 151,
									"end": 1160,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 151,
									"end": 1160,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 151,
									"end": 1160,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 151,
									"end": 1160,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 151,
									"end": 1160,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 151,
									"end": 1160,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 151,
									"end": 1160,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220256faa1093e54374dabaafd0efdb9b6bb83f6e731973f05c1db7aa74c3fec18064736f6c63430008130033",
									".code": [
										{
											"begin": 151,
											"end": 1160,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 151,
											"end": 1160,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 151,
											"end": 1160,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 151,
											"end": 1160,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 151,
											"end": 1160,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 151,
											"end": 1160,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 151,
											"end": 1160,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 151,
											"end": 1160,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 151,
											"end": 1160,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"contracts/Master.sol",
								"contracts/capital/MCR.sol",
								"contracts/interfaces/ICover.sol",
								"contracts/interfaces/ICoverNFT.sol",
								"contracts/interfaces/IMCR.sol",
								"contracts/libraries/Math.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Simple library that defines min, max and babylonian sqrt functions\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/Math.sol\":{\"keccak256\":\"0x57f526a92c1f4d0de03da446b736d2e7688929e49353628cc7e23e93d81b49c9\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://172b2b8cf28838b698acb7e9927ece6898c62b9627470504051dbae0ce5945ce\",\"dweb:/ipfs/QmZLHfcgt3fQz85h183rH96vkkAg9mDPXKfWV4ECCefn43\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x55036158b0f3523fa36f2a576743f39dd46bb84bee57e51cd2406c906638cea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c5558c241a34b3fa54c848d99844850c88b03869b47e1fc05f6f261c54aaa35\",\"dweb:/ipfs/QmbeeMn9RKhT8DmEvDCNdfiDGtDw1YVB2D5HTLqTzefYPb\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x39194d726021816f8a5f2b821574349a4884833cf841378dc8e6862e5f789ed6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08cfffa942e4589c4d927db3fecfea998e9486ff41f48ee905fdda34d152a846\",\"dweb:/ipfs/QmQKwHL48iBd5XzRAnSNnGBXo6Ykt22iADEReEusX1SQvK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x39194d726021816f8a5f2b821574349a4884833cf841378dc8e6862e5f789ed6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08cfffa942e4589c4d927db3fecfea998e9486ff41f48ee905fdda34d152a846\",\"dweb:/ipfs/QmQKwHL48iBd5XzRAnSNnGBXo6Ykt22iADEReEusX1SQvK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Master.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Master.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/capital/MCR.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/capital/MCR.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/interfaces/ICover.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/interfaces/ICover.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/interfaces/ICoverNFT.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/interfaces/ICoverNFT.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/interfaces/IMCR.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/interfaces/IMCR.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3420",
				"formattedMessage": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.19;\"\n--> contracts/interfaces/IMCR.sol\n\n",
				"message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.19;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/interfaces/IMCR.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3420",
				"formattedMessage": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.19;\"\n--> contracts/interfaces/ICoverNFT.sol\n\n",
				"message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.19;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/interfaces/ICoverNFT.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> contracts/capital/MCR.sol:36:5:\n   |\n36 |     uint112 newDesiredMCR = uint112(Math.max(gearedMCR, mcrFloor));\n   |     ^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1010,
					"file": "contracts/capital/MCR.sol",
					"start": 989
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Master.sol": {
				"ast": {
					"absolutePath": "contracts/Master.sol",
					"exportedSymbols": {
						"Master": [
							82
						]
					},
					"id": 83,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Master",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 82,
							"linearizedBaseContracts": [
								82
							],
							"name": "Master",
							"nameLocation": "34:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "9ccc903d",
									"id": 7,
									"mutability": "mutable",
									"name": "PoolAddress",
									"nameLocation": "63:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 82,
									"src": "47:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "47:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307830",
												"id": 5,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "85:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0x0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"id": 4,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "77:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 3,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "77:7:0",
												"typeDescriptions": {}
											}
										},
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "77:12:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7abc3964",
									"id": 13,
									"mutability": "mutable",
									"name": "CommissionDestination",
									"nameLocation": "111:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 82,
									"src": "95:52:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 8,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "95:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307830",
												"id": 11,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "143:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0x0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"id": 10,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "135:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 9,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "135:7:0",
												"typeDescriptions": {}
											}
										},
										"id": 12,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "135:12:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e67cdafd",
									"id": 19,
									"mutability": "mutable",
									"name": "CoverAddress",
									"nameLocation": "169:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 82,
									"src": "153:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 14,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "153:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307830",
												"id": 17,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "192:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0x0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"id": 16,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "184:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 15,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "184:7:0",
												"typeDescriptions": {}
											}
										},
										"id": 18,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "184:12:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "88ea0751",
									"id": 25,
									"mutability": "mutable",
									"name": "MCRAddress",
									"nameLocation": "218:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 82,
									"src": "202:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 20,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "202:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307830",
												"id": 23,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "239:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0x0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"id": 22,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "231:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 21,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "231:7:0",
												"typeDescriptions": {}
											}
										},
										"id": 24,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "231:12:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ff5f1b9f",
									"id": 31,
									"mutability": "mutable",
									"name": "AssessmentAddress",
									"nameLocation": "265:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 82,
									"src": "249:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 26,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "249:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307830",
												"id": 29,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "293:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0x0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"id": 28,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "285:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 27,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "285:7:0",
												"typeDescriptions": {}
											}
										},
										"id": 30,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "285:12:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "347:32:0",
										"statements": [
											{
												"expression": {
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 36,
														"name": "PoolAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "357:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 37,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "371:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "357:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "357:15:0"
											}
										]
									},
									"functionSelector": "e9e15b4f",
									"id": 41,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setPoolAddress",
									"nameLocation": "313:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "337:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "329:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "329:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "328:11:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "347:0:0"
									},
									"scope": 82,
									"src": "304:75:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "436:42:0",
										"statements": [
											{
												"expression": {
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 46,
														"name": "CommissionDestination",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "446:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 47,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "470:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "446:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "446:25:0"
											}
										]
									},
									"functionSelector": "6178cfca",
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setCommissionDestination",
									"nameLocation": "393:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "427:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "419:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "419:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "418:11:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "436:0:0"
									},
									"scope": 82,
									"src": "384:94:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 60,
										"nodeType": "Block",
										"src": "527:33:0",
										"statements": [
											{
												"expression": {
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 56,
														"name": "CoverAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "537:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 57,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "552:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "537:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 59,
												"nodeType": "ExpressionStatement",
												"src": "537:16:0"
											}
										]
									},
									"functionSelector": "e07ee06d",
									"id": 61,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setCoverAddress",
									"nameLocation": "492:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "517:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "509:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "508:11:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "527:0:0"
									},
									"scope": 82,
									"src": "483:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "607:31:0",
										"statements": [
											{
												"expression": {
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 66,
														"name": "MCRAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "617:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 67,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "630:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "617:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 69,
												"nodeType": "ExpressionStatement",
												"src": "617:14:0"
											}
										]
									},
									"functionSelector": "7346d3f8",
									"id": 71,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setMCRAddress",
									"nameLocation": "574:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "597:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "589:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "589:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "588:11:0"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "607:0:0"
									},
									"scope": 82,
									"src": "565:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "691:38:0",
										"statements": [
											{
												"expression": {
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 76,
														"name": "AssessmentAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "701:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 77,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "721:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "701:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "701:21:0"
											}
										]
									},
									"functionSelector": "75924419",
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setAssessmentAddress",
									"nameLocation": "652:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "681:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "673:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "673:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:11:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "691:0:0"
									},
									"scope": 82,
									"src": "643:86:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 83,
							"src": "25:706:0",
							"usedErrors": []
						}
					],
					"src": "0:731:0"
				},
				"id": 0
			},
			"contracts/capital/MCR.sol": {
				"ast": {
					"absolutePath": "contracts/capital/MCR.sol",
					"exportedSymbols": {
						"BASIS_PRECISION": [
							91
						],
						"BuyCoverParams": [
							237
						],
						"CoverData": [
							260
						],
						"ICover": [
							308
						],
						"ICoverNFT": [
							352
						],
						"IERC165": [
							677
						],
						"IERC721": [
							665
						],
						"IMCR": [
							362
						],
						"MCR": [
							217
						],
						"Master": [
							82
						],
						"Math": [
							548
						]
					},
					"id": 218,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 84,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "2:26:1"
						},
						{
							"absolutePath": "contracts/interfaces/IMCR.sol",
							"file": "../interfaces/IMCR.sol",
							"id": 85,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 218,
							"sourceUnit": 363,
							"src": "29:32:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/ICover.sol",
							"file": "../interfaces/ICover.sol",
							"id": 86,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 218,
							"sourceUnit": 309,
							"src": "62:34:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/Math.sol",
							"file": "../libraries/Math.sol",
							"id": 87,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 218,
							"sourceUnit": 549,
							"src": "97:31:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Master.sol",
							"file": "../Master.sol",
							"id": 88,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 218,
							"sourceUnit": 83,
							"src": "129:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"constant": true,
							"id": 91,
							"mutability": "constant",
							"name": "BASIS_PRECISION",
							"nameLocation": "168:15:1",
							"nodeType": "VariableDeclaration",
							"scope": 218,
							"src": "154:37:1",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 89,
								"name": "uint",
								"nodeType": "ElementaryTypeName",
								"src": "154:4:1",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "3130303030",
								"id": 90,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "186:5:1",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_10000_by_1",
									"typeString": "int_const 10000"
								},
								"value": "10000"
							},
							"visibility": "internal"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 92,
										"name": "IMCR",
										"nameLocations": [
											"209:4:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 362,
										"src": "209:4:1"
									},
									"id": 93,
									"nodeType": "InheritanceSpecifier",
									"src": "209:4:1"
								}
							],
							"canonicalName": "MCR",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 217,
							"linearizedBaseContracts": [
								217,
								362
							],
							"name": "MCR",
							"nameLocation": "202:3:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 96,
									"mutability": "mutable",
									"name": "master",
									"nameLocation": "225:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 217,
									"src": "218:13:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_Master_$82",
										"typeString": "contract Master"
									},
									"typeName": {
										"id": 95,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 94,
											"name": "Master",
											"nameLocations": [
												"218:6:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 82,
											"src": "218:6:1"
										},
										"referencedDeclaration": 82,
										"src": "218:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Master_$82",
											"typeString": "contract Master"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "7a2dbb6f",
									"id": 99,
									"mutability": "mutable",
									"name": "mcrFloor",
									"nameLocation": "250:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 217,
									"src": "235:31:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint112",
										"typeString": "uint112"
									},
									"typeName": {
										"id": 97,
										"name": "uint112",
										"nodeType": "ElementaryTypeName",
										"src": "235:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint112",
											"typeString": "uint112"
										}
									},
									"value": {
										"hexValue": "3130303030",
										"id": 98,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "261:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b8caedc4",
									"id": 101,
									"mutability": "mutable",
									"name": "mcr",
									"nameLocation": "303:3:1",
									"nodeType": "VariableDeclaration",
									"scope": 217,
									"src": "288:18:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint112",
										"typeString": "uint112"
									},
									"typeName": {
										"id": 100,
										"name": "uint112",
										"nodeType": "ElementaryTypeName",
										"src": "288:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint112",
											"typeString": "uint112"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "017e7d8f",
									"id": 103,
									"mutability": "mutable",
									"name": "desiredMCR",
									"nameLocation": "325:10:1",
									"nodeType": "VariableDeclaration",
									"scope": 217,
									"src": "310:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint112",
										"typeString": "uint112"
									},
									"typeName": {
										"id": 102,
										"name": "uint112",
										"nodeType": "ElementaryTypeName",
										"src": "310:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint112",
											"typeString": "uint112"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a8a41a68",
									"id": 106,
									"mutability": "mutable",
									"name": "gearingFactor",
									"nameLocation": "353:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 217,
									"src": "339:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint24",
										"typeString": "uint24"
									},
									"typeName": {
										"id": 104,
										"name": "uint24",
										"nodeType": "ElementaryTypeName",
										"src": "339:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint24",
											"typeString": "uint24"
										}
									},
									"value": {
										"hexValue": "3438303030",
										"id": 105,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "369:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_48000_by_1",
											"typeString": "int_const 48000"
										},
										"value": "48000"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 117,
										"nodeType": "Block",
										"src": "431:41:1",
										"statements": [
											{
												"expression": {
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 111,
														"name": "master",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "437:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Master_$82",
															"typeString": "contract Master"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 113,
																"name": "masterAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 108,
																"src": "453:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 112,
															"name": "Master",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "446:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Master_$82_$",
																"typeString": "type(contract Master)"
															}
														},
														"id": 114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "446:21:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Master_$82",
															"typeString": "contract Master"
														}
													},
													"src": "437:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Master_$82",
														"typeString": "contract Master"
													}
												},
												"id": 116,
												"nodeType": "ExpressionStatement",
												"src": "437:30:1"
											}
										]
									},
									"id": 118,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "masterAddress",
												"nameLocation": "417:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "409:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:23:1"
									},
									"returnParameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "431:0:1"
									},
									"scope": 217,
									"src": "396:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "6e87c25e322c4ad68faf7916d0788baaf714d806fe887a84ee4b84ad9666f686",
									"id": 130,
									"name": "MCRUpdated",
									"nameLocation": "481:10:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"indexed": false,
												"mutability": "mutable",
												"name": "mcr",
												"nameLocation": "502:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "497:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "497:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"indexed": false,
												"mutability": "mutable",
												"name": "desiredMCR",
												"nameLocation": "516:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "511:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"indexed": false,
												"mutability": "mutable",
												"name": "mcrFloor",
												"nameLocation": "537:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "532:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "532:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"indexed": false,
												"mutability": "mutable",
												"name": "mcrETHWithGear",
												"nameLocation": "556:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "551:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "551:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalSumAssured",
												"nameLocation": "581:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "576:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "576:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "491:109:1"
									},
									"src": "475:126:1"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 136,
										"nodeType": "Block",
										"src": "640:23:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 133,
														"name": "_updateMCR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "646:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "646:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "646:12:1"
											}
										]
									},
									"functionSelector": "aa5da046",
									"id": 137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateMCRInternal",
									"nameLocation": "613:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "630:2:1"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "640:0:1"
									},
									"scope": 217,
									"src": "604:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 183,
										"nodeType": "Block",
										"src": "698:504:1",
										"statements": [
											{
												"assignments": [
													141
												],
												"declarations": [
													{
														"constant": false,
														"id": 141,
														"mutability": "mutable",
														"name": "totalSumAssured",
														"nameLocation": "873:15:1",
														"nodeType": "VariableDeclaration",
														"scope": 183,
														"src": "868:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 140,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "868:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 144,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 142,
														"name": "getAllSumAssurance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "891:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "891:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "868:43:1"
											},
											{
												"assignments": [
													146
												],
												"declarations": [
													{
														"constant": false,
														"id": 146,
														"mutability": "mutable",
														"name": "gearedMCR",
														"nameLocation": "922:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 183,
														"src": "917:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 145,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "917:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 152,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 147,
															"name": "totalSumAssured",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "934:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 148,
															"name": "BASIS_PRECISION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "952:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "934:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 150,
														"name": "gearingFactor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "970:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "934:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "917:66:1"
											},
											{
												"assignments": [
													154
												],
												"declarations": [
													{
														"constant": false,
														"id": 154,
														"mutability": "mutable",
														"name": "newDesiredMCR",
														"nameLocation": "997:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 183,
														"src": "989:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 153,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "989:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 163,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 159,
																	"name": "gearedMCR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "1030:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 160,
																	"name": "mcrFloor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 99,
																	"src": "1041:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"expression": {
																	"id": 157,
																	"name": "Math",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 548,
																	"src": "1021:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Math_$548_$",
																		"typeString": "type(library Math)"
																	}
																},
																"id": 158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1026:3:1",
																"memberName": "max",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 399,
																"src": "1021:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1021:29:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1013:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint112_$",
															"typeString": "type(uint112)"
														},
														"typeName": {
															"id": 155,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "1013:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1013:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "989:62:1"
											},
											{
												"expression": {
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 164,
														"name": "desiredMCR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1058:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 169,
																		"name": "gearedMCR",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "1088:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 170,
																		"name": "mcrFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "1099:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	],
																	"expression": {
																		"id": 167,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 548,
																		"src": "1079:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$548_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1084:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 399,
																	"src": "1079:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 171,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1079:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1071:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint112_$",
																"typeString": "type(uint112)"
															},
															"typeName": {
																"id": 165,
																"name": "uint112",
																"nodeType": "ElementaryTypeName",
																"src": "1071:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 172,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1071:38:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "1058:51:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 174,
												"nodeType": "ExpressionStatement",
												"src": "1058:51:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 176,
															"name": "mcr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "1143:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"id": 177,
															"name": "desiredMCR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "1148:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"id": 178,
															"name": "mcrFloor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 99,
															"src": "1160:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"id": 179,
															"name": "gearedMCR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "1170:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 180,
															"name": "totalSumAssured",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "1181:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 175,
														"name": "MCRUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "1132:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1132:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 182,
												"nodeType": "EmitStatement",
												"src": "1127:70:1"
											}
										]
									},
									"id": 184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateMCR",
									"nameLocation": "676:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "686:2:1"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "698:0:1"
									},
									"scope": 217,
									"src": "667:535:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 206,
										"nodeType": "Block",
										"src": "1266:169:1",
										"statements": [
											{
												"assignments": [
													191
												],
												"declarations": [
													{
														"constant": false,
														"id": 191,
														"mutability": "mutable",
														"name": "_cover",
														"nameLocation": "1280:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 206,
														"src": "1273:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ICover_$308",
															"typeString": "contract ICover"
														},
														"typeName": {
															"id": 190,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 189,
																"name": "ICover",
																"nameLocations": [
																	"1273:6:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 308,
																"src": "1273:6:1"
															},
															"referencedDeclaration": 308,
															"src": "1273:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICover_$308",
																"typeString": "contract ICover"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 197,
												"initialValue": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 193,
																	"name": "master",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 96,
																	"src": "1296:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Master_$82",
																		"typeString": "contract Master"
																	}
																},
																"id": 194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1303:12:1",
																"memberName": "CoverAddress",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 19,
																"src": "1296:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																	"typeString": "function () view external returns (address)"
																}
															},
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1296:21:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 192,
														"name": "ICover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "1289:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ICover_$308_$",
															"typeString": "type(contract ICover)"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1289:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ICover_$308",
														"typeString": "contract ICover"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1273:45:1"
											},
											{
												"assignments": [
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 199,
														"mutability": "mutable",
														"name": "totalActiveCoverAmountInEth",
														"nameLocation": "1330:27:1",
														"nodeType": "VariableDeclaration",
														"scope": 206,
														"src": "1325:32:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 198,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1325:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 203,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 200,
															"name": "_cover",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "1360:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICover_$308",
																"typeString": "contract ICover"
															}
														},
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1367:21:1",
														"memberName": "totalActiveCoverInETH",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 294,
														"src": "1360:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1360:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1325:65:1"
											},
											{
												"expression": {
													"id": 204,
													"name": "totalActiveCoverAmountInEth",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 199,
													"src": "1403:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 188,
												"id": 205,
												"nodeType": "Return",
												"src": "1396:34:1"
											}
										]
									},
									"functionSelector": "b3452487",
									"id": 207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllSumAssurance",
									"nameLocation": "1218:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1236:2:1"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1260:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1260:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1259:6:1"
									},
									"scope": 217,
									"src": "1209:226:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										358
									],
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "2148:219:1",
										"statements": [
											{
												"expression": {
													"id": 213,
													"name": "desiredMCR",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 103,
													"src": "2352:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"functionReturnParameters": 212,
												"id": 214,
												"nodeType": "Return",
												"src": "2345:17:1"
											}
										]
									},
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "1440:660:1",
										"text": " @dev Calculates the current virtual MCR value. The virtual MCR value moves towards the desiredMCR value away\n from the stored mcr value at constant velocity based on how much time passed from the lastUpdateTime.\n The total change in virtual MCR cannot exceed 1% of stored mcr.\n This approach allows for the MCR to change smoothly across time without sudden jumps between values, while\n always progressing towards the desiredMCR goal. The desiredMCR can change subject to the call of _updateMCR\n so the virtual MCR value may change direction and start decreasing instead of increasing or vice-versa.\n @return mcr"
									},
									"functionSelector": "44936b10",
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMCR",
									"nameLocation": "2112:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2118:2:1"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "2142:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2142:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2141:6:1"
									},
									"scope": 217,
									"src": "2103:264:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 218,
							"src": "193:2177:1",
							"usedErrors": []
						}
					],
					"src": "2:2368:1"
				},
				"id": 1
			},
			"contracts/interfaces/ICover.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/ICover.sol",
					"exportedSymbols": {
						"BuyCoverParams": [
							237
						],
						"CoverData": [
							260
						],
						"ICover": [
							308
						],
						"ICoverNFT": [
							352
						],
						"IERC165": [
							677
						],
						"IERC721": [
							665
						]
					},
					"id": 309,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 219,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:2"
						},
						{
							"absolutePath": "contracts/interfaces/ICoverNFT.sol",
							"file": "./ICoverNFT.sol",
							"id": 220,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 309,
							"sourceUnit": 353,
							"src": "25:25:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"canonicalName": "BuyCoverParams",
							"id": 237,
							"members": [
								{
									"constant": false,
									"id": 222,
									"mutability": "mutable",
									"name": "token0",
									"nameLocation": "88:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 237,
									"src": "80:14:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 221,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "80:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 224,
									"mutability": "mutable",
									"name": "token1",
									"nameLocation": "108:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 237,
									"src": "100:14:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 223,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "100:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 226,
									"mutability": "mutable",
									"name": "token1Qty",
									"nameLocation": "125:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 237,
									"src": "120:14:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 225,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "120:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 228,
									"mutability": "mutable",
									"name": "token0Qty",
									"nameLocation": "145:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 237,
									"src": "140:14:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 227,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "140:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 230,
									"mutability": "mutable",
									"name": "lowerBoundRatio",
									"nameLocation": "165:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 237,
									"src": "160:20:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 229,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "160:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 232,
									"mutability": "mutable",
									"name": "upperBoundRatio",
									"nameLocation": "191:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 237,
									"src": "186:20:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 231,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "186:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 234,
									"mutability": "mutable",
									"name": "period",
									"nameLocation": "217:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 237,
									"src": "212:11:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 233,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "212:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 236,
									"mutability": "mutable",
									"name": "pairStr",
									"nameLocation": "236:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 237,
									"src": "229:14:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 235,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "229:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "BuyCoverParams",
							"nameLocation": "59:14:2",
							"nodeType": "StructDefinition",
							"scope": 309,
							"src": "52:194:2",
							"visibility": "public"
						},
						{
							"canonicalName": "CoverData",
							"id": 260,
							"members": [
								{
									"constant": false,
									"id": 239,
									"mutability": "mutable",
									"name": "amountPaidOut",
									"nameLocation": "277:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 260,
									"src": "269:21:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 238,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "269:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 241,
									"mutability": "mutable",
									"name": "totalClaimAmount",
									"nameLocation": "302:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 260,
									"src": "294:24:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 240,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "294:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 243,
									"mutability": "mutable",
									"name": "start",
									"nameLocation": "330:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 260,
									"src": "322:13:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 242,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "322:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 245,
									"mutability": "mutable",
									"name": "period",
									"nameLocation": "347:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 260,
									"src": "339:14:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 244,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "339:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 247,
									"mutability": "mutable",
									"name": "token0",
									"nameLocation": "380:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 260,
									"src": "372:14:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 246,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "372:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 249,
									"mutability": "mutable",
									"name": "token1",
									"nameLocation": "400:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 260,
									"src": "392:14:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 248,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "392:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 251,
									"mutability": "mutable",
									"name": "token0Qty",
									"nameLocation": "420:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 260,
									"src": "412:17:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 250,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "412:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 253,
									"mutability": "mutable",
									"name": "token1Qty",
									"nameLocation": "443:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 260,
									"src": "435:17:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 252,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "435:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 255,
									"mutability": "mutable",
									"name": "lowerBoundRatio",
									"nameLocation": "466:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 260,
									"src": "458:23:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 254,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "458:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 257,
									"mutability": "mutable",
									"name": "upperBoundRatio",
									"nameLocation": "495:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 260,
									"src": "487:23:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 256,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "487:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 259,
									"mutability": "mutable",
									"name": "pairStr",
									"nameLocation": "523:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 260,
									"src": "516:14:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 258,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "516:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "CoverData",
							"nameLocation": "255:9:2",
							"nodeType": "StructDefinition",
							"scope": 309,
							"src": "248:285:2",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ICover",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 308,
							"linearizedBaseContracts": [
								308
							],
							"name": "ICover",
							"nameLocation": "547:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "a71467a8",
									"id": 268,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "buyCover",
									"nameLocation": "642:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "675:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "651:30:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BuyCoverParams_$237_calldata_ptr",
													"typeString": "struct BuyCoverParams"
												},
												"typeName": {
													"id": 262,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 261,
														"name": "BuyCoverParams",
														"nameLocations": [
															"651:14:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 237,
														"src": "651:14:2"
													},
													"referencedDeclaration": 237,
													"src": "651:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BuyCoverParams_$237_storage_ptr",
														"typeString": "struct BuyCoverParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "650:32:2"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "coverId",
												"nameLocation": "714:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "709:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "709:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:14:2"
									},
									"scope": 308,
									"src": "633:90:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6c57b95d",
									"id": 276,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "coverPrice",
									"nameLocation": "738:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "773:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "749:30:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BuyCoverParams_$237_calldata_ptr",
													"typeString": "struct BuyCoverParams"
												},
												"typeName": {
													"id": 270,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 269,
														"name": "BuyCoverParams",
														"nameLocations": [
															"749:14:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 237,
														"src": "749:14:2"
													},
													"referencedDeclaration": 237,
													"src": "749:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BuyCoverParams_$237_storage_ptr",
														"typeString": "struct BuyCoverParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "748:32:2"
									},
									"returnParameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "804:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "799:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 273,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "799:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:12:2"
									},
									"scope": 308,
									"src": "729:82:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "404730f4",
									"id": 281,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "coverDataCount",
									"nameLocation": "986:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1000:2:2"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "count",
												"nameLocation": "1031:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "1026:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1026:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1025:12:2"
									},
									"scope": 308,
									"src": "977:61:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "00407d2a",
									"id": 289,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCoverData",
									"nameLocation": "1053:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "coverId",
												"nameLocation": "1071:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1066:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1066:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1065:14:2"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "coverData",
												"nameLocation": "1120:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1103:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_CoverData_$260_memory_ptr",
													"typeString": "struct CoverData"
												},
												"typeName": {
													"id": 286,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 285,
														"name": "CoverData",
														"nameLocations": [
															"1103:9:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 260,
														"src": "1103:9:2"
													},
													"referencedDeclaration": 260,
													"src": "1103:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CoverData_$260_storage_ptr",
														"typeString": "struct CoverData"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1102:28:2"
									},
									"scope": 308,
									"src": "1044:87:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ed3b657a",
									"id": 294,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalActiveCoverInETH",
									"nameLocation": "1145:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1166:2:2"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "1191:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1191:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1190:6:2"
									},
									"scope": 308,
									"src": "1136:61:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4b61a44b",
									"id": 299,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decActiveCoverInETH",
									"nameLocation": "1211:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "1231:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1231:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1230:7:2"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1246:0:2"
									},
									"scope": 308,
									"src": "1202:45:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"errorSelector": "f244866f",
									"id": 301,
									"name": "InsufficientEthSent",
									"nameLocation": "1279:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1298:2:2"
									},
									"src": "1273:28:2"
								},
								{
									"errorSelector": "ab1ee9bf",
									"id": 303,
									"name": "SendingEthToPoolFailed",
									"nameLocation": "1312:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1334:2:2"
									},
									"src": "1306:31:2"
								},
								{
									"errorSelector": "204633a4",
									"id": 305,
									"name": "SendingEthToCommissionDestinationFailed",
									"nameLocation": "1348:39:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1387:2:2"
									},
									"src": "1342:48:2"
								},
								{
									"errorSelector": "cd57d4da",
									"id": 307,
									"name": "ReturningEthRemainderToSenderFailed",
									"nameLocation": "1401:35:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1436:2:2"
									},
									"src": "1395:44:2"
								}
							],
							"scope": 309,
							"src": "537:904:2",
							"usedErrors": [
								301,
								303,
								305,
								307
							]
						}
					],
					"src": "0:1441:2"
				},
				"id": 2
			},
			"contracts/interfaces/ICoverNFT.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/ICoverNFT.sol",
					"exportedSymbols": {
						"ICoverNFT": [
							352
						],
						"IERC165": [
							677
						],
						"IERC721": [
							665
						]
					},
					"id": 353,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
							"id": 310,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 353,
							"sourceUnit": 666,
							"src": "1:111:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 311,
										"name": "IERC721",
										"nameLocations": [
											"137:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 665,
										"src": "137:7:3"
									},
									"id": 312,
									"nodeType": "InheritanceSpecifier",
									"src": "137:7:3"
								}
							],
							"canonicalName": "ICoverNFT",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 352,
							"linearizedBaseContracts": [
								352,
								665,
								677
							],
							"name": "ICoverNFT",
							"nameLocation": "124:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "430c2081",
									"id": 321,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedOrOwner",
									"nameLocation": "159:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "185:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "177:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "177:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "199:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "194:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "194:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "176:31:3"
									},
									"returnParameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "226:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 318,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "226:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "225:6:3"
									},
									"scope": 352,
									"src": "150:82:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6a627842",
									"id": 328,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "247:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "260:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "252:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "252:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "251:12:3"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "287:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "282:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "282:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "281:14:3"
									},
									"scope": 352,
									"src": "238:58:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 333,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "343:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "354:2:3"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "380:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "380:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:6:3"
									},
									"scope": 352,
									"src": "334:52:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"errorSelector": "7c214f04",
									"id": 335,
									"name": "NotOperator",
									"nameLocation": "398:11:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "409:2:3"
									},
									"src": "392:20:3"
								},
								{
									"errorSelector": "4d5e5fb3",
									"id": 337,
									"name": "NotMinted",
									"nameLocation": "423:9:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "432:2:3"
									},
									"src": "417:18:3"
								},
								{
									"errorSelector": "c6de3f25",
									"id": 339,
									"name": "WrongFrom",
									"nameLocation": "446:9:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "455:2:3"
									},
									"src": "440:18:3"
								},
								{
									"errorSelector": "9c8d2cd2",
									"id": 341,
									"name": "InvalidRecipient",
									"nameLocation": "469:16:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "485:2:3"
									},
									"src": "463:25:3"
								},
								{
									"errorSelector": "0ae7cb04",
									"id": 343,
									"name": "InvalidNewOperatorAddress",
									"nameLocation": "499:25:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "524:2:3"
									},
									"src": "493:34:3"
								},
								{
									"errorSelector": "edb7f571",
									"id": 345,
									"name": "InvalidNewNFTDescriptorAddress",
									"nameLocation": "538:30:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "568:2:3"
									},
									"src": "532:39:3"
								},
								{
									"errorSelector": "ea8e4eb5",
									"id": 347,
									"name": "NotAuthorized",
									"nameLocation": "582:13:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "595:2:3"
									},
									"src": "576:22:3"
								},
								{
									"errorSelector": "3da63931",
									"id": 349,
									"name": "UnsafeRecipient",
									"nameLocation": "609:15:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "624:2:3"
									},
									"src": "603:24:3"
								},
								{
									"errorSelector": "ddefae28",
									"id": 351,
									"name": "AlreadyMinted",
									"nameLocation": "638:13:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "651:2:3"
									},
									"src": "632:22:3"
								}
							],
							"scope": 353,
							"src": "114:728:3",
							"usedErrors": [
								335,
								337,
								339,
								341,
								343,
								345,
								347,
								349,
								351
							]
						}
					],
					"src": "1:841:3"
				},
				"id": 3
			},
			"contracts/interfaces/IMCR.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IMCR.sol",
					"exportedSymbols": {
						"IMCR": [
							362
						]
					},
					"id": 363,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMCR",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 362,
							"linearizedBaseContracts": [
								362
							],
							"name": "IMCR",
							"nameLocation": "10:4:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "44936b10",
									"id": 358,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMCR",
									"nameLocation": "29:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35:2:4"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "61:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "61:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60:6:4"
									},
									"scope": 362,
									"src": "20:47:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "aa5da046",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateMCRInternal",
									"nameLocation": "81:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "98:2:4"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "109:0:4"
									},
									"scope": 362,
									"src": "72:38:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 363,
							"src": "0:112:4",
							"usedErrors": []
						}
					],
					"src": "0:112:4"
				},
				"id": 4
			},
			"contracts/libraries/Math.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/Math.sol",
					"exportedSymbols": {
						"Math": [
							548
						]
					},
					"id": 549,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 364,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 365,
								"nodeType": "StructuredDocumentation",
								"src": "68:82:5",
								"text": " @dev Simple library that defines min, max and babylonian sqrt functions"
							},
							"fullyImplemented": true,
							"id": 548,
							"linearizedBaseContracts": [
								548
							],
							"name": "Math",
							"nameLocation": "159:4:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "227:31:5",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 374,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "240:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 375,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "244:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "240:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 378,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "252:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "240:13:5",
													"trueExpression": {
														"id": 377,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "248:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 373,
												"id": 380,
												"nodeType": "Return",
												"src": "233:20:5"
											}
										]
									},
									"id": 382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "178:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "187:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "182:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "182:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "195:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "190:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "190:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "181:16:5"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "221:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "221:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "220:6:5"
									},
									"scope": 548,
									"src": "169:89:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "320:31:5",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 391,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "333:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 392,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "337:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "333:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 395,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "345:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "333:13:5",
													"trueExpression": {
														"id": 394,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "341:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 390,
												"id": 397,
												"nodeType": "Return",
												"src": "326:20:5"
											}
										]
									},
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "271:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "280:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "275:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 383,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "275:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "288:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "283:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "283:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "274:16:5"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "314:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "314:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "313:6:5"
									},
									"scope": 548,
									"src": "262:89:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 435,
										"nodeType": "Block",
										"src": "418:142:5",
										"statements": [
											{
												"assignments": [
													408
												],
												"declarations": [
													{
														"constant": false,
														"id": 408,
														"mutability": "mutable",
														"name": "count",
														"nameLocation": "429:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 435,
														"src": "424:10:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 407,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "424:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 411,
												"initialValue": {
													"expression": {
														"id": 409,
														"name": "items",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "437:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "443:6:5",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "437:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "424:25:5"
											},
											{
												"assignments": [
													413
												],
												"declarations": [
													{
														"constant": false,
														"id": 413,
														"mutability": "mutable",
														"name": "total",
														"nameLocation": "460:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 435,
														"src": "455:10:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 412,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "455:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 414,
												"nodeType": "VariableDeclarationStatement",
												"src": "455:10:5"
											},
											{
												"body": {
													"id": 431,
													"nodeType": "Block",
													"src": "505:32:5",
													"statements": [
														{
															"expression": {
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 425,
																	"name": "total",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "513:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 426,
																		"name": "items",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "522:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 428,
																	"indexExpression": {
																		"id": 427,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 416,
																		"src": "528:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "522:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "513:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 430,
															"nodeType": "ExpressionStatement",
															"src": "513:17:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 419,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "489:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 420,
														"name": "count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "493:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "489:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 432,
												"initializationExpression": {
													"assignments": [
														416
													],
													"declarations": [
														{
															"constant": false,
															"id": 416,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "482:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 432,
															"src": "477:6:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 415,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "477:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 418,
													"initialValue": {
														"hexValue": "30",
														"id": 417,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "486:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "477:10:5"
												},
												"loopExpression": {
													"expression": {
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "500:3:5",
														"subExpression": {
															"id": 422,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "500:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 424,
													"nodeType": "ExpressionStatement",
													"src": "500:3:5"
												},
												"nodeType": "ForStatement",
												"src": "472:65:5"
											},
											{
												"expression": {
													"id": 433,
													"name": "total",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 413,
													"src": "550:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 406,
												"id": 434,
												"nodeType": "Return",
												"src": "543:12:5"
											}
										]
									},
									"id": 436,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sum",
									"nameLocation": "364:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "items",
												"nameLocation": "382:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "368:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 400,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "368:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 401,
													"nodeType": "ArrayTypeName",
													"src": "368:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:21:5"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "412:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "412:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "411:6:5"
									},
									"scope": 548,
									"src": "355:205:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 454,
										"nodeType": "Block",
										"src": "627:33:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 445,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 438,
																	"src": "641:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 446,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 440,
																		"src": "645:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 447,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "649:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "645:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "641:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 450,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "640:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 451,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "654:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "640:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 444,
												"id": 453,
												"nodeType": "Return",
												"src": "633:22:5"
											}
										]
									},
									"id": 455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "divRound",
									"nameLocation": "573:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "587:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "582:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "582:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "595:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "590:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 439,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "590:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "581:16:5"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "621:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "621:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "620:6:5"
									},
									"scope": 548,
									"src": "564:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "726:33:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 464,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "740:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 465,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 459,
																		"src": "744:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "740:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "748:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "740:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 469,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "739:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 470,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "753:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "739:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 463,
												"id": 472,
												"nodeType": "Return",
												"src": "732:22:5"
											}
										]
									},
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "divCeil",
									"nameLocation": "673:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "686:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "681:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "681:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "694:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "689:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 458,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "689:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "680:16:5"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "720:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "720:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "719:6:5"
									},
									"scope": 548,
									"src": "664:95:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "825:35:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 484,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 476,
																"src": "846:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 485,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "849:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 483,
															"name": "divCeil",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "838:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "838:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 487,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 478,
														"src": "854:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "838:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 482,
												"id": 489,
												"nodeType": "Return",
												"src": "831:24:5"
											}
										]
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "roundUp",
									"nameLocation": "772:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "785:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "780:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "780:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "793:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "788:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "788:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "779:16:5"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "819:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "819:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:6:5"
									},
									"scope": 548,
									"src": "763:97:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 546,
										"nodeType": "Block",
										"src": "938:219:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 498,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "949:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "33",
														"id": 499,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "953:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "949:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 536,
												"nodeType": "IfStatement",
												"src": "945:152:5",
												"trueBody": {
													"id": 535,
													"nodeType": "Block",
													"src": "956:141:5",
													"statements": [
														{
															"assignments": [
																502
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 502,
																	"mutability": "mutable",
																	"name": "z",
																	"nameLocation": "969:1:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 535,
																	"src": "964:6:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 501,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "964:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 504,
															"initialValue": {
																"id": 503,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 493,
																"src": "973:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "964:10:5"
														},
														{
															"assignments": [
																506
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 506,
																	"mutability": "mutable",
																	"name": "x",
																	"nameLocation": "987:1:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 535,
																	"src": "982:6:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 505,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "982:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 512,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 507,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 493,
																		"src": "991:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "995:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "991:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "999:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "991:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "982:18:5"
														},
														{
															"body": {
																"id": 531,
																"nodeType": "Block",
																"src": "1022:53:5",
																"statements": [
																	{
																		"expression": {
																			"id": 518,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 516,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 502,
																				"src": "1032:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 517,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 506,
																				"src": "1036:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1032:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 519,
																		"nodeType": "ExpressionStatement",
																		"src": "1032:5:5"
																	},
																	{
																		"expression": {
																			"id": 529,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 520,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 506,
																				"src": "1047:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 528,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 525,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 523,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 521,
																									"name": "y",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 493,
																									"src": "1052:1:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "/",
																								"rightExpression": {
																									"id": 522,
																									"name": "x",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 506,
																									"src": "1056:1:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "1052:5:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"id": 524,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 506,
																								"src": "1060:1:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "1052:9:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 526,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1051:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 527,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1065:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "1051:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1047:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 530,
																		"nodeType": "ExpressionStatement",
																		"src": "1047:19:5"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 515,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 513,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "1015:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 514,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 502,
																	"src": "1019:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1015:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 532,
															"nodeType": "WhileStatement",
															"src": "1008:67:5"
														},
														{
															"expression": {
																"id": 533,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 502,
																"src": "1089:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 497,
															"id": 534,
															"nodeType": "Return",
															"src": "1082:8:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 537,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "1107:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1112:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1107:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 543,
												"nodeType": "IfStatement",
												"src": "1103:35:5",
												"trueBody": {
													"id": 542,
													"nodeType": "Block",
													"src": "1115:23:5",
													"statements": [
														{
															"expression": {
																"hexValue": "31",
																"id": 540,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1130:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"functionReturnParameters": 497,
															"id": 541,
															"nodeType": "Return",
															"src": "1123:8:5"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "30",
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1151:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 497,
												"id": 545,
												"nodeType": "Return",
												"src": "1144:8:5"
											}
										]
									},
									"id": 547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "896:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "906:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "901:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "901:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "900:8:5"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "932:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "932:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:6:5"
									},
									"scope": 548,
									"src": "887:270:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 549,
							"src": "151:1009:5",
							"usedErrors": []
						}
					],
					"src": "42:1119:5"
				},
				"id": 5
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							677
						],
						"IERC721": [
							665
						]
					},
					"id": 666,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 550,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:25:6"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 552,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 666,
							"sourceUnit": 678,
							"src": "135:62:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 551,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 677,
										"src": "143:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 554,
										"name": "IERC165",
										"nameLocations": [
											"288:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 677,
										"src": "288:7:6"
									},
									"id": 555,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:6"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 553,
								"nodeType": "StructuredDocumentation",
								"src": "199:67:6",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 665,
							"linearizedBaseContracts": [
								665,
								677
							],
							"name": "IERC721",
							"nameLocation": "277:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "302:88:6",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 564,
									"name": "Transfer",
									"nameLocation": "401:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "426:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "410:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "448:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "432:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "432:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "468:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "452:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "452:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:67:6"
									},
									"src": "395:82:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "483:94:6",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 573,
									"name": "Approval",
									"nameLocation": "588:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "613:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "597:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "636:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "620:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "662:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "646:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "596:74:6"
									},
									"src": "582:89:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "677:117:6",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 582,
									"name": "ApprovalForAll",
									"nameLocation": "805:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "836:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "820:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "859:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "843:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "843:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "874:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "869:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 579,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "869:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:64:6"
									},
									"src": "799:85:6"
								},
								{
									"documentation": {
										"id": 583,
										"nodeType": "StructuredDocumentation",
										"src": "890:76:6",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 590,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "980:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "998:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "990:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:15:6"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1036:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "1028:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:17:6"
									},
									"scope": 665,
									"src": "971:74:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "1051:131:6",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 598,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1196:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1212:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "1204:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1204:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1203:17:6"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1252:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "1244:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1244:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:15:6"
									},
									"scope": 665,
									"src": "1187:72:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "1265:556:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 610,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1835:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1860:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "1852:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1852:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "1866:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1886:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "1878:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1910:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "1895:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 606,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1895:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1851:64:6"
									},
									"returnParameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1924:0:6"
									},
									"scope": 665,
									"src": "1826:99:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 611,
										"nodeType": "StructuredDocumentation",
										"src": "1931:687:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 620,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2632:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2657:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "2649:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2649:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2671:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "2663:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2663:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2683:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "2675:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2648:43:6"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2700:0:6"
									},
									"scope": 665,
									"src": "2623:78:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 621,
										"nodeType": "StructuredDocumentation",
										"src": "2707:732:6",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 630,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3453:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3474:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "3466:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3488:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "3480:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3480:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3500:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "3492:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3465:43:6"
									},
									"returnParameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3517:0:6"
									},
									"scope": 665,
									"src": "3444:74:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "3524:452:6",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 638,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3990:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4006:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "3998:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3998:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4018:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "4010:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4010:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3997:29:6"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4035:0:6"
									},
									"scope": 665,
									"src": "3981:55:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "4042:309:6",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 646,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4365:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4391:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "4383:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4383:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4406:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "4401:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 642,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4401:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4382:33:6"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4424:0:6"
									},
									"scope": 665,
									"src": "4356:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "4431:139:6",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 654,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4584:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4604:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "4596:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4596:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4595:17:6"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4644:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "4636:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4636:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4635:18:6"
									},
									"scope": 665,
									"src": "4575:79:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "4660:138:6",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 664,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4812:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4837:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "4829:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4829:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4852:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "4844:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4844:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4828:33:6"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "4885:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 661,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4885:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4884:6:6"
									},
									"scope": 665,
									"src": "4803:88:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 666,
							"src": "267:4626:6",
							"usedErrors": []
						}
					],
					"src": "108:4786:6"
				},
				"id": 6
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							677
						]
					},
					"id": 678,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 667,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 668,
								"nodeType": "StructuredDocumentation",
								"src": "126:279:7",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 677,
							"linearizedBaseContracts": [
								677
							],
							"name": "IERC165",
							"nameLocation": "416:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 669,
										"nodeType": "StructuredDocumentation",
										"src": "430:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 676,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "784:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "809:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "802:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 670,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "802:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "801:20:7"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "845:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 673,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "845:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "844:6:7"
									},
									"scope": 677,
									"src": "775:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 678,
							"src": "406:447:7",
							"usedErrors": []
						}
					],
					"src": "100:754:7"
				},
				"id": 7
			}
		}
	}
}
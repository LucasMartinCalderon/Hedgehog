{
	"compiler": {
		"version": "0.8.19+commit.7dd6d404"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "contract ICoverNFT",
						"name": "_coverNFT",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "masterAddress",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "InsufficientEthSent",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ReturningEthRemainderToSenderFailed",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "SendingEthToCommissionDestinationFailed",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "SendingEthToPoolFailed",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "activeCoverAmount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "token0",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "token1",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "token1Qty",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "token0Qty",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "lowerBoundRatio",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "upperBoundRatio",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "period",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "pairStr",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "initialPoolPrice",
								"type": "uint256"
							}
						],
						"internalType": "struct BuyCoverParams",
						"name": "params",
						"type": "tuple"
					}
				],
				"name": "buyCover",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "coverId",
						"type": "uint256"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "token0",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "token1",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "token1Qty",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "token0Qty",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "lowerBoundRatio",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "upperBoundRatio",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "period",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "pairStr",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "initialPoolPrice",
								"type": "uint256"
							}
						],
						"internalType": "struct BuyCoverParams",
						"name": "params",
						"type": "tuple"
					}
				],
				"name": "coverAmountInETH",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "coverDataCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "coverNFT",
				"outputs": [
					{
						"internalType": "contract ICoverNFT",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "token0",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "token1",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "token1Qty",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "token0Qty",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "lowerBoundRatio",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "upperBoundRatio",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "period",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "pairStr",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "initialPoolPrice",
								"type": "uint256"
							}
						],
						"internalType": "struct BuyCoverParams",
						"name": "params",
						"type": "tuple"
					}
				],
				"name": "coverPrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "dec",
						"type": "uint256"
					}
				],
				"name": "decActiveCoverInETH",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "coverid",
						"type": "uint256"
					}
				],
				"name": "getCoverData",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "amountPaidOut",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "totalClaimAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "start",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "period",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "token0",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "token1",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "token0Qty",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "token1Qty",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "lowerBoundRatio",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "upperBoundRatio",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "pairStr",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "initialPoolPrice",
								"type": "uint256"
							}
						],
						"internalType": "struct CoverData",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "x",
						"type": "address"
					}
				],
				"name": "getLiveDataUniswap",
				"outputs": [
					{
						"internalType": "uint160",
						"name": "",
						"type": "uint160"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "x",
						"type": "address"
					}
				],
				"name": "getUnitPX",
				"outputs": [
					{
						"internalType": "int256",
						"name": "",
						"type": "int256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "master",
				"outputs": [
					{
						"internalType": "contract Master",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalActiveCoverInETH",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/cover/Cover.sol": "Cover"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
			"keccak256": "0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846",
			"license": "MIT",
			"urls": [
				"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7",
				"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c"
			]
		},
		"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
			"keccak256": "0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5",
				"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh"
			]
		},
		"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
			"keccak256": "0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5",
				"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ"
			]
		},
		"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
			"keccak256": "0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7",
				"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c"
			]
		},
		"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
			"keccak256": "0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03",
				"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39"
			]
		},
		"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
			"keccak256": "0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047",
				"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3"
			]
		},
		"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
			"keccak256": "0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735",
				"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"
			]
		},
		"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
			"keccak256": "0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f",
				"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg"
			]
		},
		"contracts/Master.sol": {
			"keccak256": "0x3d3184b9516122e6fb70e4b5d512b6a0219abe38c4792b9cbf382dbffb880c65",
			"urls": [
				"bzz-raw://e1bb612708fc4fd742569a13ff47a2b359e21044f201e7eb99316a25c648203a",
				"dweb:/ipfs/QmZZwWpCLopjSVdjPNR1LxxrBXp7wFEgmqzYuQUQFh1z6J"
			]
		},
		"contracts/cover/Cover.sol": {
			"keccak256": "0x53107efefcff4067a406d9f1b3581807bc8d685277c1a2549d9c41f98a1816b5",
			"urls": [
				"bzz-raw://41be9f4e1c555721a1f68109632830dc8a6656ed01bb54c8ac16b3ba661fe491",
				"dweb:/ipfs/QmSVMfESdzXACt3QAN7jREDy7QeyR1U7iYsRxdeZQP3bQg"
			]
		},
		"contracts/interfaces/ICover.sol": {
			"keccak256": "0x19d03f7e84362ae7fe3dc52f5cc6e15a5de042405538966fcc5e5e441e1cc531",
			"urls": [
				"bzz-raw://40e1b2e6a36d3d3f1f115c7cb2658d71462d6ea7f0c23377dacd0f227e9a5e5f",
				"dweb:/ipfs/QmV9qZc4dXrX3sABnVdYfabu3gYyZR1TJJW7kLG6Rom2QX"
			]
		},
		"contracts/interfaces/ICoverNFT.sol": {
			"keccak256": "0x79d602e1cd332d73b59651d0af301a23071e4ca225097b24d80f9947393e2582",
			"urls": [
				"bzz-raw://a8b78909a6db032e68906729c03fb6e3b8183264fc34fe4009c4c0a598a00a7a",
				"dweb:/ipfs/QmaGEKqDiifEftwiPbBEnaduhZzUwzEBbj89xEdzkx1iB7"
			]
		},
		"contracts/interfaces/IMCR.sol": {
			"keccak256": "0xfe501e970cfca32e379ff35233f5c149a6b84345e2d76cc4e9d3f351ae9c9317",
			"urls": [
				"bzz-raw://8c67be9e233b4f1f26aee5cbbd19a0b65d64b5a416089940498e906347753317",
				"dweb:/ipfs/QmS1D3y8xGr11FpZu51KzbFTHrwYYMMAk3mazP4mCZW8VJ"
			]
		},
		"contracts/interfaces/IPool.sol": {
			"keccak256": "0x4f981cd82fa7f4289d185d8b5c307a7626328196619922bf638f0214bcd42f23",
			"urls": [
				"bzz-raw://6446bfc6a64d4ebfdc35a4757c7eaf735b80bc69d07021428b97d51ac11b63ea",
				"dweb:/ipfs/QmXdu5Dtjj9eW2bCe3Q5VBEfMivRYxgPwMgwVLbUQgXRzp"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol": {
			"keccak256": "0x55036158b0f3523fa36f2a576743f39dd46bb84bee57e51cd2406c906638cea2",
			"license": "MIT",
			"urls": [
				"bzz-raw://9c5558c241a34b3fa54c848d99844850c88b03869b47e1fc05f6f261c54aaa35",
				"dweb:/ipfs/QmbeeMn9RKhT8DmEvDCNdfiDGtDw1YVB2D5HTLqTzefYPb"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0x39194d726021816f8a5f2b821574349a4884833cf841378dc8e6862e5f789ed6",
			"license": "MIT",
			"urls": [
				"bzz-raw://08cfffa942e4589c4d927db3fecfea998e9486ff41f48ee905fdda34d152a846",
				"dweb:/ipfs/QmQKwHL48iBd5XzRAnSNnGBXo6Ykt22iADEReEusX1SQvK"
			]
		}
	},
	"version": 1
}
{
	"id": "864652980dbfc5edb77384d728cae756",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/cover/Cover.sol": {
				"content": "pragma solidity ^0.8.*;\nimport \"../interfaces/ICover.sol\";\nimport \"../Master.sol\";\nimport \"../interfaces/IPool.sol\";\nimport \"../interfaces/IMCR.sol\";\n\nimport \"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\n// Task 1: input spec, display price, pay to mint a CoverNFT and list CoverNFTs \n\nuint32 constant ETH_ASSET_ID = 0;\nuint32 constant commissionRate = 101; // 1%\n\ncontract Cover is ICover{\n\n    mapping(uint => CoverData) private _coverData;\n\n    // mapping(uint => CoverSegment[]) private _coverSegments;\n    uint256 public activeCoverAmount ;\n    Master public master;\n    ICoverNFT public  coverNFT;\n\n    constructor(\n        ICoverNFT _coverNFT,\n        address masterAddress\n    ) {\n        // in constructor we only initialize immutable fields\n        coverNFT = _coverNFT;\n        activeCoverAmount = 0;\n        master = Master(masterAddress);\n    }\n    function getCoverData(uint coverid) external view returns  (CoverData memory ) {\n        return _coverData[coverid];\n    }\n    function buyCover(BuyCoverParams calldata params) external payable returns (uint coverId){\n        \n        \n        coverId = coverNFT.mint(msg.sender);\n        _coverData[coverId] = CoverData(0, coverAmountInETH(params),// cover amount in cover asset\n            block.timestamp, // start\n            params.period, // period);\n            params.token0,\n            params.token1,\n            params.token0Qty,\n            params.token1Qty,\n            params.lowerBoundRatio,\n            params.upperBoundRatio,\n            params.pairStr,\n            params.initialPoolPrice\n        );\n        uint premiumToPay = coverPrice(params);\n        retrievePayment(premiumToPay,ETH_ASSET_ID);\n        activeCoverAmount += _coverData[coverId].totalClaimAmount;\n        IMCR mcr = IMCR(master.MCRAddress());\n        mcr.updateMCRInternal();\n\n    }\n    function coverDataCount() public view returns (uint ){\n        return coverNFT.totalSupply();\n    }\n    function coverAmountInETH(BuyCoverParams calldata params) public  returns (uint amount){\n        return 1000000000000;\n    }\n    function coverPrice(BuyCoverParams calldata params) public returns (uint price){\n         \n        return 1000000000000;\n    } // oracle is not involved\n    function retrievePayment(uint premiumInPaymentAsset, uint paymentAsset) internal returns (bool success){\n\n        IPool _pool = pool();\n        if (paymentAsset == ETH_ASSET_ID) {\n        uint premiumWithCommission = commissionRate*premiumInPaymentAsset/100;\n            if (msg.value < premiumInPaymentAsset) {\n                revert InsufficientEthSent();\n        }\n\n\n        uint remainder = msg.value - premiumWithCommission;\n      {\n        // send premium in eth to the pool\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool ok, /* data */) = address(_pool).call{value: premiumInPaymentAsset}(\"\");\n        if (!ok) {\n          revert SendingEthToPoolFailed();\n        }\n      }\n\n      // send commission\n      if (premiumWithCommission - premiumInPaymentAsset > 0) {\n        (bool ok, /* data */) = address(master.CommissionDestination()).call{value: premiumWithCommission - premiumInPaymentAsset}(\"\");\n        if (!ok) {\n          revert SendingEthToCommissionDestinationFailed();\n        }\n      }\n\n      if (remainder > 0) {\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool ok, /* data */) = address(msg.sender).call{value: remainder}(\"\");\n        if (!ok) {\n          revert ReturningEthRemainderToSenderFailed();\n        }\n      }\n    \n    } // pay premium to Pool\n\n    }\n\n    function decActiveCoverInETH(uint dec) public {\n       activeCoverAmount -= dec;\n    }\n    function totalActiveCoverInETH() public view returns (uint256){\n        return activeCoverAmount;\n    }\n\n    function pool() internal view returns (IPool) {\n        return IPool(master.PoolAddress());\n    }\n\n    function getLiveDataUniswap(address x) public view returns (uint160){\n          (uint160 sqrtPX, , , , , , ) = IUniswapV3Pool(x).slot0();\n          return sqrtPX;\n    }\n  \n    function getUnitPX(address x) public view returns (int){\n        (,int unitPX,,,)= AggregatorV3Interface(x).latestRoundData();\n        return unitPX;\n    }\n  }\n"
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(uint80 _roundId)\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\nimport './pool/IUniswapV3PoolImmutables.sol';\nimport './pool/IUniswapV3PoolState.sol';\nimport './pool/IUniswapV3PoolDerivedState.sol';\nimport './pool/IUniswapV3PoolActions.sol';\nimport './pool/IUniswapV3PoolOwnerActions.sol';\nimport './pool/IUniswapV3PoolEvents.sol';\n\n/// @title The interface for a Uniswap V3 Pool\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n/// to the ERC20 specification\n/// @dev The pool interface is broken up into many smaller pieces\ninterface IUniswapV3Pool is\n    IUniswapV3PoolImmutables,\n    IUniswapV3PoolState,\n    IUniswapV3PoolDerivedState,\n    IUniswapV3PoolActions,\n    IUniswapV3PoolOwnerActions,\n    IUniswapV3PoolEvents\n{\n\n}\n"
			},
			"contracts/interfaces/IMCR.sol": {
				"content": "interface IMCR{\n    function getMCR() view external returns (uint);\n    function updateMCRInternal() external;\n}"
			},
			"contracts/interfaces/IPool.sol": {
				"content": "interface IPool {\n    function buyHEDH(uint minTokensOut) external payable;\n    function sellHEDH(uint tokenAmount, uint minEthOut) external;\n    function sendPayout(address payable payoutAddress, uint amount) external;\n}"
			},
			"contracts/Master.sol": {
				"content": "pragma solidity ^0.8.0;\n\ncontract Master {\n    address public  PoolAddress = address(0x0);\n    address public  CommissionDestination = address(0x0);\n    address public  CoverAddress = address(0x0);\n    address public  MCRAddress = address(0x0);\n    address public  AssessmentAddress = address(0x0);\n\n    function setPoolAddress (address x) public {\n        PoolAddress = x;\n    }\n    function setCommissionDestination (address x) public{\n        CommissionDestination = x;\n    }\n    function setCoverAddress (address x) public {\n        CoverAddress = x;\n    }\n    function setMCRAddress (address x) public {\n        MCRAddress = x;\n    }\n    function setAssessmentAddress(address x) public {\n        AssessmentAddress = x;\n    }\n}"
			},
			"contracts/interfaces/ICover.sol": {
				"content": "pragma solidity >=0.5.0;\nimport \"./ICoverNFT.sol\";\n\nstruct BuyCoverParams {\n    address token0; // eth address\n    address token1; // pool address\n    uint token1Qty;\n    uint token0Qty;\n    uint lowerBoundRatio;\n    uint upperBoundRatio;\n    uint period;\n    string pairStr;\n    uint initialPoolPrice;\n}\n\nstruct CoverData {\n  uint256 amountPaidOut;\n  uint256 totalClaimAmount;\n  uint256 start;\n  uint256 period; // seconds\n \n    address token0;\n    address token1;\n    uint256 token0Qty;\n    uint256 token1Qty;\n\n    uint256 lowerBoundRatio;\n    uint256 upperBoundRatio;\n    string pairStr;\n    uint initialPoolPrice;\n}\n\n\n\ninterface ICover {\n    //mapping(uint => CoverData) private _coverData; _coverData[coverId]\n    function buyCover(BuyCoverParams calldata params) external payable returns (uint coverId); \n    function coverPrice(BuyCoverParams calldata params) external returns (uint price); // oracle is not involved\n    // function retrievePayment(uint premiumInPaymentAsset, uint paymentAsset) external returns (bool success); // pay premium to Pool\n    function coverDataCount() external view returns (uint count);\n\n    function getCoverData(uint coverId) external view returns (CoverData memory coverData);\n    function totalActiveCoverInETH()external view returns (uint);\n    function decActiveCoverInETH(uint ) external;\n    // ETH transfers\n    error InsufficientEthSent();\n    error SendingEthToPoolFailed();\n    error SendingEthToCommissionDestinationFailed();\n    error ReturningEthRemainderToSenderFailed();\n}"
			},
			"contracts/interfaces/ICoverNFT.sol": {
				"content": "\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol\";\n\ninterface ICoverNFT is IERC721{\n    function isApprovedOrOwner(address spender, uint tokenId) external returns (bool);\n\n    function mint(address to) external returns (uint tokenId); // coverdata is stored in Cover \n    function totalSupply() external view returns (uint);\n\n    error NotOperator();\n    error NotMinted();\n    error WrongFrom();\n    error InvalidRecipient();\n    error InvalidNewOperatorAddress();\n    error InvalidNewNFTDescriptorAddress();\n    error NotAuthorized();\n    error UnsafeRecipient();\n    error AlreadyMinted();\n    // function changeOperator(address newOperator) external;\n\n    // function totalSupply() external view returns (uint);\n\n    // function name() external view returns (string memory);\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\n\npragma solidity >= 0.8.0;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Events emitted by a pool\n/// @notice Contains all events emitted by the pool\ninterface IUniswapV3PoolEvents {\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\n\n    /// @notice Emitted when liquidity is minted for a given position\n    /// @param sender The address that minted the liquidity\n    /// @param owner The owner of the position and recipient of any minted liquidity\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity minted to the position range\n    /// @param amount0 How much token0 was required for the minted liquidity\n    /// @param amount1 How much token1 was required for the minted liquidity\n    event Mint(\n        address sender,\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted when fees are collected by the owner of a position\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n    /// @param owner The owner of the position for which fees are collected\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount0 The amount of token0 fees collected\n    /// @param amount1 The amount of token1 fees collected\n    event Collect(\n        address indexed owner,\n        address recipient,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount0,\n        uint128 amount1\n    );\n\n    /// @notice Emitted when a position's liquidity is removed\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n    /// @param owner The owner of the position for which liquidity is removed\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity to remove\n    /// @param amount0 The amount of token0 withdrawn\n    /// @param amount1 The amount of token1 withdrawn\n    event Burn(\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted by the pool for any swaps between token0 and token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the output of the swap\n    /// @param amount0 The delta of the token0 balance of the pool\n    /// @param amount1 The delta of the token1 balance of the pool\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n    /// @param liquidity The liquidity of the pool after the swap\n    /// @param tick The log base 1.0001 of price of the pool after the swap\n    event Swap(\n        address indexed sender,\n        address indexed recipient,\n        int256 amount0,\n        int256 amount1,\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        int24 tick\n    );\n\n    /// @notice Emitted by the pool for any flashes of token0/token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the tokens from flash\n    /// @param amount0 The amount of token0 that was flashed\n    /// @param amount1 The amount of token1 that was flashed\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\n    event Flash(\n        address indexed sender,\n        address indexed recipient,\n        uint256 amount0,\n        uint256 amount1,\n        uint256 paid0,\n        uint256 paid1\n    );\n\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n    /// just before a mint/swap/burn.\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\n    event IncreaseObservationCardinalityNext(\n        uint16 observationCardinalityNextOld,\n        uint16 observationCardinalityNextNew\n    );\n\n    /// @notice Emitted when the protocol fee is changed by the pool\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\n\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\n    /// @param sender The address that collects the protocol fees\n    /// @param recipient The address that receives the collected protocol fees\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissioned pool actions\n/// @notice Contains pool methods that may only be called by the factory owner\ninterface IUniswapV3PoolOwnerActions {\n    /// @notice Set the denominator of the protocol's % share of the fees\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\n\n    /// @notice Collect the protocol fee accrued to the pool\n    /// @param recipient The address to which collected protocol fees should be sent\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n    /// @return amount0 The protocol fee collected in token0\n    /// @return amount1 The protocol fee collected in token1\n    function collectProtocol(\n        address recipient,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissionless pool actions\n/// @notice Contains pool methods that can be called by anyone\ninterface IUniswapV3PoolActions {\n    /// @notice Sets the initial price for the pool\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\n    function initialize(uint160 sqrtPriceX96) external;\n\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\n    /// @param recipient The address for which the liquidity will be created\n    /// @param tickLower The lower tick of the position in which to add liquidity\n    /// @param tickUpper The upper tick of the position in which to add liquidity\n    /// @param amount The amount of liquidity to mint\n    /// @param data Any data that should be passed through to the callback\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    function mint(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount,\n        bytes calldata data\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Collects tokens owed to a position\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n    /// @param recipient The address which should receive the fees collected\n    /// @param tickLower The lower tick of the position for which to collect fees\n    /// @param tickUpper The upper tick of the position for which to collect fees\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n    /// @dev Fees must be collected separately via a call to #collect\n    /// @param tickLower The lower tick of the position for which to burn liquidity\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\n    /// @param amount How much liquidity to burn\n    /// @return amount0 The amount of token0 sent to the recipient\n    /// @return amount1 The amount of token1 sent to the recipient\n    function burn(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Swap token0 for token1, or token1 for token0\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n    /// @param recipient The address to receive the output of the swap\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\n    /// @param data Any data to be passed through to the callback\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\n    function swap(\n        address recipient,\n        bool zeroForOne,\n        int256 amountSpecified,\n        uint160 sqrtPriceLimitX96,\n        bytes calldata data\n    ) external returns (int256 amount0, int256 amount1);\n\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\n    /// @param recipient The address which will receive the token0 and token1 amounts\n    /// @param amount0 The amount of token0 to send\n    /// @param amount1 The amount of token1 to send\n    /// @param data Any data to be passed through to the callback\n    function flash(\n        address recipient,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external;\n\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n    /// the input observationCardinalityNext.\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that is not stored\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n/// blockchain. The functions here may have variable gas costs.\ninterface IUniswapV3PoolDerivedState {\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n    /// you must call it with secondsAgos = [3600, 0].\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n    /// timestamp\n    function observe(uint32[] calldata secondsAgos)\n        external\n        view\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\n\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n    /// snapshot is taken and the second snapshot is taken.\n    /// @param tickLower The lower tick of the range\n    /// @param tickUpper The upper tick of the range\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\n        external\n        view\n        returns (\n            int56 tickCumulativeInside,\n            uint160 secondsPerLiquidityInsideX128,\n            uint32 secondsInside\n        );\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that can change\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\n/// per transaction\ninterface IUniswapV3PoolState {\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n    /// when accessed externally.\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n    /// boundary.\n    /// observationIndex The index of the last oracle observation that was written,\n    /// observationCardinality The current maximum number of observations stored in the pool,\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n    /// feeProtocol The protocol fee for both tokens of the pool.\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n    /// unlocked Whether the pool is currently locked to reentrancy\n    function slot0()\n        external\n        view\n        returns (\n            uint160 sqrtPriceX96,\n            int24 tick,\n            uint16 observationIndex,\n            uint16 observationCardinality,\n            uint16 observationCardinalityNext,\n            uint8 feeProtocol,\n            bool unlocked\n        );\n\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal0X128() external view returns (uint256);\n\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal1X128() external view returns (uint256);\n\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\n    /// @dev Protocol fees will never exceed uint128 max in either token\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\n\n    /// @notice The currently in range liquidity available to the pool\n    /// @dev This value has no relationship to the total liquidity across all ticks\n    function liquidity() external view returns (uint128);\n\n    /// @notice Look up information about a specific tick in the pool\n    /// @param tick The tick to look up\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n    /// tick upper,\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\n    /// a specific position.\n    function ticks(int24 tick)\n        external\n        view\n        returns (\n            uint128 liquidityGross,\n            int128 liquidityNet,\n            uint256 feeGrowthOutside0X128,\n            uint256 feeGrowthOutside1X128,\n            int56 tickCumulativeOutside,\n            uint160 secondsPerLiquidityOutsideX128,\n            uint32 secondsOutside,\n            bool initialized\n        );\n\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\n\n    /// @notice Returns the information about a position by the position's key\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n    /// @return _liquidity The amount of liquidity in the position,\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\n    function positions(bytes32 key)\n        external\n        view\n        returns (\n            uint128 _liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    /// @notice Returns data about a specific observation index\n    /// @param index The element of the observations array to fetch\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n    /// ago, rather than at a specific index in the array.\n    /// @return blockTimestamp The timestamp of the observation,\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\n    function observations(uint256 index)\n        external\n        view\n        returns (\n            uint32 blockTimestamp,\n            int56 tickCumulative,\n            uint160 secondsPerLiquidityCumulativeX128,\n            bool initialized\n        );\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that never changes\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\ninterface IUniswapV3PoolImmutables {\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n    /// @return The contract address\n    function factory() external view returns (address);\n\n    /// @notice The first of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token0() external view returns (address);\n\n    /// @notice The second of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token1() external view returns (address);\n\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\n    /// @return The fee\n    function fee() external view returns (uint24);\n\n    /// @notice The pool tick spacing\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n    /// This value is an int24 to avoid casting even though it is always positive.\n    /// @return The tick spacing\n    function tickSpacing() external view returns (int24);\n\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n    /// @return The max amount of liquidity per tick\n    function maxLiquidityPerTick() external view returns (uint128);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.19;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"IUniswapV3Pool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The pool interface is broken up into many smaller pieces",
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "The interface for a Uniswap V3 Pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"liquidity()": "1a686502",
							"maxLiquidityPerTick()": "70cf754a",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"observations(uint256)": "252c09d7",
							"observe(uint32[])": "883bdbfd",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"setFeeProtocol(uint8,uint8)": "8206a4d1",
							"slot0()": "3850c7bd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2",
							"swap(address,bool,int256,uint160,bytes)": "128acb08",
							"tickBitmap(int16)": "5339c296",
							"tickSpacing()": "d0c93a7c",
							"ticks(int24)": "f30dba93",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":\"IUniswapV3Pool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"IUniswapV3PoolActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							}
						},
						"title": "Permissionless pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"swap(address,bool,int256,uint160,bytes)": "128acb08"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"title\":\"Permissionless pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"}},\"notice\":\"Contains pool methods that can be called by anyone\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":\"IUniswapV3PoolActions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							}
						},
						"notice": "Contains pool methods that can be called by anyone",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"IUniswapV3PoolDerivedState": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							}
						},
						"title": "Pool state that is not stored",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"observe(uint32[])": "883bdbfd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}}},\"title\":\"Pool state that is not stored\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"}},\"notice\":\"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":\"IUniswapV3PoolDerivedState\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							}
						},
						"notice": "Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"IUniswapV3PoolEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						}
					],
					"devdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"title": "Events emitted by a pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":\"IUniswapV3PoolEvents\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {},
						"notice": "Contains all events emitted by the pool",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"IUniswapV3PoolImmutables": {
					"abi": [
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "Pool state that never changes",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"maxLiquidityPerTick()": "70cf754a",
							"tickSpacing()": "d0c93a7c",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":\"IUniswapV3PoolImmutables\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "These parameters are fixed for a pool forever, i.e., the methods will always return the same values",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"IUniswapV3PoolOwnerActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							}
						},
						"title": "Permissioned pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"setFeeProtocol(uint8,uint8)": "8206a4d1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":\"IUniswapV3PoolOwnerActions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							}
						},
						"notice": "Contains pool methods that may only be called by the factory owner",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"IUniswapV3PoolState": {
					"abi": [
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							}
						},
						"title": "Pool state that can change",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"liquidity()": "1a686502",
							"observations(uint256)": "252c09d7",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"slot0()": "3850c7bd",
							"tickBitmap(int16)": "5339c296",
							"ticks(int24)": "f30dba93"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}}},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"}},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":\"IUniswapV3PoolState\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							}
						},
						"notice": "These methods compose the pool's state, and can change with any frequency including multiple times per transaction",
						"version": 1
					}
				}
			},
			"contracts/Master.sol": {
				"Master": {
					"abi": [
						{
							"inputs": [],
							"name": "AssessmentAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "CommissionDestination",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "CoverAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MCRAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PoolAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "x",
									"type": "address"
								}
							],
							"name": "setAssessmentAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "x",
									"type": "address"
								}
							],
							"name": "setCommissionDestination",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "x",
									"type": "address"
								}
							],
							"name": "setCoverAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "x",
									"type": "address"
								}
							],
							"name": "setMCRAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "x",
									"type": "address"
								}
							],
							"name": "setPoolAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Master.sol\":25:731  contract Master {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Master.sol\":85:88  0x0 */\n  0x00\n    /* \"contracts/Master.sol\":47:89  address public  PoolAddress = address(0x0) */\n  dup1\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Master.sol\":143:146  0x0 */\n  0x00\n    /* \"contracts/Master.sol\":95:147  address public  CommissionDestination = address(0x0) */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Master.sol\":192:195  0x0 */\n  0x00\n    /* \"contracts/Master.sol\":153:196  address public  CoverAddress = address(0x0) */\n  0x02\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Master.sol\":239:242  0x0 */\n  0x00\n    /* \"contracts/Master.sol\":202:243  address public  MCRAddress = address(0x0) */\n  0x03\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Master.sol\":293:296  0x0 */\n  0x00\n    /* \"contracts/Master.sol\":249:297  address public  AssessmentAddress = address(0x0) */\n  0x04\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Master.sol\":25:731  contract Master {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Master.sol\":25:731  contract Master {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9ccc903d\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x9ccc903d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe07ee06d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xe67cdafd\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xe9e15b4f\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xff5f1b9f\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x6178cfca\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x7346d3f8\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x75924419\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x7abc3964\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x88ea0751\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Master.sol\":384:478  function setCommissionDestination (address x) public{... */\n    tag_3:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      stop\n        /* \"contracts/Master.sol\":565:638  function setMCRAddress (address x) public {... */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_19:\n      tag_20\n      jump\t// in\n    tag_18:\n      stop\n        /* \"contracts/Master.sol\":643:729  function setAssessmentAddress(address x) public {... */\n    tag_5:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_22:\n      tag_23\n      jump\t// in\n    tag_21:\n      stop\n        /* \"contracts/Master.sol\":95:147  address public  CommissionDestination = address(0x0) */\n    tag_6:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Master.sol\":202:243  address public  MCRAddress = address(0x0) */\n    tag_7:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Master.sol\":47:89  address public  PoolAddress = address(0x0) */\n    tag_8:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Master.sol\":483:560  function setCoverAddress (address x) public {... */\n    tag_9:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n    tag_34:\n      stop\n        /* \"contracts/Master.sol\":153:196  address public  CoverAddress = address(0x0) */\n    tag_10:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Master.sol\":304:379  function setPoolAddress (address x) public {... */\n    tag_11:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n    tag_40:\n      stop\n        /* \"contracts/Master.sol\":249:297  address public  AssessmentAddress = address(0x0) */\n    tag_12:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Master.sol\":384:478  function setCommissionDestination (address x) public{... */\n    tag_17:\n        /* \"contracts/Master.sol\":470:471  x */\n      dup1\n        /* \"contracts/Master.sol\":446:467  CommissionDestination */\n      0x01\n      0x00\n        /* \"contracts/Master.sol\":446:471  CommissionDestination = x */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Master.sol\":384:478  function setCommissionDestination (address x) public{... */\n      pop\n      jump\t// out\n        /* \"contracts/Master.sol\":565:638  function setMCRAddress (address x) public {... */\n    tag_20:\n        /* \"contracts/Master.sol\":630:631  x */\n      dup1\n        /* \"contracts/Master.sol\":617:627  MCRAddress */\n      0x03\n      0x00\n        /* \"contracts/Master.sol\":617:631  MCRAddress = x */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Master.sol\":565:638  function setMCRAddress (address x) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/Master.sol\":643:729  function setAssessmentAddress(address x) public {... */\n    tag_23:\n        /* \"contracts/Master.sol\":721:722  x */\n      dup1\n        /* \"contracts/Master.sol\":701:718  AssessmentAddress */\n      0x04\n      0x00\n        /* \"contracts/Master.sol\":701:722  AssessmentAddress = x */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Master.sol\":643:729  function setAssessmentAddress(address x) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/Master.sol\":95:147  address public  CommissionDestination = address(0x0) */\n    tag_25:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Master.sol\":202:243  address public  MCRAddress = address(0x0) */\n    tag_29:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Master.sol\":47:89  address public  PoolAddress = address(0x0) */\n    tag_32:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Master.sol\":483:560  function setCoverAddress (address x) public {... */\n    tag_36:\n        /* \"contracts/Master.sol\":552:553  x */\n      dup1\n        /* \"contracts/Master.sol\":537:549  CoverAddress */\n      0x02\n      0x00\n        /* \"contracts/Master.sol\":537:553  CoverAddress = x */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Master.sol\":483:560  function setCoverAddress (address x) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/Master.sol\":153:196  address public  CoverAddress = address(0x0) */\n    tag_38:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Master.sol\":304:379  function setPoolAddress (address x) public {... */\n    tag_42:\n        /* \"contracts/Master.sol\":371:372  x */\n      dup1\n        /* \"contracts/Master.sol\":357:368  PoolAddress */\n      0x00\n      dup1\n        /* \"contracts/Master.sol\":357:372  PoolAddress = x */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Master.sol\":304:379  function setPoolAddress (address x) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/Master.sol\":249:297  address public  AssessmentAddress = address(0x0) */\n    tag_44:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_52:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_54:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_55:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_65\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_54\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_56:\n        /* \"#utility.yul\":641:665   */\n      tag_67\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_55\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_68\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_68:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_57:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_70\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_56\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_16:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_72\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_73\n      tag_52\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":917:1036   */\n    tag_72:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_74\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_57\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1294   */\n    tag_58:\n        /* \"#utility.yul\":1263:1287   */\n      tag_76\n        /* \"#utility.yul\":1281:1286   */\n      dup2\n        /* \"#utility.yul\":1263:1287   */\n      tag_55\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":1258:1261   */\n      dup3\n        /* \"#utility.yul\":1251:1288   */\n      mstore\n        /* \"#utility.yul\":1176:1294   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1300:1522   */\n    tag_27:\n        /* \"#utility.yul\":1393:1397   */\n      0x00\n        /* \"#utility.yul\":1431:1433   */\n      0x20\n        /* \"#utility.yul\":1420:1429   */\n      dup3\n        /* \"#utility.yul\":1416:1434   */\n      add\n        /* \"#utility.yul\":1408:1434   */\n      swap1\n      pop\n        /* \"#utility.yul\":1444:1515   */\n      tag_78\n        /* \"#utility.yul\":1512:1513   */\n      0x00\n        /* \"#utility.yul\":1501:1510   */\n      dup4\n        /* \"#utility.yul\":1497:1514   */\n      add\n        /* \"#utility.yul\":1488:1494   */\n      dup5\n        /* \"#utility.yul\":1444:1515   */\n      tag_58\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1300:1522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c72efe2fd6e2e609983ffb535836ee760ea96e0e0381ff41a2b864729349128964736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561015957600080fd5b506104c4806101696000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80639ccc903d116100665780639ccc903d14610133578063e07ee06d14610151578063e67cdafd1461016d578063e9e15b4f1461018b578063ff5f1b9f146101a75761009e565b80636178cfca146100a35780637346d3f8146100bf57806375924419146100db5780637abc3964146100f757806388ea075114610115575b600080fd5b6100bd60048036038101906100b89190610437565b6101c5565b005b6100d960048036038101906100d49190610437565b610209565b005b6100f560048036038101906100f09190610437565b61024d565b005b6100ff610291565b60405161010c9190610473565b60405180910390f35b61011d6102b7565b60405161012a9190610473565b60405180910390f35b61013b6102dd565b6040516101489190610473565b60405180910390f35b61016b60048036038101906101669190610437565b610301565b005b610175610345565b6040516101829190610473565b60405180910390f35b6101a560048036038101906101a09190610437565b61036b565b005b6101af6103ae565b6040516101bc9190610473565b60405180910390f35b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610404826103d9565b9050919050565b610414816103f9565b811461041f57600080fd5b50565b6000813590506104318161040b565b92915050565b60006020828403121561044d5761044c6103d4565b5b600061045b84828501610422565b91505092915050565b61046d816103f9565b82525050565b60006020820190506104886000830184610464565b9291505056fea2646970667358221220c72efe2fd6e2e609983ffb535836ee760ea96e0e0381ff41a2b864729349128964736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C4 DUP1 PUSH2 0x169 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9CCC903D GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x9CCC903D EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0xE07EE06D EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0xE67CDAFD EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xE9E15B4F EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0xFF5F1B9F EQ PUSH2 0x1A7 JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x6178CFCA EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x7346D3F8 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0x75924419 EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x7ABC3964 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x88EA0751 EQ PUSH2 0x115 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH2 0x1C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH2 0x209 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH2 0x24D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFF PUSH2 0x291 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH2 0x2B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH2 0x2DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH2 0x301 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x175 PUSH2 0x345 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH2 0x36B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AF PUSH2 0x3AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x404 DUP3 PUSH2 0x3D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x414 DUP2 PUSH2 0x3F9 JUMP JUMPDEST DUP2 EQ PUSH2 0x41F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x431 DUP2 PUSH2 0x40B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x44D JUMPI PUSH2 0x44C PUSH2 0x3D4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x45B DUP5 DUP3 DUP6 ADD PUSH2 0x422 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x46D DUP2 PUSH2 0x3F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x488 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x464 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0x2E INVALID 0x2F 0xD6 0xE2 0xE6 MULMOD SWAP9 EXTCODEHASH 0xFB MSTORE8 PC CALLDATASIZE 0xEE PUSH23 0xEA96E0E0381FF41A2B864729349128964736F6C634300 ADDMOD SGT STOP CALLER ",
							"sourceMap": "25:706:8:-:0;;;85:3;47:42;;;;;;;;;;;;;;;;;;;;143:3;95:52;;;;;;;;;;;;;;;;;;;;192:3;153:43;;;;;;;;;;;;;;;;;;;;239:3;202:41;;;;;;;;;;;;;;;;;;;;293:3;249:48;;;;;;;;;;;;;;;;;;;;25:706;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@AssessmentAddress_519": {
									"entryPoint": 942,
									"id": 519,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@CommissionDestination_501": {
									"entryPoint": 657,
									"id": 501,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@CoverAddress_507": {
									"entryPoint": 837,
									"id": 507,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MCRAddress_513": {
									"entryPoint": 695,
									"id": 513,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PoolAddress_495": {
									"entryPoint": 733,
									"id": 495,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setAssessmentAddress_569": {
									"entryPoint": 589,
									"id": 569,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setCommissionDestination_539": {
									"entryPoint": 453,
									"id": 539,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setCoverAddress_549": {
									"entryPoint": 769,
									"id": 549,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMCRAddress_559": {
									"entryPoint": 521,
									"id": 559,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setPoolAddress_529": {
									"entryPoint": 875,
									"id": 529,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1058,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1124,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1017,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 980,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1035,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1525:16",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:16"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:16"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:16",
														"type": ""
													}
												],
												"src": "7:75:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:16"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:16"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:16",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:16",
														"type": ""
													}
												],
												"src": "334:126:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:16",
														"type": ""
													}
												],
												"src": "466:96:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:16"
															},
															"nodeType": "YulIf",
															"src": "621:63:16"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:16",
														"type": ""
													}
												],
												"src": "568:122:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:16"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:16",
														"type": ""
													}
												],
												"src": "696:139:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:16"
															},
															"nodeType": "YulIf",
															"src": "917:119:16"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:16",
														"type": ""
													}
												],
												"src": "841:329:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1241:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1258:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1281:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1263:17:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1263:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1251:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:37:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:37:16"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1229:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1236:3:16",
														"type": ""
													}
												],
												"src": "1176:118:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1398:124:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1408:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1420:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1431:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1416:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1416:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1408:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1488:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1501:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1512:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1497:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1444:43:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1444:71:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1444:71:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1370:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1382:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1393:4:16",
														"type": ""
													}
												],
												"src": "1300:222:16"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061009e5760003560e01c80639ccc903d116100665780639ccc903d14610133578063e07ee06d14610151578063e67cdafd1461016d578063e9e15b4f1461018b578063ff5f1b9f146101a75761009e565b80636178cfca146100a35780637346d3f8146100bf57806375924419146100db5780637abc3964146100f757806388ea075114610115575b600080fd5b6100bd60048036038101906100b89190610437565b6101c5565b005b6100d960048036038101906100d49190610437565b610209565b005b6100f560048036038101906100f09190610437565b61024d565b005b6100ff610291565b60405161010c9190610473565b60405180910390f35b61011d6102b7565b60405161012a9190610473565b60405180910390f35b61013b6102dd565b6040516101489190610473565b60405180910390f35b61016b60048036038101906101669190610437565b610301565b005b610175610345565b6040516101829190610473565b60405180910390f35b6101a560048036038101906101a09190610437565b61036b565b005b6101af6103ae565b6040516101bc9190610473565b60405180910390f35b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610404826103d9565b9050919050565b610414816103f9565b811461041f57600080fd5b50565b6000813590506104318161040b565b92915050565b60006020828403121561044d5761044c6103d4565b5b600061045b84828501610422565b91505092915050565b61046d816103f9565b82525050565b60006020820190506104886000830184610464565b9291505056fea2646970667358221220c72efe2fd6e2e609983ffb535836ee760ea96e0e0381ff41a2b864729349128964736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9CCC903D GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x9CCC903D EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0xE07EE06D EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0xE67CDAFD EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xE9E15B4F EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0xFF5F1B9F EQ PUSH2 0x1A7 JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x6178CFCA EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x7346D3F8 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0x75924419 EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x7ABC3964 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x88EA0751 EQ PUSH2 0x115 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH2 0x1C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH2 0x209 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH2 0x24D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFF PUSH2 0x291 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH2 0x2B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH2 0x2DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH2 0x301 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x175 PUSH2 0x345 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH2 0x36B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AF PUSH2 0x3AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x404 DUP3 PUSH2 0x3D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x414 DUP2 PUSH2 0x3F9 JUMP JUMPDEST DUP2 EQ PUSH2 0x41F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x431 DUP2 PUSH2 0x40B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x44D JUMPI PUSH2 0x44C PUSH2 0x3D4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x45B DUP5 DUP3 DUP6 ADD PUSH2 0x422 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x46D DUP2 PUSH2 0x3F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x488 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x464 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0x2E INVALID 0x2F 0xD6 0xE2 0xE6 MULMOD SWAP9 EXTCODEHASH 0xFB MSTORE8 PC CALLDATASIZE 0xEE PUSH23 0xEA96E0E0381FF41A2B864729349128964736F6C634300 ADDMOD SGT STOP CALLER ",
							"sourceMap": "25:706:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;384:94;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;565:73;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;643:86;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;95:52;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;202:41;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;47:42;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;483:77;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;153:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;304:75;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;249:48;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;384:94;470:1;446:21;;:25;;;;;;;;;;;;;;;;;;384:94;:::o;565:73::-;630:1;617:10;;:14;;;;;;;;;;;;;;;;;;565:73;:::o;643:86::-;721:1;701:17;;:21;;;;;;;;;;;;;;;;;;643:86;:::o;95:52::-;;;;;;;;;;;;;:::o;202:41::-;;;;;;;;;;;;;:::o;47:42::-;;;;;;;;;;;;:::o;483:77::-;552:1;537:12;;:16;;;;;;;;;;;;;;;;;;483:77;:::o;153:43::-;;;;;;;;;;;;;:::o;304:75::-;371:1;357:11;;:15;;;;;;;;;;;;;;;;;;304:75;:::o;249:48::-;;;;;;;;;;;;;:::o;88:117:16:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:118::-;1263:24;1281:5;1263:24;:::i;:::-;1258:3;1251:37;1176:118;;:::o;1300:222::-;1393:4;1431:2;1420:9;1416:18;1408:26;;1444:71;1512:1;1501:9;1497:17;1488:6;1444:71;:::i;:::-;1300:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "244000",
								"executionCost": "121622",
								"totalCost": "365622"
							},
							"external": {
								"AssessmentAddress()": "2602",
								"CommissionDestination()": "2581",
								"CoverAddress()": "2558",
								"MCRAddress()": "2603",
								"PoolAddress()": "2511",
								"setAssessmentAddress(address)": "24767",
								"setCommissionDestination(address)": "24723",
								"setCoverAddress(address)": "24744",
								"setMCRAddress(address)": "24745",
								"setPoolAddress(address)": "24788"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 731,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 25,
									"end": 731,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 25,
									"end": 731,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 85,
									"end": 88,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 47,
									"end": 89,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 47,
									"end": 89,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 47,
									"end": 89,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 47,
									"end": 89,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 47,
									"end": 89,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 47,
									"end": 89,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 47,
									"end": 89,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 47,
									"end": 89,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 47,
									"end": 89,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 47,
									"end": 89,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 47,
									"end": 89,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 47,
									"end": 89,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 47,
									"end": 89,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 47,
									"end": 89,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 47,
									"end": 89,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 47,
									"end": 89,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 47,
									"end": 89,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 47,
									"end": 89,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 47,
									"end": 89,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 47,
									"end": 89,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 143,
									"end": 146,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 147,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 95,
									"end": 147,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 147,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 95,
									"end": 147,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 95,
									"end": 147,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 95,
									"end": 147,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 95,
									"end": 147,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 95,
									"end": 147,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 95,
									"end": 147,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 95,
									"end": 147,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 95,
									"end": 147,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 95,
									"end": 147,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 95,
									"end": 147,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 95,
									"end": 147,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 95,
									"end": 147,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 95,
									"end": 147,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 95,
									"end": 147,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 95,
									"end": 147,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 95,
									"end": 147,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 95,
									"end": 147,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 192,
									"end": 195,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 153,
									"end": 196,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 153,
									"end": 196,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 153,
									"end": 196,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 153,
									"end": 196,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 153,
									"end": 196,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 153,
									"end": 196,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 153,
									"end": 196,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 153,
									"end": 196,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 153,
									"end": 196,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 153,
									"end": 196,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 153,
									"end": 196,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 153,
									"end": 196,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 153,
									"end": 196,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 153,
									"end": 196,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 153,
									"end": 196,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 153,
									"end": 196,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 153,
									"end": 196,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 153,
									"end": 196,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 153,
									"end": 196,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 153,
									"end": 196,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 239,
									"end": 242,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 243,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 202,
									"end": 243,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 243,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 202,
									"end": 243,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 202,
									"end": 243,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 202,
									"end": 243,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 202,
									"end": 243,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 202,
									"end": 243,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 202,
									"end": 243,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 202,
									"end": 243,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 202,
									"end": 243,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 202,
									"end": 243,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 202,
									"end": 243,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 202,
									"end": 243,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 202,
									"end": 243,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 202,
									"end": 243,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 202,
									"end": 243,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 202,
									"end": 243,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 202,
									"end": 243,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 202,
									"end": 243,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 293,
									"end": 296,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 297,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 249,
									"end": 297,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 297,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 249,
									"end": 297,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 249,
									"end": 297,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 249,
									"end": 297,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 249,
									"end": 297,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 249,
									"end": 297,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 249,
									"end": 297,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 249,
									"end": 297,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 249,
									"end": 297,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 249,
									"end": 297,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 249,
									"end": 297,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 249,
									"end": 297,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 249,
									"end": 297,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 249,
									"end": 297,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 249,
									"end": 297,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 249,
									"end": 297,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 249,
									"end": 297,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 249,
									"end": 297,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 25,
									"end": 731,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 25,
									"end": 731,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 25,
									"end": 731,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 25,
									"end": 731,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 25,
									"end": 731,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 25,
									"end": 731,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 731,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 25,
									"end": 731,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 25,
									"end": 731,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 25,
									"end": 731,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 25,
									"end": 731,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 25,
									"end": 731,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 731,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 25,
									"end": 731,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 731,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 731,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 25,
									"end": 731,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 731,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c72efe2fd6e2e609983ffb535836ee760ea96e0e0381ff41a2b864729349128964736f6c63430008130033",
									".code": [
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "9CCC903D"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "9CCC903D"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "E07EE06D"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "E67CDAFD"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "E9E15B4F"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "FF5F1B9F"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "6178CFCA"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "7346D3F8"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "75924419"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "7ABC3964"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "88EA0751"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 384,
											"end": 478,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 384,
											"end": 478,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 384,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 384,
											"end": 478,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 384,
											"end": 478,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 384,
											"end": 478,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 384,
											"end": 478,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 384,
											"end": 478,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 384,
											"end": 478,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 384,
											"end": 478,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 384,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 384,
											"end": 478,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 384,
											"end": 478,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 384,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 384,
											"end": 478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 384,
											"end": 478,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 384,
											"end": 478,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 384,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 384,
											"end": 478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 384,
											"end": 478,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 384,
											"end": 478,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 384,
											"end": 478,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 565,
											"end": 638,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 565,
											"end": 638,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 565,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 565,
											"end": 638,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 565,
											"end": 638,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 565,
											"end": 638,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 565,
											"end": 638,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 565,
											"end": 638,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 565,
											"end": 638,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 565,
											"end": 638,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 565,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 565,
											"end": 638,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 565,
											"end": 638,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 565,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 565,
											"end": 638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 565,
											"end": 638,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 565,
											"end": 638,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 565,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 565,
											"end": 638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 565,
											"end": 638,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 565,
											"end": 638,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 565,
											"end": 638,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 643,
											"end": 729,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 643,
											"end": 729,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 643,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 643,
											"end": 729,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 643,
											"end": 729,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 643,
											"end": 729,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 643,
											"end": 729,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 643,
											"end": 729,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 643,
											"end": 729,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 643,
											"end": 729,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 643,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 643,
											"end": 729,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 643,
											"end": 729,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 643,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 643,
											"end": 729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 643,
											"end": 729,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 643,
											"end": 729,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 643,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 643,
											"end": 729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 643,
											"end": 729,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 643,
											"end": 729,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 643,
											"end": 729,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 95,
											"end": 147,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 95,
											"end": 147,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 95,
											"end": 147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 95,
											"end": 147,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 95,
											"end": 147,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 95,
											"end": 147,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 95,
											"end": 147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 95,
											"end": 147,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 95,
											"end": 147,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 202,
											"end": 243,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 202,
											"end": 243,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 202,
											"end": 243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 202,
											"end": 243,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 243,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 202,
											"end": 243,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 202,
											"end": 243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 202,
											"end": 243,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 243,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 47,
											"end": 89,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 47,
											"end": 89,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 47,
											"end": 89,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 47,
											"end": 89,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 47,
											"end": 89,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 47,
											"end": 89,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 47,
											"end": 89,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 47,
											"end": 89,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 47,
											"end": 89,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 483,
											"end": 560,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 483,
											"end": 560,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 483,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 483,
											"end": 560,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 560,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 483,
											"end": 560,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 483,
											"end": 560,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 483,
											"end": 560,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 483,
											"end": 560,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 483,
											"end": 560,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 483,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 483,
											"end": 560,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 483,
											"end": 560,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 483,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 483,
											"end": 560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 483,
											"end": 560,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 483,
											"end": 560,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 483,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 483,
											"end": 560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 483,
											"end": 560,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 483,
											"end": 560,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 483,
											"end": 560,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 153,
											"end": 196,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 153,
											"end": 196,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 153,
											"end": 196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 153,
											"end": 196,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 153,
											"end": 196,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 153,
											"end": 196,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 153,
											"end": 196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 153,
											"end": 196,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 153,
											"end": 196,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 304,
											"end": 379,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 304,
											"end": 379,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 304,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 304,
											"end": 379,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 304,
											"end": 379,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 304,
											"end": 379,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 304,
											"end": 379,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 304,
											"end": 379,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 304,
											"end": 379,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 304,
											"end": 379,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 304,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 304,
											"end": 379,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 304,
											"end": 379,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 304,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 304,
											"end": 379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 304,
											"end": 379,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 304,
											"end": 379,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 304,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 304,
											"end": 379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 304,
											"end": 379,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 304,
											"end": 379,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 304,
											"end": 379,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 249,
											"end": 297,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 249,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 249,
											"end": 297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 249,
											"end": 297,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 249,
											"end": 297,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 249,
											"end": 297,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 249,
											"end": 297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 249,
											"end": 297,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 249,
											"end": 297,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 384,
											"end": 478,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 384,
											"end": 478,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 470,
											"end": 471,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 446,
											"end": 467,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 446,
											"end": 467,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 446,
											"end": 471,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 446,
											"end": 471,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 446,
											"end": 471,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 446,
											"end": 471,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 446,
											"end": 471,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 446,
											"end": 471,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 446,
											"end": 471,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 446,
											"end": 471,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 446,
											"end": 471,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 446,
											"end": 471,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 446,
											"end": 471,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 446,
											"end": 471,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 446,
											"end": 471,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 446,
											"end": 471,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 446,
											"end": 471,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 446,
											"end": 471,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 446,
											"end": 471,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 446,
											"end": 471,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 384,
											"end": 478,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 384,
											"end": 478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 565,
											"end": 638,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 565,
											"end": 638,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 630,
											"end": 631,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 617,
											"end": 627,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 617,
											"end": 627,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 617,
											"end": 631,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 617,
											"end": 631,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 617,
											"end": 631,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 617,
											"end": 631,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 617,
											"end": 631,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 617,
											"end": 631,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 617,
											"end": 631,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 617,
											"end": 631,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 617,
											"end": 631,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 617,
											"end": 631,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 617,
											"end": 631,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 617,
											"end": 631,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 617,
											"end": 631,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 617,
											"end": 631,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 617,
											"end": 631,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 617,
											"end": 631,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 617,
											"end": 631,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 617,
											"end": 631,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 565,
											"end": 638,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 565,
											"end": 638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 643,
											"end": 729,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 643,
											"end": 729,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 721,
											"end": 722,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 701,
											"end": 718,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 701,
											"end": 718,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 722,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 701,
											"end": 722,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 701,
											"end": 722,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 701,
											"end": 722,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 701,
											"end": 722,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 701,
											"end": 722,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 701,
											"end": 722,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 701,
											"end": 722,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 701,
											"end": 722,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 701,
											"end": 722,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 701,
											"end": 722,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 701,
											"end": 722,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 701,
											"end": 722,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 701,
											"end": 722,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 701,
											"end": 722,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 701,
											"end": 722,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 701,
											"end": 722,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 701,
											"end": 722,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 643,
											"end": 729,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 643,
											"end": 729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 95,
											"end": 147,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 95,
											"end": 147,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 95,
											"end": 147,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 95,
											"end": 147,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 95,
											"end": 147,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 202,
											"end": 243,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 202,
											"end": 243,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 243,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 202,
											"end": 243,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 202,
											"end": 243,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 47,
											"end": 89,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 47,
											"end": 89,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 47,
											"end": 89,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47,
											"end": 89,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 483,
											"end": 560,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 483,
											"end": 560,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 552,
											"end": 553,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 537,
											"end": 549,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 537,
											"end": 549,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 537,
											"end": 553,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 537,
											"end": 553,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 537,
											"end": 553,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 537,
											"end": 553,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 537,
											"end": 553,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 537,
											"end": 553,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 537,
											"end": 553,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 537,
											"end": 553,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 537,
											"end": 553,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 537,
											"end": 553,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 537,
											"end": 553,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 537,
											"end": 553,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 537,
											"end": 553,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 537,
											"end": 553,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 537,
											"end": 553,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 537,
											"end": 553,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 537,
											"end": 553,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 537,
											"end": 553,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 483,
											"end": 560,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 483,
											"end": 560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 153,
											"end": 196,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 153,
											"end": 196,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 153,
											"end": 196,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 153,
											"end": 196,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 153,
											"end": 196,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 304,
											"end": 379,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 304,
											"end": 379,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 371,
											"end": 372,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 357,
											"end": 368,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 368,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 357,
											"end": 372,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 357,
											"end": 372,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 357,
											"end": 372,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 357,
											"end": 372,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 357,
											"end": 372,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 357,
											"end": 372,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 357,
											"end": 372,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 357,
											"end": 372,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 357,
											"end": 372,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 357,
											"end": 372,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 357,
											"end": 372,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 357,
											"end": 372,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 357,
											"end": 372,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 357,
											"end": 372,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 357,
											"end": 372,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 357,
											"end": 372,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 357,
											"end": 372,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 357,
											"end": 372,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 304,
											"end": 379,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 304,
											"end": 379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 249,
											"end": 297,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 249,
											"end": 297,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 297,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 249,
											"end": 297,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 249,
											"end": 297,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 16,
											"value": "52"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 16,
											"value": "54"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 16,
											"value": "55"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "65"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "54"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 16,
											"value": "65"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 16,
											"value": "56"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "67"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "55"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 16,
											"value": "67"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "68"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 16,
											"value": "68"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 16,
											"value": "57"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "70"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "56"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 16,
											"value": "70"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 16,
											"value": "16"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "72"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "73"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "52"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 16,
											"value": "73"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 16,
											"value": "72"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "74"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "57"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 16,
											"value": "74"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "tag",
											"source": 16,
											"value": "58"
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "76"
										},
										{
											"begin": 1281,
											"end": 1286,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "55"
										},
										{
											"begin": 1263,
											"end": 1287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "tag",
											"source": 16,
											"value": "76"
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1258,
											"end": 1261,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1251,
											"end": 1288,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1176,
											"end": 1294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "tag",
											"source": 16,
											"value": "27"
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1397,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1431,
											"end": 1433,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1420,
											"end": 1429,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1416,
											"end": 1434,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1408,
											"end": 1434,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1408,
											"end": 1434,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "78"
										},
										{
											"begin": 1512,
											"end": 1513,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1510,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1497,
											"end": 1514,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "58"
										},
										{
											"begin": 1444,
											"end": 1515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "tag",
											"source": 16,
											"value": "78"
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1300,
											"end": 1522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"contracts/Master.sol",
								"contracts/cover/Cover.sol",
								"contracts/interfaces/ICover.sol",
								"contracts/interfaces/ICoverNFT.sol",
								"contracts/interfaces/IMCR.sol",
								"contracts/interfaces/IPool.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"AssessmentAddress()": "ff5f1b9f",
							"CommissionDestination()": "7abc3964",
							"CoverAddress()": "e67cdafd",
							"MCRAddress()": "88ea0751",
							"PoolAddress()": "9ccc903d",
							"setAssessmentAddress(address)": "75924419",
							"setCommissionDestination(address)": "6178cfca",
							"setCoverAddress(address)": "e07ee06d",
							"setMCRAddress(address)": "7346d3f8",
							"setPoolAddress(address)": "e9e15b4f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AssessmentAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CommissionDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CoverAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MCRAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"x\",\"type\":\"address\"}],\"name\":\"setAssessmentAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"x\",\"type\":\"address\"}],\"name\":\"setCommissionDestination\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"x\",\"type\":\"address\"}],\"name\":\"setCoverAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"x\",\"type\":\"address\"}],\"name\":\"setMCRAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"x\",\"type\":\"address\"}],\"name\":\"setPoolAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Master.sol\":\"Master\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Master.sol\":{\"keccak256\":\"0x3d3184b9516122e6fb70e4b5d512b6a0219abe38c4792b9cbf382dbffb880c65\",\"urls\":[\"bzz-raw://e1bb612708fc4fd742569a13ff47a2b359e21044f201e7eb99316a25c648203a\",\"dweb:/ipfs/QmZZwWpCLopjSVdjPNR1LxxrBXp7wFEgmqzYuQUQFh1z6J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 495,
								"contract": "contracts/Master.sol:Master",
								"label": "PoolAddress",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 501,
								"contract": "contracts/Master.sol:Master",
								"label": "CommissionDestination",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 507,
								"contract": "contracts/Master.sol:Master",
								"label": "CoverAddress",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 513,
								"contract": "contracts/Master.sol:Master",
								"label": "MCRAddress",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 519,
								"contract": "contracts/Master.sol:Master",
								"label": "AssessmentAddress",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/cover/Cover.sol": {
				"Cover": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract ICoverNFT",
									"name": "_coverNFT",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "masterAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "InsufficientEthSent",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReturningEthRemainderToSenderFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SendingEthToCommissionDestinationFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SendingEthToPoolFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "activeCoverAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "token0",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "token1",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "token1Qty",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "token0Qty",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lowerBoundRatio",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "upperBoundRatio",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "period",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "pairStr",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "initialPoolPrice",
											"type": "uint256"
										}
									],
									"internalType": "struct BuyCoverParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "buyCover",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "coverId",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "token0",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "token1",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "token1Qty",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "token0Qty",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lowerBoundRatio",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "upperBoundRatio",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "period",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "pairStr",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "initialPoolPrice",
											"type": "uint256"
										}
									],
									"internalType": "struct BuyCoverParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "coverAmountInETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "coverDataCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "coverNFT",
							"outputs": [
								{
									"internalType": "contract ICoverNFT",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "token0",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "token1",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "token1Qty",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "token0Qty",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lowerBoundRatio",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "upperBoundRatio",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "period",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "pairStr",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "initialPoolPrice",
											"type": "uint256"
										}
									],
									"internalType": "struct BuyCoverParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "coverPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "dec",
									"type": "uint256"
								}
							],
							"name": "decActiveCoverInETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "coverid",
									"type": "uint256"
								}
							],
							"name": "getCoverData",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "amountPaidOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "totalClaimAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "start",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "period",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "token0",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "token1",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "token0Qty",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "token1Qty",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lowerBoundRatio",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "upperBoundRatio",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "pairStr",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "initialPoolPrice",
											"type": "uint256"
										}
									],
									"internalType": "struct CoverData",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "x",
									"type": "address"
								}
							],
							"name": "getLiveDataUniswap",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "",
									"type": "uint160"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "x",
									"type": "address"
								}
							],
							"name": "getUnitPX",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "master",
							"outputs": [
								{
									"internalType": "contract Master",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalActiveCoverInETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/cover/Cover.sol\":456:4291  contract Cover is ICover{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/cover/Cover.sol\":700:948  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/cover/Cover.sol\":861:870  _coverNFT */\n  dup2\n    /* \"contracts/cover/Cover.sol\":850:858  coverNFT */\n  0x03\n  0x00\n    /* \"contracts/cover/Cover.sol\":850:870  coverNFT = _coverNFT */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/cover/Cover.sol\":900:901  0 */\n  0x00\n    /* \"contracts/cover/Cover.sol\":880:897  activeCoverAmount */\n  0x01\n    /* \"contracts/cover/Cover.sol\":880:901  activeCoverAmount = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/cover/Cover.sol\":927:940  masterAddress */\n  dup1\n    /* \"contracts/cover/Cover.sol\":911:917  master */\n  0x02\n  0x00\n    /* \"contracts/cover/Cover.sol\":911:941  master = Master(masterAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/cover/Cover.sol\":700:948  constructor(... */\n  pop\n  pop\n    /* \"contracts/cover/Cover.sol\":456:4291  contract Cover is ICover{... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_23\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:682   */\ntag_12:\n    /* \"#utility.yul\":623:630   */\n  0x00\n    /* \"#utility.yul\":652:676   */\n  tag_25\n    /* \"#utility.yul\":670:675   */\n  dup3\n    /* \"#utility.yul\":652:676   */\n  tag_11\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":641:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:846   */\ntag_13:\n    /* \"#utility.yul\":779:821   */\n  tag_27\n    /* \"#utility.yul\":815:820   */\n  dup2\n    /* \"#utility.yul\":779:821   */\n  tag_12\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":772:777   */\n  dup2\n    /* \"#utility.yul\":769:822   */\n  eq\n    /* \"#utility.yul\":759:840   */\n  tag_28\n  jumpi\n    /* \"#utility.yul\":836:837   */\n  0x00\n    /* \"#utility.yul\":833:834   */\n  dup1\n    /* \"#utility.yul\":826:838   */\n  revert\n    /* \"#utility.yul\":759:840   */\ntag_28:\n    /* \"#utility.yul\":688:846   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":852:1031   */\ntag_14:\n    /* \"#utility.yul\":927:932   */\n  0x00\n    /* \"#utility.yul\":958:964   */\n  dup2\n    /* \"#utility.yul\":952:965   */\n  mload\n    /* \"#utility.yul\":943:965   */\n  swap1\n  pop\n    /* \"#utility.yul\":974:1025   */\n  tag_30\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":974:1025   */\n  tag_13\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":852:1031   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1037:1159   */\ntag_15:\n    /* \"#utility.yul\":1110:1134   */\n  tag_32\n    /* \"#utility.yul\":1128:1133   */\n  dup2\n    /* \"#utility.yul\":1110:1134   */\n  tag_11\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1103:1108   */\n  dup2\n    /* \"#utility.yul\":1100:1135   */\n  eq\n    /* \"#utility.yul\":1090:1153   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":1149:1150   */\n  0x00\n    /* \"#utility.yul\":1146:1147   */\n  dup1\n    /* \"#utility.yul\":1139:1151   */\n  revert\n    /* \"#utility.yul\":1090:1153   */\ntag_33:\n    /* \"#utility.yul\":1037:1159   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1165:1308   */\ntag_16:\n    /* \"#utility.yul\":1222:1227   */\n  0x00\n    /* \"#utility.yul\":1253:1259   */\n  dup2\n    /* \"#utility.yul\":1247:1260   */\n  mload\n    /* \"#utility.yul\":1238:1260   */\n  swap1\n  pop\n    /* \"#utility.yul\":1269:1302   */\n  tag_35\n    /* \"#utility.yul\":1296:1301   */\n  dup2\n    /* \"#utility.yul\":1269:1302   */\n  tag_15\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":1165:1308   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1314:1857   */\ntag_3:\n    /* \"#utility.yul\":1411:1417   */\n  0x00\n    /* \"#utility.yul\":1419:1425   */\n  dup1\n    /* \"#utility.yul\":1468:1470   */\n  0x40\n    /* \"#utility.yul\":1456:1465   */\n  dup4\n    /* \"#utility.yul\":1447:1454   */\n  dup6\n    /* \"#utility.yul\":1443:1466   */\n  sub\n    /* \"#utility.yul\":1439:1471   */\n  slt\n    /* \"#utility.yul\":1436:1555   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1474:1553   */\n  tag_38\n  tag_8\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1436:1555   */\ntag_37:\n    /* \"#utility.yul\":1594:1595   */\n  0x00\n    /* \"#utility.yul\":1619:1701   */\n  tag_39\n    /* \"#utility.yul\":1693:1700   */\n  dup6\n    /* \"#utility.yul\":1684:1690   */\n  dup3\n    /* \"#utility.yul\":1673:1682   */\n  dup7\n    /* \"#utility.yul\":1669:1691   */\n  add\n    /* \"#utility.yul\":1619:1701   */\n  tag_14\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1609:1701   */\n  swap3\n  pop\n    /* \"#utility.yul\":1565:1711   */\n  pop\n    /* \"#utility.yul\":1750:1752   */\n  0x20\n    /* \"#utility.yul\":1776:1840   */\n  tag_40\n    /* \"#utility.yul\":1832:1839   */\n  dup6\n    /* \"#utility.yul\":1823:1829   */\n  dup3\n    /* \"#utility.yul\":1812:1821   */\n  dup7\n    /* \"#utility.yul\":1808:1830   */\n  add\n    /* \"#utility.yul\":1776:1840   */\n  tag_16\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1766:1840   */\n  swap2\n  pop\n    /* \"#utility.yul\":1721:1850   */\n  pop\n    /* \"#utility.yul\":1314:1857   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/cover/Cover.sol\":456:4291  contract Cover is ICover{... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/cover/Cover.sol\":456:4291  contract Cover is ICover{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4b61a44b\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x4b61a44b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x7e9e1abe\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xd05808f8\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xde071a0a\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xed3b657a\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xee97f7f3\n      eq\n      tag_13\n      jumpi\n      jump(tag_1)\n    tag_14:\n      dup1\n      0x407d2a\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x1f5e4583\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x279f54ce\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x404730f4\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x4230a777\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x42e53fcf\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/cover/Cover.sol\":953:1075  function getCoverData(uint coverid) external view returns  (CoverData memory ) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/cover/Cover.sol\":2161:2287  function coverPrice(BuyCoverParams calldata params) public returns (uint price){... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/cover/Cover.sol\":1080:1923  function buyCover(BuyCoverParams calldata params) external payable returns (uint coverId){... */\n    tag_4:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_30:\n      tag_31\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/cover/Cover.sol\":1928:2027  function coverDataCount() public view returns (uint ){... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/cover/Cover.sol\":3956:4124  function getLiveDataUniswap(address x) public view returns (uint160){... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/cover/Cover.sol\":667:693  ICoverNFT public  coverNFT */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/cover/Cover.sol\":3653:3739  function decActiveCoverInETH(uint dec) public {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"contracts/cover/Cover.sol\":602:634  uint256 public activeCoverAmount */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/cover/Cover.sol\":2032:2156  function coverAmountInETH(BuyCoverParams calldata params) public  returns (uint amount){... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/cover/Cover.sol\":4132:4287  function getUnitPX(address x) public view returns (int){... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/cover/Cover.sol\":3744:3847  function totalActiveCoverInETH() public view returns (uint256){... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/cover/Cover.sol\":641:661  Master public master */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/cover/Cover.sol\":953:1075  function getCoverData(uint coverid) external view returns  (CoverData memory ) {... */\n    tag_19:\n        /* \"contracts/cover/Cover.sol\":1013:1029  CoverData memory */\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"contracts/cover/Cover.sol\":1049:1059  _coverData */\n      0x00\n        /* \"contracts/cover/Cover.sol\":1049:1068  _coverData[coverid] */\n      dup1\n        /* \"contracts/cover/Cover.sol\":1060:1067  coverid */\n      dup4\n        /* \"contracts/cover/Cover.sol\":1049:1068  _coverData[coverid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/cover/Cover.sol\":1042:1068  return _coverData[coverid] */\n      mload(0x40)\n      dup1\n      0x0180\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x06\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x07\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x08\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x09\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x0a\n      dup3\n      add\n      dup1\n      sload\n      tag_80\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_82\n      swap1\n      tag_81\n      jump\t// in\n    tag_82:\n      dup1\n      iszero\n      tag_83\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_84\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_83)\n    tag_84:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_85:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_85\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_83:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      0x0b\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/cover/Cover.sol\":953:1075  function getCoverData(uint coverid) external view returns  (CoverData memory ) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/cover/Cover.sol\":2161:2287  function coverPrice(BuyCoverParams calldata params) public returns (uint price){... */\n    tag_26:\n        /* \"contracts/cover/Cover.sol\":2229:2239  uint price */\n      0x00\n        /* \"contracts/cover/Cover.sol\":2267:2280  1000000000000 */\n      0xe8d4a51000\n        /* \"contracts/cover/Cover.sol\":2260:2280  return 1000000000000 */\n      swap1\n      pop\n        /* \"contracts/cover/Cover.sol\":2161:2287  function coverPrice(BuyCoverParams calldata params) public returns (uint price){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/cover/Cover.sol\":1080:1923  function buyCover(BuyCoverParams calldata params) external payable returns (uint coverId){... */\n    tag_31:\n        /* \"contracts/cover/Cover.sol\":1156:1168  uint coverId */\n      0x00\n        /* \"contracts/cover/Cover.sol\":1207:1215  coverNFT */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/cover/Cover.sol\":1207:1220  coverNFT.mint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6a627842\n        /* \"contracts/cover/Cover.sol\":1221:1231  msg.sender */\n      caller\n        /* \"contracts/cover/Cover.sol\":1207:1232  coverNFT.mint(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_91\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_91:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n        /* \"contracts/cover/Cover.sol\":1197:1232  coverId = coverNFT.mint(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/cover/Cover.sol\":1264:1669  CoverData(0, coverAmountInETH(params),// cover amount in cover asset... */\n      mload(0x40)\n      dup1\n      0x0180\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/cover/Cover.sol\":1274:1275  0 */\n      0x00\n        /* \"contracts/cover/Cover.sol\":1264:1669  CoverData(0, coverAmountInETH(params),// cover amount in cover asset... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/cover/Cover.sol\":1277:1301  coverAmountInETH(params) */\n      tag_94\n        /* \"contracts/cover/Cover.sol\":1294:1300  params */\n      dup5\n        /* \"contracts/cover/Cover.sol\":1277:1293  coverAmountInETH */\n      tag_60\n        /* \"contracts/cover/Cover.sol\":1277:1301  coverAmountInETH(params) */\n      jump\t// in\n    tag_94:\n        /* \"contracts/cover/Cover.sol\":1264:1669  CoverData(0, coverAmountInETH(params),// cover amount in cover asset... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/cover/Cover.sol\":1345:1360  block.timestamp */\n      timestamp\n        /* \"contracts/cover/Cover.sol\":1264:1669  CoverData(0, coverAmountInETH(params),// cover amount in cover asset... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/cover/Cover.sol\":1383:1389  params */\n      dup4\n        /* \"contracts/cover/Cover.sol\":1383:1396  params.period */\n      0xc0\n      add\n      calldataload\n        /* \"contracts/cover/Cover.sol\":1264:1669  CoverData(0, coverAmountInETH(params),// cover amount in cover asset... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/cover/Cover.sol\":1422:1428  params */\n      dup4\n        /* \"contracts/cover/Cover.sol\":1422:1435  params.token0 */\n      0x00\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_95:\n        /* \"contracts/cover/Cover.sol\":1264:1669  CoverData(0, coverAmountInETH(params),// cover amount in cover asset... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/cover/Cover.sol\":1449:1455  params */\n      dup4\n        /* \"contracts/cover/Cover.sol\":1449:1462  params.token1 */\n      0x20\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_96:\n        /* \"contracts/cover/Cover.sol\":1264:1669  CoverData(0, coverAmountInETH(params),// cover amount in cover asset... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/cover/Cover.sol\":1476:1482  params */\n      dup4\n        /* \"contracts/cover/Cover.sol\":1476:1492  params.token0Qty */\n      0x60\n      add\n      calldataload\n        /* \"contracts/cover/Cover.sol\":1264:1669  CoverData(0, coverAmountInETH(params),// cover amount in cover asset... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/cover/Cover.sol\":1506:1512  params */\n      dup4\n        /* \"contracts/cover/Cover.sol\":1506:1522  params.token1Qty */\n      0x40\n      add\n      calldataload\n        /* \"contracts/cover/Cover.sol\":1264:1669  CoverData(0, coverAmountInETH(params),// cover amount in cover asset... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/cover/Cover.sol\":1536:1542  params */\n      dup4\n        /* \"contracts/cover/Cover.sol\":1536:1558  params.lowerBoundRatio */\n      0x80\n      add\n      calldataload\n        /* \"contracts/cover/Cover.sol\":1264:1669  CoverData(0, coverAmountInETH(params),// cover amount in cover asset... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/cover/Cover.sol\":1572:1578  params */\n      dup4\n        /* \"contracts/cover/Cover.sol\":1572:1594  params.upperBoundRatio */\n      0xa0\n      add\n      calldataload\n        /* \"contracts/cover/Cover.sol\":1264:1669  CoverData(0, coverAmountInETH(params),// cover amount in cover asset... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/cover/Cover.sol\":1608:1614  params */\n      dup4\n        /* \"contracts/cover/Cover.sol\":1608:1622  params.pairStr */\n      dup1\n      0xe0\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n        /* \"contracts/cover/Cover.sol\":1264:1669  CoverData(0, coverAmountInETH(params),// cover amount in cover asset... */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      dup2\n      dup5\n      add\n      mstore\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      swap1\n      pop\n      dup1\n      dup4\n      add\n      swap3\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/cover/Cover.sol\":1636:1642  params */\n      dup4\n        /* \"contracts/cover/Cover.sol\":1636:1659  params.initialPoolPrice */\n      0x0100\n      add\n      calldataload\n        /* \"contracts/cover/Cover.sol\":1264:1669  CoverData(0, coverAmountInETH(params),// cover amount in cover asset... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/cover/Cover.sol\":1242:1252  _coverData */\n      0x00\n        /* \"contracts/cover/Cover.sol\":1242:1261  _coverData[coverId] */\n      dup1\n        /* \"contracts/cover/Cover.sol\":1253:1260  coverId */\n      dup4\n        /* \"contracts/cover/Cover.sol\":1242:1261  _coverData[coverId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/cover/Cover.sol\":1242:1669  _coverData[coverId] = CoverData(0, coverAmountInETH(params),// cover amount in cover asset... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xc0\n      dup3\n      add\n      mload\n      dup2\n      0x06\n      add\n      sstore\n      0xe0\n      dup3\n      add\n      mload\n      dup2\n      0x07\n      add\n      sstore\n      0x0100\n      dup3\n      add\n      mload\n      dup2\n      0x08\n      add\n      sstore\n      0x0120\n      dup3\n      add\n      mload\n      dup2\n      0x09\n      add\n      sstore\n      0x0140\n      dup3\n      add\n      mload\n      dup2\n      0x0a\n      add\n      swap1\n      dup2\n      tag_99\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      pop\n      0x0160\n      dup3\n      add\n      mload\n      dup2\n      0x0b\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/cover/Cover.sol\":1679:1696  uint premiumToPay */\n      0x00\n        /* \"contracts/cover/Cover.sol\":1699:1717  coverPrice(params) */\n      tag_101\n        /* \"contracts/cover/Cover.sol\":1710:1716  params */\n      dup4\n        /* \"contracts/cover/Cover.sol\":1699:1709  coverPrice */\n      tag_26\n        /* \"contracts/cover/Cover.sol\":1699:1717  coverPrice(params) */\n      jump\t// in\n    tag_101:\n        /* \"contracts/cover/Cover.sol\":1679:1717  uint premiumToPay = coverPrice(params) */\n      swap1\n      pop\n        /* \"contracts/cover/Cover.sol\":1727:1769  retrievePayment(premiumToPay,ETH_ASSET_ID) */\n      tag_102\n        /* \"contracts/cover/Cover.sol\":1743:1755  premiumToPay */\n      dup2\n        /* \"contracts/cover/Cover.sol\":408:409  0 */\n      0x00\n        /* \"contracts/cover/Cover.sol\":1727:1769  retrievePayment(premiumToPay,ETH_ASSET_ID) */\n      0xffffffff\n      and\n        /* \"contracts/cover/Cover.sol\":1727:1742  retrievePayment */\n      tag_103\n        /* \"contracts/cover/Cover.sol\":1727:1769  retrievePayment(premiumToPay,ETH_ASSET_ID) */\n      jump\t// in\n    tag_102:\n      pop\n        /* \"contracts/cover/Cover.sol\":1800:1810  _coverData */\n      0x00\n        /* \"contracts/cover/Cover.sol\":1800:1819  _coverData[coverId] */\n      dup1\n        /* \"contracts/cover/Cover.sol\":1811:1818  coverId */\n      dup4\n        /* \"contracts/cover/Cover.sol\":1800:1819  _coverData[coverId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/cover/Cover.sol\":1800:1836  _coverData[coverId].totalClaimAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/cover/Cover.sol\":1779:1796  activeCoverAmount */\n      0x01\n      0x00\n        /* \"contracts/cover/Cover.sol\":1779:1836  activeCoverAmount += _coverData[coverId].totalClaimAmount */\n      dup3\n      dup3\n      sload\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/cover/Cover.sol\":1846:1854  IMCR mcr */\n      0x00\n        /* \"contracts/cover/Cover.sol\":1862:1868  master */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/cover/Cover.sol\":1862:1879  master.MCRAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x88ea0751\n        /* \"contracts/cover/Cover.sol\":1862:1881  master.MCRAddress() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_107\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_107:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n        /* \"contracts/cover/Cover.sol\":1846:1882  IMCR mcr = IMCR(master.MCRAddress()) */\n      swap1\n      pop\n        /* \"contracts/cover/Cover.sol\":1892:1895  mcr */\n      dup1\n        /* \"contracts/cover/Cover.sol\":1892:1913  mcr.updateMCRInternal */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xaa5da046\n        /* \"contracts/cover/Cover.sol\":1892:1915  mcr.updateMCRInternal() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_112\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_112:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/cover/Cover.sol\":1169:1923  {... */\n      pop\n      pop\n        /* \"contracts/cover/Cover.sol\":1080:1923  function buyCover(BuyCoverParams calldata params) external payable returns (uint coverId){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/cover/Cover.sol\":1928:2027  function coverDataCount() public view returns (uint ){... */\n    tag_35:\n        /* \"contracts/cover/Cover.sol\":1975:1979  uint */\n      0x00\n        /* \"contracts/cover/Cover.sol\":1998:2006  coverNFT */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/cover/Cover.sol\":1998:2018  coverNFT.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"contracts/cover/Cover.sol\":1998:2020  coverNFT.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_115\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_115:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_116:\n        /* \"contracts/cover/Cover.sol\":1991:2020  return coverNFT.totalSupply() */\n      swap1\n      pop\n        /* \"contracts/cover/Cover.sol\":1928:2027  function coverDataCount() public view returns (uint ){... */\n      swap1\n      jump\t// out\n        /* \"contracts/cover/Cover.sol\":3956:4124  function getLiveDataUniswap(address x) public view returns (uint160){... */\n    tag_41:\n        /* \"contracts/cover/Cover.sol\":4016:4023  uint160 */\n      0x00\n        /* \"contracts/cover/Cover.sol\":4037:4051  uint160 sqrtPX */\n      dup1\n        /* \"contracts/cover/Cover.sol\":4082:4083  x */\n      dup3\n        /* \"contracts/cover/Cover.sol\":4067:4090  IUniswapV3Pool(x).slot0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3850c7bd\n        /* \"contracts/cover/Cover.sol\":4067:4092  IUniswapV3Pool(x).slot0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xe0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_119\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_119:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_120\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n        /* \"contracts/cover/Cover.sol\":4036:4092  (uint160 sqrtPX, , , , , , ) = IUniswapV3Pool(x).slot0() */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/cover/Cover.sol\":4111:4117  sqrtPX */\n      dup1\n        /* \"contracts/cover/Cover.sol\":4104:4117  return sqrtPX */\n      swap2\n      pop\n      pop\n        /* \"contracts/cover/Cover.sol\":3956:4124  function getLiveDataUniswap(address x) public view returns (uint160){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/cover/Cover.sol\":667:693  ICoverNFT public  coverNFT */\n    tag_46:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/cover/Cover.sol\":3653:3739  function decActiveCoverInETH(uint dec) public {... */\n    tag_52:\n        /* \"contracts/cover/Cover.sol\":3729:3732  dec */\n      dup1\n        /* \"contracts/cover/Cover.sol\":3708:3725  activeCoverAmount */\n      0x01\n      0x00\n        /* \"contracts/cover/Cover.sol\":3708:3732  activeCoverAmount -= dec */\n      dup3\n      dup3\n      sload\n      tag_123\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/cover/Cover.sol\":3653:3739  function decActiveCoverInETH(uint dec) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/cover/Cover.sol\":602:634  uint256 public activeCoverAmount */\n    tag_55:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/cover/Cover.sol\":2032:2156  function coverAmountInETH(BuyCoverParams calldata params) public  returns (uint amount){... */\n    tag_60:\n        /* \"contracts/cover/Cover.sol\":2107:2118  uint amount */\n      0x00\n        /* \"contracts/cover/Cover.sol\":2136:2149  1000000000000 */\n      0xe8d4a51000\n        /* \"contracts/cover/Cover.sol\":2129:2149  return 1000000000000 */\n      swap1\n      pop\n        /* \"contracts/cover/Cover.sol\":2032:2156  function coverAmountInETH(BuyCoverParams calldata params) public  returns (uint amount){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/cover/Cover.sol\":4132:4287  function getUnitPX(address x) public view returns (int){... */\n    tag_65:\n        /* \"contracts/cover/Cover.sol\":4183:4186  int */\n      0x00\n        /* \"contracts/cover/Cover.sol\":4199:4209  int unitPX */\n      dup1\n        /* \"contracts/cover/Cover.sol\":4237:4238  x */\n      dup3\n        /* \"contracts/cover/Cover.sol\":4215:4255  AggregatorV3Interface(x).latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"contracts/cover/Cover.sol\":4215:4257  AggregatorV3Interface(x).latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_128\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_128:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_129\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"contracts/cover/Cover.sol\":4197:4257  (,int unitPX,,,)= AggregatorV3Interface(x).latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/cover/Cover.sol\":4274:4280  unitPX */\n      dup1\n        /* \"contracts/cover/Cover.sol\":4267:4280  return unitPX */\n      swap2\n      pop\n      pop\n        /* \"contracts/cover/Cover.sol\":4132:4287  function getUnitPX(address x) public view returns (int){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/cover/Cover.sol\":3744:3847  function totalActiveCoverInETH() public view returns (uint256){... */\n    tag_70:\n        /* \"contracts/cover/Cover.sol\":3798:3805  uint256 */\n      0x00\n        /* \"contracts/cover/Cover.sol\":3823:3840  activeCoverAmount */\n      sload(0x01)\n        /* \"contracts/cover/Cover.sol\":3816:3840  return activeCoverAmount */\n      swap1\n      pop\n        /* \"contracts/cover/Cover.sol\":3744:3847  function totalActiveCoverInETH() public view returns (uint256){... */\n      swap1\n      jump\t// out\n        /* \"contracts/cover/Cover.sol\":641:661  Master public master */\n    tag_74:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/cover/Cover.sol\":2318:3647  function retrievePayment(uint premiumInPaymentAsset, uint paymentAsset) internal returns (bool success){... */\n    tag_103:\n        /* \"contracts/cover/Cover.sol\":2408:2420  bool success */\n      0x00\n        /* \"contracts/cover/Cover.sol\":2432:2443  IPool _pool */\n      dup1\n        /* \"contracts/cover/Cover.sol\":2446:2452  pool() */\n      tag_133\n        /* \"contracts/cover/Cover.sol\":2446:2450  pool */\n      tag_134\n        /* \"contracts/cover/Cover.sol\":2446:2452  pool() */\n      jump\t// in\n    tag_133:\n        /* \"contracts/cover/Cover.sol\":2432:2452  IPool _pool = pool() */\n      swap1\n      pop\n        /* \"contracts/cover/Cover.sol\":408:409  0 */\n      0x00\n        /* \"contracts/cover/Cover.sol\":2466:2494  paymentAsset == ETH_ASSET_ID */\n      0xffffffff\n      and\n        /* \"contracts/cover/Cover.sol\":2466:2478  paymentAsset */\n      dup4\n        /* \"contracts/cover/Cover.sol\":2466:2494  paymentAsset == ETH_ASSET_ID */\n      sub\n        /* \"contracts/cover/Cover.sol\":2462:3617  if (paymentAsset == ETH_ASSET_ID) {... */\n      tag_135\n      jumpi\n        /* \"contracts/cover/Cover.sol\":2506:2532  uint premiumWithCommission */\n      0x00\n        /* \"contracts/cover/Cover.sol\":2572:2575  100 */\n      0x64\n        /* \"contracts/cover/Cover.sol\":2550:2571  premiumInPaymentAsset */\n      dup6\n        /* \"contracts/cover/Cover.sol\":444:447  101 */\n      0x65\n        /* \"contracts/cover/Cover.sol\":2535:2571  commissionRate*premiumInPaymentAsset */\n      0xffffffff\n      and\n      tag_136\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n        /* \"contracts/cover/Cover.sol\":2535:2575  commissionRate*premiumInPaymentAsset/100 */\n      tag_138\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n        /* \"contracts/cover/Cover.sol\":2506:2575  uint premiumWithCommission = commissionRate*premiumInPaymentAsset/100 */\n      swap1\n      pop\n        /* \"contracts/cover/Cover.sol\":2605:2626  premiumInPaymentAsset */\n      dup5\n        /* \"contracts/cover/Cover.sol\":2593:2602  msg.value */\n      callvalue\n        /* \"contracts/cover/Cover.sol\":2593:2626  msg.value < premiumInPaymentAsset */\n      lt\n        /* \"contracts/cover/Cover.sol\":2589:2685  if (msg.value < premiumInPaymentAsset) {... */\n      iszero\n      tag_140\n      jumpi\n        /* \"contracts/cover/Cover.sol\":2653:2674  InsufficientEthSent() */\n      mload(0x40)\n      0xf244866f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/cover/Cover.sol\":2589:2685  if (msg.value < premiumInPaymentAsset) {... */\n    tag_140:\n        /* \"contracts/cover/Cover.sol\":2696:2710  uint remainder */\n      0x00\n        /* \"contracts/cover/Cover.sol\":2725:2746  premiumWithCommission */\n      dup2\n        /* \"contracts/cover/Cover.sol\":2713:2722  msg.value */\n      callvalue\n        /* \"contracts/cover/Cover.sol\":2713:2746  msg.value - premiumWithCommission */\n      tag_141\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_141:\n        /* \"contracts/cover/Cover.sol\":2696:2746  uint remainder = msg.value - premiumWithCommission */\n      swap1\n      pop\n        /* \"contracts/cover/Cover.sol\":2867:2874  bool ok */\n      0x00\n        /* \"contracts/cover/Cover.sol\":2898:2903  _pool */\n      dup4\n        /* \"contracts/cover/Cover.sol\":2890:2909  address(_pool).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/cover/Cover.sol\":2917:2938  premiumInPaymentAsset */\n      dup8\n        /* \"contracts/cover/Cover.sol\":2890:2943  address(_pool).call{value: premiumInPaymentAsset}(\"\") */\n      mload(0x40)\n      tag_142\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_146\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_145)\n    tag_146:\n      0x60\n      swap2\n      pop\n    tag_145:\n      pop\n        /* \"contracts/cover/Cover.sol\":2866:2943  (bool ok, /* data */) = address(_pool).call{value: premiumInPaymentAsset}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/cover/Cover.sol\":2958:2960  ok */\n      dup1\n        /* \"contracts/cover/Cover.sol\":2953:3016  if (!ok) {... */\n      tag_147\n      jumpi\n        /* \"contracts/cover/Cover.sol\":2981:3005  SendingEthToPoolFailed() */\n      mload(0x40)\n      0xab1ee9bf00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/cover/Cover.sol\":2953:3016  if (!ok) {... */\n    tag_147:\n        /* \"contracts/cover/Cover.sol\":2754:3024  {... */\n      pop\n        /* \"contracts/cover/Cover.sol\":3109:3110  0 */\n      0x00\n        /* \"contracts/cover/Cover.sol\":3085:3106  premiumInPaymentAsset */\n      dup7\n        /* \"contracts/cover/Cover.sol\":3061:3082  premiumWithCommission */\n      dup4\n        /* \"contracts/cover/Cover.sol\":3061:3106  premiumWithCommission - premiumInPaymentAsset */\n      tag_148\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_148:\n        /* \"contracts/cover/Cover.sol\":3061:3110  premiumWithCommission - premiumInPaymentAsset > 0 */\n      gt\n        /* \"contracts/cover/Cover.sol\":3057:3346  if (premiumWithCommission - premiumInPaymentAsset > 0) {... */\n      iszero\n      tag_149\n      jumpi\n        /* \"contracts/cover/Cover.sol\":3123:3130  bool ok */\n      0x00\n        /* \"contracts/cover/Cover.sol\":3154:3160  master */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/cover/Cover.sol\":3154:3182  master.CommissionDestination */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7abc3964\n        /* \"contracts/cover/Cover.sol\":3154:3184  master.CommissionDestination() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_151\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_151:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_152\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_152:\n        /* \"contracts/cover/Cover.sol\":3146:3190  address(master.CommissionDestination()).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/cover/Cover.sol\":3222:3243  premiumInPaymentAsset */\n      dup8\n        /* \"contracts/cover/Cover.sol\":3198:3219  premiumWithCommission */\n      dup5\n        /* \"contracts/cover/Cover.sol\":3198:3243  premiumWithCommission - premiumInPaymentAsset */\n      tag_153\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_153:\n        /* \"contracts/cover/Cover.sol\":3146:3248  address(master.CommissionDestination()).call{value: premiumWithCommission - premiumInPaymentAsset}(\"\") */\n      mload(0x40)\n      tag_154\n      swap1\n      tag_143\n      jump\t// in\n    tag_154:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_157\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_156)\n    tag_157:\n      0x60\n      swap2\n      pop\n    tag_156:\n      pop\n        /* \"contracts/cover/Cover.sol\":3122:3248  (bool ok, /* data */) = address(master.CommissionDestination()).call{value: premiumWithCommission - premiumInPaymentAsset}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/cover/Cover.sol\":3263:3265  ok */\n      dup1\n        /* \"contracts/cover/Cover.sol\":3258:3338  if (!ok) {... */\n      tag_158\n      jumpi\n        /* \"contracts/cover/Cover.sol\":3286:3327  SendingEthToCommissionDestinationFailed() */\n      mload(0x40)\n      0x204633a400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/cover/Cover.sol\":3258:3338  if (!ok) {... */\n    tag_158:\n        /* \"contracts/cover/Cover.sol\":3112:3346  {... */\n      pop\n        /* \"contracts/cover/Cover.sol\":3057:3346  if (premiumWithCommission - premiumInPaymentAsset > 0) {... */\n    tag_149:\n        /* \"contracts/cover/Cover.sol\":3370:3371  0 */\n      0x00\n        /* \"contracts/cover/Cover.sol\":3358:3367  remainder */\n      dup2\n        /* \"contracts/cover/Cover.sol\":3358:3371  remainder > 0 */\n      gt\n        /* \"contracts/cover/Cover.sol\":3354:3606  if (remainder > 0) {... */\n      iszero\n      tag_159\n      jumpi\n        /* \"contracts/cover/Cover.sol\":3443:3450  bool ok */\n      0x00\n        /* \"contracts/cover/Cover.sol\":3474:3484  msg.sender */\n      caller\n        /* \"contracts/cover/Cover.sol\":3466:3490  address(msg.sender).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/cover/Cover.sol\":3498:3507  remainder */\n      dup3\n        /* \"contracts/cover/Cover.sol\":3466:3512  address(msg.sender).call{value: remainder}(\"\") */\n      mload(0x40)\n      tag_160\n      swap1\n      tag_143\n      jump\t// in\n    tag_160:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_163\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_162)\n    tag_163:\n      0x60\n      swap2\n      pop\n    tag_162:\n      pop\n        /* \"contracts/cover/Cover.sol\":3442:3512  (bool ok, /* data */) = address(msg.sender).call{value: remainder}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/cover/Cover.sol\":3527:3529  ok */\n      dup1\n        /* \"contracts/cover/Cover.sol\":3522:3598  if (!ok) {... */\n      tag_164\n      jumpi\n        /* \"contracts/cover/Cover.sol\":3550:3587  ReturningEthRemainderToSenderFailed() */\n      mload(0x40)\n      0xcd57d4da00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/cover/Cover.sol\":3522:3598  if (!ok) {... */\n    tag_164:\n        /* \"contracts/cover/Cover.sol\":3373:3606  {... */\n      pop\n        /* \"contracts/cover/Cover.sol\":3354:3606  if (remainder > 0) {... */\n    tag_159:\n        /* \"contracts/cover/Cover.sol\":2496:3617  {... */\n      pop\n      pop\n        /* \"contracts/cover/Cover.sol\":2462:3617  if (paymentAsset == ETH_ASSET_ID) {... */\n    tag_135:\n        /* \"contracts/cover/Cover.sol\":2421:3647  {... */\n      pop\n        /* \"contracts/cover/Cover.sol\":2318:3647  function retrievePayment(uint premiumInPaymentAsset, uint paymentAsset) internal returns (bool success){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/cover/Cover.sol\":3853:3950  function pool() internal view returns (IPool) {... */\n    tag_134:\n        /* \"contracts/cover/Cover.sol\":3892:3897  IPool */\n      0x00\n        /* \"contracts/cover/Cover.sol\":3922:3928  master */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/cover/Cover.sol\":3922:3940  master.PoolAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9ccc903d\n        /* \"contracts/cover/Cover.sol\":3922:3942  master.PoolAddress() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_167\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_167:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_168\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_168:\n        /* \"contracts/cover/Cover.sol\":3909:3943  return IPool(master.PoolAddress()) */\n      swap1\n      pop\n        /* \"contracts/cover/Cover.sol\":3853:3950  function pool() internal view returns (IPool) {... */\n      swap1\n      jump\t// out\n    tag_78:\n      mload(0x40)\n      dup1\n      0x0180\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_170:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_171:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_172:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_173:\n        /* \"#utility.yul\":490:514   */\n      tag_252\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_172\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_253\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_253:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_174:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_255\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_173\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_18:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_257\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_258\n      tag_170\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":766:885   */\n    tag_257:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_259\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_174\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1133   */\n    tag_175:\n        /* \"#utility.yul\":1102:1126   */\n      tag_261\n        /* \"#utility.yul\":1120:1125   */\n      dup2\n        /* \"#utility.yul\":1102:1126   */\n      tag_172\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":1097:1100   */\n      dup3\n        /* \"#utility.yul\":1090:1127   */\n      mstore\n        /* \"#utility.yul\":1025:1133   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1139:1265   */\n    tag_176:\n        /* \"#utility.yul\":1176:1183   */\n      0x00\n        /* \"#utility.yul\":1216:1258   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1209:1214   */\n      dup3\n        /* \"#utility.yul\":1205:1259   */\n      and\n        /* \"#utility.yul\":1194:1259   */\n      swap1\n      pop\n        /* \"#utility.yul\":1139:1265   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1271:1367   */\n    tag_177:\n        /* \"#utility.yul\":1308:1315   */\n      0x00\n        /* \"#utility.yul\":1337:1361   */\n      tag_264\n        /* \"#utility.yul\":1355:1360   */\n      dup3\n        /* \"#utility.yul\":1337:1361   */\n      tag_176\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":1326:1361   */\n      swap1\n      pop\n        /* \"#utility.yul\":1271:1367   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1373:1481   */\n    tag_178:\n        /* \"#utility.yul\":1450:1474   */\n      tag_266\n        /* \"#utility.yul\":1468:1473   */\n      dup2\n        /* \"#utility.yul\":1450:1474   */\n      tag_177\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":1445:1448   */\n      dup3\n        /* \"#utility.yul\":1438:1475   */\n      mstore\n        /* \"#utility.yul\":1373:1481   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1487:1586   */\n    tag_179:\n        /* \"#utility.yul\":1539:1545   */\n      0x00\n        /* \"#utility.yul\":1573:1578   */\n      dup2\n        /* \"#utility.yul\":1567:1579   */\n      mload\n        /* \"#utility.yul\":1557:1579   */\n      swap1\n      pop\n        /* \"#utility.yul\":1487:1586   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1592:1751   */\n    tag_180:\n        /* \"#utility.yul\":1666:1677   */\n      0x00\n        /* \"#utility.yul\":1700:1706   */\n      dup3\n        /* \"#utility.yul\":1695:1698   */\n      dup3\n        /* \"#utility.yul\":1688:1707   */\n      mstore\n        /* \"#utility.yul\":1740:1744   */\n      0x20\n        /* \"#utility.yul\":1735:1738   */\n      dup3\n        /* \"#utility.yul\":1731:1745   */\n      add\n        /* \"#utility.yul\":1716:1745   */\n      swap1\n      pop\n        /* \"#utility.yul\":1592:1751   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1757:2003   */\n    tag_181:\n        /* \"#utility.yul\":1838:1839   */\n      0x00\n        /* \"#utility.yul\":1848:1961   */\n    tag_270:\n        /* \"#utility.yul\":1862:1868   */\n      dup4\n        /* \"#utility.yul\":1859:1860   */\n      dup2\n        /* \"#utility.yul\":1856:1869   */\n      lt\n        /* \"#utility.yul\":1848:1961   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":1947:1948   */\n      dup1\n        /* \"#utility.yul\":1942:1945   */\n      dup3\n        /* \"#utility.yul\":1938:1949   */\n      add\n        /* \"#utility.yul\":1932:1950   */\n      mload\n        /* \"#utility.yul\":1928:1929   */\n      dup2\n        /* \"#utility.yul\":1923:1926   */\n      dup5\n        /* \"#utility.yul\":1919:1930   */\n      add\n        /* \"#utility.yul\":1912:1951   */\n      mstore\n        /* \"#utility.yul\":1884:1886   */\n      0x20\n        /* \"#utility.yul\":1881:1882   */\n      dup2\n        /* \"#utility.yul\":1877:1887   */\n      add\n        /* \"#utility.yul\":1872:1887   */\n      swap1\n      pop\n        /* \"#utility.yul\":1848:1961   */\n      jump(tag_270)\n    tag_272:\n        /* \"#utility.yul\":1995:1996   */\n      0x00\n        /* \"#utility.yul\":1986:1992   */\n      dup5\n        /* \"#utility.yul\":1981:1984   */\n      dup5\n        /* \"#utility.yul\":1977:1993   */\n      add\n        /* \"#utility.yul\":1970:1997   */\n      mstore\n        /* \"#utility.yul\":1819:2003   */\n      pop\n        /* \"#utility.yul\":1757:2003   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2009:2111   */\n    tag_182:\n        /* \"#utility.yul\":2050:2056   */\n      0x00\n        /* \"#utility.yul\":2101:2103   */\n      0x1f\n        /* \"#utility.yul\":2097:2104   */\n      not\n        /* \"#utility.yul\":2092:2094   */\n      0x1f\n        /* \"#utility.yul\":2085:2090   */\n      dup4\n        /* \"#utility.yul\":2081:2095   */\n      add\n        /* \"#utility.yul\":2077:2105   */\n      and\n        /* \"#utility.yul\":2067:2105   */\n      swap1\n      pop\n        /* \"#utility.yul\":2009:2111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2117:2474   */\n    tag_183:\n        /* \"#utility.yul\":2195:2198   */\n      0x00\n        /* \"#utility.yul\":2223:2262   */\n      tag_275\n        /* \"#utility.yul\":2256:2261   */\n      dup3\n        /* \"#utility.yul\":2223:2262   */\n      tag_179\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":2278:2339   */\n      tag_276\n        /* \"#utility.yul\":2332:2338   */\n      dup2\n        /* \"#utility.yul\":2327:2330   */\n      dup6\n        /* \"#utility.yul\":2278:2339   */\n      tag_180\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":2271:2339   */\n      swap4\n      pop\n        /* \"#utility.yul\":2348:2413   */\n      tag_277\n        /* \"#utility.yul\":2406:2412   */\n      dup2\n        /* \"#utility.yul\":2401:2404   */\n      dup6\n        /* \"#utility.yul\":2394:2398   */\n      0x20\n        /* \"#utility.yul\":2387:2392   */\n      dup7\n        /* \"#utility.yul\":2383:2399   */\n      add\n        /* \"#utility.yul\":2348:2413   */\n      tag_181\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":2438:2467   */\n      tag_278\n        /* \"#utility.yul\":2460:2466   */\n      dup2\n        /* \"#utility.yul\":2438:2467   */\n      tag_182\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":2433:2436   */\n      dup5\n        /* \"#utility.yul\":2429:2468   */\n      add\n        /* \"#utility.yul\":2422:2468   */\n      swap2\n      pop\n        /* \"#utility.yul\":2199:2474   */\n      pop\n        /* \"#utility.yul\":2117:2474   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2524:4965   */\n    tag_184:\n        /* \"#utility.yul\":2645:2648   */\n      0x00\n        /* \"#utility.yul\":2681:2687   */\n      0x0180\n        /* \"#utility.yul\":2676:2679   */\n      dup4\n        /* \"#utility.yul\":2672:2688   */\n      add\n        /* \"#utility.yul\":2779:2783   */\n      0x00\n        /* \"#utility.yul\":2772:2777   */\n      dup4\n        /* \"#utility.yul\":2768:2784   */\n      add\n        /* \"#utility.yul\":2762:2785   */\n      mload\n        /* \"#utility.yul\":2798:2861   */\n      tag_280\n        /* \"#utility.yul\":2855:2859   */\n      0x00\n        /* \"#utility.yul\":2850:2853   */\n      dup7\n        /* \"#utility.yul\":2846:2860   */\n      add\n        /* \"#utility.yul\":2832:2844   */\n      dup3\n        /* \"#utility.yul\":2798:2861   */\n      tag_175\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":2698:2871   */\n      pop\n        /* \"#utility.yul\":2965:2969   */\n      0x20\n        /* \"#utility.yul\":2958:2963   */\n      dup4\n        /* \"#utility.yul\":2954:2970   */\n      add\n        /* \"#utility.yul\":2948:2971   */\n      mload\n        /* \"#utility.yul\":2984:3047   */\n      tag_281\n        /* \"#utility.yul\":3041:3045   */\n      0x20\n        /* \"#utility.yul\":3036:3039   */\n      dup7\n        /* \"#utility.yul\":3032:3046   */\n      add\n        /* \"#utility.yul\":3018:3030   */\n      dup3\n        /* \"#utility.yul\":2984:3047   */\n      tag_175\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":2881:3057   */\n      pop\n        /* \"#utility.yul\":3140:3144   */\n      0x40\n        /* \"#utility.yul\":3133:3138   */\n      dup4\n        /* \"#utility.yul\":3129:3145   */\n      add\n        /* \"#utility.yul\":3123:3146   */\n      mload\n        /* \"#utility.yul\":3159:3222   */\n      tag_282\n        /* \"#utility.yul\":3216:3220   */\n      0x40\n        /* \"#utility.yul\":3211:3214   */\n      dup7\n        /* \"#utility.yul\":3207:3221   */\n      add\n        /* \"#utility.yul\":3193:3205   */\n      dup3\n        /* \"#utility.yul\":3159:3222   */\n      tag_175\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":3067:3232   */\n      pop\n        /* \"#utility.yul\":3316:3320   */\n      0x60\n        /* \"#utility.yul\":3309:3314   */\n      dup4\n        /* \"#utility.yul\":3305:3321   */\n      add\n        /* \"#utility.yul\":3299:3322   */\n      mload\n        /* \"#utility.yul\":3335:3398   */\n      tag_283\n        /* \"#utility.yul\":3392:3396   */\n      0x60\n        /* \"#utility.yul\":3387:3390   */\n      dup7\n        /* \"#utility.yul\":3383:3397   */\n      add\n        /* \"#utility.yul\":3369:3381   */\n      dup3\n        /* \"#utility.yul\":3335:3398   */\n      tag_175\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":3242:3408   */\n      pop\n        /* \"#utility.yul\":3492:3496   */\n      0x80\n        /* \"#utility.yul\":3485:3490   */\n      dup4\n        /* \"#utility.yul\":3481:3497   */\n      add\n        /* \"#utility.yul\":3475:3498   */\n      mload\n        /* \"#utility.yul\":3511:3574   */\n      tag_284\n        /* \"#utility.yul\":3568:3572   */\n      0x80\n        /* \"#utility.yul\":3563:3566   */\n      dup7\n        /* \"#utility.yul\":3559:3573   */\n      add\n        /* \"#utility.yul\":3545:3557   */\n      dup3\n        /* \"#utility.yul\":3511:3574   */\n      tag_178\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":3418:3584   */\n      pop\n        /* \"#utility.yul\":3668:3672   */\n      0xa0\n        /* \"#utility.yul\":3661:3666   */\n      dup4\n        /* \"#utility.yul\":3657:3673   */\n      add\n        /* \"#utility.yul\":3651:3674   */\n      mload\n        /* \"#utility.yul\":3687:3750   */\n      tag_285\n        /* \"#utility.yul\":3744:3748   */\n      0xa0\n        /* \"#utility.yul\":3739:3742   */\n      dup7\n        /* \"#utility.yul\":3735:3749   */\n      add\n        /* \"#utility.yul\":3721:3733   */\n      dup3\n        /* \"#utility.yul\":3687:3750   */\n      tag_178\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":3594:3760   */\n      pop\n        /* \"#utility.yul\":3847:3851   */\n      0xc0\n        /* \"#utility.yul\":3840:3845   */\n      dup4\n        /* \"#utility.yul\":3836:3852   */\n      add\n        /* \"#utility.yul\":3830:3853   */\n      mload\n        /* \"#utility.yul\":3866:3929   */\n      tag_286\n        /* \"#utility.yul\":3923:3927   */\n      0xc0\n        /* \"#utility.yul\":3918:3921   */\n      dup7\n        /* \"#utility.yul\":3914:3928   */\n      add\n        /* \"#utility.yul\":3900:3912   */\n      dup3\n        /* \"#utility.yul\":3866:3929   */\n      tag_175\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":3770:3939   */\n      pop\n        /* \"#utility.yul\":4026:4030   */\n      0xe0\n        /* \"#utility.yul\":4019:4024   */\n      dup4\n        /* \"#utility.yul\":4015:4031   */\n      add\n        /* \"#utility.yul\":4009:4032   */\n      mload\n        /* \"#utility.yul\":4045:4108   */\n      tag_287\n        /* \"#utility.yul\":4102:4106   */\n      0xe0\n        /* \"#utility.yul\":4097:4100   */\n      dup7\n        /* \"#utility.yul\":4093:4107   */\n      add\n        /* \"#utility.yul\":4079:4091   */\n      dup3\n        /* \"#utility.yul\":4045:4108   */\n      tag_175\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":3949:4118   */\n      pop\n        /* \"#utility.yul\":4211:4217   */\n      0x0100\n        /* \"#utility.yul\":4204:4209   */\n      dup4\n        /* \"#utility.yul\":4200:4218   */\n      add\n        /* \"#utility.yul\":4194:4219   */\n      mload\n        /* \"#utility.yul\":4232:4297   */\n      tag_288\n        /* \"#utility.yul\":4289:4295   */\n      0x0100\n        /* \"#utility.yul\":4284:4287   */\n      dup7\n        /* \"#utility.yul\":4280:4296   */\n      add\n        /* \"#utility.yul\":4266:4278   */\n      dup3\n        /* \"#utility.yul\":4232:4297   */\n      tag_175\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":4128:4307   */\n      pop\n        /* \"#utility.yul\":4400:4406   */\n      0x0120\n        /* \"#utility.yul\":4393:4398   */\n      dup4\n        /* \"#utility.yul\":4389:4407   */\n      add\n        /* \"#utility.yul\":4383:4408   */\n      mload\n        /* \"#utility.yul\":4421:4486   */\n      tag_289\n        /* \"#utility.yul\":4478:4484   */\n      0x0120\n        /* \"#utility.yul\":4473:4476   */\n      dup7\n        /* \"#utility.yul\":4469:4485   */\n      add\n        /* \"#utility.yul\":4455:4467   */\n      dup3\n        /* \"#utility.yul\":4421:4486   */\n      tag_175\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":4317:4496   */\n      pop\n        /* \"#utility.yul\":4581:4587   */\n      0x0140\n        /* \"#utility.yul\":4574:4579   */\n      dup4\n        /* \"#utility.yul\":4570:4588   */\n      add\n        /* \"#utility.yul\":4564:4589   */\n      mload\n        /* \"#utility.yul\":4638:4641   */\n      dup5\n        /* \"#utility.yul\":4632:4636   */\n      dup3\n        /* \"#utility.yul\":4628:4642   */\n      sub\n        /* \"#utility.yul\":4619:4625   */\n      0x0140\n        /* \"#utility.yul\":4614:4617   */\n      dup7\n        /* \"#utility.yul\":4610:4626   */\n      add\n        /* \"#utility.yul\":4603:4643   */\n      mstore\n        /* \"#utility.yul\":4664:4737   */\n      tag_290\n        /* \"#utility.yul\":4732:4736   */\n      dup3\n        /* \"#utility.yul\":4718:4730   */\n      dup3\n        /* \"#utility.yul\":4664:4737   */\n      tag_183\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":4656:4737   */\n      swap2\n      pop\n        /* \"#utility.yul\":4506:4748   */\n      pop\n        /* \"#utility.yul\":4842:4848   */\n      0x0160\n        /* \"#utility.yul\":4835:4840   */\n      dup4\n        /* \"#utility.yul\":4831:4849   */\n      add\n        /* \"#utility.yul\":4825:4850   */\n      mload\n        /* \"#utility.yul\":4863:4928   */\n      tag_291\n        /* \"#utility.yul\":4920:4926   */\n      0x0160\n        /* \"#utility.yul\":4915:4918   */\n      dup7\n        /* \"#utility.yul\":4911:4927   */\n      add\n        /* \"#utility.yul\":4897:4909   */\n      dup3\n        /* \"#utility.yul\":4863:4928   */\n      tag_175\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":4758:4938   */\n      pop\n        /* \"#utility.yul\":4955:4959   */\n      dup1\n        /* \"#utility.yul\":4948:4959   */\n      swap2\n      pop\n        /* \"#utility.yul\":2650:4965   */\n      pop\n        /* \"#utility.yul\":2524:4965   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4971:5348   */\n    tag_21:\n        /* \"#utility.yul\":5116:5120   */\n      0x00\n        /* \"#utility.yul\":5154:5156   */\n      0x20\n        /* \"#utility.yul\":5143:5152   */\n      dup3\n        /* \"#utility.yul\":5139:5157   */\n      add\n        /* \"#utility.yul\":5131:5157   */\n      swap1\n      pop\n        /* \"#utility.yul\":5203:5212   */\n      dup2\n        /* \"#utility.yul\":5197:5201   */\n      dup2\n        /* \"#utility.yul\":5193:5213   */\n      sub\n        /* \"#utility.yul\":5189:5190   */\n      0x00\n        /* \"#utility.yul\":5178:5187   */\n      dup4\n        /* \"#utility.yul\":5174:5191   */\n      add\n        /* \"#utility.yul\":5167:5214   */\n      mstore\n        /* \"#utility.yul\":5231:5341   */\n      tag_293\n        /* \"#utility.yul\":5336:5340   */\n      dup2\n        /* \"#utility.yul\":5327:5333   */\n      dup5\n        /* \"#utility.yul\":5231:5341   */\n      tag_184\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":5223:5341   */\n      swap1\n      pop\n        /* \"#utility.yul\":4971:5348   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5354:5471   */\n    tag_185:\n        /* \"#utility.yul\":5463:5464   */\n      0x00\n        /* \"#utility.yul\":5460:5461   */\n      dup1\n        /* \"#utility.yul\":5453:5465   */\n      revert\n        /* \"#utility.yul\":5506:5744   */\n    tag_186:\n        /* \"#utility.yul\":5585:5590   */\n      0x00\n        /* \"#utility.yul\":5626:5629   */\n      0x0120\n        /* \"#utility.yul\":5617:5623   */\n      dup3\n        /* \"#utility.yul\":5612:5615   */\n      dup5\n        /* \"#utility.yul\":5608:5624   */\n      sub\n        /* \"#utility.yul\":5604:5630   */\n      slt\n        /* \"#utility.yul\":5601:5714   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":5633:5712   */\n      tag_297\n      tag_185\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":5601:5714   */\n    tag_296:\n        /* \"#utility.yul\":5732:5738   */\n      dup2\n        /* \"#utility.yul\":5723:5738   */\n      swap1\n      pop\n        /* \"#utility.yul\":5506:5744   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5750:6305   */\n    tag_25:\n        /* \"#utility.yul\":5842:5848   */\n      0x00\n        /* \"#utility.yul\":5891:5893   */\n      0x20\n        /* \"#utility.yul\":5879:5888   */\n      dup3\n        /* \"#utility.yul\":5870:5877   */\n      dup5\n        /* \"#utility.yul\":5866:5889   */\n      sub\n        /* \"#utility.yul\":5862:5894   */\n      slt\n        /* \"#utility.yul\":5859:5978   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":5897:5976   */\n      tag_300\n      tag_170\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":5859:5978   */\n    tag_299:\n        /* \"#utility.yul\":6045:6046   */\n      0x00\n        /* \"#utility.yul\":6034:6043   */\n      dup3\n        /* \"#utility.yul\":6030:6047   */\n      add\n        /* \"#utility.yul\":6017:6048   */\n      calldataload\n        /* \"#utility.yul\":6075:6093   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6067:6073   */\n      dup2\n        /* \"#utility.yul\":6064:6094   */\n      gt\n        /* \"#utility.yul\":6061:6178   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":6097:6176   */\n      tag_302\n      tag_171\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":6061:6178   */\n    tag_301:\n        /* \"#utility.yul\":6202:6288   */\n      tag_303\n        /* \"#utility.yul\":6280:6287   */\n      dup5\n        /* \"#utility.yul\":6271:6277   */\n      dup3\n        /* \"#utility.yul\":6260:6269   */\n      dup6\n        /* \"#utility.yul\":6256:6278   */\n      add\n        /* \"#utility.yul\":6202:6288   */\n      tag_186\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":6192:6288   */\n      swap2\n      pop\n        /* \"#utility.yul\":5988:6298   */\n      pop\n        /* \"#utility.yul\":5750:6305   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6311:6429   */\n    tag_187:\n        /* \"#utility.yul\":6398:6422   */\n      tag_305\n        /* \"#utility.yul\":6416:6421   */\n      dup2\n        /* \"#utility.yul\":6398:6422   */\n      tag_172\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":6393:6396   */\n      dup3\n        /* \"#utility.yul\":6386:6423   */\n      mstore\n        /* \"#utility.yul\":6311:6429   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6435:6657   */\n    tag_28:\n        /* \"#utility.yul\":6528:6532   */\n      0x00\n        /* \"#utility.yul\":6566:6568   */\n      0x20\n        /* \"#utility.yul\":6555:6564   */\n      dup3\n        /* \"#utility.yul\":6551:6569   */\n      add\n        /* \"#utility.yul\":6543:6569   */\n      swap1\n      pop\n        /* \"#utility.yul\":6579:6650   */\n      tag_307\n        /* \"#utility.yul\":6647:6648   */\n      0x00\n        /* \"#utility.yul\":6636:6645   */\n      dup4\n        /* \"#utility.yul\":6632:6649   */\n      add\n        /* \"#utility.yul\":6623:6629   */\n      dup5\n        /* \"#utility.yul\":6579:6650   */\n      tag_187\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":6435:6657   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6663:6785   */\n    tag_188:\n        /* \"#utility.yul\":6736:6760   */\n      tag_309\n        /* \"#utility.yul\":6754:6759   */\n      dup2\n        /* \"#utility.yul\":6736:6760   */\n      tag_177\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":6729:6734   */\n      dup2\n        /* \"#utility.yul\":6726:6761   */\n      eq\n        /* \"#utility.yul\":6716:6779   */\n      tag_310\n      jumpi\n        /* \"#utility.yul\":6775:6776   */\n      0x00\n        /* \"#utility.yul\":6772:6773   */\n      dup1\n        /* \"#utility.yul\":6765:6777   */\n      revert\n        /* \"#utility.yul\":6716:6779   */\n    tag_310:\n        /* \"#utility.yul\":6663:6785   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6791:6930   */\n    tag_189:\n        /* \"#utility.yul\":6837:6842   */\n      0x00\n        /* \"#utility.yul\":6875:6881   */\n      dup2\n        /* \"#utility.yul\":6862:6882   */\n      calldataload\n        /* \"#utility.yul\":6853:6882   */\n      swap1\n      pop\n        /* \"#utility.yul\":6891:6924   */\n      tag_312\n        /* \"#utility.yul\":6918:6923   */\n      dup2\n        /* \"#utility.yul\":6891:6924   */\n      tag_188\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":6791:6930   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6936:7265   */\n    tag_40:\n        /* \"#utility.yul\":6995:7001   */\n      0x00\n        /* \"#utility.yul\":7044:7046   */\n      0x20\n        /* \"#utility.yul\":7032:7041   */\n      dup3\n        /* \"#utility.yul\":7023:7030   */\n      dup5\n        /* \"#utility.yul\":7019:7042   */\n      sub\n        /* \"#utility.yul\":7015:7047   */\n      slt\n        /* \"#utility.yul\":7012:7131   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":7050:7129   */\n      tag_315\n      tag_170\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":7012:7131   */\n    tag_314:\n        /* \"#utility.yul\":7170:7171   */\n      0x00\n        /* \"#utility.yul\":7195:7248   */\n      tag_316\n        /* \"#utility.yul\":7240:7247   */\n      dup5\n        /* \"#utility.yul\":7231:7237   */\n      dup3\n        /* \"#utility.yul\":7220:7229   */\n      dup6\n        /* \"#utility.yul\":7216:7238   */\n      add\n        /* \"#utility.yul\":7195:7248   */\n      tag_189\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":7185:7248   */\n      swap2\n      pop\n        /* \"#utility.yul\":7141:7258   */\n      pop\n        /* \"#utility.yul\":6936:7265   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7271:7389   */\n    tag_190:\n        /* \"#utility.yul\":7358:7382   */\n      tag_318\n        /* \"#utility.yul\":7376:7381   */\n      dup2\n        /* \"#utility.yul\":7358:7382   */\n      tag_176\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":7353:7356   */\n      dup3\n        /* \"#utility.yul\":7346:7383   */\n      mstore\n        /* \"#utility.yul\":7271:7389   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7395:7617   */\n    tag_43:\n        /* \"#utility.yul\":7488:7492   */\n      0x00\n        /* \"#utility.yul\":7526:7528   */\n      0x20\n        /* \"#utility.yul\":7515:7524   */\n      dup3\n        /* \"#utility.yul\":7511:7529   */\n      add\n        /* \"#utility.yul\":7503:7529   */\n      swap1\n      pop\n        /* \"#utility.yul\":7539:7610   */\n      tag_320\n        /* \"#utility.yul\":7607:7608   */\n      0x00\n        /* \"#utility.yul\":7596:7605   */\n      dup4\n        /* \"#utility.yul\":7592:7609   */\n      add\n        /* \"#utility.yul\":7583:7589   */\n      dup5\n        /* \"#utility.yul\":7539:7610   */\n      tag_190\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":7395:7617   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7623:7683   */\n    tag_191:\n        /* \"#utility.yul\":7651:7654   */\n      0x00\n        /* \"#utility.yul\":7672:7677   */\n      dup2\n        /* \"#utility.yul\":7665:7677   */\n      swap1\n      pop\n        /* \"#utility.yul\":7623:7683   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7689:7831   */\n    tag_192:\n        /* \"#utility.yul\":7739:7748   */\n      0x00\n        /* \"#utility.yul\":7772:7825   */\n      tag_323\n        /* \"#utility.yul\":7790:7824   */\n      tag_324\n        /* \"#utility.yul\":7799:7823   */\n      tag_325\n        /* \"#utility.yul\":7817:7822   */\n      dup5\n        /* \"#utility.yul\":7799:7823   */\n      tag_176\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":7790:7824   */\n      tag_191\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":7772:7825   */\n      tag_176\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":7759:7825   */\n      swap1\n      pop\n        /* \"#utility.yul\":7689:7831   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7837:7963   */\n    tag_193:\n        /* \"#utility.yul\":7887:7896   */\n      0x00\n        /* \"#utility.yul\":7920:7957   */\n      tag_327\n        /* \"#utility.yul\":7951:7956   */\n      dup3\n        /* \"#utility.yul\":7920:7957   */\n      tag_192\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":7907:7957   */\n      swap1\n      pop\n        /* \"#utility.yul\":7837:7963   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7969:8113   */\n    tag_194:\n        /* \"#utility.yul\":8037:8046   */\n      0x00\n        /* \"#utility.yul\":8070:8107   */\n      tag_329\n        /* \"#utility.yul\":8101:8106   */\n      dup3\n        /* \"#utility.yul\":8070:8107   */\n      tag_193\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":8057:8107   */\n      swap1\n      pop\n        /* \"#utility.yul\":7969:8113   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8119:8286   */\n    tag_195:\n        /* \"#utility.yul\":8224:8279   */\n      tag_331\n        /* \"#utility.yul\":8273:8278   */\n      dup2\n        /* \"#utility.yul\":8224:8279   */\n      tag_194\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":8219:8222   */\n      dup3\n        /* \"#utility.yul\":8212:8280   */\n      mstore\n        /* \"#utility.yul\":8119:8286   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8292:8550   */\n    tag_48:\n        /* \"#utility.yul\":8403:8407   */\n      0x00\n        /* \"#utility.yul\":8441:8443   */\n      0x20\n        /* \"#utility.yul\":8430:8439   */\n      dup3\n        /* \"#utility.yul\":8426:8444   */\n      add\n        /* \"#utility.yul\":8418:8444   */\n      swap1\n      pop\n        /* \"#utility.yul\":8454:8543   */\n      tag_333\n        /* \"#utility.yul\":8540:8541   */\n      0x00\n        /* \"#utility.yul\":8529:8538   */\n      dup4\n        /* \"#utility.yul\":8525:8542   */\n      add\n        /* \"#utility.yul\":8516:8522   */\n      dup5\n        /* \"#utility.yul\":8454:8543   */\n      tag_195\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":8292:8550   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8556:8632   */\n    tag_196:\n        /* \"#utility.yul\":8592:8599   */\n      0x00\n        /* \"#utility.yul\":8621:8626   */\n      dup2\n        /* \"#utility.yul\":8610:8626   */\n      swap1\n      pop\n        /* \"#utility.yul\":8556:8632   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8638:8753   */\n    tag_197:\n        /* \"#utility.yul\":8723:8746   */\n      tag_336\n        /* \"#utility.yul\":8740:8745   */\n      dup2\n        /* \"#utility.yul\":8723:8746   */\n      tag_196\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":8718:8721   */\n      dup3\n        /* \"#utility.yul\":8711:8747   */\n      mstore\n        /* \"#utility.yul\":8638:8753   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8759:8977   */\n    tag_67:\n        /* \"#utility.yul\":8850:8854   */\n      0x00\n        /* \"#utility.yul\":8888:8890   */\n      0x20\n        /* \"#utility.yul\":8877:8886   */\n      dup3\n        /* \"#utility.yul\":8873:8891   */\n      add\n        /* \"#utility.yul\":8865:8891   */\n      swap1\n      pop\n        /* \"#utility.yul\":8901:8970   */\n      tag_338\n        /* \"#utility.yul\":8967:8968   */\n      0x00\n        /* \"#utility.yul\":8956:8965   */\n      dup4\n        /* \"#utility.yul\":8952:8969   */\n      add\n        /* \"#utility.yul\":8943:8949   */\n      dup5\n        /* \"#utility.yul\":8901:8970   */\n      tag_197\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":8759:8977   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8983:9123   */\n    tag_198:\n        /* \"#utility.yul\":9047:9056   */\n      0x00\n        /* \"#utility.yul\":9080:9117   */\n      tag_340\n        /* \"#utility.yul\":9111:9116   */\n      dup3\n        /* \"#utility.yul\":9080:9117   */\n      tag_193\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":9067:9117   */\n      swap1\n      pop\n        /* \"#utility.yul\":8983:9123   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9129:9288   */\n    tag_199:\n        /* \"#utility.yul\":9230:9281   */\n      tag_342\n        /* \"#utility.yul\":9275:9280   */\n      dup2\n        /* \"#utility.yul\":9230:9281   */\n      tag_198\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":9225:9228   */\n      dup3\n        /* \"#utility.yul\":9218:9282   */\n      mstore\n        /* \"#utility.yul\":9129:9288   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9294:9544   */\n    tag_76:\n        /* \"#utility.yul\":9401:9405   */\n      0x00\n        /* \"#utility.yul\":9439:9441   */\n      0x20\n        /* \"#utility.yul\":9428:9437   */\n      dup3\n        /* \"#utility.yul\":9424:9442   */\n      add\n        /* \"#utility.yul\":9416:9442   */\n      swap1\n      pop\n        /* \"#utility.yul\":9452:9537   */\n      tag_344\n        /* \"#utility.yul\":9534:9535   */\n      0x00\n        /* \"#utility.yul\":9523:9532   */\n      dup4\n        /* \"#utility.yul\":9519:9536   */\n      add\n        /* \"#utility.yul\":9510:9516   */\n      dup5\n        /* \"#utility.yul\":9452:9537   */\n      tag_199\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":9294:9544   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9550:9730   */\n    tag_200:\n        /* \"#utility.yul\":9598:9675   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9595:9596   */\n      0x00\n        /* \"#utility.yul\":9588:9676   */\n      mstore\n        /* \"#utility.yul\":9695:9699   */\n      0x22\n        /* \"#utility.yul\":9692:9693   */\n      0x04\n        /* \"#utility.yul\":9685:9700   */\n      mstore\n        /* \"#utility.yul\":9719:9723   */\n      0x24\n        /* \"#utility.yul\":9716:9717   */\n      0x00\n        /* \"#utility.yul\":9709:9724   */\n      revert\n        /* \"#utility.yul\":9736:10056   */\n    tag_81:\n        /* \"#utility.yul\":9780:9786   */\n      0x00\n        /* \"#utility.yul\":9817:9818   */\n      0x02\n        /* \"#utility.yul\":9811:9815   */\n      dup3\n        /* \"#utility.yul\":9807:9819   */\n      div\n        /* \"#utility.yul\":9797:9819   */\n      swap1\n      pop\n        /* \"#utility.yul\":9864:9865   */\n      0x01\n        /* \"#utility.yul\":9858:9862   */\n      dup3\n        /* \"#utility.yul\":9854:9866   */\n      and\n        /* \"#utility.yul\":9885:9903   */\n      dup1\n        /* \"#utility.yul\":9875:9956   */\n      tag_347\n      jumpi\n        /* \"#utility.yul\":9941:9945   */\n      0x7f\n        /* \"#utility.yul\":9933:9939   */\n      dup3\n        /* \"#utility.yul\":9929:9946   */\n      and\n        /* \"#utility.yul\":9919:9946   */\n      swap2\n      pop\n        /* \"#utility.yul\":9875:9956   */\n    tag_347:\n        /* \"#utility.yul\":10003:10005   */\n      0x20\n        /* \"#utility.yul\":9995:10001   */\n      dup3\n        /* \"#utility.yul\":9992:10006   */\n      lt\n        /* \"#utility.yul\":9972:9990   */\n      dup2\n        /* \"#utility.yul\":9969:10007   */\n      sub\n        /* \"#utility.yul\":9966:10050   */\n      tag_348\n      jumpi\n        /* \"#utility.yul\":10022:10040   */\n      tag_349\n      tag_200\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":9966:10050   */\n    tag_348:\n        /* \"#utility.yul\":9787:10056   */\n      pop\n        /* \"#utility.yul\":9736:10056   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10062:10180   */\n    tag_201:\n        /* \"#utility.yul\":10149:10173   */\n      tag_351\n        /* \"#utility.yul\":10167:10172   */\n      dup2\n        /* \"#utility.yul\":10149:10173   */\n      tag_177\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":10144:10147   */\n      dup3\n        /* \"#utility.yul\":10137:10174   */\n      mstore\n        /* \"#utility.yul\":10062:10180   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10186:10408   */\n    tag_89:\n        /* \"#utility.yul\":10279:10283   */\n      0x00\n        /* \"#utility.yul\":10317:10319   */\n      0x20\n        /* \"#utility.yul\":10306:10315   */\n      dup3\n        /* \"#utility.yul\":10302:10320   */\n      add\n        /* \"#utility.yul\":10294:10320   */\n      swap1\n      pop\n        /* \"#utility.yul\":10330:10401   */\n      tag_353\n        /* \"#utility.yul\":10398:10399   */\n      0x00\n        /* \"#utility.yul\":10387:10396   */\n      dup4\n        /* \"#utility.yul\":10383:10400   */\n      add\n        /* \"#utility.yul\":10374:10380   */\n      dup5\n        /* \"#utility.yul\":10330:10401   */\n      tag_201\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":10186:10408   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10414:10557   */\n    tag_202:\n        /* \"#utility.yul\":10471:10476   */\n      0x00\n        /* \"#utility.yul\":10502:10508   */\n      dup2\n        /* \"#utility.yul\":10496:10509   */\n      mload\n        /* \"#utility.yul\":10487:10509   */\n      swap1\n      pop\n        /* \"#utility.yul\":10518:10551   */\n      tag_355\n        /* \"#utility.yul\":10545:10550   */\n      dup2\n        /* \"#utility.yul\":10518:10551   */\n      tag_173\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":10414:10557   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10563:10914   */\n    tag_93:\n        /* \"#utility.yul\":10633:10639   */\n      0x00\n        /* \"#utility.yul\":10682:10684   */\n      0x20\n        /* \"#utility.yul\":10670:10679   */\n      dup3\n        /* \"#utility.yul\":10661:10668   */\n      dup5\n        /* \"#utility.yul\":10657:10680   */\n      sub\n        /* \"#utility.yul\":10653:10685   */\n      slt\n        /* \"#utility.yul\":10650:10769   */\n      iszero\n      tag_357\n      jumpi\n        /* \"#utility.yul\":10688:10767   */\n      tag_358\n      tag_170\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":10650:10769   */\n    tag_357:\n        /* \"#utility.yul\":10808:10809   */\n      0x00\n        /* \"#utility.yul\":10833:10897   */\n      tag_359\n        /* \"#utility.yul\":10889:10896   */\n      dup5\n        /* \"#utility.yul\":10880:10886   */\n      dup3\n        /* \"#utility.yul\":10869:10878   */\n      dup6\n        /* \"#utility.yul\":10865:10887   */\n      add\n        /* \"#utility.yul\":10833:10897   */\n      tag_202\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":10823:10897   */\n      swap2\n      pop\n        /* \"#utility.yul\":10779:10907   */\n      pop\n        /* \"#utility.yul\":10563:10914   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10920:11037   */\n    tag_203:\n        /* \"#utility.yul\":11029:11030   */\n      0x00\n        /* \"#utility.yul\":11026:11027   */\n      dup1\n        /* \"#utility.yul\":11019:11031   */\n      revert\n        /* \"#utility.yul\":11043:11160   */\n    tag_204:\n        /* \"#utility.yul\":11152:11153   */\n      0x00\n        /* \"#utility.yul\":11149:11150   */\n      dup1\n        /* \"#utility.yul\":11142:11154   */\n      revert\n        /* \"#utility.yul\":11166:11283   */\n    tag_205:\n        /* \"#utility.yul\":11275:11276   */\n      0x00\n        /* \"#utility.yul\":11272:11273   */\n      dup1\n        /* \"#utility.yul\":11265:11277   */\n      revert\n        /* \"#utility.yul\":11289:12014   */\n    tag_98:\n        /* \"#utility.yul\":11367:11371   */\n      0x00\n        /* \"#utility.yul\":11373:11379   */\n      dup1\n        /* \"#utility.yul\":11429:11440   */\n      dup4\n        /* \"#utility.yul\":11416:11441   */\n      calldataload\n        /* \"#utility.yul\":11529:11530   */\n      0x01\n        /* \"#utility.yul\":11523:11527   */\n      0x20\n        /* \"#utility.yul\":11519:11531   */\n      sub\n        /* \"#utility.yul\":11508:11516   */\n      dup5\n        /* \"#utility.yul\":11492:11506   */\n      calldatasize\n        /* \"#utility.yul\":11488:11517   */\n      sub\n        /* \"#utility.yul\":11484:11532   */\n      sub\n        /* \"#utility.yul\":11464:11482   */\n      dup2\n        /* \"#utility.yul\":11460:11533   */\n      slt\n        /* \"#utility.yul\":11450:11618   */\n      tag_364\n      jumpi\n        /* \"#utility.yul\":11537:11616   */\n      tag_365\n      tag_203\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":11450:11618   */\n    tag_364:\n        /* \"#utility.yul\":11649:11667   */\n      dup1\n        /* \"#utility.yul\":11639:11647   */\n      dup5\n        /* \"#utility.yul\":11635:11668   */\n      add\n        /* \"#utility.yul\":11627:11668   */\n      swap3\n      pop\n        /* \"#utility.yul\":11701:11705   */\n      dup3\n        /* \"#utility.yul\":11688:11706   */\n      calldataload\n        /* \"#utility.yul\":11678:11706   */\n      swap2\n      pop\n        /* \"#utility.yul\":11729:11747   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11721:11727   */\n      dup3\n        /* \"#utility.yul\":11718:11748   */\n      gt\n        /* \"#utility.yul\":11715:11832   */\n      iszero\n      tag_366\n      jumpi\n        /* \"#utility.yul\":11751:11830   */\n      tag_367\n      tag_204\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":11715:11832   */\n    tag_366:\n        /* \"#utility.yul\":11859:11861   */\n      0x20\n        /* \"#utility.yul\":11853:11857   */\n      dup4\n        /* \"#utility.yul\":11849:11862   */\n      add\n        /* \"#utility.yul\":11841:11862   */\n      swap3\n      pop\n        /* \"#utility.yul\":11916:11920   */\n      0x01\n        /* \"#utility.yul\":11908:11914   */\n      dup3\n        /* \"#utility.yul\":11904:11921   */\n      mul\n        /* \"#utility.yul\":11888:11902   */\n      calldatasize\n        /* \"#utility.yul\":11884:11922   */\n      sub\n        /* \"#utility.yul\":11878:11882   */\n      dup4\n        /* \"#utility.yul\":11874:11923   */\n      sgt\n        /* \"#utility.yul\":11871:12007   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":11926:12005   */\n      tag_369\n      tag_205\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":11871:12007   */\n    tag_368:\n        /* \"#utility.yul\":11380:12014   */\n      pop\n        /* \"#utility.yul\":11289:12014   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12020:12200   */\n    tag_206:\n        /* \"#utility.yul\":12068:12145   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12065:12066   */\n      0x00\n        /* \"#utility.yul\":12058:12146   */\n      mstore\n        /* \"#utility.yul\":12165:12169   */\n      0x41\n        /* \"#utility.yul\":12162:12163   */\n      0x04\n        /* \"#utility.yul\":12155:12170   */\n      mstore\n        /* \"#utility.yul\":12189:12193   */\n      0x24\n        /* \"#utility.yul\":12186:12187   */\n      0x00\n        /* \"#utility.yul\":12179:12194   */\n      revert\n        /* \"#utility.yul\":12206:12347   */\n    tag_207:\n        /* \"#utility.yul\":12255:12259   */\n      0x00\n        /* \"#utility.yul\":12278:12281   */\n      dup2\n        /* \"#utility.yul\":12270:12281   */\n      swap1\n      pop\n        /* \"#utility.yul\":12301:12304   */\n      dup2\n        /* \"#utility.yul\":12298:12299   */\n      0x00\n        /* \"#utility.yul\":12291:12305   */\n      mstore\n        /* \"#utility.yul\":12335:12339   */\n      0x20\n        /* \"#utility.yul\":12332:12333   */\n      0x00\n        /* \"#utility.yul\":12322:12340   */\n      keccak256\n        /* \"#utility.yul\":12314:12340   */\n      swap1\n      pop\n        /* \"#utility.yul\":12206:12347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12353:12446   */\n    tag_208:\n        /* \"#utility.yul\":12390:12396   */\n      0x00\n        /* \"#utility.yul\":12437:12439   */\n      0x20\n        /* \"#utility.yul\":12432:12434   */\n      0x1f\n        /* \"#utility.yul\":12425:12430   */\n      dup4\n        /* \"#utility.yul\":12421:12435   */\n      add\n        /* \"#utility.yul\":12417:12440   */\n      div\n        /* \"#utility.yul\":12407:12440   */\n      swap1\n      pop\n        /* \"#utility.yul\":12353:12446   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12452:12559   */\n    tag_209:\n        /* \"#utility.yul\":12496:12504   */\n      0x00\n        /* \"#utility.yul\":12546:12551   */\n      dup3\n        /* \"#utility.yul\":12540:12544   */\n      dup3\n        /* \"#utility.yul\":12536:12552   */\n      shl\n        /* \"#utility.yul\":12515:12552   */\n      swap1\n      pop\n        /* \"#utility.yul\":12452:12559   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12565:12958   */\n    tag_210:\n        /* \"#utility.yul\":12634:12640   */\n      0x00\n        /* \"#utility.yul\":12684:12685   */\n      0x08\n        /* \"#utility.yul\":12672:12682   */\n      dup4\n        /* \"#utility.yul\":12668:12686   */\n      mul\n        /* \"#utility.yul\":12707:12804   */\n      tag_375\n        /* \"#utility.yul\":12737:12803   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12726:12735   */\n      dup3\n        /* \"#utility.yul\":12707:12804   */\n      tag_209\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":12825:12864   */\n      tag_376\n        /* \"#utility.yul\":12855:12863   */\n      dup7\n        /* \"#utility.yul\":12844:12853   */\n      dup4\n        /* \"#utility.yul\":12825:12864   */\n      tag_209\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":12813:12864   */\n      swap6\n      pop\n        /* \"#utility.yul\":12897:12901   */\n      dup1\n        /* \"#utility.yul\":12893:12902   */\n      not\n        /* \"#utility.yul\":12886:12891   */\n      dup5\n        /* \"#utility.yul\":12882:12903   */\n      and\n        /* \"#utility.yul\":12873:12903   */\n      swap4\n      pop\n        /* \"#utility.yul\":12946:12950   */\n      dup1\n        /* \"#utility.yul\":12936:12944   */\n      dup7\n        /* \"#utility.yul\":12932:12951   */\n      and\n        /* \"#utility.yul\":12925:12930   */\n      dup5\n        /* \"#utility.yul\":12922:12952   */\n      or\n        /* \"#utility.yul\":12912:12952   */\n      swap3\n      pop\n        /* \"#utility.yul\":12641:12958   */\n      pop\n      pop\n        /* \"#utility.yul\":12565:12958   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12964:13106   */\n    tag_211:\n        /* \"#utility.yul\":13014:13023   */\n      0x00\n        /* \"#utility.yul\":13047:13100   */\n      tag_378\n        /* \"#utility.yul\":13065:13099   */\n      tag_379\n        /* \"#utility.yul\":13074:13098   */\n      tag_380\n        /* \"#utility.yul\":13092:13097   */\n      dup5\n        /* \"#utility.yul\":13074:13098   */\n      tag_172\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":13065:13099   */\n      tag_191\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":13047:13100   */\n      tag_172\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":13034:13100   */\n      swap1\n      pop\n        /* \"#utility.yul\":12964:13106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13112:13187   */\n    tag_212:\n        /* \"#utility.yul\":13155:13158   */\n      0x00\n        /* \"#utility.yul\":13176:13181   */\n      dup2\n        /* \"#utility.yul\":13169:13181   */\n      swap1\n      pop\n        /* \"#utility.yul\":13112:13187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13193:13462   */\n    tag_213:\n        /* \"#utility.yul\":13303:13342   */\n      tag_383\n        /* \"#utility.yul\":13334:13341   */\n      dup4\n        /* \"#utility.yul\":13303:13342   */\n      tag_211\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":13364:13455   */\n      tag_384\n        /* \"#utility.yul\":13413:13454   */\n      tag_385\n        /* \"#utility.yul\":13437:13453   */\n      dup3\n        /* \"#utility.yul\":13413:13454   */\n      tag_212\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":13405:13411   */\n      dup5\n        /* \"#utility.yul\":13398:13402   */\n      dup5\n        /* \"#utility.yul\":13392:13403   */\n      sload\n        /* \"#utility.yul\":13364:13455   */\n      tag_210\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":13358:13362   */\n      dup3\n        /* \"#utility.yul\":13351:13456   */\n      sstore\n        /* \"#utility.yul\":13269:13462   */\n      pop\n        /* \"#utility.yul\":13193:13462   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13468:13541   */\n    tag_214:\n        /* \"#utility.yul\":13513:13516   */\n      0x00\n        /* \"#utility.yul\":13468:13541   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":13547:13736   */\n    tag_215:\n        /* \"#utility.yul\":13624:13656   */\n      tag_388\n      tag_214\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":13665:13730   */\n      tag_389\n        /* \"#utility.yul\":13723:13729   */\n      dup2\n        /* \"#utility.yul\":13715:13721   */\n      dup5\n        /* \"#utility.yul\":13709:13713   */\n      dup5\n        /* \"#utility.yul\":13665:13730   */\n      tag_213\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":13600:13736   */\n      pop\n        /* \"#utility.yul\":13547:13736   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13742:13928   */\n    tag_216:\n        /* \"#utility.yul\":13802:13922   */\n    tag_391:\n        /* \"#utility.yul\":13819:13822   */\n      dup2\n        /* \"#utility.yul\":13812:13817   */\n      dup2\n        /* \"#utility.yul\":13809:13823   */\n      lt\n        /* \"#utility.yul\":13802:13922   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":13873:13912   */\n      tag_394\n        /* \"#utility.yul\":13910:13911   */\n      0x00\n        /* \"#utility.yul\":13903:13908   */\n      dup3\n        /* \"#utility.yul\":13873:13912   */\n      tag_215\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":13846:13847   */\n      0x01\n        /* \"#utility.yul\":13839:13844   */\n      dup2\n        /* \"#utility.yul\":13835:13848   */\n      add\n        /* \"#utility.yul\":13826:13848   */\n      swap1\n      pop\n        /* \"#utility.yul\":13802:13922   */\n      jump(tag_391)\n    tag_393:\n        /* \"#utility.yul\":13742:13928   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13934:14477   */\n    tag_217:\n        /* \"#utility.yul\":14035:14037   */\n      0x1f\n        /* \"#utility.yul\":14030:14033   */\n      dup3\n        /* \"#utility.yul\":14027:14038   */\n      gt\n        /* \"#utility.yul\":14024:14470   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":14069:14107   */\n      tag_397\n        /* \"#utility.yul\":14101:14106   */\n      dup2\n        /* \"#utility.yul\":14069:14107   */\n      tag_207\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":14153:14182   */\n      tag_398\n        /* \"#utility.yul\":14171:14181   */\n      dup5\n        /* \"#utility.yul\":14153:14182   */\n      tag_208\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":14143:14151   */\n      dup2\n        /* \"#utility.yul\":14139:14183   */\n      add\n        /* \"#utility.yul\":14336:14338   */\n      0x20\n        /* \"#utility.yul\":14324:14334   */\n      dup6\n        /* \"#utility.yul\":14321:14339   */\n      lt\n        /* \"#utility.yul\":14318:14367   */\n      iszero\n      tag_399\n      jumpi\n        /* \"#utility.yul\":14357:14365   */\n      dup2\n        /* \"#utility.yul\":14342:14365   */\n      swap1\n      pop\n        /* \"#utility.yul\":14318:14367   */\n    tag_399:\n        /* \"#utility.yul\":14380:14460   */\n      tag_400\n        /* \"#utility.yul\":14436:14458   */\n      tag_401\n        /* \"#utility.yul\":14454:14457   */\n      dup6\n        /* \"#utility.yul\":14436:14458   */\n      tag_208\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":14426:14434   */\n      dup4\n        /* \"#utility.yul\":14422:14459   */\n      add\n        /* \"#utility.yul\":14409:14420   */\n      dup3\n        /* \"#utility.yul\":14380:14460   */\n      tag_216\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":14039:14470   */\n      pop\n      pop\n        /* \"#utility.yul\":14024:14470   */\n    tag_396:\n        /* \"#utility.yul\":13934:14477   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14483:14600   */\n    tag_218:\n        /* \"#utility.yul\":14537:14545   */\n      0x00\n        /* \"#utility.yul\":14587:14592   */\n      dup3\n        /* \"#utility.yul\":14581:14585   */\n      dup3\n        /* \"#utility.yul\":14577:14593   */\n      shr\n        /* \"#utility.yul\":14556:14593   */\n      swap1\n      pop\n        /* \"#utility.yul\":14483:14600   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14606:14775   */\n    tag_219:\n        /* \"#utility.yul\":14650:14656   */\n      0x00\n        /* \"#utility.yul\":14683:14734   */\n      tag_404\n        /* \"#utility.yul\":14731:14732   */\n      0x00\n        /* \"#utility.yul\":14727:14733   */\n      not\n        /* \"#utility.yul\":14719:14724   */\n      dup5\n        /* \"#utility.yul\":14716:14717   */\n      0x08\n        /* \"#utility.yul\":14712:14725   */\n      mul\n        /* \"#utility.yul\":14683:14734   */\n      tag_218\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":14679:14735   */\n      not\n        /* \"#utility.yul\":14764:14768   */\n      dup1\n        /* \"#utility.yul\":14758:14762   */\n      dup4\n        /* \"#utility.yul\":14754:14769   */\n      and\n        /* \"#utility.yul\":14744:14769   */\n      swap2\n      pop\n        /* \"#utility.yul\":14657:14775   */\n      pop\n        /* \"#utility.yul\":14606:14775   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14780:15075   */\n    tag_220:\n        /* \"#utility.yul\":14856:14860   */\n      0x00\n        /* \"#utility.yul\":15002:15031   */\n      tag_406\n        /* \"#utility.yul\":15027:15030   */\n      dup4\n        /* \"#utility.yul\":15021:15025   */\n      dup4\n        /* \"#utility.yul\":15002:15031   */\n      tag_219\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":14994:15031   */\n      swap2\n      pop\n        /* \"#utility.yul\":15064:15067   */\n      dup3\n        /* \"#utility.yul\":15061:15062   */\n      0x02\n        /* \"#utility.yul\":15057:15068   */\n      mul\n        /* \"#utility.yul\":15051:15055   */\n      dup3\n        /* \"#utility.yul\":15048:15069   */\n      or\n        /* \"#utility.yul\":15040:15069   */\n      swap1\n      pop\n        /* \"#utility.yul\":14780:15075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15080:16475   */\n    tag_100:\n        /* \"#utility.yul\":15197:15234   */\n      tag_408\n        /* \"#utility.yul\":15230:15233   */\n      dup3\n        /* \"#utility.yul\":15197:15234   */\n      tag_179\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":15299:15317   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":15291:15297   */\n      dup2\n        /* \"#utility.yul\":15288:15318   */\n      gt\n        /* \"#utility.yul\":15285:15341   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":15321:15339   */\n      tag_410\n      tag_206\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":15285:15341   */\n    tag_409:\n        /* \"#utility.yul\":15365:15403   */\n      tag_411\n        /* \"#utility.yul\":15397:15401   */\n      dup3\n        /* \"#utility.yul\":15391:15402   */\n      sload\n        /* \"#utility.yul\":15365:15403   */\n      tag_81\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":15450:15517   */\n      tag_412\n        /* \"#utility.yul\":15510:15516   */\n      dup3\n        /* \"#utility.yul\":15502:15508   */\n      dup3\n        /* \"#utility.yul\":15496:15500   */\n      dup6\n        /* \"#utility.yul\":15450:15517   */\n      tag_217\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":15544:15545   */\n      0x00\n        /* \"#utility.yul\":15568:15572   */\n      0x20\n        /* \"#utility.yul\":15555:15572   */\n      swap1\n      pop\n        /* \"#utility.yul\":15600:15602   */\n      0x1f\n        /* \"#utility.yul\":15592:15598   */\n      dup4\n        /* \"#utility.yul\":15589:15603   */\n      gt\n        /* \"#utility.yul\":15617:15618   */\n      0x01\n        /* \"#utility.yul\":15612:16230   */\n      dup2\n      eq\n      tag_414\n      jumpi\n        /* \"#utility.yul\":16274:16275   */\n      0x00\n        /* \"#utility.yul\":16291:16297   */\n      dup5\n        /* \"#utility.yul\":16288:16365   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":16340:16349   */\n      dup3\n        /* \"#utility.yul\":16335:16338   */\n      dup8\n        /* \"#utility.yul\":16331:16350   */\n      add\n        /* \"#utility.yul\":16325:16351   */\n      mload\n        /* \"#utility.yul\":16316:16351   */\n      swap1\n      pop\n        /* \"#utility.yul\":16288:16365   */\n    tag_415:\n        /* \"#utility.yul\":16391:16458   */\n      tag_416\n        /* \"#utility.yul\":16451:16457   */\n      dup6\n        /* \"#utility.yul\":16444:16449   */\n      dup3\n        /* \"#utility.yul\":16391:16458   */\n      tag_220\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":16385:16389   */\n      dup7\n        /* \"#utility.yul\":16378:16459   */\n      sstore\n        /* \"#utility.yul\":16247:16469   */\n      pop\n        /* \"#utility.yul\":15582:16469   */\n      jump(tag_413)\n        /* \"#utility.yul\":15612:16230   */\n    tag_414:\n        /* \"#utility.yul\":15664:15668   */\n      0x1f\n        /* \"#utility.yul\":15660:15669   */\n      not\n        /* \"#utility.yul\":15652:15658   */\n      dup5\n        /* \"#utility.yul\":15648:15670   */\n      and\n        /* \"#utility.yul\":15698:15735   */\n      tag_417\n        /* \"#utility.yul\":15730:15734   */\n      dup7\n        /* \"#utility.yul\":15698:15735   */\n      tag_207\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":15757:15758   */\n      0x00\n        /* \"#utility.yul\":15771:15979   */\n    tag_418:\n        /* \"#utility.yul\":15785:15792   */\n      dup3\n        /* \"#utility.yul\":15782:15783   */\n      dup2\n        /* \"#utility.yul\":15779:15793   */\n      lt\n        /* \"#utility.yul\":15771:15979   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":15864:15873   */\n      dup5\n        /* \"#utility.yul\":15859:15862   */\n      dup10\n        /* \"#utility.yul\":15855:15874   */\n      add\n        /* \"#utility.yul\":15849:15875   */\n      mload\n        /* \"#utility.yul\":15841:15847   */\n      dup3\n        /* \"#utility.yul\":15834:15876   */\n      sstore\n        /* \"#utility.yul\":15915:15916   */\n      0x01\n        /* \"#utility.yul\":15907:15913   */\n      dup3\n        /* \"#utility.yul\":15903:15917   */\n      add\n        /* \"#utility.yul\":15893:15917   */\n      swap2\n      pop\n        /* \"#utility.yul\":15962:15964   */\n      0x20\n        /* \"#utility.yul\":15951:15960   */\n      dup6\n        /* \"#utility.yul\":15947:15965   */\n      add\n        /* \"#utility.yul\":15934:15965   */\n      swap5\n      pop\n        /* \"#utility.yul\":15808:15812   */\n      0x20\n        /* \"#utility.yul\":15805:15806   */\n      dup2\n        /* \"#utility.yul\":15801:15813   */\n      add\n        /* \"#utility.yul\":15796:15813   */\n      swap1\n      pop\n        /* \"#utility.yul\":15771:15979   */\n      jump(tag_418)\n    tag_420:\n        /* \"#utility.yul\":16007:16013   */\n      dup7\n        /* \"#utility.yul\":15998:16005   */\n      dup4\n        /* \"#utility.yul\":15995:16014   */\n      lt\n        /* \"#utility.yul\":15992:16171   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":16065:16074   */\n      dup5\n        /* \"#utility.yul\":16060:16063   */\n      dup10\n        /* \"#utility.yul\":16056:16075   */\n      add\n        /* \"#utility.yul\":16050:16076   */\n      mload\n        /* \"#utility.yul\":16108:16156   */\n      tag_422\n        /* \"#utility.yul\":16150:16154   */\n      0x1f\n        /* \"#utility.yul\":16142:16148   */\n      dup10\n        /* \"#utility.yul\":16138:16155   */\n      and\n        /* \"#utility.yul\":16127:16136   */\n      dup3\n        /* \"#utility.yul\":16108:16156   */\n      tag_219\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":16100:16106   */\n      dup4\n        /* \"#utility.yul\":16093:16157   */\n      sstore\n        /* \"#utility.yul\":16015:16171   */\n      pop\n        /* \"#utility.yul\":15992:16171   */\n    tag_421:\n        /* \"#utility.yul\":16217:16218   */\n      0x01\n        /* \"#utility.yul\":16213:16214   */\n      0x02\n        /* \"#utility.yul\":16205:16211   */\n      dup9\n        /* \"#utility.yul\":16201:16215   */\n      mul\n        /* \"#utility.yul\":16197:16219   */\n      add\n        /* \"#utility.yul\":16191:16195   */\n      dup9\n        /* \"#utility.yul\":16184:16220   */\n      sstore\n        /* \"#utility.yul\":15619:16230   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":15582:16469   */\n    tag_413:\n      pop\n        /* \"#utility.yul\":15172:16475   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":15080:16475   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16481:16661   */\n    tag_221:\n        /* \"#utility.yul\":16529:16606   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16526:16527   */\n      0x00\n        /* \"#utility.yul\":16519:16607   */\n      mstore\n        /* \"#utility.yul\":16626:16630   */\n      0x11\n        /* \"#utility.yul\":16623:16624   */\n      0x04\n        /* \"#utility.yul\":16616:16631   */\n      mstore\n        /* \"#utility.yul\":16650:16654   */\n      0x24\n        /* \"#utility.yul\":16647:16648   */\n      0x00\n        /* \"#utility.yul\":16640:16655   */\n      revert\n        /* \"#utility.yul\":16667:16858   */\n    tag_105:\n        /* \"#utility.yul\":16707:16710   */\n      0x00\n        /* \"#utility.yul\":16726:16746   */\n      tag_425\n        /* \"#utility.yul\":16744:16745   */\n      dup3\n        /* \"#utility.yul\":16726:16746   */\n      tag_172\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":16721:16746   */\n      swap2\n      pop\n        /* \"#utility.yul\":16760:16780   */\n      tag_426\n        /* \"#utility.yul\":16778:16779   */\n      dup4\n        /* \"#utility.yul\":16760:16780   */\n      tag_172\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":16755:16780   */\n      swap3\n      pop\n        /* \"#utility.yul\":16803:16804   */\n      dup3\n        /* \"#utility.yul\":16800:16801   */\n      dup3\n        /* \"#utility.yul\":16796:16805   */\n      add\n        /* \"#utility.yul\":16789:16805   */\n      swap1\n      pop\n        /* \"#utility.yul\":16824:16827   */\n      dup1\n        /* \"#utility.yul\":16821:16822   */\n      dup3\n        /* \"#utility.yul\":16818:16828   */\n      gt\n        /* \"#utility.yul\":16815:16851   */\n      iszero\n      tag_427\n      jumpi\n        /* \"#utility.yul\":16831:16849   */\n      tag_428\n      tag_221\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":16815:16851   */\n    tag_427:\n        /* \"#utility.yul\":16667:16858   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16864:17007   */\n    tag_222:\n        /* \"#utility.yul\":16921:16926   */\n      0x00\n        /* \"#utility.yul\":16952:16958   */\n      dup2\n        /* \"#utility.yul\":16946:16959   */\n      mload\n        /* \"#utility.yul\":16937:16959   */\n      swap1\n      pop\n        /* \"#utility.yul\":16968:17001   */\n      tag_430\n        /* \"#utility.yul\":16995:17000   */\n      dup2\n        /* \"#utility.yul\":16968:17001   */\n      tag_188\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":16864:17007   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17013:17364   */\n    tag_109:\n        /* \"#utility.yul\":17083:17089   */\n      0x00\n        /* \"#utility.yul\":17132:17134   */\n      0x20\n        /* \"#utility.yul\":17120:17129   */\n      dup3\n        /* \"#utility.yul\":17111:17118   */\n      dup5\n        /* \"#utility.yul\":17107:17130   */\n      sub\n        /* \"#utility.yul\":17103:17135   */\n      slt\n        /* \"#utility.yul\":17100:17219   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":17138:17217   */\n      tag_433\n      tag_170\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":17100:17219   */\n    tag_432:\n        /* \"#utility.yul\":17258:17259   */\n      0x00\n        /* \"#utility.yul\":17283:17347   */\n      tag_434\n        /* \"#utility.yul\":17339:17346   */\n      dup5\n        /* \"#utility.yul\":17330:17336   */\n      dup3\n        /* \"#utility.yul\":17319:17328   */\n      dup6\n        /* \"#utility.yul\":17315:17337   */\n      add\n        /* \"#utility.yul\":17283:17347   */\n      tag_222\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":17273:17347   */\n      swap2\n      pop\n        /* \"#utility.yul\":17229:17357   */\n      pop\n        /* \"#utility.yul\":17013:17364   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17370:17492   */\n    tag_223:\n        /* \"#utility.yul\":17443:17467   */\n      tag_436\n        /* \"#utility.yul\":17461:17466   */\n      dup2\n        /* \"#utility.yul\":17443:17467   */\n      tag_176\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":17436:17441   */\n      dup2\n        /* \"#utility.yul\":17433:17468   */\n      eq\n        /* \"#utility.yul\":17423:17486   */\n      tag_437\n      jumpi\n        /* \"#utility.yul\":17482:17483   */\n      0x00\n        /* \"#utility.yul\":17479:17480   */\n      dup1\n        /* \"#utility.yul\":17472:17484   */\n      revert\n        /* \"#utility.yul\":17423:17486   */\n    tag_437:\n        /* \"#utility.yul\":17370:17492   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17498:17641   */\n    tag_224:\n        /* \"#utility.yul\":17555:17560   */\n      0x00\n        /* \"#utility.yul\":17586:17592   */\n      dup2\n        /* \"#utility.yul\":17580:17593   */\n      mload\n        /* \"#utility.yul\":17571:17593   */\n      swap1\n      pop\n        /* \"#utility.yul\":17602:17635   */\n      tag_439\n        /* \"#utility.yul\":17629:17634   */\n      dup2\n        /* \"#utility.yul\":17602:17635   */\n      tag_223\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":17498:17641   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17647:17737   */\n    tag_225:\n        /* \"#utility.yul\":17682:17689   */\n      0x00\n        /* \"#utility.yul\":17725:17730   */\n      dup2\n        /* \"#utility.yul\":17722:17723   */\n      0x02\n        /* \"#utility.yul\":17711:17731   */\n      signextend\n        /* \"#utility.yul\":17700:17731   */\n      swap1\n      pop\n        /* \"#utility.yul\":17647:17737   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17743:17861   */\n    tag_226:\n        /* \"#utility.yul\":17814:17836   */\n      tag_442\n        /* \"#utility.yul\":17830:17835   */\n      dup2\n        /* \"#utility.yul\":17814:17836   */\n      tag_225\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":17807:17812   */\n      dup2\n        /* \"#utility.yul\":17804:17837   */\n      eq\n        /* \"#utility.yul\":17794:17855   */\n      tag_443\n      jumpi\n        /* \"#utility.yul\":17851:17852   */\n      0x00\n        /* \"#utility.yul\":17848:17849   */\n      dup1\n        /* \"#utility.yul\":17841:17853   */\n      revert\n        /* \"#utility.yul\":17794:17855   */\n    tag_443:\n        /* \"#utility.yul\":17743:17861   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17867:18006   */\n    tag_227:\n        /* \"#utility.yul\":17922:17927   */\n      0x00\n        /* \"#utility.yul\":17953:17959   */\n      dup2\n        /* \"#utility.yul\":17947:17960   */\n      mload\n        /* \"#utility.yul\":17938:17960   */\n      swap1\n      pop\n        /* \"#utility.yul\":17969:18000   */\n      tag_445\n        /* \"#utility.yul\":17994:17999   */\n      dup2\n        /* \"#utility.yul\":17969:18000   */\n      tag_226\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":17867:18006   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18012:18101   */\n    tag_228:\n        /* \"#utility.yul\":18048:18055   */\n      0x00\n        /* \"#utility.yul\":18088:18094   */\n      0xffff\n        /* \"#utility.yul\":18081:18086   */\n      dup3\n        /* \"#utility.yul\":18077:18095   */\n      and\n        /* \"#utility.yul\":18066:18095   */\n      swap1\n      pop\n        /* \"#utility.yul\":18012:18101   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18107:18227   */\n    tag_229:\n        /* \"#utility.yul\":18179:18202   */\n      tag_448\n        /* \"#utility.yul\":18196:18201   */\n      dup2\n        /* \"#utility.yul\":18179:18202   */\n      tag_228\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":18172:18177   */\n      dup2\n        /* \"#utility.yul\":18169:18203   */\n      eq\n        /* \"#utility.yul\":18159:18221   */\n      tag_449\n      jumpi\n        /* \"#utility.yul\":18217:18218   */\n      0x00\n        /* \"#utility.yul\":18214:18215   */\n      dup1\n        /* \"#utility.yul\":18207:18219   */\n      revert\n        /* \"#utility.yul\":18159:18221   */\n    tag_449:\n        /* \"#utility.yul\":18107:18227   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18233:18374   */\n    tag_230:\n        /* \"#utility.yul\":18289:18294   */\n      0x00\n        /* \"#utility.yul\":18320:18326   */\n      dup2\n        /* \"#utility.yul\":18314:18327   */\n      mload\n        /* \"#utility.yul\":18305:18327   */\n      swap1\n      pop\n        /* \"#utility.yul\":18336:18368   */\n      tag_451\n        /* \"#utility.yul\":18362:18367   */\n      dup2\n        /* \"#utility.yul\":18336:18368   */\n      tag_229\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":18233:18374   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18380:18466   */\n    tag_231:\n        /* \"#utility.yul\":18415:18422   */\n      0x00\n        /* \"#utility.yul\":18455:18459   */\n      0xff\n        /* \"#utility.yul\":18448:18453   */\n      dup3\n        /* \"#utility.yul\":18444:18460   */\n      and\n        /* \"#utility.yul\":18433:18460   */\n      swap1\n      pop\n        /* \"#utility.yul\":18380:18466   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18472:18590   */\n    tag_232:\n        /* \"#utility.yul\":18543:18565   */\n      tag_454\n        /* \"#utility.yul\":18559:18564   */\n      dup2\n        /* \"#utility.yul\":18543:18565   */\n      tag_231\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":18536:18541   */\n      dup2\n        /* \"#utility.yul\":18533:18566   */\n      eq\n        /* \"#utility.yul\":18523:18584   */\n      tag_455\n      jumpi\n        /* \"#utility.yul\":18580:18581   */\n      0x00\n        /* \"#utility.yul\":18577:18578   */\n      dup1\n        /* \"#utility.yul\":18570:18582   */\n      revert\n        /* \"#utility.yul\":18523:18584   */\n    tag_455:\n        /* \"#utility.yul\":18472:18590   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18596:18735   */\n    tag_233:\n        /* \"#utility.yul\":18651:18656   */\n      0x00\n        /* \"#utility.yul\":18682:18688   */\n      dup2\n        /* \"#utility.yul\":18676:18689   */\n      mload\n        /* \"#utility.yul\":18667:18689   */\n      swap1\n      pop\n        /* \"#utility.yul\":18698:18729   */\n      tag_457\n        /* \"#utility.yul\":18723:18728   */\n      dup2\n        /* \"#utility.yul\":18698:18729   */\n      tag_232\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":18596:18735   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18741:18831   */\n    tag_234:\n        /* \"#utility.yul\":18775:18782   */\n      0x00\n        /* \"#utility.yul\":18818:18823   */\n      dup2\n        /* \"#utility.yul\":18811:18824   */\n      iszero\n        /* \"#utility.yul\":18804:18825   */\n      iszero\n        /* \"#utility.yul\":18793:18825   */\n      swap1\n      pop\n        /* \"#utility.yul\":18741:18831   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18837:18953   */\n    tag_235:\n        /* \"#utility.yul\":18907:18928   */\n      tag_460\n        /* \"#utility.yul\":18922:18927   */\n      dup2\n        /* \"#utility.yul\":18907:18928   */\n      tag_234\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":18900:18905   */\n      dup2\n        /* \"#utility.yul\":18897:18929   */\n      eq\n        /* \"#utility.yul\":18887:18947   */\n      tag_461\n      jumpi\n        /* \"#utility.yul\":18943:18944   */\n      0x00\n        /* \"#utility.yul\":18940:18941   */\n      dup1\n        /* \"#utility.yul\":18933:18945   */\n      revert\n        /* \"#utility.yul\":18887:18947   */\n    tag_461:\n        /* \"#utility.yul\":18837:18953   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18959:19096   */\n    tag_236:\n        /* \"#utility.yul\":19013:19018   */\n      0x00\n        /* \"#utility.yul\":19044:19050   */\n      dup2\n        /* \"#utility.yul\":19038:19051   */\n      mload\n        /* \"#utility.yul\":19029:19051   */\n      swap1\n      pop\n        /* \"#utility.yul\":19060:19090   */\n      tag_463\n        /* \"#utility.yul\":19084:19089   */\n      dup2\n        /* \"#utility.yul\":19060:19090   */\n      tag_235\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":18959:19096   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19102:20373   */\n    tag_121:\n        /* \"#utility.yul\":19216:19222   */\n      0x00\n        /* \"#utility.yul\":19224:19230   */\n      dup1\n        /* \"#utility.yul\":19232:19238   */\n      0x00\n        /* \"#utility.yul\":19240:19246   */\n      dup1\n        /* \"#utility.yul\":19248:19254   */\n      0x00\n        /* \"#utility.yul\":19256:19262   */\n      dup1\n        /* \"#utility.yul\":19264:19270   */\n      0x00\n        /* \"#utility.yul\":19313:19316   */\n      0xe0\n        /* \"#utility.yul\":19301:19310   */\n      dup9\n        /* \"#utility.yul\":19292:19299   */\n      dup11\n        /* \"#utility.yul\":19288:19311   */\n      sub\n        /* \"#utility.yul\":19284:19317   */\n      slt\n        /* \"#utility.yul\":19281:19401   */\n      iszero\n      tag_465\n      jumpi\n        /* \"#utility.yul\":19320:19399   */\n      tag_466\n      tag_170\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":19281:19401   */\n    tag_465:\n        /* \"#utility.yul\":19440:19441   */\n      0x00\n        /* \"#utility.yul\":19465:19529   */\n      tag_467\n        /* \"#utility.yul\":19521:19528   */\n      dup11\n        /* \"#utility.yul\":19512:19518   */\n      dup3\n        /* \"#utility.yul\":19501:19510   */\n      dup12\n        /* \"#utility.yul\":19497:19519   */\n      add\n        /* \"#utility.yul\":19465:19529   */\n      tag_224\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":19455:19529   */\n      swap8\n      pop\n        /* \"#utility.yul\":19411:19539   */\n      pop\n        /* \"#utility.yul\":19578:19580   */\n      0x20\n        /* \"#utility.yul\":19604:19666   */\n      tag_468\n        /* \"#utility.yul\":19658:19665   */\n      dup11\n        /* \"#utility.yul\":19649:19655   */\n      dup3\n        /* \"#utility.yul\":19638:19647   */\n      dup12\n        /* \"#utility.yul\":19634:19656   */\n      add\n        /* \"#utility.yul\":19604:19666   */\n      tag_227\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":19594:19666   */\n      swap7\n      pop\n        /* \"#utility.yul\":19549:19676   */\n      pop\n        /* \"#utility.yul\":19715:19717   */\n      0x40\n        /* \"#utility.yul\":19741:19804   */\n      tag_469\n        /* \"#utility.yul\":19796:19803   */\n      dup11\n        /* \"#utility.yul\":19787:19793   */\n      dup3\n        /* \"#utility.yul\":19776:19785   */\n      dup12\n        /* \"#utility.yul\":19772:19794   */\n      add\n        /* \"#utility.yul\":19741:19804   */\n      tag_230\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":19731:19804   */\n      swap6\n      pop\n        /* \"#utility.yul\":19686:19814   */\n      pop\n        /* \"#utility.yul\":19853:19855   */\n      0x60\n        /* \"#utility.yul\":19879:19942   */\n      tag_470\n        /* \"#utility.yul\":19934:19941   */\n      dup11\n        /* \"#utility.yul\":19925:19931   */\n      dup3\n        /* \"#utility.yul\":19914:19923   */\n      dup12\n        /* \"#utility.yul\":19910:19932   */\n      add\n        /* \"#utility.yul\":19879:19942   */\n      tag_230\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":19869:19942   */\n      swap5\n      pop\n        /* \"#utility.yul\":19824:19952   */\n      pop\n        /* \"#utility.yul\":19991:19994   */\n      0x80\n        /* \"#utility.yul\":20018:20081   */\n      tag_471\n        /* \"#utility.yul\":20073:20080   */\n      dup11\n        /* \"#utility.yul\":20064:20070   */\n      dup3\n        /* \"#utility.yul\":20053:20062   */\n      dup12\n        /* \"#utility.yul\":20049:20071   */\n      add\n        /* \"#utility.yul\":20018:20081   */\n      tag_230\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":20008:20081   */\n      swap4\n      pop\n        /* \"#utility.yul\":19962:20091   */\n      pop\n        /* \"#utility.yul\":20130:20133   */\n      0xa0\n        /* \"#utility.yul\":20157:20219   */\n      tag_472\n        /* \"#utility.yul\":20211:20218   */\n      dup11\n        /* \"#utility.yul\":20202:20208   */\n      dup3\n        /* \"#utility.yul\":20191:20200   */\n      dup12\n        /* \"#utility.yul\":20187:20209   */\n      add\n        /* \"#utility.yul\":20157:20219   */\n      tag_233\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":20147:20219   */\n      swap3\n      pop\n        /* \"#utility.yul\":20101:20229   */\n      pop\n        /* \"#utility.yul\":20268:20271   */\n      0xc0\n        /* \"#utility.yul\":20295:20356   */\n      tag_473\n        /* \"#utility.yul\":20348:20355   */\n      dup11\n        /* \"#utility.yul\":20339:20345   */\n      dup3\n        /* \"#utility.yul\":20328:20337   */\n      dup12\n        /* \"#utility.yul\":20324:20346   */\n      add\n        /* \"#utility.yul\":20295:20356   */\n      tag_236\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":20285:20356   */\n      swap2\n      pop\n        /* \"#utility.yul\":20239:20366   */\n      pop\n        /* \"#utility.yul\":19102:20373   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20379:20573   */\n    tag_124:\n        /* \"#utility.yul\":20419:20423   */\n      0x00\n        /* \"#utility.yul\":20439:20459   */\n      tag_475\n        /* \"#utility.yul\":20457:20458   */\n      dup3\n        /* \"#utility.yul\":20439:20459   */\n      tag_172\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":20434:20459   */\n      swap2\n      pop\n        /* \"#utility.yul\":20473:20493   */\n      tag_476\n        /* \"#utility.yul\":20491:20492   */\n      dup4\n        /* \"#utility.yul\":20473:20493   */\n      tag_172\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":20468:20493   */\n      swap3\n      pop\n        /* \"#utility.yul\":20517:20518   */\n      dup3\n        /* \"#utility.yul\":20514:20515   */\n      dup3\n        /* \"#utility.yul\":20510:20519   */\n      sub\n        /* \"#utility.yul\":20502:20519   */\n      swap1\n      pop\n        /* \"#utility.yul\":20541:20542   */\n      dup2\n        /* \"#utility.yul\":20535:20539   */\n      dup2\n        /* \"#utility.yul\":20532:20543   */\n      gt\n        /* \"#utility.yul\":20529:20566   */\n      iszero\n      tag_477\n      jumpi\n        /* \"#utility.yul\":20546:20564   */\n      tag_478\n      tag_221\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":20529:20566   */\n    tag_477:\n        /* \"#utility.yul\":20379:20573   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20579:20684   */\n    tag_237:\n        /* \"#utility.yul\":20615:20622   */\n      0x00\n        /* \"#utility.yul\":20655:20677   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":20648:20653   */\n      dup3\n        /* \"#utility.yul\":20644:20678   */\n      and\n        /* \"#utility.yul\":20633:20678   */\n      swap1\n      pop\n        /* \"#utility.yul\":20579:20684   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20690:20810   */\n    tag_238:\n        /* \"#utility.yul\":20762:20785   */\n      tag_481\n        /* \"#utility.yul\":20779:20784   */\n      dup2\n        /* \"#utility.yul\":20762:20785   */\n      tag_237\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":20755:20760   */\n      dup2\n        /* \"#utility.yul\":20752:20786   */\n      eq\n        /* \"#utility.yul\":20742:20804   */\n      tag_482\n      jumpi\n        /* \"#utility.yul\":20800:20801   */\n      0x00\n        /* \"#utility.yul\":20797:20798   */\n      dup1\n        /* \"#utility.yul\":20790:20802   */\n      revert\n        /* \"#utility.yul\":20742:20804   */\n    tag_482:\n        /* \"#utility.yul\":20690:20810   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20816:20957   */\n    tag_239:\n        /* \"#utility.yul\":20872:20877   */\n      0x00\n        /* \"#utility.yul\":20903:20909   */\n      dup2\n        /* \"#utility.yul\":20897:20910   */\n      mload\n        /* \"#utility.yul\":20888:20910   */\n      swap1\n      pop\n        /* \"#utility.yul\":20919:20951   */\n      tag_484\n        /* \"#utility.yul\":20945:20950   */\n      dup2\n        /* \"#utility.yul\":20919:20951   */\n      tag_238\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":20816:20957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20963:21083   */\n    tag_240:\n        /* \"#utility.yul\":21035:21058   */\n      tag_486\n        /* \"#utility.yul\":21052:21057   */\n      dup2\n        /* \"#utility.yul\":21035:21058   */\n      tag_196\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":21028:21033   */\n      dup2\n        /* \"#utility.yul\":21025:21059   */\n      eq\n        /* \"#utility.yul\":21015:21077   */\n      tag_487\n      jumpi\n        /* \"#utility.yul\":21073:21074   */\n      0x00\n        /* \"#utility.yul\":21070:21071   */\n      dup1\n        /* \"#utility.yul\":21063:21075   */\n      revert\n        /* \"#utility.yul\":21015:21077   */\n    tag_487:\n        /* \"#utility.yul\":20963:21083   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21089:21230   */\n    tag_241:\n        /* \"#utility.yul\":21145:21150   */\n      0x00\n        /* \"#utility.yul\":21176:21182   */\n      dup2\n        /* \"#utility.yul\":21170:21183   */\n      mload\n        /* \"#utility.yul\":21161:21183   */\n      swap1\n      pop\n        /* \"#utility.yul\":21192:21224   */\n      tag_489\n        /* \"#utility.yul\":21218:21223   */\n      dup2\n        /* \"#utility.yul\":21192:21224   */\n      tag_240\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":21089:21230   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21236:22207   */\n    tag_130:\n        /* \"#utility.yul\":21339:21345   */\n      0x00\n        /* \"#utility.yul\":21347:21353   */\n      dup1\n        /* \"#utility.yul\":21355:21361   */\n      0x00\n        /* \"#utility.yul\":21363:21369   */\n      dup1\n        /* \"#utility.yul\":21371:21377   */\n      0x00\n        /* \"#utility.yul\":21420:21423   */\n      0xa0\n        /* \"#utility.yul\":21408:21417   */\n      dup7\n        /* \"#utility.yul\":21399:21406   */\n      dup9\n        /* \"#utility.yul\":21395:21418   */\n      sub\n        /* \"#utility.yul\":21391:21424   */\n      slt\n        /* \"#utility.yul\":21388:21508   */\n      iszero\n      tag_491\n      jumpi\n        /* \"#utility.yul\":21427:21506   */\n      tag_492\n      tag_170\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":21388:21508   */\n    tag_491:\n        /* \"#utility.yul\":21547:21548   */\n      0x00\n        /* \"#utility.yul\":21572:21635   */\n      tag_493\n        /* \"#utility.yul\":21627:21634   */\n      dup9\n        /* \"#utility.yul\":21618:21624   */\n      dup3\n        /* \"#utility.yul\":21607:21616   */\n      dup10\n        /* \"#utility.yul\":21603:21625   */\n      add\n        /* \"#utility.yul\":21572:21635   */\n      tag_239\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":21562:21635   */\n      swap6\n      pop\n        /* \"#utility.yul\":21518:21645   */\n      pop\n        /* \"#utility.yul\":21684:21686   */\n      0x20\n        /* \"#utility.yul\":21710:21773   */\n      tag_494\n        /* \"#utility.yul\":21765:21772   */\n      dup9\n        /* \"#utility.yul\":21756:21762   */\n      dup3\n        /* \"#utility.yul\":21745:21754   */\n      dup10\n        /* \"#utility.yul\":21741:21763   */\n      add\n        /* \"#utility.yul\":21710:21773   */\n      tag_241\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":21700:21773   */\n      swap5\n      pop\n        /* \"#utility.yul\":21655:21783   */\n      pop\n        /* \"#utility.yul\":21822:21824   */\n      0x40\n        /* \"#utility.yul\":21848:21912   */\n      tag_495\n        /* \"#utility.yul\":21904:21911   */\n      dup9\n        /* \"#utility.yul\":21895:21901   */\n      dup3\n        /* \"#utility.yul\":21884:21893   */\n      dup10\n        /* \"#utility.yul\":21880:21902   */\n      add\n        /* \"#utility.yul\":21848:21912   */\n      tag_202\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":21838:21912   */\n      swap4\n      pop\n        /* \"#utility.yul\":21793:21922   */\n      pop\n        /* \"#utility.yul\":21961:21963   */\n      0x60\n        /* \"#utility.yul\":21987:22051   */\n      tag_496\n        /* \"#utility.yul\":22043:22050   */\n      dup9\n        /* \"#utility.yul\":22034:22040   */\n      dup3\n        /* \"#utility.yul\":22023:22032   */\n      dup10\n        /* \"#utility.yul\":22019:22041   */\n      add\n        /* \"#utility.yul\":21987:22051   */\n      tag_202\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":21977:22051   */\n      swap3\n      pop\n        /* \"#utility.yul\":21932:22061   */\n      pop\n        /* \"#utility.yul\":22100:22103   */\n      0x80\n        /* \"#utility.yul\":22127:22190   */\n      tag_497\n        /* \"#utility.yul\":22182:22189   */\n      dup9\n        /* \"#utility.yul\":22173:22179   */\n      dup3\n        /* \"#utility.yul\":22162:22171   */\n      dup10\n        /* \"#utility.yul\":22158:22180   */\n      add\n        /* \"#utility.yul\":22127:22190   */\n      tag_239\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":22117:22190   */\n      swap2\n      pop\n        /* \"#utility.yul\":22071:22200   */\n      pop\n        /* \"#utility.yul\":21236:22207   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22213:22623   */\n    tag_137:\n        /* \"#utility.yul\":22253:22260   */\n      0x00\n        /* \"#utility.yul\":22276:22296   */\n      tag_499\n        /* \"#utility.yul\":22294:22295   */\n      dup3\n        /* \"#utility.yul\":22276:22296   */\n      tag_172\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":22271:22296   */\n      swap2\n      pop\n        /* \"#utility.yul\":22310:22330   */\n      tag_500\n        /* \"#utility.yul\":22328:22329   */\n      dup4\n        /* \"#utility.yul\":22310:22330   */\n      tag_172\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":22305:22330   */\n      swap3\n      pop\n        /* \"#utility.yul\":22365:22366   */\n      dup3\n        /* \"#utility.yul\":22362:22363   */\n      dup3\n        /* \"#utility.yul\":22358:22367   */\n      mul\n        /* \"#utility.yul\":22387:22417   */\n      tag_501\n        /* \"#utility.yul\":22405:22416   */\n      dup2\n        /* \"#utility.yul\":22387:22417   */\n      tag_172\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":22376:22417   */\n      swap2\n      pop\n        /* \"#utility.yul\":22566:22567   */\n      dup3\n        /* \"#utility.yul\":22557:22564   */\n      dup3\n        /* \"#utility.yul\":22553:22568   */\n      div\n        /* \"#utility.yul\":22550:22551   */\n      dup5\n        /* \"#utility.yul\":22547:22569   */\n      eq\n        /* \"#utility.yul\":22527:22528   */\n      dup4\n        /* \"#utility.yul\":22520:22529   */\n      iszero\n        /* \"#utility.yul\":22500:22583   */\n      or\n        /* \"#utility.yul\":22477:22616   */\n      tag_502\n      jumpi\n        /* \"#utility.yul\":22596:22614   */\n      tag_503\n      tag_221\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":22477:22616   */\n    tag_502:\n        /* \"#utility.yul\":22261:22623   */\n      pop\n        /* \"#utility.yul\":22213:22623   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22629:22809   */\n    tag_242:\n        /* \"#utility.yul\":22677:22754   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22674:22675   */\n      0x00\n        /* \"#utility.yul\":22667:22755   */\n      mstore\n        /* \"#utility.yul\":22774:22778   */\n      0x12\n        /* \"#utility.yul\":22771:22772   */\n      0x04\n        /* \"#utility.yul\":22764:22779   */\n      mstore\n        /* \"#utility.yul\":22798:22802   */\n      0x24\n        /* \"#utility.yul\":22795:22796   */\n      0x00\n        /* \"#utility.yul\":22788:22803   */\n      revert\n        /* \"#utility.yul\":22815:23000   */\n    tag_139:\n        /* \"#utility.yul\":22855:22856   */\n      0x00\n        /* \"#utility.yul\":22872:22892   */\n      tag_506\n        /* \"#utility.yul\":22890:22891   */\n      dup3\n        /* \"#utility.yul\":22872:22892   */\n      tag_172\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":22867:22892   */\n      swap2\n      pop\n        /* \"#utility.yul\":22906:22926   */\n      tag_507\n        /* \"#utility.yul\":22924:22925   */\n      dup4\n        /* \"#utility.yul\":22906:22926   */\n      tag_172\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":22901:22926   */\n      swap3\n      pop\n        /* \"#utility.yul\":22945:22946   */\n      dup3\n        /* \"#utility.yul\":22935:22970   */\n      tag_508\n      jumpi\n        /* \"#utility.yul\":22950:22968   */\n      tag_509\n      tag_242\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":22935:22970   */\n    tag_508:\n        /* \"#utility.yul\":22992:22993   */\n      dup3\n        /* \"#utility.yul\":22989:22990   */\n      dup3\n        /* \"#utility.yul\":22985:22994   */\n      div\n        /* \"#utility.yul\":22980:22994   */\n      swap1\n      pop\n        /* \"#utility.yul\":22815:23000   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23006:23153   */\n    tag_243:\n        /* \"#utility.yul\":23107:23118   */\n      0x00\n        /* \"#utility.yul\":23144:23147   */\n      dup2\n        /* \"#utility.yul\":23129:23147   */\n      swap1\n      pop\n        /* \"#utility.yul\":23006:23153   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23159:23273   */\n    tag_244:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23279:23677   */\n    tag_245:\n        /* \"#utility.yul\":23438:23441   */\n      0x00\n        /* \"#utility.yul\":23459:23542   */\n      tag_513\n        /* \"#utility.yul\":23540:23541   */\n      0x00\n        /* \"#utility.yul\":23535:23538   */\n      dup4\n        /* \"#utility.yul\":23459:23542   */\n      tag_243\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":23452:23542   */\n      swap2\n      pop\n        /* \"#utility.yul\":23551:23644   */\n      tag_514\n        /* \"#utility.yul\":23640:23643   */\n      dup3\n        /* \"#utility.yul\":23551:23644   */\n      tag_244\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":23669:23670   */\n      0x00\n        /* \"#utility.yul\":23664:23667   */\n      dup3\n        /* \"#utility.yul\":23660:23671   */\n      add\n        /* \"#utility.yul\":23653:23671   */\n      swap1\n      pop\n        /* \"#utility.yul\":23279:23677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23683:24062   */\n    tag_143:\n        /* \"#utility.yul\":23867:23870   */\n      0x00\n        /* \"#utility.yul\":23889:24036   */\n      tag_516\n        /* \"#utility.yul\":24032:24035   */\n      dup3\n        /* \"#utility.yul\":23889:24036   */\n      tag_245\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":23882:24036   */\n      swap2\n      pop\n        /* \"#utility.yul\":24053:24056   */\n      dup2\n        /* \"#utility.yul\":24046:24056   */\n      swap1\n      pop\n        /* \"#utility.yul\":23683:24062   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122005fb02bf69b24510b1d3289b9f0dfa9c0ca34ebb9c6ae72f1536bdd3fc069fea64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_622": {
									"entryPoint": null,
									"id": 622,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_ICoverNFT_$1074_fromMemory": {
									"entryPoint": 304,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_ICoverNFT_$1074t_address_fromMemory": {
									"entryPoint": 376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_ICoverNFT_$1074": {
									"entryPoint": 258,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 201,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 327,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_ICoverNFT_$1074": {
									"entryPoint": 278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1860:16",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:16"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:16"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:16",
														"type": ""
													}
												],
												"src": "7:75:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:16"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:16"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:16",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:16",
														"type": ""
													}
												],
												"src": "334:126:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:16",
														"type": ""
													}
												],
												"src": "466:96:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "631:51:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "641:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "670:5:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "652:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "652:24:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "641:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_ICoverNFT_$1074",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "613:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "623:7:16",
														"type": ""
													}
												],
												"src": "568:114:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "749:97:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "824:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "833:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "836:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "826:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "826:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "826:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "772:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "815:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_ICoverNFT_$1074",
																					"nodeType": "YulIdentifier",
																					"src": "779:35:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "779:42:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "769:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "769:53:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "762:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:61:16"
															},
															"nodeType": "YulIf",
															"src": "759:81:16"
														}
													]
												},
												"name": "validator_revert_t_contract$_ICoverNFT_$1074",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:16",
														"type": ""
													}
												],
												"src": "688:158:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "933:98:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "943:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "958:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "952:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "952:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "943:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1019:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_ICoverNFT_$1074",
																	"nodeType": "YulIdentifier",
																	"src": "974:44:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "974:51:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "974:51:16"
														}
													]
												},
												"name": "abi_decode_t_contract$_ICoverNFT_$1074_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "911:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "919:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "927:5:16",
														"type": ""
													}
												],
												"src": "852:179:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1080:79:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1137:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1146:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1149:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1139:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1139:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1139:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1103:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1128:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1110:17:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1110:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1100:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1093:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1093:43:16"
															},
															"nodeType": "YulIf",
															"src": "1090:63:16"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1073:5:16",
														"type": ""
													}
												],
												"src": "1037:122:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1228:80:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1238:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1253:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1247:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1247:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1238:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1296:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1269:26:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1269:33:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1269:33:16"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1206:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1214:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1222:5:16",
														"type": ""
													}
												],
												"src": "1165:143:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1426:431:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1472:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1474:77:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1474:79:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1474:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1447:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1456:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1443:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1443:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1468:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1439:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1439:32:16"
															},
															"nodeType": "YulIf",
															"src": "1436:119:16"
														},
														{
															"nodeType": "YulBlock",
															"src": "1565:146:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1580:15:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1594:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1584:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1609:92:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1673:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1684:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1669:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1669:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1693:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_ICoverNFT_$1074_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1619:49:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1619:82:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1609:6:16"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1721:129:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1736:16:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1750:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1740:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1766:74:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1812:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1823:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1808:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1808:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1832:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1776:31:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1776:64:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1766:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ICoverNFT_$1074t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1388:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1399:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1411:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1419:6:16",
														"type": ""
													}
												],
												"src": "1314:543:16"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ICoverNFT_$1074(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ICoverNFT_$1074(value) {\n        if iszero(eq(value, cleanup_t_contract$_ICoverNFT_$1074(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ICoverNFT_$1074_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ICoverNFT_$1074(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ICoverNFT_$1074t_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ICoverNFT_$1074_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162001e3238038062001e32833981810160405281019062000037919062000178565b81600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060018190555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620001bf565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000fb82620000ce565b9050919050565b60006200010f82620000ee565b9050919050565b620001218162000102565b81146200012d57600080fd5b50565b600081519050620001418162000116565b92915050565b6200015281620000ee565b81146200015e57600080fd5b50565b600081519050620001728162000147565b92915050565b60008060408385031215620001925762000191620000c9565b5b6000620001a28582860162000130565b9250506020620001b58582860162000161565b9150509250929050565b611c6380620001cf6000396000f3fe6080604052600436106100a65760003560e01c80634b61a44b116100645780634b61a44b146101e85780637e9e1abe14610211578063d05808f81461023c578063de071a0a14610279578063ed3b657a146102b6578063ee97f7f3146102e1576100a6565b8062407d2a146100ab5780631f5e4583146100e8578063279f54ce14610125578063404730f4146101555780634230a7771461018057806342e53fcf146101bd575b600080fd5b3480156100b757600080fd5b506100d260048036038101906100cd9190610fb8565b61030c565b6040516100df91906111c9565b60405180910390f35b3480156100f457600080fd5b5061010f600480360381019061010a9190611210565b6104d1565b60405161011c9190611268565b60405180910390f35b61013f600480360381019061013a9190611210565b6104e0565b60405161014c9190611268565b60405180910390f35b34801561016157600080fd5b5061016a6108f8565b6040516101779190611268565b60405180910390f35b34801561018c57600080fd5b506101a760048036038101906101a291906112af565b610990565b6040516101b491906112eb565b60405180910390f35b3480156101c957600080fd5b506101d2610a13565b6040516101df9190611365565b60405180910390f35b3480156101f457600080fd5b5061020f600480360381019061020a9190610fb8565b610a39565b005b34801561021d57600080fd5b50610226610a55565b6040516102339190611268565b60405180910390f35b34801561024857600080fd5b50610263600480360381019061025e9190611210565b610a5b565b6040516102709190611268565b60405180910390f35b34801561028557600080fd5b506102a0600480360381019061029b91906112af565b610a6a565b6040516102ad9190611399565b60405180910390f35b3480156102c257600080fd5b506102cb610aeb565b6040516102d89190611268565b60405180910390f35b3480156102ed57600080fd5b506102f6610af5565b60405161030391906113d5565b60405180910390f35b610314610eeb565b60008083815260200190815260200160002060405180610180016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a8201805461043e9061141f565b80601f016020809104026020016040519081016040528092919081815260200182805461046a9061141f565b80156104b75780601f1061048c576101008083540402835291602001916104b7565b820191906000526020600020905b81548152906001019060200180831161049a57829003601f168201915b50505050508152602001600b820154815250509050919050565b600064e8d4a510009050919050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636a627842336040518263ffffffff1660e01b815260040161053d919061145f565b6020604051808303816000875af115801561055c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610580919061148f565b90506040518061018001604052806000815260200161059e84610a5b565b81526020014281526020018360c0013581526020018360000160208101906105c691906112af565b73ffffffffffffffffffffffffffffffffffffffff1681526020018360200160208101906105f491906112af565b73ffffffffffffffffffffffffffffffffffffffff1681526020018360600135815260200183604001358152602001836080013581526020018360a001358152602001838060e0019061064791906114cb565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081526020018361010001358152506000808381526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c0820151816006015560e082015181600701556101008201518160080155610120820151816009015561014082015181600a0190816107a091906116ff565b5061016082015181600b015590505060006107ba836104d1565b90506107cd81600063ffffffff16610b1b565b5060008083815260200190815260200160002060010154600160008282546107f59190611800565b925050819055506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166388ea07516040518163ffffffff1660e01b8152600401602060405180830381865afa15801561086b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088f9190611849565b90508073ffffffffffffffffffffffffffffffffffffffff1663aa5da0466040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156108d957600080fd5b505af11580156108ed573d6000803e3d6000fd5b505050505050919050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610967573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098b919061148f565b905090565b6000808273ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156109de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a029190611986565b505050505050905080915050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8060016000828254610a4b9190611a28565b9250508190555050565b60015481565b600064e8d4a510009050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610ab8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610adc9190611aca565b50505091505080915050919050565b6000600154905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080610b26610e53565b9050600063ffffffff168303610e4c576000606485606563ffffffff16610b4d9190611b45565b610b579190611bb6565b905084341015610b93576040517ff244866f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008134610ba19190611a28565b905060008373ffffffffffffffffffffffffffffffffffffffff1687604051610bc990611c18565b60006040518083038185875af1925050503d8060008114610c06576040519150601f19603f3d011682016040523d82523d6000602084013e610c0b565b606091505b5050905080610c46576040517fab1ee9bf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5060008683610c559190611a28565b1115610d9b576000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637abc39646040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cee9190611849565b73ffffffffffffffffffffffffffffffffffffffff168784610d109190611a28565b604051610d1c90611c18565b60006040518083038185875af1925050503d8060008114610d59576040519150601f19603f3d011682016040523d82523d6000602084013e610d5e565b606091505b5050905080610d99576040517f204633a400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b6000811115610e495760003373ffffffffffffffffffffffffffffffffffffffff1682604051610dca90611c18565b60006040518083038185875af1925050503d8060008114610e07576040519150601f19603f3d011682016040523d82523d6000602084013e610e0c565b606091505b5050905080610e47576040517fcd57d4da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b50505b5092915050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639ccc903d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ec2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee69190611849565b905090565b60405180610180016040528060008152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160608152602001600081525090565b600080fd5b600080fd5b6000819050919050565b610f9581610f82565b8114610fa057600080fd5b50565b600081359050610fb281610f8c565b92915050565b600060208284031215610fce57610fcd610f78565b5b6000610fdc84828501610fa3565b91505092915050565b610fee81610f82565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061101f82610ff4565b9050919050565b61102f81611014565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561106f578082015181840152602081019050611054565b60008484015250505050565b6000601f19601f8301169050919050565b600061109782611035565b6110a18185611040565b93506110b1818560208601611051565b6110ba8161107b565b840191505092915050565b6000610180830160008301516110de6000860182610fe5565b5060208301516110f16020860182610fe5565b5060408301516111046040860182610fe5565b5060608301516111176060860182610fe5565b50608083015161112a6080860182611026565b5060a083015161113d60a0860182611026565b5060c083015161115060c0860182610fe5565b5060e083015161116360e0860182610fe5565b50610100830151611178610100860182610fe5565b5061012083015161118d610120860182610fe5565b506101408301518482036101408601526111a7828261108c565b9150506101608301516111be610160860182610fe5565b508091505092915050565b600060208201905081810360008301526111e381846110c5565b905092915050565b600080fd5b60006101208284031215611207576112066111eb565b5b81905092915050565b60006020828403121561122657611225610f78565b5b600082013567ffffffffffffffff81111561124457611243610f7d565b5b611250848285016111f0565b91505092915050565b61126281610f82565b82525050565b600060208201905061127d6000830184611259565b92915050565b61128c81611014565b811461129757600080fd5b50565b6000813590506112a981611283565b92915050565b6000602082840312156112c5576112c4610f78565b5b60006112d38482850161129a565b91505092915050565b6112e581610ff4565b82525050565b600060208201905061130060008301846112dc565b92915050565b6000819050919050565b600061132b61132661132184610ff4565b611306565b610ff4565b9050919050565b600061133d82611310565b9050919050565b600061134f82611332565b9050919050565b61135f81611344565b82525050565b600060208201905061137a6000830184611356565b92915050565b6000819050919050565b61139381611380565b82525050565b60006020820190506113ae600083018461138a565b92915050565b60006113bf82611332565b9050919050565b6113cf816113b4565b82525050565b60006020820190506113ea60008301846113c6565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061143757607f821691505b60208210810361144a576114496113f0565b5b50919050565b61145981611014565b82525050565b60006020820190506114746000830184611450565b92915050565b60008151905061148981610f8c565b92915050565b6000602082840312156114a5576114a4610f78565b5b60006114b38482850161147a565b91505092915050565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126114e8576114e76114bc565b5b80840192508235915067ffffffffffffffff82111561150a576115096114c1565b5b602083019250600182023603831315611526576115256114c6565b5b509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026115bf7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611582565b6115c98683611582565b95508019841693508086168417925050509392505050565b60006115fc6115f76115f284610f82565b611306565b610f82565b9050919050565b6000819050919050565b611616836115e1565b61162a61162282611603565b84845461158f565b825550505050565b600090565b61163f611632565b61164a81848461160d565b505050565b5b8181101561166e57611663600082611637565b600181019050611650565b5050565b601f8211156116b3576116848161155d565b61168d84611572565b8101602085101561169c578190505b6116b06116a885611572565b83018261164f565b50505b505050565b600082821c905092915050565b60006116d6600019846008026116b8565b1980831691505092915050565b60006116ef83836116c5565b9150826002028217905092915050565b61170882611035565b67ffffffffffffffff8111156117215761172061152e565b5b61172b825461141f565b611736828285611672565b600060209050601f8311600181146117695760008415611757578287015190505b61176185826116e3565b8655506117c9565b601f1984166117778661155d565b60005b8281101561179f5784890151825560018201915060208501945060208101905061177a565b868310156117bc57848901516117b8601f8916826116c5565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061180b82610f82565b915061181683610f82565b925082820190508082111561182e5761182d6117d1565b5b92915050565b60008151905061184381611283565b92915050565b60006020828403121561185f5761185e610f78565b5b600061186d84828501611834565b91505092915050565b61187f81610ff4565b811461188a57600080fd5b50565b60008151905061189c81611876565b92915050565b60008160020b9050919050565b6118b8816118a2565b81146118c357600080fd5b50565b6000815190506118d5816118af565b92915050565b600061ffff82169050919050565b6118f2816118db565b81146118fd57600080fd5b50565b60008151905061190f816118e9565b92915050565b600060ff82169050919050565b61192b81611915565b811461193657600080fd5b50565b60008151905061194881611922565b92915050565b60008115159050919050565b6119638161194e565b811461196e57600080fd5b50565b6000815190506119808161195a565b92915050565b600080600080600080600060e0888a0312156119a5576119a4610f78565b5b60006119b38a828b0161188d565b97505060206119c48a828b016118c6565b96505060406119d58a828b01611900565b95505060606119e68a828b01611900565b94505060806119f78a828b01611900565b93505060a0611a088a828b01611939565b92505060c0611a198a828b01611971565b91505092959891949750929550565b6000611a3382610f82565b9150611a3e83610f82565b9250828203905081811115611a5657611a556117d1565b5b92915050565b600069ffffffffffffffffffff82169050919050565b611a7b81611a5c565b8114611a8657600080fd5b50565b600081519050611a9881611a72565b92915050565b611aa781611380565b8114611ab257600080fd5b50565b600081519050611ac481611a9e565b92915050565b600080600080600060a08688031215611ae657611ae5610f78565b5b6000611af488828901611a89565b9550506020611b0588828901611ab5565b9450506040611b168882890161147a565b9350506060611b278882890161147a565b9250506080611b3888828901611a89565b9150509295509295909350565b6000611b5082610f82565b9150611b5b83610f82565b9250828202611b6981610f82565b91508282048414831517611b8057611b7f6117d1565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611bc182610f82565b9150611bcc83610f82565b925082611bdc57611bdb611b87565b5b828204905092915050565b600081905092915050565b50565b6000611c02600083611be7565b9150611c0d82611bf2565b600082019050919050565b6000611c2382611bf5565b915081905091905056fea264697066735822122005fb02bf69b24510b1d3289b9f0dfa9c0ca34ebb9c6ae72f1536bdd3fc069fea64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1E32 CODESIZE SUB DUP1 PUSH3 0x1E32 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x178 JUMP JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x1BF JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFB DUP3 PUSH3 0xCE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x10F DUP3 PUSH3 0xEE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x121 DUP2 PUSH3 0x102 JUMP JUMPDEST DUP2 EQ PUSH3 0x12D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x141 DUP2 PUSH3 0x116 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x152 DUP2 PUSH3 0xEE JUMP JUMPDEST DUP2 EQ PUSH3 0x15E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x172 DUP2 PUSH3 0x147 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x192 JUMPI PUSH3 0x191 PUSH3 0xC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x1A2 DUP6 DUP3 DUP7 ADD PUSH3 0x130 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x1B5 DUP6 DUP3 DUP7 ADD PUSH3 0x161 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C63 DUP1 PUSH3 0x1CF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4B61A44B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x4B61A44B EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x7E9E1ABE EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0xD05808F8 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xDE071A0A EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xED3B657A EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0xEE97F7F3 EQ PUSH2 0x2E1 JUMPI PUSH2 0xA6 JUMP JUMPDEST DUP1 PUSH3 0x407D2A EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x1F5E4583 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x279F54CE EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x404730F4 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x4230A777 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0x42E53FCF EQ PUSH2 0x1BD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCD SWAP2 SWAP1 PUSH2 0xFB8 JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDF SWAP2 SWAP1 PUSH2 0x11C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10A SWAP2 SWAP1 PUSH2 0x1210 JUMP JUMPDEST PUSH2 0x4D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11C SWAP2 SWAP1 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x1210 JUMP JUMPDEST PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16A PUSH2 0x8F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x12AF JUMP JUMPDEST PUSH2 0x990 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x12EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x1365 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0xFB8 JUMP JUMPDEST PUSH2 0xA39 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH2 0xA55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x263 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x1210 JUMP JUMPDEST PUSH2 0xA5B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x270 SWAP2 SWAP1 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x12AF JUMP JUMPDEST PUSH2 0xA6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x1399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CB PUSH2 0xAEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F6 PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x13D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x314 PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD DUP1 SLOAD PUSH2 0x43E SWAP1 PUSH2 0x141F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x46A SWAP1 PUSH2 0x141F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4B7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x48C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4B7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x49A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xB DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0xE8D4A51000 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6A627842 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53D SWAP2 SWAP1 PUSH2 0x145F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x55C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x580 SWAP2 SWAP1 PUSH2 0x148F JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x59E DUP5 PUSH2 0xA5B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0xC0 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5C6 SWAP2 SWAP1 PUSH2 0x12AF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5F4 SWAP2 SWAP1 PUSH2 0x12AF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x60 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x40 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x80 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0xA0 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP1 PUSH1 0xE0 ADD SWAP1 PUSH2 0x647 SWAP2 SWAP1 PUSH2 0x14CB JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH2 0x100 ADD CALLDATALOAD DUP2 MSTORE POP PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0xA ADD SWAP1 DUP2 PUSH2 0x7A0 SWAP2 SWAP1 PUSH2 0x16FF JUMP JUMPDEST POP PUSH2 0x160 DUP3 ADD MLOAD DUP2 PUSH1 0xB ADD SSTORE SWAP1 POP POP PUSH1 0x0 PUSH2 0x7BA DUP4 PUSH2 0x4D1 JUMP JUMPDEST SWAP1 POP PUSH2 0x7CD DUP2 PUSH1 0x0 PUSH4 0xFFFFFFFF AND PUSH2 0xB1B JUMP JUMPDEST POP PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7F5 SWAP2 SWAP1 PUSH2 0x1800 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x88EA0751 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x86B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x88F SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAA5DA046 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x967 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x98B SWAP2 SWAP1 PUSH2 0x148F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA02 SWAP2 SWAP1 PUSH2 0x1986 JUMP JUMPDEST POP POP POP POP POP POP SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA4B SWAP2 SWAP1 PUSH2 0x1A28 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH5 0xE8D4A51000 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAB8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xADC SWAP2 SWAP1 PUSH2 0x1ACA JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB26 PUSH2 0xE53 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP4 SUB PUSH2 0xE4C JUMPI PUSH1 0x0 PUSH1 0x64 DUP6 PUSH1 0x65 PUSH4 0xFFFFFFFF AND PUSH2 0xB4D SWAP2 SWAP1 PUSH2 0x1B45 JUMP JUMPDEST PUSH2 0xB57 SWAP2 SWAP1 PUSH2 0x1BB6 JUMP JUMPDEST SWAP1 POP DUP5 CALLVALUE LT ISZERO PUSH2 0xB93 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF244866F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 CALLVALUE PUSH2 0xBA1 SWAP2 SWAP1 PUSH2 0x1A28 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH1 0x40 MLOAD PUSH2 0xBC9 SWAP1 PUSH2 0x1C18 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC06 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xC46 JUMPI PUSH1 0x40 MLOAD PUSH32 0xAB1EE9BF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP7 DUP4 PUSH2 0xC55 SWAP2 SWAP1 PUSH2 0x1A28 JUMP JUMPDEST GT ISZERO PUSH2 0xD9B JUMPI PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7ABC3964 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCCA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCEE SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 DUP5 PUSH2 0xD10 SWAP2 SWAP1 PUSH2 0x1A28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD1C SWAP1 PUSH2 0x1C18 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xD59 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD5E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xD99 JUMPI PUSH1 0x40 MLOAD PUSH32 0x204633A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xE49 JUMPI PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xDCA SWAP1 PUSH2 0x1C18 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xE07 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE0C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xE47 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCD57D4DA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9CCC903D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEC2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEE6 SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF95 DUP2 PUSH2 0xF82 JUMP JUMPDEST DUP2 EQ PUSH2 0xFA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFB2 DUP2 PUSH2 0xF8C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFCE JUMPI PUSH2 0xFCD PUSH2 0xF78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFDC DUP5 DUP3 DUP6 ADD PUSH2 0xFA3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFEE DUP2 PUSH2 0xF82 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x101F DUP3 PUSH2 0xFF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x102F DUP2 PUSH2 0x1014 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x106F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1054 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1097 DUP3 PUSH2 0x1035 JUMP JUMPDEST PUSH2 0x10A1 DUP2 DUP6 PUSH2 0x1040 JUMP JUMPDEST SWAP4 POP PUSH2 0x10B1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1051 JUMP JUMPDEST PUSH2 0x10BA DUP2 PUSH2 0x107B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x10DE PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0xFE5 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x10F1 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0xFE5 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x1104 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0xFE5 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x1117 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0xFE5 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x112A PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x1026 JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x113D PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x1026 JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x1150 PUSH1 0xC0 DUP7 ADD DUP3 PUSH2 0xFE5 JUMP JUMPDEST POP PUSH1 0xE0 DUP4 ADD MLOAD PUSH2 0x1163 PUSH1 0xE0 DUP7 ADD DUP3 PUSH2 0xFE5 JUMP JUMPDEST POP PUSH2 0x100 DUP4 ADD MLOAD PUSH2 0x1178 PUSH2 0x100 DUP7 ADD DUP3 PUSH2 0xFE5 JUMP JUMPDEST POP PUSH2 0x120 DUP4 ADD MLOAD PUSH2 0x118D PUSH2 0x120 DUP7 ADD DUP3 PUSH2 0xFE5 JUMP JUMPDEST POP PUSH2 0x140 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH2 0x140 DUP7 ADD MSTORE PUSH2 0x11A7 DUP3 DUP3 PUSH2 0x108C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x160 DUP4 ADD MLOAD PUSH2 0x11BE PUSH2 0x160 DUP7 ADD DUP3 PUSH2 0xFE5 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11E3 DUP2 DUP5 PUSH2 0x10C5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1207 JUMPI PUSH2 0x1206 PUSH2 0x11EB JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1226 JUMPI PUSH2 0x1225 PUSH2 0xF78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1244 JUMPI PUSH2 0x1243 PUSH2 0xF7D JUMP JUMPDEST JUMPDEST PUSH2 0x1250 DUP5 DUP3 DUP6 ADD PUSH2 0x11F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1262 DUP2 PUSH2 0xF82 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x127D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1259 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x128C DUP2 PUSH2 0x1014 JUMP JUMPDEST DUP2 EQ PUSH2 0x1297 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12A9 DUP2 PUSH2 0x1283 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12C5 JUMPI PUSH2 0x12C4 PUSH2 0xF78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12D3 DUP5 DUP3 DUP6 ADD PUSH2 0x129A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12E5 DUP2 PUSH2 0xFF4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1300 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x132B PUSH2 0x1326 PUSH2 0x1321 DUP5 PUSH2 0xFF4 JUMP JUMPDEST PUSH2 0x1306 JUMP JUMPDEST PUSH2 0xFF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x133D DUP3 PUSH2 0x1310 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x134F DUP3 PUSH2 0x1332 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x135F DUP2 PUSH2 0x1344 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x137A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1356 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1393 DUP2 PUSH2 0x1380 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13AE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x138A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13BF DUP3 PUSH2 0x1332 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13CF DUP2 PUSH2 0x13B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13EA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1437 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x144A JUMPI PUSH2 0x1449 PUSH2 0x13F0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1459 DUP2 PUSH2 0x1014 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1474 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1450 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1489 DUP2 PUSH2 0xF8C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A5 JUMPI PUSH2 0x14A4 PUSH2 0xF78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14B3 DUP5 DUP3 DUP6 ADD PUSH2 0x147A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x14E8 JUMPI PUSH2 0x14E7 PUSH2 0x14BC JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x150A JUMPI PUSH2 0x1509 PUSH2 0x14C1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x1526 JUMPI PUSH2 0x1525 PUSH2 0x14C6 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x15BF PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1582 JUMP JUMPDEST PUSH2 0x15C9 DUP7 DUP4 PUSH2 0x1582 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15FC PUSH2 0x15F7 PUSH2 0x15F2 DUP5 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0x1306 JUMP JUMPDEST PUSH2 0xF82 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1616 DUP4 PUSH2 0x15E1 JUMP JUMPDEST PUSH2 0x162A PUSH2 0x1622 DUP3 PUSH2 0x1603 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x158F JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x163F PUSH2 0x1632 JUMP JUMPDEST PUSH2 0x164A DUP2 DUP5 DUP5 PUSH2 0x160D JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x166E JUMPI PUSH2 0x1663 PUSH1 0x0 DUP3 PUSH2 0x1637 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1650 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x16B3 JUMPI PUSH2 0x1684 DUP2 PUSH2 0x155D JUMP JUMPDEST PUSH2 0x168D DUP5 PUSH2 0x1572 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x169C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x16B0 PUSH2 0x16A8 DUP6 PUSH2 0x1572 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x164F JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16D6 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x16B8 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16EF DUP4 DUP4 PUSH2 0x16C5 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1708 DUP3 PUSH2 0x1035 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1721 JUMPI PUSH2 0x1720 PUSH2 0x152E JUMP JUMPDEST JUMPDEST PUSH2 0x172B DUP3 SLOAD PUSH2 0x141F JUMP JUMPDEST PUSH2 0x1736 DUP3 DUP3 DUP6 PUSH2 0x1672 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1769 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1757 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1761 DUP6 DUP3 PUSH2 0x16E3 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x17C9 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1777 DUP7 PUSH2 0x155D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x179F JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x177A JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x17BC JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x17B8 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x16C5 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x180B DUP3 PUSH2 0xF82 JUMP JUMPDEST SWAP2 POP PUSH2 0x1816 DUP4 PUSH2 0xF82 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x182E JUMPI PUSH2 0x182D PUSH2 0x17D1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1843 DUP2 PUSH2 0x1283 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x185F JUMPI PUSH2 0x185E PUSH2 0xF78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x186D DUP5 DUP3 DUP6 ADD PUSH2 0x1834 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x187F DUP2 PUSH2 0xFF4 JUMP JUMPDEST DUP2 EQ PUSH2 0x188A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x189C DUP2 PUSH2 0x1876 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18B8 DUP2 PUSH2 0x18A2 JUMP JUMPDEST DUP2 EQ PUSH2 0x18C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x18D5 DUP2 PUSH2 0x18AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18F2 DUP2 PUSH2 0x18DB JUMP JUMPDEST DUP2 EQ PUSH2 0x18FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x190F DUP2 PUSH2 0x18E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x192B DUP2 PUSH2 0x1915 JUMP JUMPDEST DUP2 EQ PUSH2 0x1936 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1948 DUP2 PUSH2 0x1922 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1963 DUP2 PUSH2 0x194E JUMP JUMPDEST DUP2 EQ PUSH2 0x196E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1980 DUP2 PUSH2 0x195A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x19A5 JUMPI PUSH2 0x19A4 PUSH2 0xF78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19B3 DUP11 DUP3 DUP12 ADD PUSH2 0x188D JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x19C4 DUP11 DUP3 DUP12 ADD PUSH2 0x18C6 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x19D5 DUP11 DUP3 DUP12 ADD PUSH2 0x1900 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x19E6 DUP11 DUP3 DUP12 ADD PUSH2 0x1900 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x19F7 DUP11 DUP3 DUP12 ADD PUSH2 0x1900 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1A08 DUP11 DUP3 DUP12 ADD PUSH2 0x1939 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1A19 DUP11 DUP3 DUP12 ADD PUSH2 0x1971 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A33 DUP3 PUSH2 0xF82 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A3E DUP4 PUSH2 0xF82 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1A56 JUMPI PUSH2 0x1A55 PUSH2 0x17D1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A7B DUP2 PUSH2 0x1A5C JUMP JUMPDEST DUP2 EQ PUSH2 0x1A86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A98 DUP2 PUSH2 0x1A72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AA7 DUP2 PUSH2 0x1380 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1AC4 DUP2 PUSH2 0x1A9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1AE6 JUMPI PUSH2 0x1AE5 PUSH2 0xF78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AF4 DUP9 DUP3 DUP10 ADD PUSH2 0x1A89 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1B05 DUP9 DUP3 DUP10 ADD PUSH2 0x1AB5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1B16 DUP9 DUP3 DUP10 ADD PUSH2 0x147A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1B27 DUP9 DUP3 DUP10 ADD PUSH2 0x147A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x1B38 DUP9 DUP3 DUP10 ADD PUSH2 0x1A89 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B50 DUP3 PUSH2 0xF82 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B5B DUP4 PUSH2 0xF82 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1B69 DUP2 PUSH2 0xF82 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1B80 JUMPI PUSH2 0x1B7F PUSH2 0x17D1 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BC1 DUP3 PUSH2 0xF82 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BCC DUP4 PUSH2 0xF82 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1BDC JUMPI PUSH2 0x1BDB PUSH2 0x1B87 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C02 PUSH1 0x0 DUP4 PUSH2 0x1BE7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C0D DUP3 PUSH2 0x1BF2 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C23 DUP3 PUSH2 0x1BF5 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV 0xFB MUL 0xBF PUSH10 0xB24510B1D3289B9F0DFA SWAP13 0xC LOG3 0x4E 0xBB SWAP13 PUSH11 0xE72F1536BDD3FC069FEA64 PUSH20 0x6F6C634300081300330000000000000000000000 ",
							"sourceMap": "456:3835:9:-:0;;;700:248;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;861:9;850:8;;:20;;;;;;;;;;;;;;;;;;900:1;880:17;:21;;;;927:13;911:6;;:30;;;;;;;;;;;;;;;;;;700:248;;456:3835;;88:117:16;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:114::-;623:7;652:24;670:5;652:24;:::i;:::-;641:35;;568:114;;;:::o;688:158::-;779:42;815:5;779:42;:::i;:::-;772:5;769:53;759:81;;836:1;833;826:12;759:81;688:158;:::o;852:179::-;927:5;958:6;952:13;943:22;;974:51;1019:5;974:51;:::i;:::-;852:179;;;;:::o;1037:122::-;1110:24;1128:5;1110:24;:::i;:::-;1103:5;1100:35;1090:63;;1149:1;1146;1139:12;1090:63;1037:122;:::o;1165:143::-;1222:5;1253:6;1247:13;1238:22;;1269:33;1296:5;1269:33;:::i;:::-;1165:143;;;;:::o;1314:543::-;1411:6;1419;1468:2;1456:9;1447:7;1443:23;1439:32;1436:119;;;1474:79;;:::i;:::-;1436:119;1594:1;1619:82;1693:7;1684:6;1673:9;1669:22;1619:82;:::i;:::-;1609:92;;1565:146;1750:2;1776:64;1832:7;1823:6;1812:9;1808:22;1776:64;:::i;:::-;1766:74;;1721:129;1314:543;;;;;:::o;456:3835:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@activeCoverAmount_593": {
									"entryPoint": 2645,
									"id": 593,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buyCover_715": {
									"entryPoint": 1248,
									"id": 715,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@coverAmountInETH_736": {
									"entryPoint": 2651,
									"id": 736,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@coverDataCount_725": {
									"entryPoint": 2296,
									"id": 725,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@coverNFT_599": {
									"entryPoint": 2579,
									"id": 599,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@coverPrice_747": {
									"entryPoint": 1233,
									"id": 747,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decActiveCoverInETH_877": {
									"entryPoint": 2617,
									"id": 877,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getCoverData_635": {
									"entryPoint": 780,
									"id": 635,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getLiveDataUniswap_916": {
									"entryPoint": 2448,
									"id": 916,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUnitPX_934": {
									"entryPoint": 2666,
									"id": 934,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@master_596": {
									"entryPoint": 2805,
									"id": 596,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@pool_898": {
									"entryPoint": 3667,
									"id": 898,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@retrievePayment_867": {
									"entryPoint": 2843,
									"id": 867,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalActiveCoverInETH_885": {
									"entryPoint": 2795,
									"id": 885,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4762,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 6196,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 6513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int24_fromMemory": {
									"entryPoint": 6342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int256_fromMemory": {
									"entryPoint": 6837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_struct$_BuyCoverParams_$957_calldata_ptr": {
									"entryPoint": 4592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint160_fromMemory": {
									"entryPoint": 6285,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint16_fromMemory": {
									"entryPoint": 6400,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4003,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 5242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint80_fromMemory": {
									"entryPoint": 6793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 6457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4783,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 6217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_BuyCoverParams_$957_calldata_ptr": {
									"entryPoint": 4624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory": {
									"entryPoint": 6534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 6858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 4134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_ICoverNFT_$1074_to_t_address_fromStack": {
									"entryPoint": 4950,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_Master_$570_to_t_address_fromStack": {
									"entryPoint": 5062,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_int256_to_t_int256_fromStack": {
									"entryPoint": 5002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr": {
									"entryPoint": 4236,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_CoverData_$982_memory_ptr_to_t_struct$_CoverData_$982_memory_ptr_fromStack": {
									"entryPoint": 4293,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint160_to_t_uint160_fromStack": {
									"entryPoint": 4828,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 4069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ICoverNFT_$1074__to_t_address__fromStack_reversed": {
									"entryPoint": 4965,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_Master_$570__to_t_address__fromStack_reversed": {
									"entryPoint": 5077,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed": {
									"entryPoint": 5017,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_CoverData_$982_memory_ptr__to_t_struct$_CoverData_$982_memory_ptr__fromStack_reversed": {
									"entryPoint": 4553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint160__to_t_uint160__fromStack_reversed": {
									"entryPoint": 4843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"access_calldata_tail_t_string_calldata_ptr": {
									"entryPoint": 5323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 5469,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4149,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr": {
									"entryPoint": 4160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 5746,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 4116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int24": {
									"entryPoint": 6306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 4992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint16": {
									"entryPoint": 6363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4084,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint80": {
									"entryPoint": 6748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 5711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_contract$_ICoverNFT_$1074_to_t_address": {
									"entryPoint": 4932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_Master_$570_to_t_address": {
									"entryPoint": 5044,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 4914,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 4880,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 5601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 5887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4177,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 5490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 5151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 5859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 4870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 5829,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6097,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7047,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5104,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5422,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 5635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a": {
									"entryPoint": 5313,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d": {
									"entryPoint": 4587,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad": {
									"entryPoint": 5308,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e": {
									"entryPoint": 5318,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 3965,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3960,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4219,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 5506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 5816,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 5687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 7154,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 5519,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 5645,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4739,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int24": {
									"entryPoint": 6319,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 6814,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint16": {
									"entryPoint": 6377,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint160": {
									"entryPoint": 6262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3980,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 6434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint80": {
									"entryPoint": 6770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 5682,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:24065:16",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:16"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:16"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:16",
														"type": ""
													}
												],
												"src": "7:75:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:16"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:16"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:16",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:16",
														"type": ""
													}
												],
												"src": "334:77:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:16"
															},
															"nodeType": "YulIf",
															"src": "470:63:16"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:16",
														"type": ""
													}
												],
												"src": "417:122:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:16"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:16",
														"type": ""
													}
												],
												"src": "545:139:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:16"
															},
															"nodeType": "YulIf",
															"src": "766:119:16"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:16",
														"type": ""
													}
												],
												"src": "690:329:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1080:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1097:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1120:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1102:17:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1102:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1090:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1090:37:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1090:37:16"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1068:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1075:3:16",
														"type": ""
													}
												],
												"src": "1025:108:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1184:81:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1194:65:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1209:5:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1216:42:16",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1205:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1205:54:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1194:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1166:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1176:7:16",
														"type": ""
													}
												],
												"src": "1139:126:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1316:51:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1326:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1355:5:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1337:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1337:24:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1326:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1298:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1308:7:16",
														"type": ""
													}
												],
												"src": "1271:96:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1428:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1445:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1468:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1450:17:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1450:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1438:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1438:37:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1438:37:16"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1416:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1423:3:16",
														"type": ""
													}
												],
												"src": "1373:108:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1546:40:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1557:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1573:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1567:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1567:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1557:6:16"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1529:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1539:6:16",
														"type": ""
													}
												],
												"src": "1487:99:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1678:73:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1695:3:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1700:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1688:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1688:19:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1688:19:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1716:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1735:3:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1740:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1731:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1731:14:16"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1716:11:16"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1650:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1655:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1666:11:16",
														"type": ""
													}
												],
												"src": "1592:159:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1819:184:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1829:10:16",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1838:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1833:1:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1898:63:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1923:3:16"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1928:1:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1919:3:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1919:11:16"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1942:3:16"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1947:1:16"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1938:3:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1938:11:16"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1932:5:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1932:18:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1912:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1912:39:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1912:39:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1859:1:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1862:6:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1856:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1856:13:16"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1870:19:16",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1872:15:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1881:1:16"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1884:2:16",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1877:3:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1877:10:16"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1872:1:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1852:3:16",
																"statements": []
															},
															"src": "1848:113:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1981:3:16"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1986:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1977:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1977:16:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1995:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1970:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1970:27:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1970:27:16"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1801:3:16",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1806:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1811:6:16",
														"type": ""
													}
												],
												"src": "1757:246:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2057:54:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2067:38:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2085:5:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2092:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2081:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2081:14:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2101:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2097:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2097:7:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2077:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2077:28:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2067:6:16"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2040:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2050:6:16",
														"type": ""
													}
												],
												"src": "2009:102:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2199:275:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2209:53:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2256:5:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2223:32:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2223:39:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2213:6:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2271:68:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2327:3:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2332:6:16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2278:48:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2278:61:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2271:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2387:5:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2394:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2383:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2383:16:16"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2401:3:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2406:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2348:34:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2348:65:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2348:65:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2422:46:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2433:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2460:6:16"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2438:21:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2438:29:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2429:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2429:39:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2422:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2180:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2187:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2195:3:16",
														"type": ""
													}
												],
												"src": "2117:357:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2650:2315:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2660:28:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2676:3:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2681:6:16",
																		"type": "",
																		"value": "0x0180"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2672:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2672:16:16"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "2664:4:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2698:173:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2742:43:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2772:5:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2779:4:16",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2768:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2768:16:16"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2762:5:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2762:23:16"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2746:12:16",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2832:12:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2850:3:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2855:4:16",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2846:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2846:14:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2798:33:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2798:63:16"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2798:63:16"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2881:176:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2928:43:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2958:5:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2965:4:16",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2954:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2954:16:16"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2948:5:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2948:23:16"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2932:12:16",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3018:12:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3036:3:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3041:4:16",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3032:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3032:14:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2984:33:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2984:63:16"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2984:63:16"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3067:165:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3103:43:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3133:5:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3140:4:16",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3129:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3129:16:16"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3123:5:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3123:23:16"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3107:12:16",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3193:12:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3211:3:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3216:4:16",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3207:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3207:14:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3159:33:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3159:63:16"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3159:63:16"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3242:166:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3279:43:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3309:5:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3316:4:16",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3305:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3305:16:16"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3299:5:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:16"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3283:12:16",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3369:12:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3387:3:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3392:4:16",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3383:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3383:14:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3335:33:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3335:63:16"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3335:63:16"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3418:166:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3455:43:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3485:5:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3492:4:16",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3481:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3481:16:16"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3475:5:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3475:23:16"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3459:12:16",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3545:12:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3563:3:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3568:4:16",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3559:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3559:14:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3511:33:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3511:63:16"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3511:63:16"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3594:166:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3631:43:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3661:5:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3668:4:16",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3657:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3657:16:16"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3651:5:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3651:23:16"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3635:12:16",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3721:12:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3739:3:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3744:4:16",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3735:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3735:14:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3687:33:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3687:63:16"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3687:63:16"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3770:169:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3810:43:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3840:5:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3847:4:16",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3836:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3836:16:16"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3830:5:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3830:23:16"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3814:12:16",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3900:12:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3918:3:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3923:4:16",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3914:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3914:14:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3866:33:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3866:63:16"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3866:63:16"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3949:169:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3989:43:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4019:5:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4026:4:16",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4015:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4015:16:16"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "4009:5:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4009:23:16"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3993:12:16",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "4079:12:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "4097:3:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4102:4:16",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4093:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4093:14:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4045:33:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4045:63:16"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4045:63:16"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4128:179:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4174:45:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4204:5:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4211:6:16",
																						"type": "",
																						"value": "0x0100"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4200:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4200:18:16"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "4194:5:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4194:25:16"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "4178:12:16",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "4266:12:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "4284:3:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4289:6:16",
																						"type": "",
																						"value": "0x0100"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4280:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4280:16:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4232:33:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4232:65:16"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4232:65:16"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4317:179:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4363:45:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4393:5:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4400:6:16",
																						"type": "",
																						"value": "0x0120"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4389:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4389:18:16"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "4383:5:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4383:25:16"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "4367:12:16",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "4455:12:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "4473:3:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4478:6:16",
																						"type": "",
																						"value": "0x0120"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4469:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4469:16:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4421:33:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4421:65:16"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4421:65:16"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4506:242:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4544:45:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4574:5:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4581:6:16",
																						"type": "",
																						"value": "0x0140"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4570:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4570:18:16"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "4564:5:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4564:25:16"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "4548:12:16",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "4614:3:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4619:6:16",
																						"type": "",
																						"value": "0x0140"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4610:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4610:16:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nodeType": "YulIdentifier",
																						"src": "4632:4:16"
																					},
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "4638:3:16"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4628:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4628:14:16"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "4603:6:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4603:40:16"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4603:40:16"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4656:81:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "4718:12:16"
																			},
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4732:4:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4664:53:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4664:73:16"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nodeType": "YulIdentifier",
																			"src": "4656:4:16"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4758:180:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4805:45:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4835:5:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4842:6:16",
																						"type": "",
																						"value": "0x0160"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4831:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4831:18:16"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "4825:5:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4825:25:16"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "4809:12:16",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "4897:12:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "4915:3:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4920:6:16",
																						"type": "",
																						"value": "0x0160"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4911:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4911:16:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4863:33:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4863:65:16"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4863:65:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4948:11:16",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "4955:4:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4948:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_CoverData_$982_memory_ptr_to_t_struct$_CoverData_$982_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2629:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2636:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2645:3:16",
														"type": ""
													}
												],
												"src": "2524:2441:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5121:227:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5131:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5143:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5154:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5139:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5139:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5131:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5178:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5189:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5174:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5174:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5197:4:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5203:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5193:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5193:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5167:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5167:47:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5167:47:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5223:118:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5327:6:16"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5336:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_CoverData_$982_memory_ptr_to_t_struct$_CoverData_$982_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5231:95:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5231:110:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5223:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_CoverData_$982_memory_ptr__to_t_struct$_CoverData_$982_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5093:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5105:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5116:4:16",
														"type": ""
													}
												],
												"src": "4971:377:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5443:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5460:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5463:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5453:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5453:12:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5453:12:16"
														}
													]
												},
												"name": "revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d",
												"nodeType": "YulFunctionDefinition",
												"src": "5354:117:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5591:153:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5631:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d",
																				"nodeType": "YulIdentifier",
																				"src": "5633:77:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5633:79:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5633:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "5612:3:16"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5617:6:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5608:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5608:16:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5626:3:16",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5604:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5604:26:16"
															},
															"nodeType": "YulIf",
															"src": "5601:113:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5723:15:16",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "5732:6:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5723:5:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_BuyCoverParams_$957_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5569:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5577:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5585:5:16",
														"type": ""
													}
												],
												"src": "5506:238:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5849:456:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5895:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5897:77:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5897:79:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5897:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5870:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5879:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5866:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5866:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5891:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5862:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5862:32:16"
															},
															"nodeType": "YulIf",
															"src": "5859:119:16"
														},
														{
															"nodeType": "YulBlock",
															"src": "5988:310:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6003:45:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6034:9:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6045:1:16",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6030:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6030:17:16"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "6017:12:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6017:31:16"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6007:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6095:83:16",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "6097:77:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6097:79:16"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6097:79:16"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6067:6:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6075:18:16",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6064:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6064:30:16"
																	},
																	"nodeType": "YulIf",
																	"src": "6061:117:16"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6192:96:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6260:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6271:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6256:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6256:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6280:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_BuyCoverParams_$957_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6202:53:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6202:86:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6192:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_BuyCoverParams_$957_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5819:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5830:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5842:6:16",
														"type": ""
													}
												],
												"src": "5750:555:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6376:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6393:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6416:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6398:17:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6398:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6386:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6386:37:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6386:37:16"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6364:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6371:3:16",
														"type": ""
													}
												],
												"src": "6311:118:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6533:124:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6543:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6555:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6566:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6551:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6551:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6543:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6623:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6636:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6647:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6632:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6632:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6579:43:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6579:71:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6579:71:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6505:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6517:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6528:4:16",
														"type": ""
													}
												],
												"src": "6435:222:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6706:79:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6763:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6772:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6775:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6765:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6765:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6765:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6729:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6754:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "6736:17:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6736:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6726:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6726:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6719:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6719:43:16"
															},
															"nodeType": "YulIf",
															"src": "6716:63:16"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6699:5:16",
														"type": ""
													}
												],
												"src": "6663:122:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6843:87:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6853:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6875:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6862:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6862:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6853:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6918:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "6891:26:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6891:33:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6891:33:16"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6821:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6829:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6837:5:16",
														"type": ""
													}
												],
												"src": "6791:139:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7002:263:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7048:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7050:77:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7050:79:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7050:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7023:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7032:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7019:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7019:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7044:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7015:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7015:32:16"
															},
															"nodeType": "YulIf",
															"src": "7012:119:16"
														},
														{
															"nodeType": "YulBlock",
															"src": "7141:117:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7156:15:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7170:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7160:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7185:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7220:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7231:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7216:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7216:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7240:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7195:20:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7195:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7185:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6972:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6983:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6995:6:16",
														"type": ""
													}
												],
												"src": "6936:329:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7336:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7353:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7376:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint160",
																			"nodeType": "YulIdentifier",
																			"src": "7358:17:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7358:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7346:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7346:37:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7346:37:16"
														}
													]
												},
												"name": "abi_encode_t_uint160_to_t_uint160_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7324:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7331:3:16",
														"type": ""
													}
												],
												"src": "7271:118:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7493:124:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7503:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7515:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7526:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7511:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7511:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7503:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7583:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7596:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7607:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7592:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7592:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint160_to_t_uint160_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7539:43:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7539:71:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7539:71:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint160__to_t_uint160__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7465:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7477:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7488:4:16",
														"type": ""
													}
												],
												"src": "7395:222:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7655:28:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7665:12:16",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7672:5:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "7665:3:16"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7641:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "7651:3:16",
														"type": ""
													}
												],
												"src": "7623:60:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7749:82:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7759:66:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7817:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "7799:17:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7799:24:16"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "7790:8:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7790:34:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "7772:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7772:53:16"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "7759:9:16"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7729:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "7739:9:16",
														"type": ""
													}
												],
												"src": "7689:142:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7897:66:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7907:50:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7951:5:16"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "7920:30:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7920:37:16"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "7907:9:16"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7877:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "7887:9:16",
														"type": ""
													}
												],
												"src": "7837:126:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8047:66:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8057:50:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8101:5:16"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "8070:30:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8070:37:16"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "8057:9:16"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ICoverNFT_$1074_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8027:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "8037:9:16",
														"type": ""
													}
												],
												"src": "7969:144:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8202:84:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8219:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8273:5:16"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ICoverNFT_$1074_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8224:48:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8224:55:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8212:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8212:68:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8212:68:16"
														}
													]
												},
												"name": "abi_encode_t_contract$_ICoverNFT_$1074_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8190:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8197:3:16",
														"type": ""
													}
												],
												"src": "8119:167:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8408:142:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8418:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8430:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8441:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8426:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8426:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8418:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8516:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8529:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8540:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8525:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8525:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ICoverNFT_$1074_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8454:61:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8454:89:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8454:89:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ICoverNFT_$1074__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8380:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8392:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8403:4:16",
														"type": ""
													}
												],
												"src": "8292:258:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8600:32:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8610:16:16",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "8621:5:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8610:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8582:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8592:7:16",
														"type": ""
													}
												],
												"src": "8556:76:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8701:52:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8718:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8740:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int256",
																			"nodeType": "YulIdentifier",
																			"src": "8723:16:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8723:23:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8711:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8711:36:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8711:36:16"
														}
													]
												},
												"name": "abi_encode_t_int256_to_t_int256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8689:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8696:3:16",
														"type": ""
													}
												],
												"src": "8638:115:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8855:122:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8865:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8877:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8888:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8873:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8873:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8865:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8943:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8956:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8967:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8952:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8952:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8901:41:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8901:69:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8901:69:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8827:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8839:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8850:4:16",
														"type": ""
													}
												],
												"src": "8759:218:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9057:66:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9067:50:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9111:5:16"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "9080:30:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9080:37:16"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "9067:9:16"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_Master_$570_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9037:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "9047:9:16",
														"type": ""
													}
												],
												"src": "8983:140:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9208:80:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9225:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9275:5:16"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_Master_$570_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9230:44:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9230:51:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9218:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9218:64:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9218:64:16"
														}
													]
												},
												"name": "abi_encode_t_contract$_Master_$570_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9196:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9203:3:16",
														"type": ""
													}
												],
												"src": "9129:159:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9406:138:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9416:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9428:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9439:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9424:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9424:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9416:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9510:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9523:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9534:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9519:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9519:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_Master_$570_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9452:57:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9452:85:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9452:85:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_Master_$570__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9378:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9390:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9401:4:16",
														"type": ""
													}
												],
												"src": "9294:250:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9578:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9595:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9598:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9588:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9588:88:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9588:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9692:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9695:4:16",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9685:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9685:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9685:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9716:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9719:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9709:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9709:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9709:15:16"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "9550:180:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9787:269:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9797:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "9811:4:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9817:1:16",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "9807:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9807:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "9797:6:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9828:38:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "9858:4:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9864:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9854:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9854:12:16"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "9832:18:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9905:51:16",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9919:27:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "9933:6:16"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9941:4:16",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "9929:3:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9929:17:16"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9919:6:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "9885:18:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9878:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9878:26:16"
															},
															"nodeType": "YulIf",
															"src": "9875:81:16"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10008:42:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "10022:16:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10022:18:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10022:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "9972:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9995:6:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10003:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "9992:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9992:14:16"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "9969:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9969:38:16"
															},
															"nodeType": "YulIf",
															"src": "9966:84:16"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "9771:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9780:6:16",
														"type": ""
													}
												],
												"src": "9736:320:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10127:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10144:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10167:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10149:17:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10149:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10137:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10137:37:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10137:37:16"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10115:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10122:3:16",
														"type": ""
													}
												],
												"src": "10062:118:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10284:124:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10294:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10306:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10317:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10302:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10302:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10294:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10374:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10387:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10398:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10383:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10383:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10330:43:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10330:71:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10330:71:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10256:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10268:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10279:4:16",
														"type": ""
													}
												],
												"src": "10186:222:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10477:80:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10487:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10502:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10496:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10496:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "10487:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10545:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10518:26:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10518:33:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10518:33:16"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "10455:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10463:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10471:5:16",
														"type": ""
													}
												],
												"src": "10414:143:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10640:274:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10686:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10688:77:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10688:79:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10688:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10661:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10670:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10657:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10657:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10682:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10653:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10653:32:16"
															},
															"nodeType": "YulIf",
															"src": "10650:119:16"
														},
														{
															"nodeType": "YulBlock",
															"src": "10779:128:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10794:15:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10808:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10798:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10823:74:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10869:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10880:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10865:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10865:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10889:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "10833:31:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10833:64:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10823:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10610:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10621:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10633:6:16",
														"type": ""
													}
												],
												"src": "10563:351:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11009:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11026:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11029:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11019:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11019:12:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11019:12:16"
														}
													]
												},
												"name": "revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad",
												"nodeType": "YulFunctionDefinition",
												"src": "10920:117:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11132:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11149:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11152:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11142:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11142:12:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11142:12:16"
														}
													]
												},
												"name": "revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a",
												"nodeType": "YulFunctionDefinition",
												"src": "11043:117:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11255:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11272:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11275:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11265:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11265:12:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11265:12:16"
														}
													]
												},
												"name": "revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e",
												"nodeType": "YulFunctionDefinition",
												"src": "11166:117:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11380:634:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11390:51:16",
															"value": {
																"arguments": [
																	{
																		"name": "ptr_to_tail",
																		"nodeType": "YulIdentifier",
																		"src": "11429:11:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "11416:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11416:25:16"
															},
															"variables": [
																{
																	"name": "rel_offset_of_tail",
																	"nodeType": "YulTypedName",
																	"src": "11394:18:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11535:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad",
																				"nodeType": "YulIdentifier",
																				"src": "11537:77:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11537:79:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11537:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "rel_offset_of_tail",
																				"nodeType": "YulIdentifier",
																				"src": "11464:18:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "calldatasize",
																									"nodeType": "YulIdentifier",
																									"src": "11492:12:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "11492:14:16"
																							},
																							{
																								"name": "base_ref",
																								"nodeType": "YulIdentifier",
																								"src": "11508:8:16"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "11488:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11488:29:16"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11523:4:16",
																								"type": "",
																								"value": "0x20"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11529:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "11519:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11519:12:16"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "11484:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11484:48:16"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "11460:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11460:73:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11453:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11453:81:16"
															},
															"nodeType": "YulIf",
															"src": "11450:168:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11627:41:16",
															"value": {
																"arguments": [
																	{
																		"name": "base_ref",
																		"nodeType": "YulIdentifier",
																		"src": "11639:8:16"
																	},
																	{
																		"name": "rel_offset_of_tail",
																		"nodeType": "YulIdentifier",
																		"src": "11649:18:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11635:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11635:33:16"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nodeType": "YulIdentifier",
																	"src": "11627:4:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11678:28:16",
															"value": {
																"arguments": [
																	{
																		"name": "addr",
																		"nodeType": "YulIdentifier",
																		"src": "11701:4:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "11688:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11688:18:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "11678:6:16"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11749:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a",
																				"nodeType": "YulIdentifier",
																				"src": "11751:77:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11751:79:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11751:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11721:6:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11729:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11718:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11718:30:16"
															},
															"nodeType": "YulIf",
															"src": "11715:117:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11841:21:16",
															"value": {
																"arguments": [
																	{
																		"name": "addr",
																		"nodeType": "YulIdentifier",
																		"src": "11853:4:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11859:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11849:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11849:13:16"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nodeType": "YulIdentifier",
																	"src": "11841:4:16"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11924:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e",
																				"nodeType": "YulIdentifier",
																				"src": "11926:77:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11926:79:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11926:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "addr",
																		"nodeType": "YulIdentifier",
																		"src": "11878:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "calldatasize",
																					"nodeType": "YulIdentifier",
																					"src": "11888:12:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11888:14:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "11908:6:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11916:4:16",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "11904:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11904:17:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11884:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11884:38:16"
																	}
																],
																"functionName": {
																	"name": "sgt",
																	"nodeType": "YulIdentifier",
																	"src": "11874:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11874:49:16"
															},
															"nodeType": "YulIf",
															"src": "11871:136:16"
														}
													]
												},
												"name": "access_calldata_tail_t_string_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base_ref",
														"nodeType": "YulTypedName",
														"src": "11341:8:16",
														"type": ""
													},
													{
														"name": "ptr_to_tail",
														"nodeType": "YulTypedName",
														"src": "11351:11:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "addr",
														"nodeType": "YulTypedName",
														"src": "11367:4:16",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11373:6:16",
														"type": ""
													}
												],
												"src": "11289:725:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12048:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12065:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12068:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12058:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12058:88:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12058:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12162:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12165:4:16",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12155:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12155:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12155:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12186:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12189:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12179:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12179:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12179:15:16"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "12020:180:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12260:87:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12270:11:16",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "12278:3:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "12270:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12298:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "12301:3:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12291:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12291:14:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12291:14:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12314:26:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12332:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12335:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "12322:9:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12322:18:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "12314:4:16"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "12247:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "12255:4:16",
														"type": ""
													}
												],
												"src": "12206:141:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12397:49:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12407:33:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12425:5:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12432:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12421:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12421:14:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12437:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "12417:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12417:23:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "12407:6:16"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12380:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "12390:6:16",
														"type": ""
													}
												],
												"src": "12353:93:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12505:54:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12515:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "12540:4:16"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12546:5:16"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "12536:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12536:16:16"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "12515:8:16"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "12480:4:16",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12486:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "12496:8:16",
														"type": ""
													}
												],
												"src": "12452:107:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12641:317:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12651:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "12672:10:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12684:1:16",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "12668:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12668:18:16"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "12655:9:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12695:109:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "12726:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12737:66:16",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "12707:18:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12707:97:16"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "12699:4:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12813:51:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "12844:9:16"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "12855:8:16"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "12825:18:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12825:39:16"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "12813:8:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12873:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12886:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "12897:4:16"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "12893:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12893:9:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12882:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12882:21:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "12873:5:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12912:40:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12925:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "12936:8:16"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "12946:4:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12932:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12932:19:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "12922:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12922:30:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "12912:6:16"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12602:5:16",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "12609:10:16",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "12621:8:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "12634:6:16",
														"type": ""
													}
												],
												"src": "12565:393:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13024:82:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13034:66:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13092:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "13074:17:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13074:24:16"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "13065:8:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13065:34:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13047:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "13047:53:16"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "13034:9:16"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13004:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "13014:9:16",
														"type": ""
													}
												],
												"src": "12964:142:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13159:28:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13169:12:16",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "13176:5:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "13169:3:16"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13145:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "13155:3:16",
														"type": ""
													}
												],
												"src": "13112:75:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13269:193:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13279:63:16",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "13334:7:16"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13303:30:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "13303:39:16"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "13283:16:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "13358:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "13398:4:16"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "13392:5:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13392:11:16"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "13405:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "13437:16:16"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "13413:23:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13413:41:16"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "13364:27:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13364:91:16"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "13351:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "13351:105:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13351:105:16"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "13246:4:16",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "13252:6:16",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "13260:7:16",
														"type": ""
													}
												],
												"src": "13193:269:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13517:24:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13527:8:16",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "13534:1:16",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "13527:3:16"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "13513:3:16",
														"type": ""
													}
												],
												"src": "13468:73:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13600:136:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13610:46:16",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13624:30:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "13624:32:16"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "13614:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "13709:4:16"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "13715:6:16"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "13723:6:16"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13665:43:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "13665:65:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13665:65:16"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "13586:4:16",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "13592:6:16",
														"type": ""
													}
												],
												"src": "13547:189:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13792:136:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13859:63:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "13903:5:16"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13910:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "13873:29:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13873:39:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13873:39:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "13812:5:16"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "13819:3:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "13809:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "13809:14:16"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "13824:26:16",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13826:22:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "13839:5:16"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13846:1:16",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "13835:3:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13835:13:16"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "13826:5:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "13806:2:16",
																"statements": []
															},
															"src": "13802:120:16"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "13780:5:16",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13787:3:16",
														"type": ""
													}
												],
												"src": "13742:186:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14013:464:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14039:431:16",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "14053:54:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "14101:5:16"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "14069:31:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14069:38:16"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "14057:8:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "14120:63:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "14143:8:16"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "14171:10:16"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "14153:17:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14153:29:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "14139:3:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14139:44:16"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "14124:11:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "14340:27:16",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "14342:23:16",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "14357:8:16"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "14342:11:16"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "14324:10:16"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14336:2:16",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "14321:2:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14321:18:16"
																		},
																		"nodeType": "YulIf",
																		"src": "14318:49:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "14409:11:16"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "14426:8:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "14454:3:16"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "14436:17:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "14436:22:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "14422:3:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14422:37:16"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "14380:28:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14380:80:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14380:80:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "14030:3:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14035:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14027:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "14027:11:16"
															},
															"nodeType": "YulIf",
															"src": "14024:446:16"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "13989:5:16",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "13996:3:16",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "14001:10:16",
														"type": ""
													}
												],
												"src": "13934:543:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14546:54:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14556:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "14581:4:16"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14587:5:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "14577:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "14577:16:16"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "14556:8:16"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "14521:4:16",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14527:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "14537:8:16",
														"type": ""
													}
												],
												"src": "14483:117:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14657:118:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14667:68:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14716:1:16",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "14719:5:16"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "14712:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14712:13:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14731:1:16",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "14727:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14727:6:16"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "14683:28:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14683:51:16"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "14679:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "14679:56:16"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "14671:4:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14744:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14758:4:16"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "14764:4:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14754:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "14754:15:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "14744:6:16"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "14634:4:16",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "14640:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "14650:6:16",
														"type": ""
													}
												],
												"src": "14606:169:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14861:214:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14994:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "15021:4:16"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "15027:3:16"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "15002:18:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "15002:29:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "14994:4:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15040:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "15051:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15061:1:16",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "15064:3:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "15057:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15057:11:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "15048:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "15048:21:16"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "15040:4:16"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "14842:4:16",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "14848:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "14856:4:16",
														"type": ""
													}
												],
												"src": "14780:295:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15172:1303:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15183:51:16",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "15230:3:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "15197:32:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "15197:37:16"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "15187:6:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15319:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "15321:16:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15321:18:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15321:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "15291:6:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15299:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15288:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "15288:30:16"
															},
															"nodeType": "YulIf",
															"src": "15285:56:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15351:52:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "15397:4:16"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "15391:5:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15391:11:16"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "15365:25:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "15365:38:16"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "15355:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "15496:4:16"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "15502:6:16"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "15510:6:16"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "15450:45:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "15450:67:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15450:67:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15527:18:16",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15544:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "15531:9:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15555:17:16",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15568:4:16",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "15555:9:16"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "15619:611:16",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "15633:37:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "15652:6:16"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "15664:4:16",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "15660:3:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "15660:9:16"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "15648:3:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15648:22:16"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "15637:7:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "15684:51:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "15730:4:16"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "15698:31:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15698:37:16"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "15688:6:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "15748:10:16",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15757:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "15752:1:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "15816:163:16",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "15841:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "15859:3:16"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "15864:9:16"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "15855:3:16"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "15855:19:16"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "15849:5:16"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "15849:26:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "15834:6:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "15834:42:16"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "15834:42:16"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "15893:24:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "15907:6:16"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "15915:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "15903:3:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "15903:14:16"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "15893:6:16"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "15934:31:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "15951:9:16"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "15962:2:16",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "15947:3:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "15947:18:16"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "15934:9:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "15782:1:16"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "15785:7:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "15779:2:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15779:14:16"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "15794:21:16",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "15796:17:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "15805:1:16"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "15808:4:16",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "15801:3:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "15801:12:16"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "15796:1:16"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "15775:3:16",
																					"statements": []
																				},
																				"src": "15771:208:16"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "16015:156:16",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "16033:43:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "16060:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "16065:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "16056:3:16"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "16056:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "16050:5:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "16050:26:16"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "16037:9:16",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "16100:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "16127:9:16"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "16142:6:16"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "16150:4:16",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "16138:3:16"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "16138:17:16"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "16108:18:16"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "16108:48:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "16093:6:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "16093:64:16"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "16093:64:16"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "15998:7:16"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "16007:6:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "15995:2:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15995:19:16"
																				},
																				"nodeType": "YulIf",
																				"src": "15992:179:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "16191:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "16205:6:16"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "16213:1:16",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "16201:3:16"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "16201:14:16"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "16217:1:16",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "16197:3:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "16197:22:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "16184:6:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16184:36:16"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "16184:36:16"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "15612:618:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15617:1:16",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "16247:222:16",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "16261:14:16",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16274:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "16265:5:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "16298:67:16",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "16316:35:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "16335:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "16340:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "16331:3:16"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "16331:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "16325:5:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "16325:26:16"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "16316:5:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "16291:6:16"
																				},
																				"nodeType": "YulIf",
																				"src": "16288:77:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "16385:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "16444:5:16"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "16451:6:16"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "16391:52:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "16391:67:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "16378:6:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16378:81:16"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "16378:81:16"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "16239:230:16",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "15592:6:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15600:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15589:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "15589:14:16"
															},
															"nodeType": "YulSwitch",
															"src": "15582:887:16"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "15161:4:16",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "15167:3:16",
														"type": ""
													}
												],
												"src": "15080:1395:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16509:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16526:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16529:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16519:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "16519:88:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16519:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16623:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16626:4:16",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16616:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "16616:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16616:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16647:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16650:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16640:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "16640:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16640:15:16"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "16481:180:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16711:147:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16721:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16744:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16726:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "16726:20:16"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "16721:1:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16755:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16778:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16760:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "16760:20:16"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "16755:1:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16789:16:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16800:1:16"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16803:1:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16796:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "16796:9:16"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "16789:3:16"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16829:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "16831:16:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16831:18:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16831:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16821:1:16"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "16824:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16818:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "16818:10:16"
															},
															"nodeType": "YulIf",
															"src": "16815:36:16"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "16698:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "16701:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "16707:3:16",
														"type": ""
													}
												],
												"src": "16667:191:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16927:80:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16937:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "16952:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16946:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "16946:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "16937:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16995:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "16968:26:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "16968:33:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16968:33:16"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "16905:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16913:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16921:5:16",
														"type": ""
													}
												],
												"src": "16864:143:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17090:274:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17136:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "17138:77:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17138:79:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17138:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17111:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17120:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17107:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17107:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17132:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "17103:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "17103:32:16"
															},
															"nodeType": "YulIf",
															"src": "17100:119:16"
														},
														{
															"nodeType": "YulBlock",
															"src": "17229:128:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17244:15:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17258:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "17248:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "17273:74:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "17319:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "17330:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17315:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17315:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17339:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "17283:31:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17283:64:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "17273:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17060:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "17071:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17083:6:16",
														"type": ""
													}
												],
												"src": "17013:351:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17413:79:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17470:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17479:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17482:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17472:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17472:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17472:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17436:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17461:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "17443:17:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17443:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17433:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17433:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17426:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "17426:43:16"
															},
															"nodeType": "YulIf",
															"src": "17423:63:16"
														}
													]
												},
												"name": "validator_revert_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17406:5:16",
														"type": ""
													}
												],
												"src": "17370:122:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17561:80:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17571:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "17586:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17580:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "17580:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "17571:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17629:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "17602:26:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "17602:33:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17602:33:16"
														}
													]
												},
												"name": "abi_decode_t_uint160_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "17539:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17547:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17555:5:16",
														"type": ""
													}
												],
												"src": "17498:143:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17690:47:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17700:31:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17722:1:16",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17725:5:16"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nodeType": "YulIdentifier",
																	"src": "17711:10:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "17711:20:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "17700:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17672:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "17682:7:16",
														"type": ""
													}
												],
												"src": "17647:90:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17784:77:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17839:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17848:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17851:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17841:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17841:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17841:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17807:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17830:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int24",
																					"nodeType": "YulIdentifier",
																					"src": "17814:15:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17814:22:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17804:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17804:33:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17797:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "17797:41:16"
															},
															"nodeType": "YulIf",
															"src": "17794:61:16"
														}
													]
												},
												"name": "validator_revert_t_int24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17777:5:16",
														"type": ""
													}
												],
												"src": "17743:118:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17928:78:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17938:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "17953:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17947:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "17947:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "17938:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17994:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int24",
																	"nodeType": "YulIdentifier",
																	"src": "17969:24:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "17969:31:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17969:31:16"
														}
													]
												},
												"name": "abi_decode_t_int24_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "17906:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17914:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17922:5:16",
														"type": ""
													}
												],
												"src": "17867:139:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18056:45:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18066:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18081:5:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18088:6:16",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18077:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "18077:18:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "18066:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18038:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "18048:7:16",
														"type": ""
													}
												],
												"src": "18012:89:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18149:78:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18205:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18214:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18217:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18207:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18207:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18207:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18172:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18196:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint16",
																					"nodeType": "YulIdentifier",
																					"src": "18179:16:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18179:23:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18169:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18169:34:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18162:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "18162:42:16"
															},
															"nodeType": "YulIf",
															"src": "18159:62:16"
														}
													]
												},
												"name": "validator_revert_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18142:5:16",
														"type": ""
													}
												],
												"src": "18107:120:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18295:79:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18305:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "18320:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "18314:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "18314:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "18305:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18362:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "18336:25:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "18336:32:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18336:32:16"
														}
													]
												},
												"name": "abi_decode_t_uint16_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "18273:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18281:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18289:5:16",
														"type": ""
													}
												],
												"src": "18233:141:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18423:43:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18433:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18448:5:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18455:4:16",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18444:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "18444:16:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "18433:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18405:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "18415:7:16",
														"type": ""
													}
												],
												"src": "18380:86:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18513:77:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18568:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18577:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18580:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18570:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18570:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18570:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18536:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18559:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nodeType": "YulIdentifier",
																					"src": "18543:15:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18543:22:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18533:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18533:33:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18526:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "18526:41:16"
															},
															"nodeType": "YulIf",
															"src": "18523:61:16"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18506:5:16",
														"type": ""
													}
												],
												"src": "18472:118:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18657:78:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18667:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "18682:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "18676:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "18676:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "18667:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18723:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "18698:24:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "18698:31:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18698:31:16"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "18635:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18643:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18651:5:16",
														"type": ""
													}
												],
												"src": "18596:139:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18783:48:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18793:32:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18818:5:16"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "18811:6:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18811:13:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18804:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "18804:21:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "18793:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18765:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "18775:7:16",
														"type": ""
													}
												],
												"src": "18741:90:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18877:76:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18931:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18940:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18943:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18933:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18933:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18933:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18900:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18922:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "18907:14:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18907:21:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18897:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18897:32:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18890:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "18890:40:16"
															},
															"nodeType": "YulIf",
															"src": "18887:60:16"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18870:5:16",
														"type": ""
													}
												],
												"src": "18837:116:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19019:77:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19029:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "19044:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "19038:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "19038:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "19029:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19084:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "19060:23:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "19060:30:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19060:30:16"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "18997:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19005:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19013:5:16",
														"type": ""
													}
												],
												"src": "18959:137:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19271:1102:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19318:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "19320:77:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19320:79:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19320:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19292:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19301:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19288:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19288:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19313:3:16",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "19284:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "19284:33:16"
															},
															"nodeType": "YulIf",
															"src": "19281:120:16"
														},
														{
															"nodeType": "YulBlock",
															"src": "19411:128:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19426:15:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19440:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "19430:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19455:74:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19501:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19512:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19497:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19497:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19521:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint160_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "19465:31:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19465:64:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "19455:6:16"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "19549:127:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19564:16:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19578:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "19568:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19594:72:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19638:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19649:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19634:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19634:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19658:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int24_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "19604:29:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19604:62:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "19594:6:16"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "19686:128:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19701:16:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19715:2:16",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "19705:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19731:73:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19776:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19787:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19772:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19772:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19796:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "19741:30:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19741:63:16"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "19731:6:16"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "19824:128:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19839:16:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19853:2:16",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "19843:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19869:73:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19914:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19925:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19910:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19910:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19934:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "19879:30:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19879:63:16"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "19869:6:16"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "19962:129:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19977:17:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19991:3:16",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "19981:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20008:73:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20053:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20064:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20049:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20049:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20073:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "20018:30:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20018:63:16"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "20008:6:16"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "20101:128:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20116:17:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20130:3:16",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "20120:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20147:72:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20191:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20202:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20187:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20187:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20211:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "20157:29:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20157:62:16"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "20147:6:16"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "20239:127:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20254:17:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20268:3:16",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "20258:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20285:71:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20328:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20339:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20324:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20324:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20348:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "20295:28:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20295:61:16"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nodeType": "YulIdentifier",
																			"src": "20285:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19193:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "19204:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19216:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "19224:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "19232:6:16",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "19240:6:16",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "19248:6:16",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "19256:6:16",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "19264:6:16",
														"type": ""
													}
												],
												"src": "19102:1271:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20424:149:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20434:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20457:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20439:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "20439:20:16"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "20434:1:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20468:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20491:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20473:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "20473:20:16"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "20468:1:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20502:17:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20514:1:16"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20517:1:16"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "20510:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "20510:9:16"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "20502:4:16"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20544:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20546:16:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20546:18:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20546:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "20535:4:16"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20541:1:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "20532:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "20532:11:16"
															},
															"nodeType": "YulIf",
															"src": "20529:37:16"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "20410:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "20413:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "20419:4:16",
														"type": ""
													}
												],
												"src": "20379:194:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20623:61:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20633:45:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20648:5:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20655:22:16",
																		"type": "",
																		"value": "0xffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "20644:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "20644:34:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "20633:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint80",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20605:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "20615:7:16",
														"type": ""
													}
												],
												"src": "20579:105:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20732:78:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20788:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20797:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20800:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "20790:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20790:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20790:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "20755:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "20779:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint80",
																					"nodeType": "YulIdentifier",
																					"src": "20762:16:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20762:23:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "20752:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20752:34:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "20745:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "20745:42:16"
															},
															"nodeType": "YulIf",
															"src": "20742:62:16"
														}
													]
												},
												"name": "validator_revert_t_uint80",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20725:5:16",
														"type": ""
													}
												],
												"src": "20690:120:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20878:79:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20888:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "20903:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "20897:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "20897:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "20888:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20945:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint80",
																	"nodeType": "YulIdentifier",
																	"src": "20919:25:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "20919:32:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20919:32:16"
														}
													]
												},
												"name": "abi_decode_t_uint80_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "20856:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20864:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20872:5:16",
														"type": ""
													}
												],
												"src": "20816:141:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21005:78:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21061:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21070:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21073:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "21063:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21063:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21063:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21028:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "21052:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nodeType": "YulIdentifier",
																					"src": "21035:16:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21035:23:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "21025:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21025:34:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "21018:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "21018:42:16"
															},
															"nodeType": "YulIf",
															"src": "21015:62:16"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20998:5:16",
														"type": ""
													}
												],
												"src": "20963:120:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21151:79:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21161:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "21176:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "21170:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "21170:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "21161:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21218:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "21192:25:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "21192:32:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21192:32:16"
														}
													]
												},
												"name": "abi_decode_t_int256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "21129:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21137:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21145:5:16",
														"type": ""
													}
												],
												"src": "21089:141:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21378:829:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21425:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "21427:77:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21427:79:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21427:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "21399:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21408:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21395:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21395:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21420:3:16",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "21391:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "21391:33:16"
															},
															"nodeType": "YulIf",
															"src": "21388:120:16"
														},
														{
															"nodeType": "YulBlock",
															"src": "21518:127:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "21533:15:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21547:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "21537:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "21562:73:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "21607:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "21618:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "21603:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21603:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "21627:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "21572:30:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21572:63:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "21562:6:16"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "21655:128:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "21670:16:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21684:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "21674:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "21700:73:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "21745:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "21756:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "21741:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21741:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "21765:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "21710:30:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21710:63:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "21700:6:16"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "21793:129:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "21808:16:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21822:2:16",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "21812:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "21838:74:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "21884:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "21895:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "21880:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21880:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "21904:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "21848:31:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21848:64:16"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "21838:6:16"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "21932:129:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "21947:16:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21961:2:16",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "21951:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "21977:74:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "22023:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "22034:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "22019:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "22019:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "22043:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "21987:31:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21987:64:16"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "21977:6:16"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "22071:129:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "22086:17:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22100:3:16",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "22090:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "22117:73:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "22162:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "22173:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "22158:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "22158:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "22182:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "22127:30:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22127:63:16"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "22117:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21316:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "21327:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21339:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "21347:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "21355:6:16",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "21363:6:16",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "21371:6:16",
														"type": ""
													}
												],
												"src": "21236:971:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22261:362:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22271:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22294:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22276:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "22276:20:16"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "22271:1:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22305:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22328:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22310:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "22310:20:16"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "22305:1:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "22339:28:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22362:1:16"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22365:1:16"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "22358:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "22358:9:16"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "22343:11:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22376:41:16",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "22405:11:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22387:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "22387:30:16"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "22376:7:16"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22594:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "22596:16:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22596:18:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22596:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "22527:1:16"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "22520:6:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "22520:9:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "22550:1:16"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "22557:7:16"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "22566:1:16"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "22553:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "22553:15:16"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "22547:2:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "22547:22:16"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "22500:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22500:83:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "22480:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "22480:113:16"
															},
															"nodeType": "YulIf",
															"src": "22477:139:16"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "22244:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "22247:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "22253:7:16",
														"type": ""
													}
												],
												"src": "22213:410:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22657:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22674:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22677:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22667:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "22667:88:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22667:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22771:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22774:4:16",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22764:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "22764:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22764:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22795:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22798:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "22788:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "22788:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22788:15:16"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "22629:180:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22857:143:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22867:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22890:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22872:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "22872:20:16"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "22867:1:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22901:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22924:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22906:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "22906:20:16"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "22901:1:16"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22948:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "22950:16:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22950:18:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22950:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22945:1:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "22938:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "22938:9:16"
															},
															"nodeType": "YulIf",
															"src": "22935:35:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22980:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22989:1:16"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22992:1:16"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "22985:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "22985:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "22980:1:16"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "22846:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "22849:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "22855:1:16",
														"type": ""
													}
												],
												"src": "22815:185:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23119:34:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23129:18:16",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "23144:3:16"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "23129:11:16"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23091:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "23096:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "23107:11:16",
														"type": ""
													}
												],
												"src": "23006:147:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23265:8:16",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23257:6:16",
														"type": ""
													}
												],
												"src": "23159:114:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23442:235:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23452:90:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23535:3:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23540:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23459:75:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "23459:83:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23452:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23640:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nodeType": "YulIdentifier",
																	"src": "23551:88:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "23551:93:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23551:93:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23653:18:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23664:3:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23669:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23660:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "23660:11:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23653:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23430:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23438:3:16",
														"type": ""
													}
												],
												"src": "23279:398:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23871:191:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23882:154:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24032:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23889:141:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "23889:147:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23882:3:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24046:10:16",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "24053:3:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24046:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23858:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23867:3:16",
														"type": ""
													}
												],
												"src": "23683:379:16"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    // struct CoverData -> struct CoverData\n    function abi_encode_t_struct$_CoverData_$982_memory_ptr_to_t_struct$_CoverData_$982_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x0180)\n\n        {\n            // amountPaidOut\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // totalClaimAmount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // start\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // period\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // token0\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // token1\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // token0Qty\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // token1Qty\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xe0))\n        }\n\n        {\n            // lowerBoundRatio\n\n            let memberValue0 := mload(add(value, 0x0100))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0100))\n        }\n\n        {\n            // upperBoundRatio\n\n            let memberValue0 := mload(add(value, 0x0120))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0120))\n        }\n\n        {\n            // pairStr\n\n            let memberValue0 := mload(add(value, 0x0140))\n\n            mstore(add(pos, 0x0140), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // initialPoolPrice\n\n            let memberValue0 := mload(add(value, 0x0160))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0160))\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_CoverData_$982_memory_ptr__to_t_struct$_CoverData_$982_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_CoverData_$982_memory_ptr_to_t_struct$_CoverData_$982_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() {\n        revert(0, 0)\n    }\n\n    // struct BuyCoverParams\n    function abi_decode_t_struct$_BuyCoverParams_$957_calldata_ptr(offset, end) -> value {\n        if slt(sub(end, offset), 288) { revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() }\n        value := offset\n    }\n\n    function abi_decode_tuple_t_struct$_BuyCoverParams_$957_calldata_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_struct$_BuyCoverParams_$957_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint160_to_t_uint160_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint160(value))\n    }\n\n    function abi_encode_tuple_t_uint160__to_t_uint160__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint160_to_t_uint160_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ICoverNFT_$1074_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ICoverNFT_$1074_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ICoverNFT_$1074_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ICoverNFT_$1074__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ICoverNFT_$1074_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_Master_$570_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_Master_$570_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Master_$570_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_Master_$570__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Master_$570_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() {\n        revert(0, 0)\n    }\n\n    function revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() {\n        revert(0, 0)\n    }\n\n    function revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() {\n        revert(0, 0)\n    }\n\n    function access_calldata_tail_t_string_calldata_ptr(base_ref, ptr_to_tail) -> addr, length {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x20, 1)))) { revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() }\n        addr := add(base_ref, rel_offset_of_tail)\n\n        length := calldataload(addr)\n        if gt(length, 0xffffffffffffffff) { revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() }\n        addr := add(addr, 32)\n        if sgt(addr, sub(calldatasize(), mul(length, 0x01))) { revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() }\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint160(value) {\n        if iszero(eq(value, cleanup_t_uint160(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint160_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint160(value)\n    }\n\n    function cleanup_t_int24(value) -> cleaned {\n        cleaned := signextend(2, value)\n    }\n\n    function validator_revert_t_int24(value) {\n        if iszero(eq(value, cleanup_t_int24(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int24_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int24(value)\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint160_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int24_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100a65760003560e01c80634b61a44b116100645780634b61a44b146101e85780637e9e1abe14610211578063d05808f81461023c578063de071a0a14610279578063ed3b657a146102b6578063ee97f7f3146102e1576100a6565b8062407d2a146100ab5780631f5e4583146100e8578063279f54ce14610125578063404730f4146101555780634230a7771461018057806342e53fcf146101bd575b600080fd5b3480156100b757600080fd5b506100d260048036038101906100cd9190610fb8565b61030c565b6040516100df91906111c9565b60405180910390f35b3480156100f457600080fd5b5061010f600480360381019061010a9190611210565b6104d1565b60405161011c9190611268565b60405180910390f35b61013f600480360381019061013a9190611210565b6104e0565b60405161014c9190611268565b60405180910390f35b34801561016157600080fd5b5061016a6108f8565b6040516101779190611268565b60405180910390f35b34801561018c57600080fd5b506101a760048036038101906101a291906112af565b610990565b6040516101b491906112eb565b60405180910390f35b3480156101c957600080fd5b506101d2610a13565b6040516101df9190611365565b60405180910390f35b3480156101f457600080fd5b5061020f600480360381019061020a9190610fb8565b610a39565b005b34801561021d57600080fd5b50610226610a55565b6040516102339190611268565b60405180910390f35b34801561024857600080fd5b50610263600480360381019061025e9190611210565b610a5b565b6040516102709190611268565b60405180910390f35b34801561028557600080fd5b506102a0600480360381019061029b91906112af565b610a6a565b6040516102ad9190611399565b60405180910390f35b3480156102c257600080fd5b506102cb610aeb565b6040516102d89190611268565b60405180910390f35b3480156102ed57600080fd5b506102f6610af5565b60405161030391906113d5565b60405180910390f35b610314610eeb565b60008083815260200190815260200160002060405180610180016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a8201805461043e9061141f565b80601f016020809104026020016040519081016040528092919081815260200182805461046a9061141f565b80156104b75780601f1061048c576101008083540402835291602001916104b7565b820191906000526020600020905b81548152906001019060200180831161049a57829003601f168201915b50505050508152602001600b820154815250509050919050565b600064e8d4a510009050919050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636a627842336040518263ffffffff1660e01b815260040161053d919061145f565b6020604051808303816000875af115801561055c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610580919061148f565b90506040518061018001604052806000815260200161059e84610a5b565b81526020014281526020018360c0013581526020018360000160208101906105c691906112af565b73ffffffffffffffffffffffffffffffffffffffff1681526020018360200160208101906105f491906112af565b73ffffffffffffffffffffffffffffffffffffffff1681526020018360600135815260200183604001358152602001836080013581526020018360a001358152602001838060e0019061064791906114cb565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081526020018361010001358152506000808381526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c0820151816006015560e082015181600701556101008201518160080155610120820151816009015561014082015181600a0190816107a091906116ff565b5061016082015181600b015590505060006107ba836104d1565b90506107cd81600063ffffffff16610b1b565b5060008083815260200190815260200160002060010154600160008282546107f59190611800565b925050819055506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166388ea07516040518163ffffffff1660e01b8152600401602060405180830381865afa15801561086b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088f9190611849565b90508073ffffffffffffffffffffffffffffffffffffffff1663aa5da0466040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156108d957600080fd5b505af11580156108ed573d6000803e3d6000fd5b505050505050919050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610967573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098b919061148f565b905090565b6000808273ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156109de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a029190611986565b505050505050905080915050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8060016000828254610a4b9190611a28565b9250508190555050565b60015481565b600064e8d4a510009050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610ab8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610adc9190611aca565b50505091505080915050919050565b6000600154905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080610b26610e53565b9050600063ffffffff168303610e4c576000606485606563ffffffff16610b4d9190611b45565b610b579190611bb6565b905084341015610b93576040517ff244866f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008134610ba19190611a28565b905060008373ffffffffffffffffffffffffffffffffffffffff1687604051610bc990611c18565b60006040518083038185875af1925050503d8060008114610c06576040519150601f19603f3d011682016040523d82523d6000602084013e610c0b565b606091505b5050905080610c46576040517fab1ee9bf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5060008683610c559190611a28565b1115610d9b576000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637abc39646040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cee9190611849565b73ffffffffffffffffffffffffffffffffffffffff168784610d109190611a28565b604051610d1c90611c18565b60006040518083038185875af1925050503d8060008114610d59576040519150601f19603f3d011682016040523d82523d6000602084013e610d5e565b606091505b5050905080610d99576040517f204633a400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b6000811115610e495760003373ffffffffffffffffffffffffffffffffffffffff1682604051610dca90611c18565b60006040518083038185875af1925050503d8060008114610e07576040519150601f19603f3d011682016040523d82523d6000602084013e610e0c565b606091505b5050905080610e47576040517fcd57d4da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b50505b5092915050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639ccc903d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ec2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee69190611849565b905090565b60405180610180016040528060008152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160608152602001600081525090565b600080fd5b600080fd5b6000819050919050565b610f9581610f82565b8114610fa057600080fd5b50565b600081359050610fb281610f8c565b92915050565b600060208284031215610fce57610fcd610f78565b5b6000610fdc84828501610fa3565b91505092915050565b610fee81610f82565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061101f82610ff4565b9050919050565b61102f81611014565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561106f578082015181840152602081019050611054565b60008484015250505050565b6000601f19601f8301169050919050565b600061109782611035565b6110a18185611040565b93506110b1818560208601611051565b6110ba8161107b565b840191505092915050565b6000610180830160008301516110de6000860182610fe5565b5060208301516110f16020860182610fe5565b5060408301516111046040860182610fe5565b5060608301516111176060860182610fe5565b50608083015161112a6080860182611026565b5060a083015161113d60a0860182611026565b5060c083015161115060c0860182610fe5565b5060e083015161116360e0860182610fe5565b50610100830151611178610100860182610fe5565b5061012083015161118d610120860182610fe5565b506101408301518482036101408601526111a7828261108c565b9150506101608301516111be610160860182610fe5565b508091505092915050565b600060208201905081810360008301526111e381846110c5565b905092915050565b600080fd5b60006101208284031215611207576112066111eb565b5b81905092915050565b60006020828403121561122657611225610f78565b5b600082013567ffffffffffffffff81111561124457611243610f7d565b5b611250848285016111f0565b91505092915050565b61126281610f82565b82525050565b600060208201905061127d6000830184611259565b92915050565b61128c81611014565b811461129757600080fd5b50565b6000813590506112a981611283565b92915050565b6000602082840312156112c5576112c4610f78565b5b60006112d38482850161129a565b91505092915050565b6112e581610ff4565b82525050565b600060208201905061130060008301846112dc565b92915050565b6000819050919050565b600061132b61132661132184610ff4565b611306565b610ff4565b9050919050565b600061133d82611310565b9050919050565b600061134f82611332565b9050919050565b61135f81611344565b82525050565b600060208201905061137a6000830184611356565b92915050565b6000819050919050565b61139381611380565b82525050565b60006020820190506113ae600083018461138a565b92915050565b60006113bf82611332565b9050919050565b6113cf816113b4565b82525050565b60006020820190506113ea60008301846113c6565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061143757607f821691505b60208210810361144a576114496113f0565b5b50919050565b61145981611014565b82525050565b60006020820190506114746000830184611450565b92915050565b60008151905061148981610f8c565b92915050565b6000602082840312156114a5576114a4610f78565b5b60006114b38482850161147a565b91505092915050565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126114e8576114e76114bc565b5b80840192508235915067ffffffffffffffff82111561150a576115096114c1565b5b602083019250600182023603831315611526576115256114c6565b5b509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026115bf7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611582565b6115c98683611582565b95508019841693508086168417925050509392505050565b60006115fc6115f76115f284610f82565b611306565b610f82565b9050919050565b6000819050919050565b611616836115e1565b61162a61162282611603565b84845461158f565b825550505050565b600090565b61163f611632565b61164a81848461160d565b505050565b5b8181101561166e57611663600082611637565b600181019050611650565b5050565b601f8211156116b3576116848161155d565b61168d84611572565b8101602085101561169c578190505b6116b06116a885611572565b83018261164f565b50505b505050565b600082821c905092915050565b60006116d6600019846008026116b8565b1980831691505092915050565b60006116ef83836116c5565b9150826002028217905092915050565b61170882611035565b67ffffffffffffffff8111156117215761172061152e565b5b61172b825461141f565b611736828285611672565b600060209050601f8311600181146117695760008415611757578287015190505b61176185826116e3565b8655506117c9565b601f1984166117778661155d565b60005b8281101561179f5784890151825560018201915060208501945060208101905061177a565b868310156117bc57848901516117b8601f8916826116c5565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061180b82610f82565b915061181683610f82565b925082820190508082111561182e5761182d6117d1565b5b92915050565b60008151905061184381611283565b92915050565b60006020828403121561185f5761185e610f78565b5b600061186d84828501611834565b91505092915050565b61187f81610ff4565b811461188a57600080fd5b50565b60008151905061189c81611876565b92915050565b60008160020b9050919050565b6118b8816118a2565b81146118c357600080fd5b50565b6000815190506118d5816118af565b92915050565b600061ffff82169050919050565b6118f2816118db565b81146118fd57600080fd5b50565b60008151905061190f816118e9565b92915050565b600060ff82169050919050565b61192b81611915565b811461193657600080fd5b50565b60008151905061194881611922565b92915050565b60008115159050919050565b6119638161194e565b811461196e57600080fd5b50565b6000815190506119808161195a565b92915050565b600080600080600080600060e0888a0312156119a5576119a4610f78565b5b60006119b38a828b0161188d565b97505060206119c48a828b016118c6565b96505060406119d58a828b01611900565b95505060606119e68a828b01611900565b94505060806119f78a828b01611900565b93505060a0611a088a828b01611939565b92505060c0611a198a828b01611971565b91505092959891949750929550565b6000611a3382610f82565b9150611a3e83610f82565b9250828203905081811115611a5657611a556117d1565b5b92915050565b600069ffffffffffffffffffff82169050919050565b611a7b81611a5c565b8114611a8657600080fd5b50565b600081519050611a9881611a72565b92915050565b611aa781611380565b8114611ab257600080fd5b50565b600081519050611ac481611a9e565b92915050565b600080600080600060a08688031215611ae657611ae5610f78565b5b6000611af488828901611a89565b9550506020611b0588828901611ab5565b9450506040611b168882890161147a565b9350506060611b278882890161147a565b9250506080611b3888828901611a89565b9150509295509295909350565b6000611b5082610f82565b9150611b5b83610f82565b9250828202611b6981610f82565b91508282048414831517611b8057611b7f6117d1565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611bc182610f82565b9150611bcc83610f82565b925082611bdc57611bdb611b87565b5b828204905092915050565b600081905092915050565b50565b6000611c02600083611be7565b9150611c0d82611bf2565b600082019050919050565b6000611c2382611bf5565b915081905091905056fea264697066735822122005fb02bf69b24510b1d3289b9f0dfa9c0ca34ebb9c6ae72f1536bdd3fc069fea64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4B61A44B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x4B61A44B EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x7E9E1ABE EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0xD05808F8 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xDE071A0A EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xED3B657A EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0xEE97F7F3 EQ PUSH2 0x2E1 JUMPI PUSH2 0xA6 JUMP JUMPDEST DUP1 PUSH3 0x407D2A EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x1F5E4583 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x279F54CE EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x404730F4 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x4230A777 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0x42E53FCF EQ PUSH2 0x1BD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCD SWAP2 SWAP1 PUSH2 0xFB8 JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDF SWAP2 SWAP1 PUSH2 0x11C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10A SWAP2 SWAP1 PUSH2 0x1210 JUMP JUMPDEST PUSH2 0x4D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11C SWAP2 SWAP1 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x1210 JUMP JUMPDEST PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16A PUSH2 0x8F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x12AF JUMP JUMPDEST PUSH2 0x990 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x12EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x1365 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0xFB8 JUMP JUMPDEST PUSH2 0xA39 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH2 0xA55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x263 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x1210 JUMP JUMPDEST PUSH2 0xA5B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x270 SWAP2 SWAP1 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x12AF JUMP JUMPDEST PUSH2 0xA6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x1399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CB PUSH2 0xAEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F6 PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x13D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x314 PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD DUP1 SLOAD PUSH2 0x43E SWAP1 PUSH2 0x141F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x46A SWAP1 PUSH2 0x141F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4B7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x48C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4B7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x49A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xB DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0xE8D4A51000 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6A627842 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53D SWAP2 SWAP1 PUSH2 0x145F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x55C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x580 SWAP2 SWAP1 PUSH2 0x148F JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x59E DUP5 PUSH2 0xA5B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0xC0 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5C6 SWAP2 SWAP1 PUSH2 0x12AF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5F4 SWAP2 SWAP1 PUSH2 0x12AF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x60 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x40 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x80 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0xA0 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP1 PUSH1 0xE0 ADD SWAP1 PUSH2 0x647 SWAP2 SWAP1 PUSH2 0x14CB JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH2 0x100 ADD CALLDATALOAD DUP2 MSTORE POP PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0xA ADD SWAP1 DUP2 PUSH2 0x7A0 SWAP2 SWAP1 PUSH2 0x16FF JUMP JUMPDEST POP PUSH2 0x160 DUP3 ADD MLOAD DUP2 PUSH1 0xB ADD SSTORE SWAP1 POP POP PUSH1 0x0 PUSH2 0x7BA DUP4 PUSH2 0x4D1 JUMP JUMPDEST SWAP1 POP PUSH2 0x7CD DUP2 PUSH1 0x0 PUSH4 0xFFFFFFFF AND PUSH2 0xB1B JUMP JUMPDEST POP PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7F5 SWAP2 SWAP1 PUSH2 0x1800 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x88EA0751 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x86B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x88F SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAA5DA046 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x967 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x98B SWAP2 SWAP1 PUSH2 0x148F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA02 SWAP2 SWAP1 PUSH2 0x1986 JUMP JUMPDEST POP POP POP POP POP POP SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA4B SWAP2 SWAP1 PUSH2 0x1A28 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH5 0xE8D4A51000 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAB8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xADC SWAP2 SWAP1 PUSH2 0x1ACA JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB26 PUSH2 0xE53 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP4 SUB PUSH2 0xE4C JUMPI PUSH1 0x0 PUSH1 0x64 DUP6 PUSH1 0x65 PUSH4 0xFFFFFFFF AND PUSH2 0xB4D SWAP2 SWAP1 PUSH2 0x1B45 JUMP JUMPDEST PUSH2 0xB57 SWAP2 SWAP1 PUSH2 0x1BB6 JUMP JUMPDEST SWAP1 POP DUP5 CALLVALUE LT ISZERO PUSH2 0xB93 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF244866F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 CALLVALUE PUSH2 0xBA1 SWAP2 SWAP1 PUSH2 0x1A28 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH1 0x40 MLOAD PUSH2 0xBC9 SWAP1 PUSH2 0x1C18 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC06 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xC46 JUMPI PUSH1 0x40 MLOAD PUSH32 0xAB1EE9BF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP7 DUP4 PUSH2 0xC55 SWAP2 SWAP1 PUSH2 0x1A28 JUMP JUMPDEST GT ISZERO PUSH2 0xD9B JUMPI PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7ABC3964 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCCA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCEE SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 DUP5 PUSH2 0xD10 SWAP2 SWAP1 PUSH2 0x1A28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD1C SWAP1 PUSH2 0x1C18 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xD59 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD5E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xD99 JUMPI PUSH1 0x40 MLOAD PUSH32 0x204633A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xE49 JUMPI PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xDCA SWAP1 PUSH2 0x1C18 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xE07 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE0C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xE47 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCD57D4DA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9CCC903D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEC2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEE6 SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF95 DUP2 PUSH2 0xF82 JUMP JUMPDEST DUP2 EQ PUSH2 0xFA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFB2 DUP2 PUSH2 0xF8C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFCE JUMPI PUSH2 0xFCD PUSH2 0xF78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFDC DUP5 DUP3 DUP6 ADD PUSH2 0xFA3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFEE DUP2 PUSH2 0xF82 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x101F DUP3 PUSH2 0xFF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x102F DUP2 PUSH2 0x1014 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x106F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1054 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1097 DUP3 PUSH2 0x1035 JUMP JUMPDEST PUSH2 0x10A1 DUP2 DUP6 PUSH2 0x1040 JUMP JUMPDEST SWAP4 POP PUSH2 0x10B1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1051 JUMP JUMPDEST PUSH2 0x10BA DUP2 PUSH2 0x107B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x10DE PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0xFE5 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x10F1 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0xFE5 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x1104 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0xFE5 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x1117 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0xFE5 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x112A PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x1026 JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x113D PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x1026 JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x1150 PUSH1 0xC0 DUP7 ADD DUP3 PUSH2 0xFE5 JUMP JUMPDEST POP PUSH1 0xE0 DUP4 ADD MLOAD PUSH2 0x1163 PUSH1 0xE0 DUP7 ADD DUP3 PUSH2 0xFE5 JUMP JUMPDEST POP PUSH2 0x100 DUP4 ADD MLOAD PUSH2 0x1178 PUSH2 0x100 DUP7 ADD DUP3 PUSH2 0xFE5 JUMP JUMPDEST POP PUSH2 0x120 DUP4 ADD MLOAD PUSH2 0x118D PUSH2 0x120 DUP7 ADD DUP3 PUSH2 0xFE5 JUMP JUMPDEST POP PUSH2 0x140 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH2 0x140 DUP7 ADD MSTORE PUSH2 0x11A7 DUP3 DUP3 PUSH2 0x108C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x160 DUP4 ADD MLOAD PUSH2 0x11BE PUSH2 0x160 DUP7 ADD DUP3 PUSH2 0xFE5 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11E3 DUP2 DUP5 PUSH2 0x10C5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1207 JUMPI PUSH2 0x1206 PUSH2 0x11EB JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1226 JUMPI PUSH2 0x1225 PUSH2 0xF78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1244 JUMPI PUSH2 0x1243 PUSH2 0xF7D JUMP JUMPDEST JUMPDEST PUSH2 0x1250 DUP5 DUP3 DUP6 ADD PUSH2 0x11F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1262 DUP2 PUSH2 0xF82 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x127D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1259 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x128C DUP2 PUSH2 0x1014 JUMP JUMPDEST DUP2 EQ PUSH2 0x1297 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12A9 DUP2 PUSH2 0x1283 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12C5 JUMPI PUSH2 0x12C4 PUSH2 0xF78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12D3 DUP5 DUP3 DUP6 ADD PUSH2 0x129A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12E5 DUP2 PUSH2 0xFF4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1300 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x132B PUSH2 0x1326 PUSH2 0x1321 DUP5 PUSH2 0xFF4 JUMP JUMPDEST PUSH2 0x1306 JUMP JUMPDEST PUSH2 0xFF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x133D DUP3 PUSH2 0x1310 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x134F DUP3 PUSH2 0x1332 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x135F DUP2 PUSH2 0x1344 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x137A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1356 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1393 DUP2 PUSH2 0x1380 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13AE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x138A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13BF DUP3 PUSH2 0x1332 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13CF DUP2 PUSH2 0x13B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13EA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1437 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x144A JUMPI PUSH2 0x1449 PUSH2 0x13F0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1459 DUP2 PUSH2 0x1014 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1474 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1450 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1489 DUP2 PUSH2 0xF8C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A5 JUMPI PUSH2 0x14A4 PUSH2 0xF78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14B3 DUP5 DUP3 DUP6 ADD PUSH2 0x147A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x14E8 JUMPI PUSH2 0x14E7 PUSH2 0x14BC JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x150A JUMPI PUSH2 0x1509 PUSH2 0x14C1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x1526 JUMPI PUSH2 0x1525 PUSH2 0x14C6 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x15BF PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1582 JUMP JUMPDEST PUSH2 0x15C9 DUP7 DUP4 PUSH2 0x1582 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15FC PUSH2 0x15F7 PUSH2 0x15F2 DUP5 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0x1306 JUMP JUMPDEST PUSH2 0xF82 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1616 DUP4 PUSH2 0x15E1 JUMP JUMPDEST PUSH2 0x162A PUSH2 0x1622 DUP3 PUSH2 0x1603 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x158F JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x163F PUSH2 0x1632 JUMP JUMPDEST PUSH2 0x164A DUP2 DUP5 DUP5 PUSH2 0x160D JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x166E JUMPI PUSH2 0x1663 PUSH1 0x0 DUP3 PUSH2 0x1637 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1650 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x16B3 JUMPI PUSH2 0x1684 DUP2 PUSH2 0x155D JUMP JUMPDEST PUSH2 0x168D DUP5 PUSH2 0x1572 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x169C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x16B0 PUSH2 0x16A8 DUP6 PUSH2 0x1572 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x164F JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16D6 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x16B8 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16EF DUP4 DUP4 PUSH2 0x16C5 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1708 DUP3 PUSH2 0x1035 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1721 JUMPI PUSH2 0x1720 PUSH2 0x152E JUMP JUMPDEST JUMPDEST PUSH2 0x172B DUP3 SLOAD PUSH2 0x141F JUMP JUMPDEST PUSH2 0x1736 DUP3 DUP3 DUP6 PUSH2 0x1672 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1769 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1757 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1761 DUP6 DUP3 PUSH2 0x16E3 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x17C9 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1777 DUP7 PUSH2 0x155D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x179F JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x177A JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x17BC JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x17B8 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x16C5 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x180B DUP3 PUSH2 0xF82 JUMP JUMPDEST SWAP2 POP PUSH2 0x1816 DUP4 PUSH2 0xF82 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x182E JUMPI PUSH2 0x182D PUSH2 0x17D1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1843 DUP2 PUSH2 0x1283 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x185F JUMPI PUSH2 0x185E PUSH2 0xF78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x186D DUP5 DUP3 DUP6 ADD PUSH2 0x1834 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x187F DUP2 PUSH2 0xFF4 JUMP JUMPDEST DUP2 EQ PUSH2 0x188A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x189C DUP2 PUSH2 0x1876 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18B8 DUP2 PUSH2 0x18A2 JUMP JUMPDEST DUP2 EQ PUSH2 0x18C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x18D5 DUP2 PUSH2 0x18AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18F2 DUP2 PUSH2 0x18DB JUMP JUMPDEST DUP2 EQ PUSH2 0x18FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x190F DUP2 PUSH2 0x18E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x192B DUP2 PUSH2 0x1915 JUMP JUMPDEST DUP2 EQ PUSH2 0x1936 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1948 DUP2 PUSH2 0x1922 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1963 DUP2 PUSH2 0x194E JUMP JUMPDEST DUP2 EQ PUSH2 0x196E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1980 DUP2 PUSH2 0x195A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x19A5 JUMPI PUSH2 0x19A4 PUSH2 0xF78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19B3 DUP11 DUP3 DUP12 ADD PUSH2 0x188D JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x19C4 DUP11 DUP3 DUP12 ADD PUSH2 0x18C6 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x19D5 DUP11 DUP3 DUP12 ADD PUSH2 0x1900 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x19E6 DUP11 DUP3 DUP12 ADD PUSH2 0x1900 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x19F7 DUP11 DUP3 DUP12 ADD PUSH2 0x1900 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1A08 DUP11 DUP3 DUP12 ADD PUSH2 0x1939 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1A19 DUP11 DUP3 DUP12 ADD PUSH2 0x1971 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A33 DUP3 PUSH2 0xF82 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A3E DUP4 PUSH2 0xF82 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1A56 JUMPI PUSH2 0x1A55 PUSH2 0x17D1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A7B DUP2 PUSH2 0x1A5C JUMP JUMPDEST DUP2 EQ PUSH2 0x1A86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A98 DUP2 PUSH2 0x1A72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AA7 DUP2 PUSH2 0x1380 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1AC4 DUP2 PUSH2 0x1A9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1AE6 JUMPI PUSH2 0x1AE5 PUSH2 0xF78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AF4 DUP9 DUP3 DUP10 ADD PUSH2 0x1A89 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1B05 DUP9 DUP3 DUP10 ADD PUSH2 0x1AB5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1B16 DUP9 DUP3 DUP10 ADD PUSH2 0x147A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1B27 DUP9 DUP3 DUP10 ADD PUSH2 0x147A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x1B38 DUP9 DUP3 DUP10 ADD PUSH2 0x1A89 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B50 DUP3 PUSH2 0xF82 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B5B DUP4 PUSH2 0xF82 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1B69 DUP2 PUSH2 0xF82 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1B80 JUMPI PUSH2 0x1B7F PUSH2 0x17D1 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BC1 DUP3 PUSH2 0xF82 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BCC DUP4 PUSH2 0xF82 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1BDC JUMPI PUSH2 0x1BDB PUSH2 0x1B87 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C02 PUSH1 0x0 DUP4 PUSH2 0x1BE7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C0D DUP3 PUSH2 0x1BF2 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C23 DUP3 PUSH2 0x1BF5 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV 0xFB MUL 0xBF PUSH10 0xB24510B1D3289B9F0DFA SWAP13 0xC LOG3 0x4E 0xBB SWAP13 PUSH11 0xE72F1536BDD3FC069FEA64 PUSH20 0x6F6C634300081300330000000000000000000000 ",
							"sourceMap": "456:3835:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;953:122;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2161:126;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1080:843;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1928:99;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3956:168;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;667:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3653:86;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;602:32;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2032:124;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4132:155;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3744:103;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;641:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;953:122;1013:16;;:::i;:::-;1049:10;:19;1060:7;1049:19;;;;;;;;;;;1042:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;953:122;;;:::o;2161:126::-;2229:10;2267:13;2260:20;;2161:126;;;:::o;1080:843::-;1156:12;1207:8;;;;;;;;;;;:13;;;1221:10;1207:25;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1197:35;;1264:405;;;;;;;;1274:1;1264:405;;;;1277:24;1294:6;1277:16;:24::i;:::-;1264:405;;;;1345:15;1264:405;;;;1383:6;:13;;;1264:405;;;;1422:6;:13;;;;;;;;;;:::i;:::-;1264:405;;;;;;1449:6;:13;;;;;;;;;;:::i;:::-;1264:405;;;;;;1476:6;:16;;;1264:405;;;;1506:6;:16;;;1264:405;;;;1536:6;:22;;;1264:405;;;;1572:6;:22;;;1264:405;;;;1608:6;:14;;;;;;;;:::i;:::-;1264:405;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1636:6;:23;;;1264:405;;;1242:10;:19;1253:7;1242:19;;;;;;;;;;;:427;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1679:17;1699:18;1710:6;1699:10;:18::i;:::-;1679:38;;1727:42;1743:12;408:1;1727:42;;:15;:42::i;:::-;;1800:10;:19;1811:7;1800:19;;;;;;;;;;;:36;;;1779:17;;:57;;;;;;;:::i;:::-;;;;;;;;1846:8;1862:6;;;;;;;;;;;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1846:36;;1892:3;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1169:754;;1080:843;;;:::o;1928:99::-;1975:4;1998:8;;;;;;;;;;;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1991:29;;1928:99;:::o;3956:168::-;4016:7;4037:14;4082:1;4067:23;;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4036:56;;;;;;;;4111:6;4104:13;;;3956:168;;;:::o;667:26::-;;;;;;;;;;;;;:::o;3653:86::-;3729:3;3708:17;;:24;;;;;;;:::i;:::-;;;;;;;;3653:86;:::o;602:32::-;;;;:::o;2032:124::-;2107:11;2136:13;2129:20;;2032:124;;;:::o;4132:155::-;4183:3;4199:10;4237:1;4215:40;;;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4197:60;;;;;;4274:6;4267:13;;;4132:155;;;:::o;3744:103::-;3798:7;3823:17;;3816:24;;3744:103;:::o;641:20::-;;;;;;;;;;;;;:::o;2318:1329::-;2408:12;2432:11;2446:6;:4;:6::i;:::-;2432:20;;408:1;2466:28;;:12;:28;2462:1155;;2506:26;2572:3;2550:21;444:3;2535:36;;;;;;:::i;:::-;:40;;;;:::i;:::-;2506:69;;2605:21;2593:9;:33;2589:96;;;2653:21;;;;;;;;;;;;;;2589:96;2696:14;2725:21;2713:9;:33;;;;:::i;:::-;2696:50;;2867:7;2898:5;2890:19;;2917:21;2890:53;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2866:77;;;2958:2;2953:63;;2981:24;;;;;;;;;;;;;;2953:63;2754:270;3109:1;3085:21;3061;:45;;;;:::i;:::-;:49;3057:289;;;3123:7;3154:6;;;;;;;;;;;:28;;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3146:44;;3222:21;3198;:45;;;;:::i;:::-;3146:102;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3122:126;;;3263:2;3258:80;;3286:41;;;;;;;;;;;;;;3258:80;3112:234;3057:289;3370:1;3358:9;:13;3354:252;;;3443:7;3474:10;3466:24;;3498:9;3466:46;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3442:70;;;3527:2;3522:76;;3550:37;;;;;;;;;;;;;;3522:76;3373:233;3354:252;2496:1121;;2462:1155;2421:1226;2318:1329;;;;:::o;3853:97::-;3892:5;3922:6;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3909:34;;3853:97;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;88:117:16:-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:108::-;1102:24;1120:5;1102:24;:::i;:::-;1097:3;1090:37;1025:108;;:::o;1139:126::-;1176:7;1216:42;1209:5;1205:54;1194:65;;1139:126;;;:::o;1271:96::-;1308:7;1337:24;1355:5;1337:24;:::i;:::-;1326:35;;1271:96;;;:::o;1373:108::-;1450:24;1468:5;1450:24;:::i;:::-;1445:3;1438:37;1373:108;;:::o;1487:99::-;1539:6;1573:5;1567:12;1557:22;;1487:99;;;:::o;1592:159::-;1666:11;1700:6;1695:3;1688:19;1740:4;1735:3;1731:14;1716:29;;1592:159;;;;:::o;1757:246::-;1838:1;1848:113;1862:6;1859:1;1856:13;1848:113;;;1947:1;1942:3;1938:11;1932:18;1928:1;1923:3;1919:11;1912:39;1884:2;1881:1;1877:10;1872:15;;1848:113;;;1995:1;1986:6;1981:3;1977:16;1970:27;1819:184;1757:246;;;:::o;2009:102::-;2050:6;2101:2;2097:7;2092:2;2085:5;2081:14;2077:28;2067:38;;2009:102;;;:::o;2117:357::-;2195:3;2223:39;2256:5;2223:39;:::i;:::-;2278:61;2332:6;2327:3;2278:61;:::i;:::-;2271:68;;2348:65;2406:6;2401:3;2394:4;2387:5;2383:16;2348:65;:::i;:::-;2438:29;2460:6;2438:29;:::i;:::-;2433:3;2429:39;2422:46;;2199:275;2117:357;;;;:::o;2524:2441::-;2645:3;2681:6;2676:3;2672:16;2779:4;2772:5;2768:16;2762:23;2798:63;2855:4;2850:3;2846:14;2832:12;2798:63;:::i;:::-;2698:173;2965:4;2958:5;2954:16;2948:23;2984:63;3041:4;3036:3;3032:14;3018:12;2984:63;:::i;:::-;2881:176;3140:4;3133:5;3129:16;3123:23;3159:63;3216:4;3211:3;3207:14;3193:12;3159:63;:::i;:::-;3067:165;3316:4;3309:5;3305:16;3299:23;3335:63;3392:4;3387:3;3383:14;3369:12;3335:63;:::i;:::-;3242:166;3492:4;3485:5;3481:16;3475:23;3511:63;3568:4;3563:3;3559:14;3545:12;3511:63;:::i;:::-;3418:166;3668:4;3661:5;3657:16;3651:23;3687:63;3744:4;3739:3;3735:14;3721:12;3687:63;:::i;:::-;3594:166;3847:4;3840:5;3836:16;3830:23;3866:63;3923:4;3918:3;3914:14;3900:12;3866:63;:::i;:::-;3770:169;4026:4;4019:5;4015:16;4009:23;4045:63;4102:4;4097:3;4093:14;4079:12;4045:63;:::i;:::-;3949:169;4211:6;4204:5;4200:18;4194:25;4232:65;4289:6;4284:3;4280:16;4266:12;4232:65;:::i;:::-;4128:179;4400:6;4393:5;4389:18;4383:25;4421:65;4478:6;4473:3;4469:16;4455:12;4421:65;:::i;:::-;4317:179;4581:6;4574:5;4570:18;4564:25;4638:3;4632:4;4628:14;4619:6;4614:3;4610:16;4603:40;4664:73;4732:4;4718:12;4664:73;:::i;:::-;4656:81;;4506:242;4842:6;4835:5;4831:18;4825:25;4863:65;4920:6;4915:3;4911:16;4897:12;4863:65;:::i;:::-;4758:180;4955:4;4948:11;;2650:2315;2524:2441;;;;:::o;4971:377::-;5116:4;5154:2;5143:9;5139:18;5131:26;;5203:9;5197:4;5193:20;5189:1;5178:9;5174:17;5167:47;5231:110;5336:4;5327:6;5231:110;:::i;:::-;5223:118;;4971:377;;;;:::o;5354:117::-;5463:1;5460;5453:12;5506:238;5585:5;5626:3;5617:6;5612:3;5608:16;5604:26;5601:113;;;5633:79;;:::i;:::-;5601:113;5732:6;5723:15;;5506:238;;;;:::o;5750:555::-;5842:6;5891:2;5879:9;5870:7;5866:23;5862:32;5859:119;;;5897:79;;:::i;:::-;5859:119;6045:1;6034:9;6030:17;6017:31;6075:18;6067:6;6064:30;6061:117;;;6097:79;;:::i;:::-;6061:117;6202:86;6280:7;6271:6;6260:9;6256:22;6202:86;:::i;:::-;6192:96;;5988:310;5750:555;;;;:::o;6311:118::-;6398:24;6416:5;6398:24;:::i;:::-;6393:3;6386:37;6311:118;;:::o;6435:222::-;6528:4;6566:2;6555:9;6551:18;6543:26;;6579:71;6647:1;6636:9;6632:17;6623:6;6579:71;:::i;:::-;6435:222;;;;:::o;6663:122::-;6736:24;6754:5;6736:24;:::i;:::-;6729:5;6726:35;6716:63;;6775:1;6772;6765:12;6716:63;6663:122;:::o;6791:139::-;6837:5;6875:6;6862:20;6853:29;;6891:33;6918:5;6891:33;:::i;:::-;6791:139;;;;:::o;6936:329::-;6995:6;7044:2;7032:9;7023:7;7019:23;7015:32;7012:119;;;7050:79;;:::i;:::-;7012:119;7170:1;7195:53;7240:7;7231:6;7220:9;7216:22;7195:53;:::i;:::-;7185:63;;7141:117;6936:329;;;;:::o;7271:118::-;7358:24;7376:5;7358:24;:::i;:::-;7353:3;7346:37;7271:118;;:::o;7395:222::-;7488:4;7526:2;7515:9;7511:18;7503:26;;7539:71;7607:1;7596:9;7592:17;7583:6;7539:71;:::i;:::-;7395:222;;;;:::o;7623:60::-;7651:3;7672:5;7665:12;;7623:60;;;:::o;7689:142::-;7739:9;7772:53;7790:34;7799:24;7817:5;7799:24;:::i;:::-;7790:34;:::i;:::-;7772:53;:::i;:::-;7759:66;;7689:142;;;:::o;7837:126::-;7887:9;7920:37;7951:5;7920:37;:::i;:::-;7907:50;;7837:126;;;:::o;7969:144::-;8037:9;8070:37;8101:5;8070:37;:::i;:::-;8057:50;;7969:144;;;:::o;8119:167::-;8224:55;8273:5;8224:55;:::i;:::-;8219:3;8212:68;8119:167;;:::o;8292:258::-;8403:4;8441:2;8430:9;8426:18;8418:26;;8454:89;8540:1;8529:9;8525:17;8516:6;8454:89;:::i;:::-;8292:258;;;;:::o;8556:76::-;8592:7;8621:5;8610:16;;8556:76;;;:::o;8638:115::-;8723:23;8740:5;8723:23;:::i;:::-;8718:3;8711:36;8638:115;;:::o;8759:218::-;8850:4;8888:2;8877:9;8873:18;8865:26;;8901:69;8967:1;8956:9;8952:17;8943:6;8901:69;:::i;:::-;8759:218;;;;:::o;8983:140::-;9047:9;9080:37;9111:5;9080:37;:::i;:::-;9067:50;;8983:140;;;:::o;9129:159::-;9230:51;9275:5;9230:51;:::i;:::-;9225:3;9218:64;9129:159;;:::o;9294:250::-;9401:4;9439:2;9428:9;9424:18;9416:26;;9452:85;9534:1;9523:9;9519:17;9510:6;9452:85;:::i;:::-;9294:250;;;;:::o;9550:180::-;9598:77;9595:1;9588:88;9695:4;9692:1;9685:15;9719:4;9716:1;9709:15;9736:320;9780:6;9817:1;9811:4;9807:12;9797:22;;9864:1;9858:4;9854:12;9885:18;9875:81;;9941:4;9933:6;9929:17;9919:27;;9875:81;10003:2;9995:6;9992:14;9972:18;9969:38;9966:84;;10022:18;;:::i;:::-;9966:84;9787:269;9736:320;;;:::o;10062:118::-;10149:24;10167:5;10149:24;:::i;:::-;10144:3;10137:37;10062:118;;:::o;10186:222::-;10279:4;10317:2;10306:9;10302:18;10294:26;;10330:71;10398:1;10387:9;10383:17;10374:6;10330:71;:::i;:::-;10186:222;;;;:::o;10414:143::-;10471:5;10502:6;10496:13;10487:22;;10518:33;10545:5;10518:33;:::i;:::-;10414:143;;;;:::o;10563:351::-;10633:6;10682:2;10670:9;10661:7;10657:23;10653:32;10650:119;;;10688:79;;:::i;:::-;10650:119;10808:1;10833:64;10889:7;10880:6;10869:9;10865:22;10833:64;:::i;:::-;10823:74;;10779:128;10563:351;;;;:::o;10920:117::-;11029:1;11026;11019:12;11043:117;11152:1;11149;11142:12;11166:117;11275:1;11272;11265:12;11289:725;11367:4;11373:6;11429:11;11416:25;11529:1;11523:4;11519:12;11508:8;11492:14;11488:29;11484:48;11464:18;11460:73;11450:168;;11537:79;;:::i;:::-;11450:168;11649:18;11639:8;11635:33;11627:41;;11701:4;11688:18;11678:28;;11729:18;11721:6;11718:30;11715:117;;;11751:79;;:::i;:::-;11715:117;11859:2;11853:4;11849:13;11841:21;;11916:4;11908:6;11904:17;11888:14;11884:38;11878:4;11874:49;11871:136;;;11926:79;;:::i;:::-;11871:136;11380:634;11289:725;;;;;:::o;12020:180::-;12068:77;12065:1;12058:88;12165:4;12162:1;12155:15;12189:4;12186:1;12179:15;12206:141;12255:4;12278:3;12270:11;;12301:3;12298:1;12291:14;12335:4;12332:1;12322:18;12314:26;;12206:141;;;:::o;12353:93::-;12390:6;12437:2;12432;12425:5;12421:14;12417:23;12407:33;;12353:93;;;:::o;12452:107::-;12496:8;12546:5;12540:4;12536:16;12515:37;;12452:107;;;;:::o;12565:393::-;12634:6;12684:1;12672:10;12668:18;12707:97;12737:66;12726:9;12707:97;:::i;:::-;12825:39;12855:8;12844:9;12825:39;:::i;:::-;12813:51;;12897:4;12893:9;12886:5;12882:21;12873:30;;12946:4;12936:8;12932:19;12925:5;12922:30;12912:40;;12641:317;;12565:393;;;;;:::o;12964:142::-;13014:9;13047:53;13065:34;13074:24;13092:5;13074:24;:::i;:::-;13065:34;:::i;:::-;13047:53;:::i;:::-;13034:66;;12964:142;;;:::o;13112:75::-;13155:3;13176:5;13169:12;;13112:75;;;:::o;13193:269::-;13303:39;13334:7;13303:39;:::i;:::-;13364:91;13413:41;13437:16;13413:41;:::i;:::-;13405:6;13398:4;13392:11;13364:91;:::i;:::-;13358:4;13351:105;13269:193;13193:269;;;:::o;13468:73::-;13513:3;13468:73;:::o;13547:189::-;13624:32;;:::i;:::-;13665:65;13723:6;13715;13709:4;13665:65;:::i;:::-;13600:136;13547:189;;:::o;13742:186::-;13802:120;13819:3;13812:5;13809:14;13802:120;;;13873:39;13910:1;13903:5;13873:39;:::i;:::-;13846:1;13839:5;13835:13;13826:22;;13802:120;;;13742:186;;:::o;13934:543::-;14035:2;14030:3;14027:11;14024:446;;;14069:38;14101:5;14069:38;:::i;:::-;14153:29;14171:10;14153:29;:::i;:::-;14143:8;14139:44;14336:2;14324:10;14321:18;14318:49;;;14357:8;14342:23;;14318:49;14380:80;14436:22;14454:3;14436:22;:::i;:::-;14426:8;14422:37;14409:11;14380:80;:::i;:::-;14039:431;;14024:446;13934:543;;;:::o;14483:117::-;14537:8;14587:5;14581:4;14577:16;14556:37;;14483:117;;;;:::o;14606:169::-;14650:6;14683:51;14731:1;14727:6;14719:5;14716:1;14712:13;14683:51;:::i;:::-;14679:56;14764:4;14758;14754:15;14744:25;;14657:118;14606:169;;;;:::o;14780:295::-;14856:4;15002:29;15027:3;15021:4;15002:29;:::i;:::-;14994:37;;15064:3;15061:1;15057:11;15051:4;15048:21;15040:29;;14780:295;;;;:::o;15080:1395::-;15197:37;15230:3;15197:37;:::i;:::-;15299:18;15291:6;15288:30;15285:56;;;15321:18;;:::i;:::-;15285:56;15365:38;15397:4;15391:11;15365:38;:::i;:::-;15450:67;15510:6;15502;15496:4;15450:67;:::i;:::-;15544:1;15568:4;15555:17;;15600:2;15592:6;15589:14;15617:1;15612:618;;;;16274:1;16291:6;16288:77;;;16340:9;16335:3;16331:19;16325:26;16316:35;;16288:77;16391:67;16451:6;16444:5;16391:67;:::i;:::-;16385:4;16378:81;16247:222;15582:887;;15612:618;15664:4;15660:9;15652:6;15648:22;15698:37;15730:4;15698:37;:::i;:::-;15757:1;15771:208;15785:7;15782:1;15779:14;15771:208;;;15864:9;15859:3;15855:19;15849:26;15841:6;15834:42;15915:1;15907:6;15903:14;15893:24;;15962:2;15951:9;15947:18;15934:31;;15808:4;15805:1;15801:12;15796:17;;15771:208;;;16007:6;15998:7;15995:19;15992:179;;;16065:9;16060:3;16056:19;16050:26;16108:48;16150:4;16142:6;16138:17;16127:9;16108:48;:::i;:::-;16100:6;16093:64;16015:156;15992:179;16217:1;16213;16205:6;16201:14;16197:22;16191:4;16184:36;15619:611;;;15582:887;;15172:1303;;;15080:1395;;:::o;16481:180::-;16529:77;16526:1;16519:88;16626:4;16623:1;16616:15;16650:4;16647:1;16640:15;16667:191;16707:3;16726:20;16744:1;16726:20;:::i;:::-;16721:25;;16760:20;16778:1;16760:20;:::i;:::-;16755:25;;16803:1;16800;16796:9;16789:16;;16824:3;16821:1;16818:10;16815:36;;;16831:18;;:::i;:::-;16815:36;16667:191;;;;:::o;16864:143::-;16921:5;16952:6;16946:13;16937:22;;16968:33;16995:5;16968:33;:::i;:::-;16864:143;;;;:::o;17013:351::-;17083:6;17132:2;17120:9;17111:7;17107:23;17103:32;17100:119;;;17138:79;;:::i;:::-;17100:119;17258:1;17283:64;17339:7;17330:6;17319:9;17315:22;17283:64;:::i;:::-;17273:74;;17229:128;17013:351;;;;:::o;17370:122::-;17443:24;17461:5;17443:24;:::i;:::-;17436:5;17433:35;17423:63;;17482:1;17479;17472:12;17423:63;17370:122;:::o;17498:143::-;17555:5;17586:6;17580:13;17571:22;;17602:33;17629:5;17602:33;:::i;:::-;17498:143;;;;:::o;17647:90::-;17682:7;17725:5;17722:1;17711:20;17700:31;;17647:90;;;:::o;17743:118::-;17814:22;17830:5;17814:22;:::i;:::-;17807:5;17804:33;17794:61;;17851:1;17848;17841:12;17794:61;17743:118;:::o;17867:139::-;17922:5;17953:6;17947:13;17938:22;;17969:31;17994:5;17969:31;:::i;:::-;17867:139;;;;:::o;18012:89::-;18048:7;18088:6;18081:5;18077:18;18066:29;;18012:89;;;:::o;18107:120::-;18179:23;18196:5;18179:23;:::i;:::-;18172:5;18169:34;18159:62;;18217:1;18214;18207:12;18159:62;18107:120;:::o;18233:141::-;18289:5;18320:6;18314:13;18305:22;;18336:32;18362:5;18336:32;:::i;:::-;18233:141;;;;:::o;18380:86::-;18415:7;18455:4;18448:5;18444:16;18433:27;;18380:86;;;:::o;18472:118::-;18543:22;18559:5;18543:22;:::i;:::-;18536:5;18533:33;18523:61;;18580:1;18577;18570:12;18523:61;18472:118;:::o;18596:139::-;18651:5;18682:6;18676:13;18667:22;;18698:31;18723:5;18698:31;:::i;:::-;18596:139;;;;:::o;18741:90::-;18775:7;18818:5;18811:13;18804:21;18793:32;;18741:90;;;:::o;18837:116::-;18907:21;18922:5;18907:21;:::i;:::-;18900:5;18897:32;18887:60;;18943:1;18940;18933:12;18887:60;18837:116;:::o;18959:137::-;19013:5;19044:6;19038:13;19029:22;;19060:30;19084:5;19060:30;:::i;:::-;18959:137;;;;:::o;19102:1271::-;19216:6;19224;19232;19240;19248;19256;19264;19313:3;19301:9;19292:7;19288:23;19284:33;19281:120;;;19320:79;;:::i;:::-;19281:120;19440:1;19465:64;19521:7;19512:6;19501:9;19497:22;19465:64;:::i;:::-;19455:74;;19411:128;19578:2;19604:62;19658:7;19649:6;19638:9;19634:22;19604:62;:::i;:::-;19594:72;;19549:127;19715:2;19741:63;19796:7;19787:6;19776:9;19772:22;19741:63;:::i;:::-;19731:73;;19686:128;19853:2;19879:63;19934:7;19925:6;19914:9;19910:22;19879:63;:::i;:::-;19869:73;;19824:128;19991:3;20018:63;20073:7;20064:6;20053:9;20049:22;20018:63;:::i;:::-;20008:73;;19962:129;20130:3;20157:62;20211:7;20202:6;20191:9;20187:22;20157:62;:::i;:::-;20147:72;;20101:128;20268:3;20295:61;20348:7;20339:6;20328:9;20324:22;20295:61;:::i;:::-;20285:71;;20239:127;19102:1271;;;;;;;;;;:::o;20379:194::-;20419:4;20439:20;20457:1;20439:20;:::i;:::-;20434:25;;20473:20;20491:1;20473:20;:::i;:::-;20468:25;;20517:1;20514;20510:9;20502:17;;20541:1;20535:4;20532:11;20529:37;;;20546:18;;:::i;:::-;20529:37;20379:194;;;;:::o;20579:105::-;20615:7;20655:22;20648:5;20644:34;20633:45;;20579:105;;;:::o;20690:120::-;20762:23;20779:5;20762:23;:::i;:::-;20755:5;20752:34;20742:62;;20800:1;20797;20790:12;20742:62;20690:120;:::o;20816:141::-;20872:5;20903:6;20897:13;20888:22;;20919:32;20945:5;20919:32;:::i;:::-;20816:141;;;;:::o;20963:120::-;21035:23;21052:5;21035:23;:::i;:::-;21028:5;21025:34;21015:62;;21073:1;21070;21063:12;21015:62;20963:120;:::o;21089:141::-;21145:5;21176:6;21170:13;21161:22;;21192:32;21218:5;21192:32;:::i;:::-;21089:141;;;;:::o;21236:971::-;21339:6;21347;21355;21363;21371;21420:3;21408:9;21399:7;21395:23;21391:33;21388:120;;;21427:79;;:::i;:::-;21388:120;21547:1;21572:63;21627:7;21618:6;21607:9;21603:22;21572:63;:::i;:::-;21562:73;;21518:127;21684:2;21710:63;21765:7;21756:6;21745:9;21741:22;21710:63;:::i;:::-;21700:73;;21655:128;21822:2;21848:64;21904:7;21895:6;21884:9;21880:22;21848:64;:::i;:::-;21838:74;;21793:129;21961:2;21987:64;22043:7;22034:6;22023:9;22019:22;21987:64;:::i;:::-;21977:74;;21932:129;22100:3;22127:63;22182:7;22173:6;22162:9;22158:22;22127:63;:::i;:::-;22117:73;;22071:129;21236:971;;;;;;;;:::o;22213:410::-;22253:7;22276:20;22294:1;22276:20;:::i;:::-;22271:25;;22310:20;22328:1;22310:20;:::i;:::-;22305:25;;22365:1;22362;22358:9;22387:30;22405:11;22387:30;:::i;:::-;22376:41;;22566:1;22557:7;22553:15;22550:1;22547:22;22527:1;22520:9;22500:83;22477:139;;22596:18;;:::i;:::-;22477:139;22261:362;22213:410;;;;:::o;22629:180::-;22677:77;22674:1;22667:88;22774:4;22771:1;22764:15;22798:4;22795:1;22788:15;22815:185;22855:1;22872:20;22890:1;22872:20;:::i;:::-;22867:25;;22906:20;22924:1;22906:20;:::i;:::-;22901:25;;22945:1;22935:35;;22950:18;;:::i;:::-;22935:35;22992:1;22989;22985:9;22980:14;;22815:185;;;;:::o;23006:147::-;23107:11;23144:3;23129:18;;23006:147;;;;:::o;23159:114::-;;:::o;23279:398::-;23438:3;23459:83;23540:1;23535:3;23459:83;:::i;:::-;23452:90;;23551:93;23640:3;23551:93;:::i;:::-;23669:1;23664:3;23660:11;23653:18;;23279:398;;;:::o;23683:379::-;23867:3;23889:147;24032:3;23889:147;:::i;:::-;23882:154;;24053:3;24046:10;;23683:379;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1453400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"activeCoverAmount()": "2451",
								"buyCover((address,address,uint256,uint256,uint256,uint256,uint256,string,uint256))": "infinite",
								"coverAmountInETH((address,address,uint256,uint256,uint256,uint256,uint256,string,uint256))": "615",
								"coverDataCount()": "infinite",
								"coverNFT()": "infinite",
								"coverPrice((address,address,uint256,uint256,uint256,uint256,uint256,string,uint256))": "594",
								"decActiveCoverInETH(uint256)": "infinite",
								"getCoverData(uint256)": "infinite",
								"getLiveDataUniswap(address)": "infinite",
								"getUnitPX(address)": "infinite",
								"master()": "infinite",
								"totalActiveCoverInETH()": "2525"
							},
							"internal": {
								"pool()": "infinite",
								"retrievePayment(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 456,
									"end": 4291,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 456,
									"end": 4291,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 456,
									"end": 4291,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 700,
									"end": 948,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 700,
									"end": 948,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 700,
									"end": 948,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 700,
									"end": 948,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 700,
									"end": 948,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 700,
									"end": 948,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 700,
									"end": 948,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 700,
									"end": 948,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 861,
									"end": 870,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 850,
									"end": 858,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 850,
									"end": 858,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 850,
									"end": 870,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 850,
									"end": 870,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 850,
									"end": 870,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 850,
									"end": 870,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 850,
									"end": 870,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 850,
									"end": 870,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 850,
									"end": 870,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 850,
									"end": 870,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 850,
									"end": 870,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 850,
									"end": 870,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 850,
									"end": 870,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 850,
									"end": 870,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 850,
									"end": 870,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 850,
									"end": 870,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 850,
									"end": 870,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 850,
									"end": 870,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 850,
									"end": 870,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 850,
									"end": 870,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 900,
									"end": 901,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 880,
									"end": 897,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 880,
									"end": 901,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 880,
									"end": 901,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 880,
									"end": 901,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 880,
									"end": 901,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 927,
									"end": 940,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 911,
									"end": 917,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 911,
									"end": 917,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 941,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 911,
									"end": 941,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 911,
									"end": 941,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 911,
									"end": 941,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 911,
									"end": 941,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 911,
									"end": 941,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 911,
									"end": 941,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 911,
									"end": 941,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 911,
									"end": 941,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 911,
									"end": 941,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 911,
									"end": 941,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 911,
									"end": 941,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 911,
									"end": 941,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 911,
									"end": 941,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 911,
									"end": 941,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 911,
									"end": 941,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 911,
									"end": 941,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 911,
									"end": 941,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 456,
									"end": 4291,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 456,
									"end": 4291,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 16,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 16,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 16,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "23"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 16,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 568,
									"end": 682,
									"name": "tag",
									"source": 16,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 682,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 623,
									"end": 630,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 652,
									"end": 676,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "25"
								},
								{
									"begin": 670,
									"end": 675,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 652,
									"end": 676,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "11"
								},
								{
									"begin": 652,
									"end": 676,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 652,
									"end": 676,
									"name": "tag",
									"source": 16,
									"value": "25"
								},
								{
									"begin": 652,
									"end": 676,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 641,
									"end": 676,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 641,
									"end": 676,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 568,
									"end": 682,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 568,
									"end": 682,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 568,
									"end": 682,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 568,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 688,
									"end": 846,
									"name": "tag",
									"source": 16,
									"value": "13"
								},
								{
									"begin": 688,
									"end": 846,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 779,
									"end": 821,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "27"
								},
								{
									"begin": 815,
									"end": 820,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 779,
									"end": 821,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "12"
								},
								{
									"begin": 779,
									"end": 821,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 779,
									"end": 821,
									"name": "tag",
									"source": 16,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 821,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 772,
									"end": 777,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 769,
									"end": 822,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 759,
									"end": 840,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "28"
								},
								{
									"begin": 759,
									"end": 840,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 836,
									"end": 837,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 833,
									"end": 834,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 826,
									"end": 838,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 759,
									"end": 840,
									"name": "tag",
									"source": 16,
									"value": "28"
								},
								{
									"begin": 759,
									"end": 840,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 688,
									"end": 846,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 688,
									"end": 846,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 852,
									"end": 1031,
									"name": "tag",
									"source": 16,
									"value": "14"
								},
								{
									"begin": 852,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 927,
									"end": 932,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 958,
									"end": 964,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 952,
									"end": 965,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 943,
									"end": 965,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 943,
									"end": 965,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 974,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "30"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 974,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "13"
								},
								{
									"begin": 974,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 974,
									"end": 1025,
									"name": "tag",
									"source": 16,
									"value": "30"
								},
								{
									"begin": 974,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 852,
									"end": 1031,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 852,
									"end": 1031,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 852,
									"end": 1031,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 852,
									"end": 1031,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 852,
									"end": 1031,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1037,
									"end": 1159,
									"name": "tag",
									"source": 16,
									"value": "15"
								},
								{
									"begin": 1037,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1110,
									"end": 1134,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "32"
								},
								{
									"begin": 1128,
									"end": 1133,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1110,
									"end": 1134,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "11"
								},
								{
									"begin": 1110,
									"end": 1134,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1110,
									"end": 1134,
									"name": "tag",
									"source": 16,
									"value": "32"
								},
								{
									"begin": 1110,
									"end": 1134,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1103,
									"end": 1108,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1100,
									"end": 1135,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 1090,
									"end": 1153,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "33"
								},
								{
									"begin": 1090,
									"end": 1153,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1149,
									"end": 1150,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1146,
									"end": 1147,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1139,
									"end": 1151,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 1090,
									"end": 1153,
									"name": "tag",
									"source": 16,
									"value": "33"
								},
								{
									"begin": 1090,
									"end": 1153,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1037,
									"end": 1159,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1037,
									"end": 1159,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1165,
									"end": 1308,
									"name": "tag",
									"source": 16,
									"value": "16"
								},
								{
									"begin": 1165,
									"end": 1308,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1222,
									"end": 1227,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1253,
									"end": 1259,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1247,
									"end": 1260,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 1238,
									"end": 1260,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1238,
									"end": 1260,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1269,
									"end": 1302,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "35"
								},
								{
									"begin": 1296,
									"end": 1301,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1269,
									"end": 1302,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "15"
								},
								{
									"begin": 1269,
									"end": 1302,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1269,
									"end": 1302,
									"name": "tag",
									"source": 16,
									"value": "35"
								},
								{
									"begin": 1269,
									"end": 1302,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1165,
									"end": 1308,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 1165,
									"end": 1308,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1165,
									"end": 1308,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1165,
									"end": 1308,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1165,
									"end": 1308,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1314,
									"end": 1857,
									"name": "tag",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 1314,
									"end": 1857,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1411,
									"end": 1417,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1419,
									"end": 1425,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1468,
									"end": 1470,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 1456,
									"end": 1465,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 1447,
									"end": 1454,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 1443,
									"end": 1466,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 1439,
									"end": 1471,
									"name": "SLT",
									"source": 16
								},
								{
									"begin": 1436,
									"end": 1555,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1436,
									"end": 1555,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 1436,
									"end": 1555,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1474,
									"end": 1553,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "38"
								},
								{
									"begin": 1474,
									"end": 1553,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "8"
								},
								{
									"begin": 1474,
									"end": 1553,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1474,
									"end": 1553,
									"name": "tag",
									"source": 16,
									"value": "38"
								},
								{
									"begin": 1474,
									"end": 1553,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1436,
									"end": 1555,
									"name": "tag",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 1436,
									"end": 1555,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1594,
									"end": 1595,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1619,
									"end": 1701,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "39"
								},
								{
									"begin": 1693,
									"end": 1700,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 1684,
									"end": 1690,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1673,
									"end": 1682,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 1669,
									"end": 1691,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1619,
									"end": 1701,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "14"
								},
								{
									"begin": 1619,
									"end": 1701,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1619,
									"end": 1701,
									"name": "tag",
									"source": 16,
									"value": "39"
								},
								{
									"begin": 1619,
									"end": 1701,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1609,
									"end": 1701,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 1609,
									"end": 1701,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1565,
									"end": 1711,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1750,
									"end": 1752,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1776,
									"end": 1840,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 1832,
									"end": 1839,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 1823,
									"end": 1829,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1812,
									"end": 1821,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 1808,
									"end": 1830,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1776,
									"end": 1840,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "16"
								},
								{
									"begin": 1776,
									"end": 1840,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1776,
									"end": 1840,
									"name": "tag",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 1776,
									"end": 1840,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1766,
									"end": 1840,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1766,
									"end": 1840,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1721,
									"end": 1850,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1314,
									"end": 1857,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 1314,
									"end": 1857,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1314,
									"end": 1857,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 1314,
									"end": 1857,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1314,
									"end": 1857,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1314,
									"end": 1857,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 456,
									"end": 4291,
									"name": "tag",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 456,
									"end": 4291,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 456,
									"end": 4291,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 456,
									"end": 4291,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 456,
									"end": 4291,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 456,
									"end": 4291,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 456,
									"end": 4291,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 456,
									"end": 4291,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 456,
									"end": 4291,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122005fb02bf69b24510b1d3289b9f0dfa9c0ca34ebb9c6ae72f1536bdd3fc069fea64736f6c63430008130033",
									".code": [
										{
											"begin": 456,
											"end": 4291,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "PUSH",
											"source": 9,
											"value": "4B61A44B"
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "PUSH",
											"source": 9,
											"value": "4B61A44B"
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "PUSH",
											"source": 9,
											"value": "7E9E1ABE"
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "PUSH",
											"source": 9,
											"value": "D05808F8"
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "PUSH",
											"source": 9,
											"value": "DE071A0A"
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "PUSH",
											"source": 9,
											"value": "ED3B657A"
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "PUSH",
											"source": 9,
											"value": "EE97F7F3"
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "PUSH",
											"source": 9,
											"value": "407D2A"
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "PUSH",
											"source": 9,
											"value": "1F5E4583"
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "PUSH",
											"source": 9,
											"value": "279F54CE"
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "PUSH",
											"source": 9,
											"value": "404730F4"
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "PUSH",
											"source": 9,
											"value": "4230A777"
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "PUSH",
											"source": 9,
											"value": "42E53FCF"
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4291,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 953,
											"end": 1075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 953,
											"end": 1075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 953,
											"end": 1075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 2161,
											"end": 2287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 2161,
											"end": 2287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 2161,
											"end": 2287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1923,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1080,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 1080,
											"end": 1923,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1080,
											"end": 1923,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1923,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1923,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1923,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1923,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1923,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 1080,
											"end": 1923,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1923,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1080,
											"end": 1923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1923,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 1080,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 1080,
											"end": 1923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1923,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 1080,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1923,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1080,
											"end": 1923,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1080,
											"end": 1923,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1923,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 1080,
											"end": 1923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1923,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1080,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1923,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1080,
											"end": 1923,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1923,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1923,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1923,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1923,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1923,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 2027,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1928,
											"end": 2027,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 2027,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 2027,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 2027,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 2027,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1928,
											"end": 2027,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 2027,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1928,
											"end": 2027,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 2027,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 2027,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1928,
											"end": 2027,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 2027,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 2027,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 1928,
											"end": 2027,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 1928,
											"end": 2027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 2027,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 1928,
											"end": 2027,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 2027,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1928,
											"end": 2027,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 2027,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 1928,
											"end": 2027,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 2027,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 2027,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 1928,
											"end": 2027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 2027,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 1928,
											"end": 2027,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 2027,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1928,
											"end": 2027,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 2027,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 2027,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 2027,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 2027,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 2027,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3956,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 3956,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 3956,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 667,
											"end": 693,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 667,
											"end": 693,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 667,
											"end": 693,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 667,
											"end": 693,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 667,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 667,
											"end": 693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 667,
											"end": 693,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 667,
											"end": 693,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 667,
											"end": 693,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 667,
											"end": 693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 667,
											"end": 693,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 667,
											"end": 693,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3739,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 3653,
											"end": 3739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3739,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3739,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3739,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 3653,
											"end": 3739,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3739,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3653,
											"end": 3739,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3739,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3739,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 3653,
											"end": 3739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3739,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 3653,
											"end": 3739,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3653,
											"end": 3739,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3739,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3739,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3739,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3739,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3739,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 3653,
											"end": 3739,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3739,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 3653,
											"end": 3739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3739,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 3653,
											"end": 3739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 3653,
											"end": 3739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3739,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 3653,
											"end": 3739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3739,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 602,
											"end": 634,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 602,
											"end": 634,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 602,
											"end": 634,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 602,
											"end": 634,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 602,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 602,
											"end": 634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 602,
											"end": 634,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 602,
											"end": 634,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 602,
											"end": 634,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 602,
											"end": 634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 602,
											"end": 634,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 602,
											"end": 634,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 2032,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2032,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 2032,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4132,
											"end": 4287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 4132,
											"end": 4287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 4132,
											"end": 4287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3744,
											"end": 3847,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 3744,
											"end": 3847,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3744,
											"end": 3847,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3744,
											"end": 3847,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3744,
											"end": 3847,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3744,
											"end": 3847,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 3744,
											"end": 3847,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3744,
											"end": 3847,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3744,
											"end": 3847,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3744,
											"end": 3847,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3744,
											"end": 3847,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 3744,
											"end": 3847,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3744,
											"end": 3847,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3744,
											"end": 3847,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 3744,
											"end": 3847,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 3744,
											"end": 3847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3744,
											"end": 3847,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 3744,
											"end": 3847,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3744,
											"end": 3847,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3744,
											"end": 3847,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3744,
											"end": 3847,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 3744,
											"end": 3847,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3744,
											"end": 3847,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3744,
											"end": 3847,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 3744,
											"end": 3847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3744,
											"end": 3847,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 3744,
											"end": 3847,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3744,
											"end": 3847,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3744,
											"end": 3847,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3744,
											"end": 3847,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3744,
											"end": 3847,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3744,
											"end": 3847,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3744,
											"end": 3847,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3744,
											"end": 3847,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 641,
											"end": 661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 641,
											"end": 661,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 641,
											"end": 661,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 641,
											"end": 661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 641,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 641,
											"end": 661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 641,
											"end": 661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 641,
											"end": 661,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 641,
											"end": 661,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 641,
											"end": 661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 641,
											"end": 661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 641,
											"end": 661,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1013,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 1013,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 1013,
											"end": 1029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1013,
											"end": 1029,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 1013,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1049,
											"end": 1059,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1049,
											"end": 1068,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1049,
											"end": 1068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1049,
											"end": 1068,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1049,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1049,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1049,
											"end": 1068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1049,
											"end": 1068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1049,
											"end": 1068,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1049,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1049,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1049,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1049,
											"end": 1068,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 1042,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 1042,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2229,
											"end": 2239,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2267,
											"end": 2280,
											"name": "PUSH",
											"source": 9,
											"value": "E8D4A51000"
										},
										{
											"begin": 2260,
											"end": 2280,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2260,
											"end": 2280,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2287,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1923,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 1080,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1156,
											"end": 1168,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1215,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1207,
											"end": 1215,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1215,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1215,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1215,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1215,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1207,
											"end": 1215,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1215,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1215,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1215,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1207,
											"end": 1215,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1220,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1207,
											"end": 1220,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1220,
											"name": "PUSH",
											"source": 9,
											"value": "6A627842"
										},
										{
											"begin": 1221,
											"end": 1231,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 1207,
											"end": 1232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 1207,
											"end": 1232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1232,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1232,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1274,
											"end": 1275,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1277,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 1294,
											"end": 1300,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1277,
											"end": 1293,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1277,
											"end": 1301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1277,
											"end": 1301,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 1277,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1345,
											"end": 1360,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1383,
											"end": 1389,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1383,
											"end": 1396,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 1383,
											"end": 1396,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1383,
											"end": 1396,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1422,
											"end": 1428,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1422,
											"end": 1435,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1435,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1422,
											"end": 1435,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1422,
											"end": 1435,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1422,
											"end": 1435,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1422,
											"end": 1435,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1422,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 1422,
											"end": 1435,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1422,
											"end": 1435,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1422,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1422,
											"end": 1435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1422,
											"end": 1435,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 1422,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1449,
											"end": 1455,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1449,
											"end": 1462,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1449,
											"end": 1462,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1449,
											"end": 1462,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1449,
											"end": 1462,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1449,
											"end": 1462,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1449,
											"end": 1462,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1449,
											"end": 1462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 1449,
											"end": 1462,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1449,
											"end": 1462,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1449,
											"end": 1462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1449,
											"end": 1462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1449,
											"end": 1462,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 1449,
											"end": 1462,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1482,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1492,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1476,
											"end": 1492,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1492,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1506,
											"end": 1512,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1506,
											"end": 1522,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1522,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1506,
											"end": 1522,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1536,
											"end": 1558,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1536,
											"end": 1558,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1536,
											"end": 1558,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1572,
											"end": 1578,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1572,
											"end": 1594,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1572,
											"end": 1594,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1572,
											"end": 1594,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1608,
											"end": 1614,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1608,
											"end": 1622,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1608,
											"end": 1622,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1608,
											"end": 1622,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1608,
											"end": 1622,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1608,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 1608,
											"end": 1622,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1608,
											"end": 1622,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1608,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 1608,
											"end": 1622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1608,
											"end": 1622,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 1608,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1636,
											"end": 1642,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1636,
											"end": 1659,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1636,
											"end": 1659,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1636,
											"end": 1659,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1669,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1252,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1261,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1253,
											"end": 1260,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1261,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1261,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1261,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1242,
											"end": 1261,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1261,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1261,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1261,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1261,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1242,
											"end": 1261,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1261,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1261,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1242,
											"end": 1669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1669,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1679,
											"end": 1696,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1699,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1699,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1699,
											"end": 1717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1699,
											"end": 1717,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 1699,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1679,
											"end": 1717,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1679,
											"end": 1717,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1727,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 1743,
											"end": 1755,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 408,
											"end": 409,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1727,
											"end": 1769,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1727,
											"end": 1769,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1727,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 1727,
											"end": 1769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1727,
											"end": 1769,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 1727,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1727,
											"end": 1769,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1800,
											"end": 1810,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1800,
											"end": 1819,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1811,
											"end": 1818,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1800,
											"end": 1819,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1800,
											"end": 1819,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1800,
											"end": 1819,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1800,
											"end": 1819,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1800,
											"end": 1819,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1800,
											"end": 1819,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1800,
											"end": 1819,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1800,
											"end": 1819,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1800,
											"end": 1819,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1800,
											"end": 1819,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1800,
											"end": 1819,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1800,
											"end": 1836,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1800,
											"end": 1836,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1800,
											"end": 1836,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1779,
											"end": 1796,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1779,
											"end": 1796,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1836,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1779,
											"end": 1836,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1779,
											"end": 1836,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1779,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 1779,
											"end": 1836,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1779,
											"end": 1836,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1779,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 1779,
											"end": 1836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1779,
											"end": 1836,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 1779,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1779,
											"end": 1836,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1779,
											"end": 1836,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1779,
											"end": 1836,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1779,
											"end": 1836,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1779,
											"end": 1836,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1779,
											"end": 1836,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1779,
											"end": 1836,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1846,
											"end": 1854,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1862,
											"end": 1868,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1862,
											"end": 1868,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1862,
											"end": 1868,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1868,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1868,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1868,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1862,
											"end": 1868,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1868,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1868,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1868,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1862,
											"end": 1868,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1879,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1862,
											"end": 1879,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1879,
											"name": "PUSH",
											"source": 9,
											"value": "88EA0751"
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 1862,
											"end": 1881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1846,
											"end": 1882,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1846,
											"end": 1882,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1895,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1913,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1892,
											"end": 1913,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1913,
											"name": "PUSH",
											"source": 9,
											"value": "AA5DA046"
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1169,
											"end": 1923,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1169,
											"end": 1923,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1923,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1923,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1923,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 2027,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 1928,
											"end": 2027,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1975,
											"end": 1979,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1998,
											"end": 2006,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1998,
											"end": 2006,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1998,
											"end": 2006,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2006,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2006,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2006,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1998,
											"end": 2006,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2006,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2006,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2006,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1998,
											"end": 2006,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2018,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1998,
											"end": 2018,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2018,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 1998,
											"end": 2020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1991,
											"end": 2020,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1991,
											"end": 2020,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 2027,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 2027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4016,
											"end": 4023,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4037,
											"end": 4051,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4082,
											"end": 4083,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "PUSH",
											"source": 9,
											"value": "3850C7BD"
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 4067,
											"end": 4092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4036,
											"end": 4092,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4036,
											"end": 4092,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4036,
											"end": 4092,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4036,
											"end": 4092,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4036,
											"end": 4092,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4036,
											"end": 4092,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4036,
											"end": 4092,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4036,
											"end": 4092,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4111,
											"end": 4117,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4104,
											"end": 4117,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4104,
											"end": 4117,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4104,
											"end": 4117,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 4124,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 4124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 667,
											"end": 693,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 667,
											"end": 693,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 667,
											"end": 693,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 667,
											"end": 693,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 667,
											"end": 693,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3739,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 3653,
											"end": 3739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3729,
											"end": 3732,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 3725,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3708,
											"end": 3725,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3732,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 3732,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 3732,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 3732,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 3708,
											"end": 3732,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 3732,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 3732,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 3708,
											"end": 3732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 3732,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 3708,
											"end": 3732,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 3732,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 3732,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 3732,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 3732,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 3732,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 3732,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 3732,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3739,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 602,
											"end": 634,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 602,
											"end": 634,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2107,
											"end": 2118,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2136,
											"end": 2149,
											"name": "PUSH",
											"source": 9,
											"value": "E8D4A51000"
										},
										{
											"begin": 2129,
											"end": 2149,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2129,
											"end": 2149,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2156,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4183,
											"end": 4186,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4199,
											"end": 4209,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4237,
											"end": 4238,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4255,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4215,
											"end": 4255,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4255,
											"name": "PUSH",
											"source": 9,
											"value": "FEAF968C"
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 4215,
											"end": 4257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 4215,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4197,
											"end": 4257,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4197,
											"end": 4257,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4197,
											"end": 4257,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4197,
											"end": 4257,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4197,
											"end": 4257,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4197,
											"end": 4257,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4274,
											"end": 4280,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4267,
											"end": 4280,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4267,
											"end": 4280,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4267,
											"end": 4280,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4287,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3744,
											"end": 3847,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 3744,
											"end": 3847,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3798,
											"end": 3805,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3823,
											"end": 3840,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3823,
											"end": 3840,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3816,
											"end": 3840,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3816,
											"end": 3840,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3744,
											"end": 3847,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3744,
											"end": 3847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 641,
											"end": 661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 641,
											"end": 661,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 641,
											"end": 661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 641,
											"end": 661,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 641,
											"end": 661,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2318,
											"end": 3647,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 2318,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2420,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2432,
											"end": 2443,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2446,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 2446,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 2446,
											"end": 2452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2446,
											"end": 2452,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 2446,
											"end": 2452,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2452,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2452,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 408,
											"end": 409,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2466,
											"end": 2494,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2466,
											"end": 2494,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2466,
											"end": 2478,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2466,
											"end": 2494,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2462,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 2462,
											"end": 3617,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2506,
											"end": 2532,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2575,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2550,
											"end": 2571,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 444,
											"end": 447,
											"name": "PUSH",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 2535,
											"end": 2571,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2535,
											"end": 2571,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2535,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 2535,
											"end": 2571,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2535,
											"end": 2571,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2535,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 2535,
											"end": 2571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2535,
											"end": 2571,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 2535,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2535,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 2535,
											"end": 2575,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2535,
											"end": 2575,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2535,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 2535,
											"end": 2575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2535,
											"end": 2575,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 2535,
											"end": 2575,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2506,
											"end": 2575,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2506,
											"end": 2575,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2605,
											"end": 2626,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2593,
											"end": 2602,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2593,
											"end": 2626,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2685,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 2589,
											"end": 2685,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2653,
											"end": 2674,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2653,
											"end": 2674,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2653,
											"end": 2674,
											"name": "PUSH",
											"source": 9,
											"value": "F244866F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2653,
											"end": 2674,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2653,
											"end": 2674,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2653,
											"end": 2674,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2653,
											"end": 2674,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2653,
											"end": 2674,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2653,
											"end": 2674,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2653,
											"end": 2674,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2653,
											"end": 2674,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2653,
											"end": 2674,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2653,
											"end": 2674,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2653,
											"end": 2674,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2685,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 2589,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2696,
											"end": 2710,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2725,
											"end": 2746,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2713,
											"end": 2722,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2713,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 2713,
											"end": 2746,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2713,
											"end": 2746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2713,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 2713,
											"end": 2746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2713,
											"end": 2746,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 2713,
											"end": 2746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2696,
											"end": 2746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2696,
											"end": 2746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2874,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2898,
											"end": 2903,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2909,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2890,
											"end": 2909,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2917,
											"end": 2938,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 2890,
											"end": 2943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2866,
											"end": 2943,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2866,
											"end": 2943,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2866,
											"end": 2943,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2958,
											"end": 2960,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3016,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 2953,
											"end": 3016,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2981,
											"end": 3005,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2981,
											"end": 3005,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2981,
											"end": 3005,
											"name": "PUSH",
											"source": 9,
											"value": "AB1EE9BF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2981,
											"end": 3005,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2981,
											"end": 3005,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2981,
											"end": 3005,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2981,
											"end": 3005,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2981,
											"end": 3005,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2981,
											"end": 3005,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2981,
											"end": 3005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2981,
											"end": 3005,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2981,
											"end": 3005,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2981,
											"end": 3005,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2981,
											"end": 3005,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3016,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 2953,
											"end": 3016,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2754,
											"end": 3024,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3110,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3085,
											"end": 3106,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3061,
											"end": 3082,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3061,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 3061,
											"end": 3106,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3061,
											"end": 3106,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3061,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 3061,
											"end": 3106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3061,
											"end": 3106,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 3061,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3061,
											"end": 3110,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3057,
											"end": 3346,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3057,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 3057,
											"end": 3346,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3130,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3154,
											"end": 3160,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3154,
											"end": 3160,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3154,
											"end": 3160,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3160,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3160,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3160,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3154,
											"end": 3160,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3160,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3160,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3160,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3154,
											"end": 3160,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3182,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3154,
											"end": 3182,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3182,
											"name": "PUSH",
											"source": 9,
											"value": "7ABC3964"
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 3154,
											"end": 3184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 3154,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3190,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3146,
											"end": 3190,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3222,
											"end": 3243,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3198,
											"end": 3219,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3198,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 3198,
											"end": 3243,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3198,
											"end": 3243,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3198,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 3198,
											"end": 3243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3198,
											"end": 3243,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 3198,
											"end": 3243,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 3146,
											"end": 3248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3248,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3122,
											"end": 3248,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3122,
											"end": 3248,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3122,
											"end": 3248,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3263,
											"end": 3265,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3258,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 3258,
											"end": 3338,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3327,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3286,
											"end": 3327,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3327,
											"name": "PUSH",
											"source": 9,
											"value": "204633A400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3286,
											"end": 3327,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3327,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3327,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3286,
											"end": 3327,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3327,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3286,
											"end": 3327,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3327,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3327,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3327,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3327,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3327,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3258,
											"end": 3338,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 3258,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3346,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3057,
											"end": 3346,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 3057,
											"end": 3346,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3370,
											"end": 3371,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3358,
											"end": 3367,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3358,
											"end": 3371,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3354,
											"end": 3606,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3354,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 3354,
											"end": 3606,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3443,
											"end": 3450,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3474,
											"end": 3484,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3490,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3466,
											"end": 3490,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3498,
											"end": 3507,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 3466,
											"end": 3512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3512,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3442,
											"end": 3512,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3442,
											"end": 3512,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3442,
											"end": 3512,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3527,
											"end": 3529,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3522,
											"end": 3598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 3522,
											"end": 3598,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3550,
											"end": 3587,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3550,
											"end": 3587,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3550,
											"end": 3587,
											"name": "PUSH",
											"source": 9,
											"value": "CD57D4DA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3550,
											"end": 3587,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3550,
											"end": 3587,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3550,
											"end": 3587,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3550,
											"end": 3587,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3550,
											"end": 3587,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3550,
											"end": 3587,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3550,
											"end": 3587,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3550,
											"end": 3587,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3550,
											"end": 3587,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3550,
											"end": 3587,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3550,
											"end": 3587,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3522,
											"end": 3598,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 3522,
											"end": 3598,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3373,
											"end": 3606,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3354,
											"end": 3606,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 3354,
											"end": 3606,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2496,
											"end": 3617,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2496,
											"end": 3617,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2462,
											"end": 3617,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 2462,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2421,
											"end": 3647,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2318,
											"end": 3647,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2318,
											"end": 3647,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2318,
											"end": 3647,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2318,
											"end": 3647,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2318,
											"end": 3647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3853,
											"end": 3950,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 3853,
											"end": 3950,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3892,
											"end": 3897,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3922,
											"end": 3928,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3922,
											"end": 3928,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3922,
											"end": 3928,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3928,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3928,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3928,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3922,
											"end": 3928,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3928,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3928,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3928,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3922,
											"end": 3928,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3940,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3922,
											"end": 3940,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3940,
											"name": "PUSH",
											"source": 9,
											"value": "9CCC903D"
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 3922,
											"end": 3942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 3922,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3909,
											"end": 3943,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3909,
											"end": 3943,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3853,
											"end": 3950,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3853,
											"end": 3950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "180"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 16,
											"value": "170"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 16,
											"value": "171"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 16,
											"value": "172"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 16,
											"value": "173"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "252"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "172"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 16,
											"value": "252"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "253"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 16,
											"value": "253"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 16,
											"value": "174"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "255"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "173"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 16,
											"value": "255"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 16,
											"value": "18"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "257"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "258"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "170"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 16,
											"value": "258"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 16,
											"value": "257"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "174"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1025,
											"end": 1133,
											"name": "tag",
											"source": 16,
											"value": "175"
										},
										{
											"begin": 1025,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1102,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "261"
										},
										{
											"begin": 1120,
											"end": 1125,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1102,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "172"
										},
										{
											"begin": 1102,
											"end": 1126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1102,
											"end": 1126,
											"name": "tag",
											"source": 16,
											"value": "261"
										},
										{
											"begin": 1102,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1097,
											"end": 1100,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1090,
											"end": 1127,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1025,
											"end": 1133,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1025,
											"end": 1133,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1025,
											"end": 1133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1139,
											"end": 1265,
											"name": "tag",
											"source": 16,
											"value": "176"
										},
										{
											"begin": 1139,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1176,
											"end": 1183,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1216,
											"end": 1258,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1209,
											"end": 1214,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1205,
											"end": 1259,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1194,
											"end": 1259,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1194,
											"end": 1259,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1139,
											"end": 1265,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1139,
											"end": 1265,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1139,
											"end": 1265,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1139,
											"end": 1265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1271,
											"end": 1367,
											"name": "tag",
											"source": 16,
											"value": "177"
										},
										{
											"begin": 1271,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1308,
											"end": 1315,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1337,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "264"
										},
										{
											"begin": 1355,
											"end": 1360,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1337,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "176"
										},
										{
											"begin": 1337,
											"end": 1361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1337,
											"end": 1361,
											"name": "tag",
											"source": 16,
											"value": "264"
										},
										{
											"begin": 1337,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1326,
											"end": 1361,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1326,
											"end": 1361,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1271,
											"end": 1367,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1271,
											"end": 1367,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1271,
											"end": 1367,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1271,
											"end": 1367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "tag",
											"source": 16,
											"value": "178"
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1450,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "266"
										},
										{
											"begin": 1468,
											"end": 1473,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1450,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "177"
										},
										{
											"begin": 1450,
											"end": 1474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1450,
											"end": 1474,
											"name": "tag",
											"source": 16,
											"value": "266"
										},
										{
											"begin": 1450,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1445,
											"end": 1448,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1438,
											"end": 1475,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1373,
											"end": 1481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1487,
											"end": 1586,
											"name": "tag",
											"source": 16,
											"value": "179"
										},
										{
											"begin": 1487,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1539,
											"end": 1545,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1578,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1567,
											"end": 1579,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1557,
											"end": 1579,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1557,
											"end": 1579,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1487,
											"end": 1586,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1487,
											"end": 1586,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1487,
											"end": 1586,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1487,
											"end": 1586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1592,
											"end": 1751,
											"name": "tag",
											"source": 16,
											"value": "180"
										},
										{
											"begin": 1592,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1666,
											"end": 1677,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1700,
											"end": 1706,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1695,
											"end": 1698,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1740,
											"end": 1744,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1735,
											"end": 1738,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1731,
											"end": 1745,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1716,
											"end": 1745,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1716,
											"end": 1745,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1592,
											"end": 1751,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1592,
											"end": 1751,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1592,
											"end": 1751,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1592,
											"end": 1751,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1592,
											"end": 1751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1757,
											"end": 2003,
											"name": "tag",
											"source": 16,
											"value": "181"
										},
										{
											"begin": 1757,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1838,
											"end": 1839,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1848,
											"end": 1961,
											"name": "tag",
											"source": 16,
											"value": "270"
										},
										{
											"begin": 1848,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1862,
											"end": 1868,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1859,
											"end": 1860,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1856,
											"end": 1869,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 1848,
											"end": 1961,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1848,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "272"
										},
										{
											"begin": 1848,
											"end": 1961,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1947,
											"end": 1948,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1942,
											"end": 1945,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1938,
											"end": 1949,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1932,
											"end": 1950,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1923,
											"end": 1926,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1919,
											"end": 1930,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1912,
											"end": 1951,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1884,
											"end": 1886,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1881,
											"end": 1882,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1877,
											"end": 1887,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1872,
											"end": 1887,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1872,
											"end": 1887,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1848,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "270"
										},
										{
											"begin": 1848,
											"end": 1961,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1848,
											"end": 1961,
											"name": "tag",
											"source": 16,
											"value": "272"
										},
										{
											"begin": 1848,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1995,
											"end": 1996,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1986,
											"end": 1992,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1981,
											"end": 1984,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1977,
											"end": 1993,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1970,
											"end": 1997,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1819,
											"end": 2003,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1757,
											"end": 2003,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1757,
											"end": 2003,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1757,
											"end": 2003,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1757,
											"end": 2003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2009,
											"end": 2111,
											"name": "tag",
											"source": 16,
											"value": "182"
										},
										{
											"begin": 2009,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2050,
											"end": 2056,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2101,
											"end": 2103,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 2097,
											"end": 2104,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 2092,
											"end": 2094,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 2085,
											"end": 2090,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2081,
											"end": 2095,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2077,
											"end": 2105,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2067,
											"end": 2105,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2067,
											"end": 2105,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2009,
											"end": 2111,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2009,
											"end": 2111,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2009,
											"end": 2111,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2009,
											"end": 2111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2117,
											"end": 2474,
											"name": "tag",
											"source": 16,
											"value": "183"
										},
										{
											"begin": 2117,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2195,
											"end": 2198,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2223,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "275"
										},
										{
											"begin": 2256,
											"end": 2261,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2223,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "179"
										},
										{
											"begin": 2223,
											"end": 2262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2223,
											"end": 2262,
											"name": "tag",
											"source": 16,
											"value": "275"
										},
										{
											"begin": 2223,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2278,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "276"
										},
										{
											"begin": 2332,
											"end": 2338,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2327,
											"end": 2330,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2278,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "180"
										},
										{
											"begin": 2278,
											"end": 2339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2278,
											"end": 2339,
											"name": "tag",
											"source": 16,
											"value": "276"
										},
										{
											"begin": 2278,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2271,
											"end": 2339,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 2271,
											"end": 2339,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2348,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "277"
										},
										{
											"begin": 2406,
											"end": 2412,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2401,
											"end": 2404,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2394,
											"end": 2398,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2387,
											"end": 2392,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 2383,
											"end": 2399,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2348,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "181"
										},
										{
											"begin": 2348,
											"end": 2413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2348,
											"end": 2413,
											"name": "tag",
											"source": 16,
											"value": "277"
										},
										{
											"begin": 2348,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2438,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "278"
										},
										{
											"begin": 2460,
											"end": 2466,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2438,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "182"
										},
										{
											"begin": 2438,
											"end": 2467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2438,
											"end": 2467,
											"name": "tag",
											"source": 16,
											"value": "278"
										},
										{
											"begin": 2438,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2433,
											"end": 2436,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2429,
											"end": 2468,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2422,
											"end": 2468,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2422,
											"end": 2468,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2199,
											"end": 2474,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2117,
											"end": 2474,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2117,
											"end": 2474,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2117,
											"end": 2474,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2117,
											"end": 2474,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2117,
											"end": 2474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2524,
											"end": 4965,
											"name": "tag",
											"source": 16,
											"value": "184"
										},
										{
											"begin": 2524,
											"end": 4965,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2645,
											"end": 2648,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2681,
											"end": 2687,
											"name": "PUSH",
											"source": 16,
											"value": "180"
										},
										{
											"begin": 2676,
											"end": 2679,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2672,
											"end": 2688,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2779,
											"end": 2783,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2772,
											"end": 2777,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2768,
											"end": 2784,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2762,
											"end": 2785,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2798,
											"end": 2861,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "280"
										},
										{
											"begin": 2855,
											"end": 2859,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2853,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 2846,
											"end": 2860,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2798,
											"end": 2861,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "175"
										},
										{
											"begin": 2798,
											"end": 2861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2798,
											"end": 2861,
											"name": "tag",
											"source": 16,
											"value": "280"
										},
										{
											"begin": 2798,
											"end": 2861,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2698,
											"end": 2871,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2965,
											"end": 2969,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2958,
											"end": 2963,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2954,
											"end": 2970,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2948,
											"end": 2971,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2984,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "281"
										},
										{
											"begin": 3041,
											"end": 3045,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3036,
											"end": 3039,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3032,
											"end": 3046,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2984,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "175"
										},
										{
											"begin": 2984,
											"end": 3047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2984,
											"end": 3047,
											"name": "tag",
											"source": 16,
											"value": "281"
										},
										{
											"begin": 2984,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2881,
											"end": 3057,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3140,
											"end": 3144,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3133,
											"end": 3138,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3123,
											"end": 3146,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3159,
											"end": 3222,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "282"
										},
										{
											"begin": 3216,
											"end": 3220,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3211,
											"end": 3214,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3207,
											"end": 3221,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3193,
											"end": 3205,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3159,
											"end": 3222,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "175"
										},
										{
											"begin": 3159,
											"end": 3222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3159,
											"end": 3222,
											"name": "tag",
											"source": 16,
											"value": "282"
										},
										{
											"begin": 3159,
											"end": 3222,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3067,
											"end": 3232,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3316,
											"end": 3320,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 3309,
											"end": 3314,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3305,
											"end": 3321,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3335,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "283"
										},
										{
											"begin": 3392,
											"end": 3396,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 3387,
											"end": 3390,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3383,
											"end": 3397,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3369,
											"end": 3381,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3335,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "175"
										},
										{
											"begin": 3335,
											"end": 3398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3335,
											"end": 3398,
											"name": "tag",
											"source": 16,
											"value": "283"
										},
										{
											"begin": 3335,
											"end": 3398,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3242,
											"end": 3408,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3492,
											"end": 3496,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 3485,
											"end": 3490,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3481,
											"end": 3497,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3475,
											"end": 3498,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3511,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "284"
										},
										{
											"begin": 3568,
											"end": 3572,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 3563,
											"end": 3566,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3559,
											"end": 3573,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3545,
											"end": 3557,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3511,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "178"
										},
										{
											"begin": 3511,
											"end": 3574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3511,
											"end": 3574,
											"name": "tag",
											"source": 16,
											"value": "284"
										},
										{
											"begin": 3511,
											"end": 3574,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3418,
											"end": 3584,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3668,
											"end": 3672,
											"name": "PUSH",
											"source": 16,
											"value": "A0"
										},
										{
											"begin": 3661,
											"end": 3666,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3657,
											"end": 3673,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3651,
											"end": 3674,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3687,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "285"
										},
										{
											"begin": 3744,
											"end": 3748,
											"name": "PUSH",
											"source": 16,
											"value": "A0"
										},
										{
											"begin": 3739,
											"end": 3742,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3735,
											"end": 3749,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3721,
											"end": 3733,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3687,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "178"
										},
										{
											"begin": 3687,
											"end": 3750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3687,
											"end": 3750,
											"name": "tag",
											"source": 16,
											"value": "285"
										},
										{
											"begin": 3687,
											"end": 3750,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3594,
											"end": 3760,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3847,
											"end": 3851,
											"name": "PUSH",
											"source": 16,
											"value": "C0"
										},
										{
											"begin": 3840,
											"end": 3845,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3836,
											"end": 3852,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3830,
											"end": 3853,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3866,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "286"
										},
										{
											"begin": 3923,
											"end": 3927,
											"name": "PUSH",
											"source": 16,
											"value": "C0"
										},
										{
											"begin": 3918,
											"end": 3921,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3914,
											"end": 3928,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3900,
											"end": 3912,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3866,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "175"
										},
										{
											"begin": 3866,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3866,
											"end": 3929,
											"name": "tag",
											"source": 16,
											"value": "286"
										},
										{
											"begin": 3866,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3770,
											"end": 3939,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4026,
											"end": 4030,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 4019,
											"end": 4024,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4015,
											"end": 4031,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4009,
											"end": 4032,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4045,
											"end": 4108,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "287"
										},
										{
											"begin": 4102,
											"end": 4106,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 4097,
											"end": 4100,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 4093,
											"end": 4107,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4079,
											"end": 4091,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4045,
											"end": 4108,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "175"
										},
										{
											"begin": 4045,
											"end": 4108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4045,
											"end": 4108,
											"name": "tag",
											"source": 16,
											"value": "287"
										},
										{
											"begin": 4045,
											"end": 4108,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3949,
											"end": 4118,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4211,
											"end": 4217,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 4204,
											"end": 4209,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4200,
											"end": 4218,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4194,
											"end": 4219,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4232,
											"end": 4297,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "288"
										},
										{
											"begin": 4289,
											"end": 4295,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 4284,
											"end": 4287,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 4280,
											"end": 4296,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4266,
											"end": 4278,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4232,
											"end": 4297,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "175"
										},
										{
											"begin": 4232,
											"end": 4297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4232,
											"end": 4297,
											"name": "tag",
											"source": 16,
											"value": "288"
										},
										{
											"begin": 4232,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4128,
											"end": 4307,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4400,
											"end": 4406,
											"name": "PUSH",
											"source": 16,
											"value": "120"
										},
										{
											"begin": 4393,
											"end": 4398,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4383,
											"end": 4408,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4421,
											"end": 4486,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "289"
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 16,
											"value": "120"
										},
										{
											"begin": 4473,
											"end": 4476,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 4469,
											"end": 4485,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4455,
											"end": 4467,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4421,
											"end": 4486,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "175"
										},
										{
											"begin": 4421,
											"end": 4486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4421,
											"end": 4486,
											"name": "tag",
											"source": 16,
											"value": "289"
										},
										{
											"begin": 4421,
											"end": 4486,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4317,
											"end": 4496,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4581,
											"end": 4587,
											"name": "PUSH",
											"source": 16,
											"value": "140"
										},
										{
											"begin": 4574,
											"end": 4579,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4570,
											"end": 4588,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4564,
											"end": 4589,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4638,
											"end": 4641,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4632,
											"end": 4636,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4628,
											"end": 4642,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4619,
											"end": 4625,
											"name": "PUSH",
											"source": 16,
											"value": "140"
										},
										{
											"begin": 4614,
											"end": 4617,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 4610,
											"end": 4626,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4603,
											"end": 4643,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4664,
											"end": 4737,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "290"
										},
										{
											"begin": 4732,
											"end": 4736,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4718,
											"end": 4730,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4664,
											"end": 4737,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "183"
										},
										{
											"begin": 4664,
											"end": 4737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4664,
											"end": 4737,
											"name": "tag",
											"source": 16,
											"value": "290"
										},
										{
											"begin": 4664,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4656,
											"end": 4737,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4656,
											"end": 4737,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4506,
											"end": 4748,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4842,
											"end": 4848,
											"name": "PUSH",
											"source": 16,
											"value": "160"
										},
										{
											"begin": 4835,
											"end": 4840,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4831,
											"end": 4849,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4825,
											"end": 4850,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4863,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "291"
										},
										{
											"begin": 4920,
											"end": 4926,
											"name": "PUSH",
											"source": 16,
											"value": "160"
										},
										{
											"begin": 4915,
											"end": 4918,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 4911,
											"end": 4927,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4863,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "175"
										},
										{
											"begin": 4863,
											"end": 4928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4863,
											"end": 4928,
											"name": "tag",
											"source": 16,
											"value": "291"
										},
										{
											"begin": 4863,
											"end": 4928,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4758,
											"end": 4938,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4955,
											"end": 4959,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4948,
											"end": 4959,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4948,
											"end": 4959,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2650,
											"end": 4965,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2524,
											"end": 4965,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2524,
											"end": 4965,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2524,
											"end": 4965,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2524,
											"end": 4965,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2524,
											"end": 4965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4971,
											"end": 5348,
											"name": "tag",
											"source": 16,
											"value": "21"
										},
										{
											"begin": 4971,
											"end": 5348,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5116,
											"end": 5120,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5154,
											"end": 5156,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5143,
											"end": 5152,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5139,
											"end": 5157,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5131,
											"end": 5157,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5131,
											"end": 5157,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5203,
											"end": 5212,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5197,
											"end": 5201,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5193,
											"end": 5213,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 5189,
											"end": 5190,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5178,
											"end": 5187,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5174,
											"end": 5191,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5167,
											"end": 5214,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5231,
											"end": 5341,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "293"
										},
										{
											"begin": 5336,
											"end": 5340,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5327,
											"end": 5333,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5231,
											"end": 5341,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "184"
										},
										{
											"begin": 5231,
											"end": 5341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5231,
											"end": 5341,
											"name": "tag",
											"source": 16,
											"value": "293"
										},
										{
											"begin": 5231,
											"end": 5341,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5223,
											"end": 5341,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5223,
											"end": 5341,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4971,
											"end": 5348,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4971,
											"end": 5348,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4971,
											"end": 5348,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4971,
											"end": 5348,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4971,
											"end": 5348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5354,
											"end": 5471,
											"name": "tag",
											"source": 16,
											"value": "185"
										},
										{
											"begin": 5354,
											"end": 5471,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5463,
											"end": 5464,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5460,
											"end": 5461,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5453,
											"end": 5465,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5506,
											"end": 5744,
											"name": "tag",
											"source": 16,
											"value": "186"
										},
										{
											"begin": 5506,
											"end": 5744,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5585,
											"end": 5590,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5626,
											"end": 5629,
											"name": "PUSH",
											"source": 16,
											"value": "120"
										},
										{
											"begin": 5617,
											"end": 5623,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5612,
											"end": 5615,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5608,
											"end": 5624,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 5604,
											"end": 5630,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 5601,
											"end": 5714,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5601,
											"end": 5714,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "296"
										},
										{
											"begin": 5601,
											"end": 5714,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5633,
											"end": 5712,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "297"
										},
										{
											"begin": 5633,
											"end": 5712,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "185"
										},
										{
											"begin": 5633,
											"end": 5712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5633,
											"end": 5712,
											"name": "tag",
											"source": 16,
											"value": "297"
										},
										{
											"begin": 5633,
											"end": 5712,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5601,
											"end": 5714,
											"name": "tag",
											"source": 16,
											"value": "296"
										},
										{
											"begin": 5601,
											"end": 5714,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5732,
											"end": 5738,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5723,
											"end": 5738,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5723,
											"end": 5738,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5506,
											"end": 5744,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5506,
											"end": 5744,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5506,
											"end": 5744,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5506,
											"end": 5744,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5506,
											"end": 5744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5750,
											"end": 6305,
											"name": "tag",
											"source": 16,
											"value": "25"
										},
										{
											"begin": 5750,
											"end": 6305,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5842,
											"end": 5848,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5891,
											"end": 5893,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5879,
											"end": 5888,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5870,
											"end": 5877,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5866,
											"end": 5889,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 5862,
											"end": 5894,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 5859,
											"end": 5978,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5859,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "299"
										},
										{
											"begin": 5859,
											"end": 5978,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5897,
											"end": 5976,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "300"
										},
										{
											"begin": 5897,
											"end": 5976,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "170"
										},
										{
											"begin": 5897,
											"end": 5976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5897,
											"end": 5976,
											"name": "tag",
											"source": 16,
											"value": "300"
										},
										{
											"begin": 5897,
											"end": 5976,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5859,
											"end": 5978,
											"name": "tag",
											"source": 16,
											"value": "299"
										},
										{
											"begin": 5859,
											"end": 5978,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6045,
											"end": 6046,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6043,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6030,
											"end": 6047,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6017,
											"end": 6048,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 6075,
											"end": 6093,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6067,
											"end": 6073,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6064,
											"end": 6094,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 6061,
											"end": 6178,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6061,
											"end": 6178,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "301"
										},
										{
											"begin": 6061,
											"end": 6178,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6097,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "302"
										},
										{
											"begin": 6097,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "171"
										},
										{
											"begin": 6097,
											"end": 6176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6097,
											"end": 6176,
											"name": "tag",
											"source": 16,
											"value": "302"
										},
										{
											"begin": 6097,
											"end": 6176,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6061,
											"end": 6178,
											"name": "tag",
											"source": 16,
											"value": "301"
										},
										{
											"begin": 6061,
											"end": 6178,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6202,
											"end": 6288,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "303"
										},
										{
											"begin": 6280,
											"end": 6287,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6271,
											"end": 6277,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6260,
											"end": 6269,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 6256,
											"end": 6278,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6202,
											"end": 6288,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "186"
										},
										{
											"begin": 6202,
											"end": 6288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6202,
											"end": 6288,
											"name": "tag",
											"source": 16,
											"value": "303"
										},
										{
											"begin": 6202,
											"end": 6288,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6192,
											"end": 6288,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6192,
											"end": 6288,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5988,
											"end": 6298,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5750,
											"end": 6305,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5750,
											"end": 6305,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5750,
											"end": 6305,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5750,
											"end": 6305,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5750,
											"end": 6305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6311,
											"end": 6429,
											"name": "tag",
											"source": 16,
											"value": "187"
										},
										{
											"begin": 6311,
											"end": 6429,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6398,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "305"
										},
										{
											"begin": 6416,
											"end": 6421,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6398,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "172"
										},
										{
											"begin": 6398,
											"end": 6422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6398,
											"end": 6422,
											"name": "tag",
											"source": 16,
											"value": "305"
										},
										{
											"begin": 6398,
											"end": 6422,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6393,
											"end": 6396,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6386,
											"end": 6423,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6311,
											"end": 6429,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6311,
											"end": 6429,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6311,
											"end": 6429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6435,
											"end": 6657,
											"name": "tag",
											"source": 16,
											"value": "28"
										},
										{
											"begin": 6435,
											"end": 6657,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6528,
											"end": 6532,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6566,
											"end": 6568,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6555,
											"end": 6564,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6551,
											"end": 6569,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6543,
											"end": 6569,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6543,
											"end": 6569,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6579,
											"end": 6650,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "307"
										},
										{
											"begin": 6647,
											"end": 6648,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6636,
											"end": 6645,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6632,
											"end": 6649,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6623,
											"end": 6629,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6579,
											"end": 6650,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "187"
										},
										{
											"begin": 6579,
											"end": 6650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6579,
											"end": 6650,
											"name": "tag",
											"source": 16,
											"value": "307"
										},
										{
											"begin": 6579,
											"end": 6650,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6435,
											"end": 6657,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6435,
											"end": 6657,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6435,
											"end": 6657,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6435,
											"end": 6657,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6435,
											"end": 6657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6663,
											"end": 6785,
											"name": "tag",
											"source": 16,
											"value": "188"
										},
										{
											"begin": 6663,
											"end": 6785,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6736,
											"end": 6760,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "309"
										},
										{
											"begin": 6754,
											"end": 6759,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6736,
											"end": 6760,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "177"
										},
										{
											"begin": 6736,
											"end": 6760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6736,
											"end": 6760,
											"name": "tag",
											"source": 16,
											"value": "309"
										},
										{
											"begin": 6736,
											"end": 6760,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6729,
											"end": 6734,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6726,
											"end": 6761,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 6716,
											"end": 6779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "310"
										},
										{
											"begin": 6716,
											"end": 6779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6775,
											"end": 6776,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6772,
											"end": 6773,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6765,
											"end": 6777,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 6716,
											"end": 6779,
											"name": "tag",
											"source": 16,
											"value": "310"
										},
										{
											"begin": 6716,
											"end": 6779,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6663,
											"end": 6785,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6663,
											"end": 6785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6791,
											"end": 6930,
											"name": "tag",
											"source": 16,
											"value": "189"
										},
										{
											"begin": 6791,
											"end": 6930,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6837,
											"end": 6842,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6875,
											"end": 6881,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6862,
											"end": 6882,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 6853,
											"end": 6882,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6853,
											"end": 6882,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6891,
											"end": 6924,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "312"
										},
										{
											"begin": 6918,
											"end": 6923,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6891,
											"end": 6924,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "188"
										},
										{
											"begin": 6891,
											"end": 6924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6891,
											"end": 6924,
											"name": "tag",
											"source": 16,
											"value": "312"
										},
										{
											"begin": 6891,
											"end": 6924,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6791,
											"end": 6930,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6791,
											"end": 6930,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6791,
											"end": 6930,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6791,
											"end": 6930,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6791,
											"end": 6930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6936,
											"end": 7265,
											"name": "tag",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6936,
											"end": 7265,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6995,
											"end": 7001,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7044,
											"end": 7046,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7032,
											"end": 7041,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7023,
											"end": 7030,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 7019,
											"end": 7042,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 7015,
											"end": 7047,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 7012,
											"end": 7131,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7012,
											"end": 7131,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "314"
										},
										{
											"begin": 7012,
											"end": 7131,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7050,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "315"
										},
										{
											"begin": 7050,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "170"
										},
										{
											"begin": 7050,
											"end": 7129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7050,
											"end": 7129,
											"name": "tag",
											"source": 16,
											"value": "315"
										},
										{
											"begin": 7050,
											"end": 7129,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7012,
											"end": 7131,
											"name": "tag",
											"source": 16,
											"value": "314"
										},
										{
											"begin": 7012,
											"end": 7131,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7170,
											"end": 7171,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7195,
											"end": 7248,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "316"
										},
										{
											"begin": 7240,
											"end": 7247,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 7231,
											"end": 7237,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7220,
											"end": 7229,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 7216,
											"end": 7238,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7195,
											"end": 7248,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "189"
										},
										{
											"begin": 7195,
											"end": 7248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7195,
											"end": 7248,
											"name": "tag",
											"source": 16,
											"value": "316"
										},
										{
											"begin": 7195,
											"end": 7248,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7185,
											"end": 7248,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7185,
											"end": 7248,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7141,
											"end": 7258,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6936,
											"end": 7265,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6936,
											"end": 7265,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6936,
											"end": 7265,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6936,
											"end": 7265,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6936,
											"end": 7265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7271,
											"end": 7389,
											"name": "tag",
											"source": 16,
											"value": "190"
										},
										{
											"begin": 7271,
											"end": 7389,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7358,
											"end": 7382,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "318"
										},
										{
											"begin": 7376,
											"end": 7381,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7358,
											"end": 7382,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "176"
										},
										{
											"begin": 7358,
											"end": 7382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7358,
											"end": 7382,
											"name": "tag",
											"source": 16,
											"value": "318"
										},
										{
											"begin": 7358,
											"end": 7382,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7353,
											"end": 7356,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7346,
											"end": 7383,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7271,
											"end": 7389,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7271,
											"end": 7389,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7271,
											"end": 7389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7395,
											"end": 7617,
											"name": "tag",
											"source": 16,
											"value": "43"
										},
										{
											"begin": 7395,
											"end": 7617,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7488,
											"end": 7492,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7526,
											"end": 7528,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7515,
											"end": 7524,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7511,
											"end": 7529,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7503,
											"end": 7529,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7503,
											"end": 7529,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7539,
											"end": 7610,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "320"
										},
										{
											"begin": 7607,
											"end": 7608,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7596,
											"end": 7605,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 7592,
											"end": 7609,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7583,
											"end": 7589,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 7539,
											"end": 7610,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "190"
										},
										{
											"begin": 7539,
											"end": 7610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7539,
											"end": 7610,
											"name": "tag",
											"source": 16,
											"value": "320"
										},
										{
											"begin": 7539,
											"end": 7610,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7395,
											"end": 7617,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 7395,
											"end": 7617,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7395,
											"end": 7617,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7395,
											"end": 7617,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7395,
											"end": 7617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7623,
											"end": 7683,
											"name": "tag",
											"source": 16,
											"value": "191"
										},
										{
											"begin": 7623,
											"end": 7683,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7651,
											"end": 7654,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7672,
											"end": 7677,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7665,
											"end": 7677,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7665,
											"end": 7677,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7623,
											"end": 7683,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7623,
											"end": 7683,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7623,
											"end": 7683,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7623,
											"end": 7683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7689,
											"end": 7831,
											"name": "tag",
											"source": 16,
											"value": "192"
										},
										{
											"begin": 7689,
											"end": 7831,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7739,
											"end": 7748,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7772,
											"end": 7825,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "323"
										},
										{
											"begin": 7790,
											"end": 7824,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "324"
										},
										{
											"begin": 7799,
											"end": 7823,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "325"
										},
										{
											"begin": 7817,
											"end": 7822,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 7799,
											"end": 7823,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "176"
										},
										{
											"begin": 7799,
											"end": 7823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7799,
											"end": 7823,
											"name": "tag",
											"source": 16,
											"value": "325"
										},
										{
											"begin": 7799,
											"end": 7823,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7790,
											"end": 7824,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "191"
										},
										{
											"begin": 7790,
											"end": 7824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7790,
											"end": 7824,
											"name": "tag",
											"source": 16,
											"value": "324"
										},
										{
											"begin": 7790,
											"end": 7824,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7772,
											"end": 7825,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "176"
										},
										{
											"begin": 7772,
											"end": 7825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7772,
											"end": 7825,
											"name": "tag",
											"source": 16,
											"value": "323"
										},
										{
											"begin": 7772,
											"end": 7825,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7759,
											"end": 7825,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7759,
											"end": 7825,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7689,
											"end": 7831,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7689,
											"end": 7831,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7689,
											"end": 7831,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7689,
											"end": 7831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7837,
											"end": 7963,
											"name": "tag",
											"source": 16,
											"value": "193"
										},
										{
											"begin": 7837,
											"end": 7963,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7887,
											"end": 7896,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7920,
											"end": 7957,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "327"
										},
										{
											"begin": 7951,
											"end": 7956,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7920,
											"end": 7957,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "192"
										},
										{
											"begin": 7920,
											"end": 7957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7920,
											"end": 7957,
											"name": "tag",
											"source": 16,
											"value": "327"
										},
										{
											"begin": 7920,
											"end": 7957,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7907,
											"end": 7957,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7907,
											"end": 7957,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7837,
											"end": 7963,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7837,
											"end": 7963,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7837,
											"end": 7963,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7837,
											"end": 7963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7969,
											"end": 8113,
											"name": "tag",
											"source": 16,
											"value": "194"
										},
										{
											"begin": 7969,
											"end": 8113,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8037,
											"end": 8046,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8070,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "329"
										},
										{
											"begin": 8101,
											"end": 8106,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8070,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "193"
										},
										{
											"begin": 8070,
											"end": 8107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8070,
											"end": 8107,
											"name": "tag",
											"source": 16,
											"value": "329"
										},
										{
											"begin": 8070,
											"end": 8107,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8057,
											"end": 8107,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8057,
											"end": 8107,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7969,
											"end": 8113,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7969,
											"end": 8113,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7969,
											"end": 8113,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7969,
											"end": 8113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8119,
											"end": 8286,
											"name": "tag",
											"source": 16,
											"value": "195"
										},
										{
											"begin": 8119,
											"end": 8286,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8224,
											"end": 8279,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "331"
										},
										{
											"begin": 8273,
											"end": 8278,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8224,
											"end": 8279,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "194"
										},
										{
											"begin": 8224,
											"end": 8279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8224,
											"end": 8279,
											"name": "tag",
											"source": 16,
											"value": "331"
										},
										{
											"begin": 8224,
											"end": 8279,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8219,
											"end": 8222,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8212,
											"end": 8280,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8119,
											"end": 8286,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8119,
											"end": 8286,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8119,
											"end": 8286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8292,
											"end": 8550,
											"name": "tag",
											"source": 16,
											"value": "48"
										},
										{
											"begin": 8292,
											"end": 8550,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8403,
											"end": 8407,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8441,
											"end": 8443,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8430,
											"end": 8439,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8426,
											"end": 8444,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8418,
											"end": 8444,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8418,
											"end": 8444,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8454,
											"end": 8543,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "333"
										},
										{
											"begin": 8540,
											"end": 8541,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8529,
											"end": 8538,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8525,
											"end": 8542,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8516,
											"end": 8522,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8454,
											"end": 8543,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "195"
										},
										{
											"begin": 8454,
											"end": 8543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8454,
											"end": 8543,
											"name": "tag",
											"source": 16,
											"value": "333"
										},
										{
											"begin": 8454,
											"end": 8543,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8292,
											"end": 8550,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 8292,
											"end": 8550,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8292,
											"end": 8550,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8292,
											"end": 8550,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8292,
											"end": 8550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8556,
											"end": 8632,
											"name": "tag",
											"source": 16,
											"value": "196"
										},
										{
											"begin": 8556,
											"end": 8632,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8592,
											"end": 8599,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8621,
											"end": 8626,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8610,
											"end": 8626,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8610,
											"end": 8626,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8556,
											"end": 8632,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8556,
											"end": 8632,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8556,
											"end": 8632,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8556,
											"end": 8632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8638,
											"end": 8753,
											"name": "tag",
											"source": 16,
											"value": "197"
										},
										{
											"begin": 8638,
											"end": 8753,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8723,
											"end": 8746,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "336"
										},
										{
											"begin": 8740,
											"end": 8745,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8723,
											"end": 8746,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "196"
										},
										{
											"begin": 8723,
											"end": 8746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8723,
											"end": 8746,
											"name": "tag",
											"source": 16,
											"value": "336"
										},
										{
											"begin": 8723,
											"end": 8746,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8718,
											"end": 8721,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8747,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8638,
											"end": 8753,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8638,
											"end": 8753,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8638,
											"end": 8753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8759,
											"end": 8977,
											"name": "tag",
											"source": 16,
											"value": "67"
										},
										{
											"begin": 8759,
											"end": 8977,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8850,
											"end": 8854,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8888,
											"end": 8890,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8877,
											"end": 8886,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8873,
											"end": 8891,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8865,
											"end": 8891,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8865,
											"end": 8891,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8901,
											"end": 8970,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "338"
										},
										{
											"begin": 8967,
											"end": 8968,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8956,
											"end": 8965,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8952,
											"end": 8969,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8943,
											"end": 8949,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8901,
											"end": 8970,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "197"
										},
										{
											"begin": 8901,
											"end": 8970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8901,
											"end": 8970,
											"name": "tag",
											"source": 16,
											"value": "338"
										},
										{
											"begin": 8901,
											"end": 8970,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8759,
											"end": 8977,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 8759,
											"end": 8977,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8759,
											"end": 8977,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8759,
											"end": 8977,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8759,
											"end": 8977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "tag",
											"source": 16,
											"value": "198"
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9047,
											"end": 9056,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9080,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "340"
										},
										{
											"begin": 9111,
											"end": 9116,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9080,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "193"
										},
										{
											"begin": 9080,
											"end": 9117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9080,
											"end": 9117,
											"name": "tag",
											"source": 16,
											"value": "340"
										},
										{
											"begin": 9080,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9067,
											"end": 9117,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9067,
											"end": 9117,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8983,
											"end": 9123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9129,
											"end": 9288,
											"name": "tag",
											"source": 16,
											"value": "199"
										},
										{
											"begin": 9129,
											"end": 9288,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9230,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "342"
										},
										{
											"begin": 9275,
											"end": 9280,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9230,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "198"
										},
										{
											"begin": 9230,
											"end": 9281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9230,
											"end": 9281,
											"name": "tag",
											"source": 16,
											"value": "342"
										},
										{
											"begin": 9230,
											"end": 9281,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9225,
											"end": 9228,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9218,
											"end": 9282,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9129,
											"end": 9288,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9129,
											"end": 9288,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9129,
											"end": 9288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9294,
											"end": 9544,
											"name": "tag",
											"source": 16,
											"value": "76"
										},
										{
											"begin": 9294,
											"end": 9544,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9401,
											"end": 9405,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9439,
											"end": 9441,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 9428,
											"end": 9437,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9424,
											"end": 9442,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9416,
											"end": 9442,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9416,
											"end": 9442,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9452,
											"end": 9537,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "344"
										},
										{
											"begin": 9534,
											"end": 9535,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9523,
											"end": 9532,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 9519,
											"end": 9536,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9510,
											"end": 9516,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 9452,
											"end": 9537,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "199"
										},
										{
											"begin": 9452,
											"end": 9537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9452,
											"end": 9537,
											"name": "tag",
											"source": 16,
											"value": "344"
										},
										{
											"begin": 9452,
											"end": 9537,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9294,
											"end": 9544,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 9294,
											"end": 9544,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9294,
											"end": 9544,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9294,
											"end": 9544,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9294,
											"end": 9544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9550,
											"end": 9730,
											"name": "tag",
											"source": 16,
											"value": "200"
										},
										{
											"begin": 9550,
											"end": 9730,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9598,
											"end": 9675,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9595,
											"end": 9596,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9588,
											"end": 9676,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9695,
											"end": 9699,
											"name": "PUSH",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 9692,
											"end": 9693,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 9685,
											"end": 9700,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9719,
											"end": 9723,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 9716,
											"end": 9717,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9709,
											"end": 9724,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 9736,
											"end": 10056,
											"name": "tag",
											"source": 16,
											"value": "81"
										},
										{
											"begin": 9736,
											"end": 10056,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9780,
											"end": 9786,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9817,
											"end": 9818,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 9811,
											"end": 9815,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9807,
											"end": 9819,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 9797,
											"end": 9819,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9797,
											"end": 9819,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9864,
											"end": 9865,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 9858,
											"end": 9862,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9854,
											"end": 9866,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 9885,
											"end": 9903,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 9875,
											"end": 9956,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "347"
										},
										{
											"begin": 9875,
											"end": 9956,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 9941,
											"end": 9945,
											"name": "PUSH",
											"source": 16,
											"value": "7F"
										},
										{
											"begin": 9933,
											"end": 9939,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9929,
											"end": 9946,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 9919,
											"end": 9946,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9919,
											"end": 9946,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9875,
											"end": 9956,
											"name": "tag",
											"source": 16,
											"value": "347"
										},
										{
											"begin": 9875,
											"end": 9956,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10003,
											"end": 10005,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 9995,
											"end": 10001,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9992,
											"end": 10006,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 9972,
											"end": 9990,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9969,
											"end": 10007,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 9966,
											"end": 10050,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "348"
										},
										{
											"begin": 9966,
											"end": 10050,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10022,
											"end": 10040,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "349"
										},
										{
											"begin": 10022,
											"end": 10040,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "200"
										},
										{
											"begin": 10022,
											"end": 10040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10022,
											"end": 10040,
											"name": "tag",
											"source": 16,
											"value": "349"
										},
										{
											"begin": 10022,
											"end": 10040,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9966,
											"end": 10050,
											"name": "tag",
											"source": 16,
											"value": "348"
										},
										{
											"begin": 9966,
											"end": 10050,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9787,
											"end": 10056,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9736,
											"end": 10056,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9736,
											"end": 10056,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9736,
											"end": 10056,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9736,
											"end": 10056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10062,
											"end": 10180,
											"name": "tag",
											"source": 16,
											"value": "201"
										},
										{
											"begin": 10062,
											"end": 10180,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10149,
											"end": 10173,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "351"
										},
										{
											"begin": 10167,
											"end": 10172,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10149,
											"end": 10173,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "177"
										},
										{
											"begin": 10149,
											"end": 10173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10149,
											"end": 10173,
											"name": "tag",
											"source": 16,
											"value": "351"
										},
										{
											"begin": 10149,
											"end": 10173,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10144,
											"end": 10147,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10137,
											"end": 10174,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10062,
											"end": 10180,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10062,
											"end": 10180,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10062,
											"end": 10180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10186,
											"end": 10408,
											"name": "tag",
											"source": 16,
											"value": "89"
										},
										{
											"begin": 10186,
											"end": 10408,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10279,
											"end": 10283,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10317,
											"end": 10319,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 10306,
											"end": 10315,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10302,
											"end": 10320,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10294,
											"end": 10320,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10294,
											"end": 10320,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10330,
											"end": 10401,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "353"
										},
										{
											"begin": 10398,
											"end": 10399,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10387,
											"end": 10396,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10383,
											"end": 10400,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10374,
											"end": 10380,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 10330,
											"end": 10401,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "201"
										},
										{
											"begin": 10330,
											"end": 10401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10330,
											"end": 10401,
											"name": "tag",
											"source": 16,
											"value": "353"
										},
										{
											"begin": 10330,
											"end": 10401,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10186,
											"end": 10408,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 10186,
											"end": 10408,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10186,
											"end": 10408,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10186,
											"end": 10408,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10186,
											"end": 10408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10414,
											"end": 10557,
											"name": "tag",
											"source": 16,
											"value": "202"
										},
										{
											"begin": 10414,
											"end": 10557,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10471,
											"end": 10476,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10502,
											"end": 10508,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10496,
											"end": 10509,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 10487,
											"end": 10509,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10487,
											"end": 10509,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10518,
											"end": 10551,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "355"
										},
										{
											"begin": 10545,
											"end": 10550,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10518,
											"end": 10551,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "173"
										},
										{
											"begin": 10518,
											"end": 10551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10518,
											"end": 10551,
											"name": "tag",
											"source": 16,
											"value": "355"
										},
										{
											"begin": 10518,
											"end": 10551,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10414,
											"end": 10557,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 10414,
											"end": 10557,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10414,
											"end": 10557,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10414,
											"end": 10557,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10414,
											"end": 10557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10563,
											"end": 10914,
											"name": "tag",
											"source": 16,
											"value": "93"
										},
										{
											"begin": 10563,
											"end": 10914,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10633,
											"end": 10639,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10682,
											"end": 10684,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 10670,
											"end": 10679,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10661,
											"end": 10668,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 10657,
											"end": 10680,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 10653,
											"end": 10685,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 10650,
											"end": 10769,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 10650,
											"end": 10769,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "357"
										},
										{
											"begin": 10650,
											"end": 10769,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10688,
											"end": 10767,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "358"
										},
										{
											"begin": 10688,
											"end": 10767,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "170"
										},
										{
											"begin": 10688,
											"end": 10767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10688,
											"end": 10767,
											"name": "tag",
											"source": 16,
											"value": "358"
										},
										{
											"begin": 10688,
											"end": 10767,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10650,
											"end": 10769,
											"name": "tag",
											"source": 16,
											"value": "357"
										},
										{
											"begin": 10650,
											"end": 10769,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10808,
											"end": 10809,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10833,
											"end": 10897,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "359"
										},
										{
											"begin": 10889,
											"end": 10896,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 10880,
											"end": 10886,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10869,
											"end": 10878,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 10865,
											"end": 10887,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10833,
											"end": 10897,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "202"
										},
										{
											"begin": 10833,
											"end": 10897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10833,
											"end": 10897,
											"name": "tag",
											"source": 16,
											"value": "359"
										},
										{
											"begin": 10833,
											"end": 10897,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10823,
											"end": 10897,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10823,
											"end": 10897,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10779,
											"end": 10907,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10563,
											"end": 10914,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 10563,
											"end": 10914,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10563,
											"end": 10914,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10563,
											"end": 10914,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10563,
											"end": 10914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10920,
											"end": 11037,
											"name": "tag",
											"source": 16,
											"value": "203"
										},
										{
											"begin": 10920,
											"end": 11037,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11029,
											"end": 11030,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11026,
											"end": 11027,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 11019,
											"end": 11031,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 11043,
											"end": 11160,
											"name": "tag",
											"source": 16,
											"value": "204"
										},
										{
											"begin": 11043,
											"end": 11160,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11152,
											"end": 11153,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11149,
											"end": 11150,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 11142,
											"end": 11154,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 11166,
											"end": 11283,
											"name": "tag",
											"source": 16,
											"value": "205"
										},
										{
											"begin": 11166,
											"end": 11283,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11275,
											"end": 11276,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11272,
											"end": 11273,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 11265,
											"end": 11277,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 11289,
											"end": 12014,
											"name": "tag",
											"source": 16,
											"value": "98"
										},
										{
											"begin": 11289,
											"end": 12014,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11367,
											"end": 11371,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11373,
											"end": 11379,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 11429,
											"end": 11440,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 11416,
											"end": 11441,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 11529,
											"end": 11530,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 11523,
											"end": 11527,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 11519,
											"end": 11531,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 11508,
											"end": 11516,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 11492,
											"end": 11506,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 11488,
											"end": 11517,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 11484,
											"end": 11532,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 11464,
											"end": 11482,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11460,
											"end": 11533,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 11450,
											"end": 11618,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "364"
										},
										{
											"begin": 11450,
											"end": 11618,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 11537,
											"end": 11616,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 11537,
											"end": 11616,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "203"
										},
										{
											"begin": 11537,
											"end": 11616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11537,
											"end": 11616,
											"name": "tag",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 11537,
											"end": 11616,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11450,
											"end": 11618,
											"name": "tag",
											"source": 16,
											"value": "364"
										},
										{
											"begin": 11450,
											"end": 11618,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11649,
											"end": 11667,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 11639,
											"end": 11647,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 11635,
											"end": 11668,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11627,
											"end": 11668,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 11627,
											"end": 11668,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11701,
											"end": 11705,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11688,
											"end": 11706,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 11678,
											"end": 11706,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11678,
											"end": 11706,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11729,
											"end": 11747,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11721,
											"end": 11727,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11718,
											"end": 11748,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 11715,
											"end": 11832,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 11715,
											"end": 11832,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "366"
										},
										{
											"begin": 11715,
											"end": 11832,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 11751,
											"end": 11830,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 11751,
											"end": 11830,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "204"
										},
										{
											"begin": 11751,
											"end": 11830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11751,
											"end": 11830,
											"name": "tag",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 11751,
											"end": 11830,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11715,
											"end": 11832,
											"name": "tag",
											"source": 16,
											"value": "366"
										},
										{
											"begin": 11715,
											"end": 11832,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11859,
											"end": 11861,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 11853,
											"end": 11857,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 11849,
											"end": 11862,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11841,
											"end": 11862,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 11841,
											"end": 11862,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11916,
											"end": 11920,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 11908,
											"end": 11914,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11904,
											"end": 11921,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 11888,
											"end": 11902,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 11884,
											"end": 11922,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 11878,
											"end": 11882,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 11874,
											"end": 11923,
											"name": "SGT",
											"source": 16
										},
										{
											"begin": 11871,
											"end": 12007,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 11871,
											"end": 12007,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "368"
										},
										{
											"begin": 11871,
											"end": 12007,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 11926,
											"end": 12005,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "369"
										},
										{
											"begin": 11926,
											"end": 12005,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "205"
										},
										{
											"begin": 11926,
											"end": 12005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11926,
											"end": 12005,
											"name": "tag",
											"source": 16,
											"value": "369"
										},
										{
											"begin": 11926,
											"end": 12005,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11871,
											"end": 12007,
											"name": "tag",
											"source": 16,
											"value": "368"
										},
										{
											"begin": 11871,
											"end": 12007,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11380,
											"end": 12014,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11289,
											"end": 12014,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 11289,
											"end": 12014,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11289,
											"end": 12014,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 11289,
											"end": 12014,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11289,
											"end": 12014,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11289,
											"end": 12014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12020,
											"end": 12200,
											"name": "tag",
											"source": 16,
											"value": "206"
										},
										{
											"begin": 12020,
											"end": 12200,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12068,
											"end": 12145,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12065,
											"end": 12066,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12058,
											"end": 12146,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12165,
											"end": 12169,
											"name": "PUSH",
											"source": 16,
											"value": "41"
										},
										{
											"begin": 12162,
											"end": 12163,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 12155,
											"end": 12170,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12189,
											"end": 12193,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 12186,
											"end": 12187,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12179,
											"end": 12194,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 12206,
											"end": 12347,
											"name": "tag",
											"source": 16,
											"value": "207"
										},
										{
											"begin": 12206,
											"end": 12347,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12255,
											"end": 12259,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12278,
											"end": 12281,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12270,
											"end": 12281,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12270,
											"end": 12281,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12301,
											"end": 12304,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12298,
											"end": 12299,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12291,
											"end": 12305,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12335,
											"end": 12339,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 12332,
											"end": 12333,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12322,
											"end": 12340,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 12314,
											"end": 12340,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12314,
											"end": 12340,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12206,
											"end": 12347,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12206,
											"end": 12347,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12206,
											"end": 12347,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12206,
											"end": 12347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12353,
											"end": 12446,
											"name": "tag",
											"source": 16,
											"value": "208"
										},
										{
											"begin": 12353,
											"end": 12446,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12390,
											"end": 12396,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12437,
											"end": 12439,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 12432,
											"end": 12434,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 12425,
											"end": 12430,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12421,
											"end": 12435,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12417,
											"end": 12440,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 12407,
											"end": 12440,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12407,
											"end": 12440,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12353,
											"end": 12446,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12353,
											"end": 12446,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12353,
											"end": 12446,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12353,
											"end": 12446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12452,
											"end": 12559,
											"name": "tag",
											"source": 16,
											"value": "209"
										},
										{
											"begin": 12452,
											"end": 12559,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12496,
											"end": 12504,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12546,
											"end": 12551,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12540,
											"end": 12544,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12536,
											"end": 12552,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 12515,
											"end": 12552,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12515,
											"end": 12552,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12452,
											"end": 12559,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12452,
											"end": 12559,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12452,
											"end": 12559,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12452,
											"end": 12559,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12452,
											"end": 12559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12565,
											"end": 12958,
											"name": "tag",
											"source": 16,
											"value": "210"
										},
										{
											"begin": 12565,
											"end": 12958,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12634,
											"end": 12640,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12684,
											"end": 12685,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 12672,
											"end": 12682,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12668,
											"end": 12686,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 12707,
											"end": 12804,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "375"
										},
										{
											"begin": 12737,
											"end": 12803,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12726,
											"end": 12735,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12707,
											"end": 12804,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "209"
										},
										{
											"begin": 12707,
											"end": 12804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12707,
											"end": 12804,
											"name": "tag",
											"source": 16,
											"value": "375"
										},
										{
											"begin": 12707,
											"end": 12804,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12825,
											"end": 12864,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "376"
										},
										{
											"begin": 12855,
											"end": 12863,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 12844,
											"end": 12853,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12825,
											"end": 12864,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "209"
										},
										{
											"begin": 12825,
											"end": 12864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12825,
											"end": 12864,
											"name": "tag",
											"source": 16,
											"value": "376"
										},
										{
											"begin": 12825,
											"end": 12864,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12813,
											"end": 12864,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 12813,
											"end": 12864,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12897,
											"end": 12901,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 12893,
											"end": 12902,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 12886,
											"end": 12891,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 12882,
											"end": 12903,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 12873,
											"end": 12903,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 12873,
											"end": 12903,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12946,
											"end": 12950,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 12936,
											"end": 12944,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 12932,
											"end": 12951,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 12925,
											"end": 12930,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 12922,
											"end": 12952,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 12912,
											"end": 12952,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12912,
											"end": 12952,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12641,
											"end": 12958,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12641,
											"end": 12958,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12565,
											"end": 12958,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 12565,
											"end": 12958,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12565,
											"end": 12958,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12565,
											"end": 12958,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12565,
											"end": 12958,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12565,
											"end": 12958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12964,
											"end": 13106,
											"name": "tag",
											"source": 16,
											"value": "211"
										},
										{
											"begin": 12964,
											"end": 13106,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13014,
											"end": 13023,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13047,
											"end": 13100,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "378"
										},
										{
											"begin": 13065,
											"end": 13099,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "379"
										},
										{
											"begin": 13074,
											"end": 13098,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 13092,
											"end": 13097,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 13074,
											"end": 13098,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "172"
										},
										{
											"begin": 13074,
											"end": 13098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13074,
											"end": 13098,
											"name": "tag",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 13074,
											"end": 13098,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13065,
											"end": 13099,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "191"
										},
										{
											"begin": 13065,
											"end": 13099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13065,
											"end": 13099,
											"name": "tag",
											"source": 16,
											"value": "379"
										},
										{
											"begin": 13065,
											"end": 13099,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13047,
											"end": 13100,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "172"
										},
										{
											"begin": 13047,
											"end": 13100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13047,
											"end": 13100,
											"name": "tag",
											"source": 16,
											"value": "378"
										},
										{
											"begin": 13047,
											"end": 13100,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13034,
											"end": 13100,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13034,
											"end": 13100,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12964,
											"end": 13106,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12964,
											"end": 13106,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12964,
											"end": 13106,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12964,
											"end": 13106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13112,
											"end": 13187,
											"name": "tag",
											"source": 16,
											"value": "212"
										},
										{
											"begin": 13112,
											"end": 13187,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13155,
											"end": 13158,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13176,
											"end": 13181,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13169,
											"end": 13181,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13169,
											"end": 13181,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13112,
											"end": 13187,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13112,
											"end": 13187,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13112,
											"end": 13187,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13112,
											"end": 13187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13193,
											"end": 13462,
											"name": "tag",
											"source": 16,
											"value": "213"
										},
										{
											"begin": 13193,
											"end": 13462,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13303,
											"end": 13342,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "383"
										},
										{
											"begin": 13334,
											"end": 13341,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13303,
											"end": 13342,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "211"
										},
										{
											"begin": 13303,
											"end": 13342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13303,
											"end": 13342,
											"name": "tag",
											"source": 16,
											"value": "383"
										},
										{
											"begin": 13303,
											"end": 13342,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13364,
											"end": 13455,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "384"
										},
										{
											"begin": 13413,
											"end": 13454,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "385"
										},
										{
											"begin": 13437,
											"end": 13453,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13413,
											"end": 13454,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "212"
										},
										{
											"begin": 13413,
											"end": 13454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13413,
											"end": 13454,
											"name": "tag",
											"source": 16,
											"value": "385"
										},
										{
											"begin": 13413,
											"end": 13454,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13405,
											"end": 13411,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 13398,
											"end": 13402,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 13392,
											"end": 13403,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 13364,
											"end": 13455,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "210"
										},
										{
											"begin": 13364,
											"end": 13455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13364,
											"end": 13455,
											"name": "tag",
											"source": 16,
											"value": "384"
										},
										{
											"begin": 13364,
											"end": 13455,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13358,
											"end": 13362,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13351,
											"end": 13456,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 13269,
											"end": 13462,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13193,
											"end": 13462,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13193,
											"end": 13462,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13193,
											"end": 13462,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13193,
											"end": 13462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13468,
											"end": 13541,
											"name": "tag",
											"source": 16,
											"value": "214"
										},
										{
											"begin": 13468,
											"end": 13541,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13513,
											"end": 13516,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13468,
											"end": 13541,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13468,
											"end": 13541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13547,
											"end": 13736,
											"name": "tag",
											"source": 16,
											"value": "215"
										},
										{
											"begin": 13547,
											"end": 13736,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13624,
											"end": 13656,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "388"
										},
										{
											"begin": 13624,
											"end": 13656,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "214"
										},
										{
											"begin": 13624,
											"end": 13656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13624,
											"end": 13656,
											"name": "tag",
											"source": 16,
											"value": "388"
										},
										{
											"begin": 13624,
											"end": 13656,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13665,
											"end": 13730,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "389"
										},
										{
											"begin": 13723,
											"end": 13729,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13715,
											"end": 13721,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 13709,
											"end": 13713,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 13665,
											"end": 13730,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "213"
										},
										{
											"begin": 13665,
											"end": 13730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13665,
											"end": 13730,
											"name": "tag",
											"source": 16,
											"value": "389"
										},
										{
											"begin": 13665,
											"end": 13730,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13600,
											"end": 13736,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13547,
											"end": 13736,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13547,
											"end": 13736,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13547,
											"end": 13736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13742,
											"end": 13928,
											"name": "tag",
											"source": 16,
											"value": "216"
										},
										{
											"begin": 13742,
											"end": 13928,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13802,
											"end": 13922,
											"name": "tag",
											"source": 16,
											"value": "391"
										},
										{
											"begin": 13802,
											"end": 13922,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13819,
											"end": 13822,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13812,
											"end": 13817,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13809,
											"end": 13823,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 13802,
											"end": 13922,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 13802,
											"end": 13922,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "393"
										},
										{
											"begin": 13802,
											"end": 13922,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 13873,
											"end": 13912,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "394"
										},
										{
											"begin": 13910,
											"end": 13911,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13903,
											"end": 13908,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13873,
											"end": 13912,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "215"
										},
										{
											"begin": 13873,
											"end": 13912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13873,
											"end": 13912,
											"name": "tag",
											"source": 16,
											"value": "394"
										},
										{
											"begin": 13873,
											"end": 13912,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13846,
											"end": 13847,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 13839,
											"end": 13844,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13835,
											"end": 13848,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13826,
											"end": 13848,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13826,
											"end": 13848,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13802,
											"end": 13922,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "391"
										},
										{
											"begin": 13802,
											"end": 13922,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13802,
											"end": 13922,
											"name": "tag",
											"source": 16,
											"value": "393"
										},
										{
											"begin": 13802,
											"end": 13922,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13742,
											"end": 13928,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13742,
											"end": 13928,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13742,
											"end": 13928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13934,
											"end": 14477,
											"name": "tag",
											"source": 16,
											"value": "217"
										},
										{
											"begin": 13934,
											"end": 14477,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14035,
											"end": 14037,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 14030,
											"end": 14033,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14027,
											"end": 14038,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 14024,
											"end": 14470,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 14024,
											"end": 14470,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "396"
										},
										{
											"begin": 14024,
											"end": 14470,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 14069,
											"end": 14107,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "397"
										},
										{
											"begin": 14101,
											"end": 14106,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14069,
											"end": 14107,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "207"
										},
										{
											"begin": 14069,
											"end": 14107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14069,
											"end": 14107,
											"name": "tag",
											"source": 16,
											"value": "397"
										},
										{
											"begin": 14069,
											"end": 14107,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14153,
											"end": 14182,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "398"
										},
										{
											"begin": 14171,
											"end": 14181,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 14153,
											"end": 14182,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "208"
										},
										{
											"begin": 14153,
											"end": 14182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14153,
											"end": 14182,
											"name": "tag",
											"source": 16,
											"value": "398"
										},
										{
											"begin": 14153,
											"end": 14182,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14143,
											"end": 14151,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14139,
											"end": 14183,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14336,
											"end": 14338,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 14324,
											"end": 14334,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 14321,
											"end": 14339,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 14318,
											"end": 14367,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 14318,
											"end": 14367,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "399"
										},
										{
											"begin": 14318,
											"end": 14367,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 14357,
											"end": 14365,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14342,
											"end": 14365,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14342,
											"end": 14365,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14318,
											"end": 14367,
											"name": "tag",
											"source": 16,
											"value": "399"
										},
										{
											"begin": 14318,
											"end": 14367,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14380,
											"end": 14460,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "400"
										},
										{
											"begin": 14436,
											"end": 14458,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "401"
										},
										{
											"begin": 14454,
											"end": 14457,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 14436,
											"end": 14458,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "208"
										},
										{
											"begin": 14436,
											"end": 14458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14436,
											"end": 14458,
											"name": "tag",
											"source": 16,
											"value": "401"
										},
										{
											"begin": 14436,
											"end": 14458,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14426,
											"end": 14434,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 14422,
											"end": 14459,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14409,
											"end": 14420,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14380,
											"end": 14460,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "216"
										},
										{
											"begin": 14380,
											"end": 14460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14380,
											"end": 14460,
											"name": "tag",
											"source": 16,
											"value": "400"
										},
										{
											"begin": 14380,
											"end": 14460,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14039,
											"end": 14470,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14039,
											"end": 14470,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14024,
											"end": 14470,
											"name": "tag",
											"source": 16,
											"value": "396"
										},
										{
											"begin": 14024,
											"end": 14470,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13934,
											"end": 14477,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13934,
											"end": 14477,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13934,
											"end": 14477,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13934,
											"end": 14477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14483,
											"end": 14600,
											"name": "tag",
											"source": 16,
											"value": "218"
										},
										{
											"begin": 14483,
											"end": 14600,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14537,
											"end": 14545,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14587,
											"end": 14592,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14581,
											"end": 14585,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14577,
											"end": 14593,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 14556,
											"end": 14593,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14556,
											"end": 14593,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14483,
											"end": 14600,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 14483,
											"end": 14600,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14483,
											"end": 14600,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14483,
											"end": 14600,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14483,
											"end": 14600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14606,
											"end": 14775,
											"name": "tag",
											"source": 16,
											"value": "219"
										},
										{
											"begin": 14606,
											"end": 14775,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14650,
											"end": 14656,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14683,
											"end": 14734,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "404"
										},
										{
											"begin": 14731,
											"end": 14732,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14727,
											"end": 14733,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 14719,
											"end": 14724,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 14716,
											"end": 14717,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 14712,
											"end": 14725,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 14683,
											"end": 14734,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "218"
										},
										{
											"begin": 14683,
											"end": 14734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14683,
											"end": 14734,
											"name": "tag",
											"source": 16,
											"value": "404"
										},
										{
											"begin": 14683,
											"end": 14734,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14679,
											"end": 14735,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 14764,
											"end": 14768,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 14758,
											"end": 14762,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 14754,
											"end": 14769,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 14744,
											"end": 14769,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14744,
											"end": 14769,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14657,
											"end": 14775,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14606,
											"end": 14775,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 14606,
											"end": 14775,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14606,
											"end": 14775,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14606,
											"end": 14775,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14606,
											"end": 14775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14780,
											"end": 15075,
											"name": "tag",
											"source": 16,
											"value": "220"
										},
										{
											"begin": 14780,
											"end": 15075,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14856,
											"end": 14860,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15002,
											"end": 15031,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "406"
										},
										{
											"begin": 15027,
											"end": 15030,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 15021,
											"end": 15025,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 15002,
											"end": 15031,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "219"
										},
										{
											"begin": 15002,
											"end": 15031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15002,
											"end": 15031,
											"name": "tag",
											"source": 16,
											"value": "406"
										},
										{
											"begin": 15002,
											"end": 15031,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14994,
											"end": 15031,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14994,
											"end": 15031,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15064,
											"end": 15067,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15061,
											"end": 15062,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 15057,
											"end": 15068,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 15051,
											"end": 15055,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15048,
											"end": 15069,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 15040,
											"end": 15069,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15040,
											"end": 15069,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14780,
											"end": 15075,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 14780,
											"end": 15075,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14780,
											"end": 15075,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14780,
											"end": 15075,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14780,
											"end": 15075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15080,
											"end": 16475,
											"name": "tag",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 15080,
											"end": 16475,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15197,
											"end": 15234,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "408"
										},
										{
											"begin": 15230,
											"end": 15233,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15197,
											"end": 15234,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "179"
										},
										{
											"begin": 15197,
											"end": 15234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15197,
											"end": 15234,
											"name": "tag",
											"source": 16,
											"value": "408"
										},
										{
											"begin": 15197,
											"end": 15234,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15299,
											"end": 15317,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15291,
											"end": 15297,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15288,
											"end": 15318,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 15285,
											"end": 15341,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 15285,
											"end": 15341,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "409"
										},
										{
											"begin": 15285,
											"end": 15341,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 15321,
											"end": 15339,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "410"
										},
										{
											"begin": 15321,
											"end": 15339,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "206"
										},
										{
											"begin": 15321,
											"end": 15339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15321,
											"end": 15339,
											"name": "tag",
											"source": 16,
											"value": "410"
										},
										{
											"begin": 15321,
											"end": 15339,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15285,
											"end": 15341,
											"name": "tag",
											"source": 16,
											"value": "409"
										},
										{
											"begin": 15285,
											"end": 15341,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15365,
											"end": 15403,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "411"
										},
										{
											"begin": 15397,
											"end": 15401,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15391,
											"end": 15402,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 15365,
											"end": 15403,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "81"
										},
										{
											"begin": 15365,
											"end": 15403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15365,
											"end": 15403,
											"name": "tag",
											"source": 16,
											"value": "411"
										},
										{
											"begin": 15365,
											"end": 15403,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15450,
											"end": 15517,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "412"
										},
										{
											"begin": 15510,
											"end": 15516,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15502,
											"end": 15508,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15496,
											"end": 15500,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 15450,
											"end": 15517,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "217"
										},
										{
											"begin": 15450,
											"end": 15517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15450,
											"end": 15517,
											"name": "tag",
											"source": 16,
											"value": "412"
										},
										{
											"begin": 15450,
											"end": 15517,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15544,
											"end": 15545,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15568,
											"end": 15572,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 15555,
											"end": 15572,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15555,
											"end": 15572,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15600,
											"end": 15602,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 15592,
											"end": 15598,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 15589,
											"end": 15603,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 15617,
											"end": 15618,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 15612,
											"end": 16230,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15612,
											"end": 16230,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 15612,
											"end": 16230,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "414"
										},
										{
											"begin": 15612,
											"end": 16230,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 16274,
											"end": 16275,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16291,
											"end": 16297,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16288,
											"end": 16365,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 16288,
											"end": 16365,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "415"
										},
										{
											"begin": 16288,
											"end": 16365,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 16340,
											"end": 16349,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16335,
											"end": 16338,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 16331,
											"end": 16350,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16325,
											"end": 16351,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 16316,
											"end": 16351,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16316,
											"end": 16351,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16288,
											"end": 16365,
											"name": "tag",
											"source": 16,
											"value": "415"
										},
										{
											"begin": 16288,
											"end": 16365,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16391,
											"end": 16458,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "416"
										},
										{
											"begin": 16451,
											"end": 16457,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 16444,
											"end": 16449,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16391,
											"end": 16458,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "220"
										},
										{
											"begin": 16391,
											"end": 16458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16391,
											"end": 16458,
											"name": "tag",
											"source": 16,
											"value": "416"
										},
										{
											"begin": 16391,
											"end": 16458,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16385,
											"end": 16389,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 16378,
											"end": 16459,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 16247,
											"end": 16469,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15582,
											"end": 16469,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "413"
										},
										{
											"begin": 15582,
											"end": 16469,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15612,
											"end": 16230,
											"name": "tag",
											"source": 16,
											"value": "414"
										},
										{
											"begin": 15612,
											"end": 16230,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15664,
											"end": 15668,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 15660,
											"end": 15669,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 15652,
											"end": 15658,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 15648,
											"end": 15670,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 15698,
											"end": 15735,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "417"
										},
										{
											"begin": 15730,
											"end": 15734,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 15698,
											"end": 15735,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "207"
										},
										{
											"begin": 15698,
											"end": 15735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15698,
											"end": 15735,
											"name": "tag",
											"source": 16,
											"value": "417"
										},
										{
											"begin": 15698,
											"end": 15735,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15757,
											"end": 15758,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15771,
											"end": 15979,
											"name": "tag",
											"source": 16,
											"value": "418"
										},
										{
											"begin": 15771,
											"end": 15979,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15785,
											"end": 15792,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15782,
											"end": 15783,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15779,
											"end": 15793,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 15771,
											"end": 15979,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 15771,
											"end": 15979,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "420"
										},
										{
											"begin": 15771,
											"end": 15979,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 15864,
											"end": 15873,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 15859,
											"end": 15862,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 15855,
											"end": 15874,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15849,
											"end": 15875,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 15841,
											"end": 15847,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15834,
											"end": 15876,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 15915,
											"end": 15916,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 15907,
											"end": 15913,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15903,
											"end": 15917,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15893,
											"end": 15917,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15893,
											"end": 15917,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15962,
											"end": 15964,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 15951,
											"end": 15960,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 15947,
											"end": 15965,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15934,
											"end": 15965,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 15934,
											"end": 15965,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15808,
											"end": 15812,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 15805,
											"end": 15806,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15801,
											"end": 15813,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15796,
											"end": 15813,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15796,
											"end": 15813,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15771,
											"end": 15979,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "418"
										},
										{
											"begin": 15771,
											"end": 15979,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15771,
											"end": 15979,
											"name": "tag",
											"source": 16,
											"value": "420"
										},
										{
											"begin": 15771,
											"end": 15979,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16007,
											"end": 16013,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 15998,
											"end": 16005,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 15995,
											"end": 16014,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 15992,
											"end": 16171,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 15992,
											"end": 16171,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "421"
										},
										{
											"begin": 15992,
											"end": 16171,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 16065,
											"end": 16074,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16060,
											"end": 16063,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 16056,
											"end": 16075,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16050,
											"end": 16076,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 16108,
											"end": 16156,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "422"
										},
										{
											"begin": 16150,
											"end": 16154,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 16142,
											"end": 16148,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 16138,
											"end": 16155,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 16127,
											"end": 16136,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16108,
											"end": 16156,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "219"
										},
										{
											"begin": 16108,
											"end": 16156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16108,
											"end": 16156,
											"name": "tag",
											"source": 16,
											"value": "422"
										},
										{
											"begin": 16108,
											"end": 16156,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16100,
											"end": 16106,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 16093,
											"end": 16157,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 16015,
											"end": 16171,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15992,
											"end": 16171,
											"name": "tag",
											"source": 16,
											"value": "421"
										},
										{
											"begin": 15992,
											"end": 16171,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16217,
											"end": 16218,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 16213,
											"end": 16214,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 16205,
											"end": 16211,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 16201,
											"end": 16215,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 16197,
											"end": 16219,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16191,
											"end": 16195,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 16184,
											"end": 16220,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 15619,
											"end": 16230,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15619,
											"end": 16230,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15619,
											"end": 16230,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15582,
											"end": 16469,
											"name": "tag",
											"source": 16,
											"value": "413"
										},
										{
											"begin": 15582,
											"end": 16469,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15582,
											"end": 16469,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15172,
											"end": 16475,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15172,
											"end": 16475,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15172,
											"end": 16475,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15080,
											"end": 16475,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15080,
											"end": 16475,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15080,
											"end": 16475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16481,
											"end": 16661,
											"name": "tag",
											"source": 16,
											"value": "221"
										},
										{
											"begin": 16481,
											"end": 16661,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16529,
											"end": 16606,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16526,
											"end": 16527,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16519,
											"end": 16607,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 16626,
											"end": 16630,
											"name": "PUSH",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 16623,
											"end": 16624,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 16616,
											"end": 16631,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 16650,
											"end": 16654,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 16647,
											"end": 16648,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16640,
											"end": 16655,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 16667,
											"end": 16858,
											"name": "tag",
											"source": 16,
											"value": "105"
										},
										{
											"begin": 16667,
											"end": 16858,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16707,
											"end": 16710,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16726,
											"end": 16746,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "425"
										},
										{
											"begin": 16744,
											"end": 16745,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16726,
											"end": 16746,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "172"
										},
										{
											"begin": 16726,
											"end": 16746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16726,
											"end": 16746,
											"name": "tag",
											"source": 16,
											"value": "425"
										},
										{
											"begin": 16726,
											"end": 16746,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16721,
											"end": 16746,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16721,
											"end": 16746,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16760,
											"end": 16780,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "426"
										},
										{
											"begin": 16778,
											"end": 16779,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 16760,
											"end": 16780,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "172"
										},
										{
											"begin": 16760,
											"end": 16780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16760,
											"end": 16780,
											"name": "tag",
											"source": 16,
											"value": "426"
										},
										{
											"begin": 16760,
											"end": 16780,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16755,
											"end": 16780,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 16755,
											"end": 16780,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16803,
											"end": 16804,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16800,
											"end": 16801,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16796,
											"end": 16805,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16789,
											"end": 16805,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16789,
											"end": 16805,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16824,
											"end": 16827,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 16821,
											"end": 16822,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16818,
											"end": 16828,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 16815,
											"end": 16851,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 16815,
											"end": 16851,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "427"
										},
										{
											"begin": 16815,
											"end": 16851,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 16831,
											"end": 16849,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "428"
										},
										{
											"begin": 16831,
											"end": 16849,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "221"
										},
										{
											"begin": 16831,
											"end": 16849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16831,
											"end": 16849,
											"name": "tag",
											"source": 16,
											"value": "428"
										},
										{
											"begin": 16831,
											"end": 16849,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16815,
											"end": 16851,
											"name": "tag",
											"source": 16,
											"value": "427"
										},
										{
											"begin": 16815,
											"end": 16851,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16667,
											"end": 16858,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 16667,
											"end": 16858,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16667,
											"end": 16858,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16667,
											"end": 16858,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16667,
											"end": 16858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16864,
											"end": 17007,
											"name": "tag",
											"source": 16,
											"value": "222"
										},
										{
											"begin": 16864,
											"end": 17007,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16921,
											"end": 16926,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16952,
											"end": 16958,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16946,
											"end": 16959,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 16937,
											"end": 16959,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16937,
											"end": 16959,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16968,
											"end": 17001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "430"
										},
										{
											"begin": 16995,
											"end": 17000,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16968,
											"end": 17001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "188"
										},
										{
											"begin": 16968,
											"end": 17001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16968,
											"end": 17001,
											"name": "tag",
											"source": 16,
											"value": "430"
										},
										{
											"begin": 16968,
											"end": 17001,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16864,
											"end": 17007,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 16864,
											"end": 17007,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16864,
											"end": 17007,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16864,
											"end": 17007,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16864,
											"end": 17007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17013,
											"end": 17364,
											"name": "tag",
											"source": 16,
											"value": "109"
										},
										{
											"begin": 17013,
											"end": 17364,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17083,
											"end": 17089,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17132,
											"end": 17134,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 17120,
											"end": 17129,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17111,
											"end": 17118,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 17107,
											"end": 17130,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 17103,
											"end": 17135,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 17100,
											"end": 17219,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 17100,
											"end": 17219,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "432"
										},
										{
											"begin": 17100,
											"end": 17219,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 17138,
											"end": 17217,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "433"
										},
										{
											"begin": 17138,
											"end": 17217,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "170"
										},
										{
											"begin": 17138,
											"end": 17217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17138,
											"end": 17217,
											"name": "tag",
											"source": 16,
											"value": "433"
										},
										{
											"begin": 17138,
											"end": 17217,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17100,
											"end": 17219,
											"name": "tag",
											"source": 16,
											"value": "432"
										},
										{
											"begin": 17100,
											"end": 17219,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17258,
											"end": 17259,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17283,
											"end": 17347,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "434"
										},
										{
											"begin": 17339,
											"end": 17346,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 17330,
											"end": 17336,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17319,
											"end": 17328,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 17315,
											"end": 17337,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 17283,
											"end": 17347,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "222"
										},
										{
											"begin": 17283,
											"end": 17347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17283,
											"end": 17347,
											"name": "tag",
											"source": 16,
											"value": "434"
										},
										{
											"begin": 17283,
											"end": 17347,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17273,
											"end": 17347,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17273,
											"end": 17347,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17229,
											"end": 17357,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17013,
											"end": 17364,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 17013,
											"end": 17364,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17013,
											"end": 17364,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17013,
											"end": 17364,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17013,
											"end": 17364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17370,
											"end": 17492,
											"name": "tag",
											"source": 16,
											"value": "223"
										},
										{
											"begin": 17370,
											"end": 17492,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17443,
											"end": 17467,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "436"
										},
										{
											"begin": 17461,
											"end": 17466,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17443,
											"end": 17467,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "176"
										},
										{
											"begin": 17443,
											"end": 17467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17443,
											"end": 17467,
											"name": "tag",
											"source": 16,
											"value": "436"
										},
										{
											"begin": 17443,
											"end": 17467,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17436,
											"end": 17441,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17433,
											"end": 17468,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 17423,
											"end": 17486,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "437"
										},
										{
											"begin": 17423,
											"end": 17486,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 17482,
											"end": 17483,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17479,
											"end": 17480,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 17472,
											"end": 17484,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 17423,
											"end": 17486,
											"name": "tag",
											"source": 16,
											"value": "437"
										},
										{
											"begin": 17423,
											"end": 17486,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17370,
											"end": 17492,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17370,
											"end": 17492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17498,
											"end": 17641,
											"name": "tag",
											"source": 16,
											"value": "224"
										},
										{
											"begin": 17498,
											"end": 17641,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17555,
											"end": 17560,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17586,
											"end": 17592,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17580,
											"end": 17593,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 17571,
											"end": 17593,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17571,
											"end": 17593,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17602,
											"end": 17635,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "439"
										},
										{
											"begin": 17629,
											"end": 17634,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17602,
											"end": 17635,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "223"
										},
										{
											"begin": 17602,
											"end": 17635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17602,
											"end": 17635,
											"name": "tag",
											"source": 16,
											"value": "439"
										},
										{
											"begin": 17602,
											"end": 17635,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17498,
											"end": 17641,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 17498,
											"end": 17641,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17498,
											"end": 17641,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17498,
											"end": 17641,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17498,
											"end": 17641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17647,
											"end": 17737,
											"name": "tag",
											"source": 16,
											"value": "225"
										},
										{
											"begin": 17647,
											"end": 17737,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17682,
											"end": 17689,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17725,
											"end": 17730,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17722,
											"end": 17723,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 17711,
											"end": 17731,
											"name": "SIGNEXTEND",
											"source": 16
										},
										{
											"begin": 17700,
											"end": 17731,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17700,
											"end": 17731,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17647,
											"end": 17737,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17647,
											"end": 17737,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17647,
											"end": 17737,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17647,
											"end": 17737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17743,
											"end": 17861,
											"name": "tag",
											"source": 16,
											"value": "226"
										},
										{
											"begin": 17743,
											"end": 17861,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17814,
											"end": 17836,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "442"
										},
										{
											"begin": 17830,
											"end": 17835,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17814,
											"end": 17836,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "225"
										},
										{
											"begin": 17814,
											"end": 17836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17814,
											"end": 17836,
											"name": "tag",
											"source": 16,
											"value": "442"
										},
										{
											"begin": 17814,
											"end": 17836,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17807,
											"end": 17812,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17804,
											"end": 17837,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 17794,
											"end": 17855,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "443"
										},
										{
											"begin": 17794,
											"end": 17855,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 17851,
											"end": 17852,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17848,
											"end": 17849,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 17841,
											"end": 17853,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 17794,
											"end": 17855,
											"name": "tag",
											"source": 16,
											"value": "443"
										},
										{
											"begin": 17794,
											"end": 17855,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17743,
											"end": 17861,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17743,
											"end": 17861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17867,
											"end": 18006,
											"name": "tag",
											"source": 16,
											"value": "227"
										},
										{
											"begin": 17867,
											"end": 18006,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17922,
											"end": 17927,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17953,
											"end": 17959,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17947,
											"end": 17960,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 17938,
											"end": 17960,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17938,
											"end": 17960,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17969,
											"end": 18000,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "445"
										},
										{
											"begin": 17994,
											"end": 17999,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17969,
											"end": 18000,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "226"
										},
										{
											"begin": 17969,
											"end": 18000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17969,
											"end": 18000,
											"name": "tag",
											"source": 16,
											"value": "445"
										},
										{
											"begin": 17969,
											"end": 18000,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17867,
											"end": 18006,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 17867,
											"end": 18006,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17867,
											"end": 18006,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17867,
											"end": 18006,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17867,
											"end": 18006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18012,
											"end": 18101,
											"name": "tag",
											"source": 16,
											"value": "228"
										},
										{
											"begin": 18012,
											"end": 18101,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18048,
											"end": 18055,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18088,
											"end": 18094,
											"name": "PUSH",
											"source": 16,
											"value": "FFFF"
										},
										{
											"begin": 18081,
											"end": 18086,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18077,
											"end": 18095,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 18066,
											"end": 18095,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 18066,
											"end": 18095,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18012,
											"end": 18101,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 18012,
											"end": 18101,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 18012,
											"end": 18101,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18012,
											"end": 18101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18107,
											"end": 18227,
											"name": "tag",
											"source": 16,
											"value": "229"
										},
										{
											"begin": 18107,
											"end": 18227,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18179,
											"end": 18202,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "448"
										},
										{
											"begin": 18196,
											"end": 18201,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18179,
											"end": 18202,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "228"
										},
										{
											"begin": 18179,
											"end": 18202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18179,
											"end": 18202,
											"name": "tag",
											"source": 16,
											"value": "448"
										},
										{
											"begin": 18179,
											"end": 18202,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18172,
											"end": 18177,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18169,
											"end": 18203,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 18159,
											"end": 18221,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "449"
										},
										{
											"begin": 18159,
											"end": 18221,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 18217,
											"end": 18218,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18214,
											"end": 18215,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 18207,
											"end": 18219,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 18159,
											"end": 18221,
											"name": "tag",
											"source": 16,
											"value": "449"
										},
										{
											"begin": 18159,
											"end": 18221,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18107,
											"end": 18227,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18107,
											"end": 18227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18233,
											"end": 18374,
											"name": "tag",
											"source": 16,
											"value": "230"
										},
										{
											"begin": 18233,
											"end": 18374,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18289,
											"end": 18294,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18320,
											"end": 18326,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18314,
											"end": 18327,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 18305,
											"end": 18327,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 18305,
											"end": 18327,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18336,
											"end": 18368,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "451"
										},
										{
											"begin": 18362,
											"end": 18367,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18336,
											"end": 18368,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "229"
										},
										{
											"begin": 18336,
											"end": 18368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18336,
											"end": 18368,
											"name": "tag",
											"source": 16,
											"value": "451"
										},
										{
											"begin": 18336,
											"end": 18368,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18233,
											"end": 18374,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 18233,
											"end": 18374,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 18233,
											"end": 18374,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18233,
											"end": 18374,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18233,
											"end": 18374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18380,
											"end": 18466,
											"name": "tag",
											"source": 16,
											"value": "231"
										},
										{
											"begin": 18380,
											"end": 18466,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18415,
											"end": 18422,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18455,
											"end": 18459,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 18448,
											"end": 18453,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18444,
											"end": 18460,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 18433,
											"end": 18460,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 18433,
											"end": 18460,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18380,
											"end": 18466,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 18380,
											"end": 18466,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 18380,
											"end": 18466,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18380,
											"end": 18466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18472,
											"end": 18590,
											"name": "tag",
											"source": 16,
											"value": "232"
										},
										{
											"begin": 18472,
											"end": 18590,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18543,
											"end": 18565,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "454"
										},
										{
											"begin": 18559,
											"end": 18564,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18543,
											"end": 18565,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "231"
										},
										{
											"begin": 18543,
											"end": 18565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18543,
											"end": 18565,
											"name": "tag",
											"source": 16,
											"value": "454"
										},
										{
											"begin": 18543,
											"end": 18565,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18536,
											"end": 18541,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18533,
											"end": 18566,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 18523,
											"end": 18584,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "455"
										},
										{
											"begin": 18523,
											"end": 18584,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 18580,
											"end": 18581,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18577,
											"end": 18578,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 18570,
											"end": 18582,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 18523,
											"end": 18584,
											"name": "tag",
											"source": 16,
											"value": "455"
										},
										{
											"begin": 18523,
											"end": 18584,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18472,
											"end": 18590,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18472,
											"end": 18590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18596,
											"end": 18735,
											"name": "tag",
											"source": 16,
											"value": "233"
										},
										{
											"begin": 18596,
											"end": 18735,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18651,
											"end": 18656,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18682,
											"end": 18688,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18676,
											"end": 18689,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 18667,
											"end": 18689,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 18667,
											"end": 18689,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18698,
											"end": 18729,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "457"
										},
										{
											"begin": 18723,
											"end": 18728,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18698,
											"end": 18729,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "232"
										},
										{
											"begin": 18698,
											"end": 18729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18698,
											"end": 18729,
											"name": "tag",
											"source": 16,
											"value": "457"
										},
										{
											"begin": 18698,
											"end": 18729,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18596,
											"end": 18735,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 18596,
											"end": 18735,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 18596,
											"end": 18735,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18596,
											"end": 18735,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18596,
											"end": 18735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18741,
											"end": 18831,
											"name": "tag",
											"source": 16,
											"value": "234"
										},
										{
											"begin": 18741,
											"end": 18831,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18775,
											"end": 18782,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18818,
											"end": 18823,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18811,
											"end": 18824,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 18804,
											"end": 18825,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 18793,
											"end": 18825,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 18793,
											"end": 18825,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18741,
											"end": 18831,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 18741,
											"end": 18831,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 18741,
											"end": 18831,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18741,
											"end": 18831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18837,
											"end": 18953,
											"name": "tag",
											"source": 16,
											"value": "235"
										},
										{
											"begin": 18837,
											"end": 18953,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18907,
											"end": 18928,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "460"
										},
										{
											"begin": 18922,
											"end": 18927,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18907,
											"end": 18928,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "234"
										},
										{
											"begin": 18907,
											"end": 18928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18907,
											"end": 18928,
											"name": "tag",
											"source": 16,
											"value": "460"
										},
										{
											"begin": 18907,
											"end": 18928,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18900,
											"end": 18905,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18897,
											"end": 18929,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 18887,
											"end": 18947,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "461"
										},
										{
											"begin": 18887,
											"end": 18947,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 18943,
											"end": 18944,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18940,
											"end": 18941,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 18933,
											"end": 18945,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 18887,
											"end": 18947,
											"name": "tag",
											"source": 16,
											"value": "461"
										},
										{
											"begin": 18887,
											"end": 18947,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18837,
											"end": 18953,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18837,
											"end": 18953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18959,
											"end": 19096,
											"name": "tag",
											"source": 16,
											"value": "236"
										},
										{
											"begin": 18959,
											"end": 19096,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19013,
											"end": 19018,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19044,
											"end": 19050,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 19038,
											"end": 19051,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 19029,
											"end": 19051,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19029,
											"end": 19051,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19060,
											"end": 19090,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "463"
										},
										{
											"begin": 19084,
											"end": 19089,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 19060,
											"end": 19090,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "235"
										},
										{
											"begin": 19060,
											"end": 19090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19060,
											"end": 19090,
											"name": "tag",
											"source": 16,
											"value": "463"
										},
										{
											"begin": 19060,
											"end": 19090,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18959,
											"end": 19096,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 18959,
											"end": 19096,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 18959,
											"end": 19096,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18959,
											"end": 19096,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18959,
											"end": 19096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19102,
											"end": 20373,
											"name": "tag",
											"source": 16,
											"value": "121"
										},
										{
											"begin": 19102,
											"end": 20373,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19216,
											"end": 19222,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19224,
											"end": 19230,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 19232,
											"end": 19238,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19240,
											"end": 19246,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 19248,
											"end": 19254,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19256,
											"end": 19262,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 19264,
											"end": 19270,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19313,
											"end": 19316,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 19301,
											"end": 19310,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 19292,
											"end": 19299,
											"name": "DUP11",
											"source": 16
										},
										{
											"begin": 19288,
											"end": 19311,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 19284,
											"end": 19317,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 19281,
											"end": 19401,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 19281,
											"end": 19401,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "465"
										},
										{
											"begin": 19281,
											"end": 19401,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 19320,
											"end": 19399,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "466"
										},
										{
											"begin": 19320,
											"end": 19399,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "170"
										},
										{
											"begin": 19320,
											"end": 19399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19320,
											"end": 19399,
											"name": "tag",
											"source": 16,
											"value": "466"
										},
										{
											"begin": 19320,
											"end": 19399,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19281,
											"end": 19401,
											"name": "tag",
											"source": 16,
											"value": "465"
										},
										{
											"begin": 19281,
											"end": 19401,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19440,
											"end": 19441,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19465,
											"end": 19529,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "467"
										},
										{
											"begin": 19521,
											"end": 19528,
											"name": "DUP11",
											"source": 16
										},
										{
											"begin": 19512,
											"end": 19518,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19501,
											"end": 19510,
											"name": "DUP12",
											"source": 16
										},
										{
											"begin": 19497,
											"end": 19519,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19465,
											"end": 19529,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "224"
										},
										{
											"begin": 19465,
											"end": 19529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19465,
											"end": 19529,
											"name": "tag",
											"source": 16,
											"value": "467"
										},
										{
											"begin": 19465,
											"end": 19529,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19455,
											"end": 19529,
											"name": "SWAP8",
											"source": 16
										},
										{
											"begin": 19455,
											"end": 19529,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19411,
											"end": 19539,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19578,
											"end": 19580,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 19604,
											"end": 19666,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "468"
										},
										{
											"begin": 19658,
											"end": 19665,
											"name": "DUP11",
											"source": 16
										},
										{
											"begin": 19649,
											"end": 19655,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19638,
											"end": 19647,
											"name": "DUP12",
											"source": 16
										},
										{
											"begin": 19634,
											"end": 19656,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19604,
											"end": 19666,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "227"
										},
										{
											"begin": 19604,
											"end": 19666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19604,
											"end": 19666,
											"name": "tag",
											"source": 16,
											"value": "468"
										},
										{
											"begin": 19604,
											"end": 19666,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19594,
											"end": 19666,
											"name": "SWAP7",
											"source": 16
										},
										{
											"begin": 19594,
											"end": 19666,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19549,
											"end": 19676,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19715,
											"end": 19717,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 19741,
											"end": 19804,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "469"
										},
										{
											"begin": 19796,
											"end": 19803,
											"name": "DUP11",
											"source": 16
										},
										{
											"begin": 19787,
											"end": 19793,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19776,
											"end": 19785,
											"name": "DUP12",
											"source": 16
										},
										{
											"begin": 19772,
											"end": 19794,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19741,
											"end": 19804,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "230"
										},
										{
											"begin": 19741,
											"end": 19804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19741,
											"end": 19804,
											"name": "tag",
											"source": 16,
											"value": "469"
										},
										{
											"begin": 19741,
											"end": 19804,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19731,
											"end": 19804,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 19731,
											"end": 19804,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19686,
											"end": 19814,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19853,
											"end": 19855,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 19879,
											"end": 19942,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "470"
										},
										{
											"begin": 19934,
											"end": 19941,
											"name": "DUP11",
											"source": 16
										},
										{
											"begin": 19925,
											"end": 19931,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19914,
											"end": 19923,
											"name": "DUP12",
											"source": 16
										},
										{
											"begin": 19910,
											"end": 19932,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19879,
											"end": 19942,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "230"
										},
										{
											"begin": 19879,
											"end": 19942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19879,
											"end": 19942,
											"name": "tag",
											"source": 16,
											"value": "470"
										},
										{
											"begin": 19879,
											"end": 19942,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19869,
											"end": 19942,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 19869,
											"end": 19942,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19824,
											"end": 19952,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19991,
											"end": 19994,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 20018,
											"end": 20081,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 20073,
											"end": 20080,
											"name": "DUP11",
											"source": 16
										},
										{
											"begin": 20064,
											"end": 20070,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20053,
											"end": 20062,
											"name": "DUP12",
											"source": 16
										},
										{
											"begin": 20049,
											"end": 20071,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20018,
											"end": 20081,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "230"
										},
										{
											"begin": 20018,
											"end": 20081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20018,
											"end": 20081,
											"name": "tag",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 20018,
											"end": 20081,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20008,
											"end": 20081,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 20008,
											"end": 20081,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19962,
											"end": 20091,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20130,
											"end": 20133,
											"name": "PUSH",
											"source": 16,
											"value": "A0"
										},
										{
											"begin": 20157,
											"end": 20219,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "472"
										},
										{
											"begin": 20211,
											"end": 20218,
											"name": "DUP11",
											"source": 16
										},
										{
											"begin": 20202,
											"end": 20208,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20191,
											"end": 20200,
											"name": "DUP12",
											"source": 16
										},
										{
											"begin": 20187,
											"end": 20209,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20157,
											"end": 20219,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "233"
										},
										{
											"begin": 20157,
											"end": 20219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20157,
											"end": 20219,
											"name": "tag",
											"source": 16,
											"value": "472"
										},
										{
											"begin": 20157,
											"end": 20219,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20147,
											"end": 20219,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 20147,
											"end": 20219,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20101,
											"end": 20229,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20268,
											"end": 20271,
											"name": "PUSH",
											"source": 16,
											"value": "C0"
										},
										{
											"begin": 20295,
											"end": 20356,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "473"
										},
										{
											"begin": 20348,
											"end": 20355,
											"name": "DUP11",
											"source": 16
										},
										{
											"begin": 20339,
											"end": 20345,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20328,
											"end": 20337,
											"name": "DUP12",
											"source": 16
										},
										{
											"begin": 20324,
											"end": 20346,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20295,
											"end": 20356,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "236"
										},
										{
											"begin": 20295,
											"end": 20356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20295,
											"end": 20356,
											"name": "tag",
											"source": 16,
											"value": "473"
										},
										{
											"begin": 20295,
											"end": 20356,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20285,
											"end": 20356,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 20285,
											"end": 20356,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20239,
											"end": 20366,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19102,
											"end": 20373,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 19102,
											"end": 20373,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 19102,
											"end": 20373,
											"name": "SWAP9",
											"source": 16
										},
										{
											"begin": 19102,
											"end": 20373,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 19102,
											"end": 20373,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 19102,
											"end": 20373,
											"name": "SWAP8",
											"source": 16
										},
										{
											"begin": 19102,
											"end": 20373,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19102,
											"end": 20373,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 19102,
											"end": 20373,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 19102,
											"end": 20373,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19102,
											"end": 20373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20379,
											"end": 20573,
											"name": "tag",
											"source": 16,
											"value": "124"
										},
										{
											"begin": 20379,
											"end": 20573,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20419,
											"end": 20423,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20439,
											"end": 20459,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "475"
										},
										{
											"begin": 20457,
											"end": 20458,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20439,
											"end": 20459,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "172"
										},
										{
											"begin": 20439,
											"end": 20459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20439,
											"end": 20459,
											"name": "tag",
											"source": 16,
											"value": "475"
										},
										{
											"begin": 20439,
											"end": 20459,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20434,
											"end": 20459,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 20434,
											"end": 20459,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20473,
											"end": 20493,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "476"
										},
										{
											"begin": 20491,
											"end": 20492,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 20473,
											"end": 20493,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "172"
										},
										{
											"begin": 20473,
											"end": 20493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20473,
											"end": 20493,
											"name": "tag",
											"source": 16,
											"value": "476"
										},
										{
											"begin": 20473,
											"end": 20493,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20468,
											"end": 20493,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 20468,
											"end": 20493,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20517,
											"end": 20518,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20514,
											"end": 20515,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20510,
											"end": 20519,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 20502,
											"end": 20519,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20502,
											"end": 20519,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20541,
											"end": 20542,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 20535,
											"end": 20539,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 20532,
											"end": 20543,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 20529,
											"end": 20566,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 20529,
											"end": 20566,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "477"
										},
										{
											"begin": 20529,
											"end": 20566,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 20546,
											"end": 20564,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "478"
										},
										{
											"begin": 20546,
											"end": 20564,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "221"
										},
										{
											"begin": 20546,
											"end": 20564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20546,
											"end": 20564,
											"name": "tag",
											"source": 16,
											"value": "478"
										},
										{
											"begin": 20546,
											"end": 20564,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20529,
											"end": 20566,
											"name": "tag",
											"source": 16,
											"value": "477"
										},
										{
											"begin": 20529,
											"end": 20566,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20379,
											"end": 20573,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 20379,
											"end": 20573,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 20379,
											"end": 20573,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20379,
											"end": 20573,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20379,
											"end": 20573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20579,
											"end": 20684,
											"name": "tag",
											"source": 16,
											"value": "237"
										},
										{
											"begin": 20579,
											"end": 20684,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20615,
											"end": 20622,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20655,
											"end": 20677,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20648,
											"end": 20653,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20644,
											"end": 20678,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 20633,
											"end": 20678,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20633,
											"end": 20678,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20579,
											"end": 20684,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 20579,
											"end": 20684,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20579,
											"end": 20684,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20579,
											"end": 20684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20690,
											"end": 20810,
											"name": "tag",
											"source": 16,
											"value": "238"
										},
										{
											"begin": 20690,
											"end": 20810,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20762,
											"end": 20785,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "481"
										},
										{
											"begin": 20779,
											"end": 20784,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 20762,
											"end": 20785,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "237"
										},
										{
											"begin": 20762,
											"end": 20785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20762,
											"end": 20785,
											"name": "tag",
											"source": 16,
											"value": "481"
										},
										{
											"begin": 20762,
											"end": 20785,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20755,
											"end": 20760,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 20752,
											"end": 20786,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 20742,
											"end": 20804,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "482"
										},
										{
											"begin": 20742,
											"end": 20804,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 20800,
											"end": 20801,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20797,
											"end": 20798,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 20790,
											"end": 20802,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 20742,
											"end": 20804,
											"name": "tag",
											"source": 16,
											"value": "482"
										},
										{
											"begin": 20742,
											"end": 20804,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20690,
											"end": 20810,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20690,
											"end": 20810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20816,
											"end": 20957,
											"name": "tag",
											"source": 16,
											"value": "239"
										},
										{
											"begin": 20816,
											"end": 20957,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20872,
											"end": 20877,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20903,
											"end": 20909,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 20897,
											"end": 20910,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 20888,
											"end": 20910,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20888,
											"end": 20910,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20919,
											"end": 20951,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "484"
										},
										{
											"begin": 20945,
											"end": 20950,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 20919,
											"end": 20951,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "238"
										},
										{
											"begin": 20919,
											"end": 20951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20919,
											"end": 20951,
											"name": "tag",
											"source": 16,
											"value": "484"
										},
										{
											"begin": 20919,
											"end": 20951,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20816,
											"end": 20957,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 20816,
											"end": 20957,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 20816,
											"end": 20957,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20816,
											"end": 20957,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20816,
											"end": 20957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20963,
											"end": 21083,
											"name": "tag",
											"source": 16,
											"value": "240"
										},
										{
											"begin": 20963,
											"end": 21083,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21035,
											"end": 21058,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "486"
										},
										{
											"begin": 21052,
											"end": 21057,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 21035,
											"end": 21058,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "196"
										},
										{
											"begin": 21035,
											"end": 21058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21035,
											"end": 21058,
											"name": "tag",
											"source": 16,
											"value": "486"
										},
										{
											"begin": 21035,
											"end": 21058,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21028,
											"end": 21033,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 21025,
											"end": 21059,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 21015,
											"end": 21077,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "487"
										},
										{
											"begin": 21015,
											"end": 21077,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 21073,
											"end": 21074,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21070,
											"end": 21071,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 21063,
											"end": 21075,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 21015,
											"end": 21077,
											"name": "tag",
											"source": 16,
											"value": "487"
										},
										{
											"begin": 21015,
											"end": 21077,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20963,
											"end": 21083,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20963,
											"end": 21083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21089,
											"end": 21230,
											"name": "tag",
											"source": 16,
											"value": "241"
										},
										{
											"begin": 21089,
											"end": 21230,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21145,
											"end": 21150,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21176,
											"end": 21182,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 21170,
											"end": 21183,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 21161,
											"end": 21183,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 21161,
											"end": 21183,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21192,
											"end": 21224,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "489"
										},
										{
											"begin": 21218,
											"end": 21223,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 21192,
											"end": 21224,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "240"
										},
										{
											"begin": 21192,
											"end": 21224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21192,
											"end": 21224,
											"name": "tag",
											"source": 16,
											"value": "489"
										},
										{
											"begin": 21192,
											"end": 21224,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21089,
											"end": 21230,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 21089,
											"end": 21230,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 21089,
											"end": 21230,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21089,
											"end": 21230,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21089,
											"end": 21230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21236,
											"end": 22207,
											"name": "tag",
											"source": 16,
											"value": "130"
										},
										{
											"begin": 21236,
											"end": 22207,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21339,
											"end": 21345,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21347,
											"end": 21353,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 21355,
											"end": 21361,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21363,
											"end": 21369,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 21371,
											"end": 21377,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21420,
											"end": 21423,
											"name": "PUSH",
											"source": 16,
											"value": "A0"
										},
										{
											"begin": 21408,
											"end": 21417,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 21399,
											"end": 21406,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 21395,
											"end": 21418,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 21391,
											"end": 21424,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 21388,
											"end": 21508,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 21388,
											"end": 21508,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "491"
										},
										{
											"begin": 21388,
											"end": 21508,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 21427,
											"end": 21506,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "492"
										},
										{
											"begin": 21427,
											"end": 21506,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "170"
										},
										{
											"begin": 21427,
											"end": 21506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21427,
											"end": 21506,
											"name": "tag",
											"source": 16,
											"value": "492"
										},
										{
											"begin": 21427,
											"end": 21506,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21388,
											"end": 21508,
											"name": "tag",
											"source": 16,
											"value": "491"
										},
										{
											"begin": 21388,
											"end": 21508,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21547,
											"end": 21548,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21572,
											"end": 21635,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "493"
										},
										{
											"begin": 21627,
											"end": 21634,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 21618,
											"end": 21624,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 21607,
											"end": 21616,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 21603,
											"end": 21625,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21572,
											"end": 21635,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "239"
										},
										{
											"begin": 21572,
											"end": 21635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21572,
											"end": 21635,
											"name": "tag",
											"source": 16,
											"value": "493"
										},
										{
											"begin": 21572,
											"end": 21635,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21562,
											"end": 21635,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 21562,
											"end": 21635,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21518,
											"end": 21645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21684,
											"end": 21686,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 21710,
											"end": 21773,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "494"
										},
										{
											"begin": 21765,
											"end": 21772,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 21756,
											"end": 21762,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 21745,
											"end": 21754,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 21741,
											"end": 21763,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21710,
											"end": 21773,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "241"
										},
										{
											"begin": 21710,
											"end": 21773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21710,
											"end": 21773,
											"name": "tag",
											"source": 16,
											"value": "494"
										},
										{
											"begin": 21710,
											"end": 21773,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21700,
											"end": 21773,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 21700,
											"end": 21773,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21655,
											"end": 21783,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21822,
											"end": 21824,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 21848,
											"end": 21912,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "495"
										},
										{
											"begin": 21904,
											"end": 21911,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 21895,
											"end": 21901,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 21884,
											"end": 21893,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 21880,
											"end": 21902,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21848,
											"end": 21912,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "202"
										},
										{
											"begin": 21848,
											"end": 21912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21848,
											"end": 21912,
											"name": "tag",
											"source": 16,
											"value": "495"
										},
										{
											"begin": 21848,
											"end": 21912,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21838,
											"end": 21912,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 21838,
											"end": 21912,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21793,
											"end": 21922,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21961,
											"end": 21963,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 21987,
											"end": 22051,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "496"
										},
										{
											"begin": 22043,
											"end": 22050,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 22034,
											"end": 22040,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22023,
											"end": 22032,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 22019,
											"end": 22041,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21987,
											"end": 22051,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "202"
										},
										{
											"begin": 21987,
											"end": 22051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21987,
											"end": 22051,
											"name": "tag",
											"source": 16,
											"value": "496"
										},
										{
											"begin": 21987,
											"end": 22051,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21977,
											"end": 22051,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 21977,
											"end": 22051,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21932,
											"end": 22061,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22100,
											"end": 22103,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 22127,
											"end": 22190,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "497"
										},
										{
											"begin": 22182,
											"end": 22189,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 22173,
											"end": 22179,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22162,
											"end": 22171,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 22158,
											"end": 22180,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 22127,
											"end": 22190,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "239"
										},
										{
											"begin": 22127,
											"end": 22190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22127,
											"end": 22190,
											"name": "tag",
											"source": 16,
											"value": "497"
										},
										{
											"begin": 22127,
											"end": 22190,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22117,
											"end": 22190,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 22117,
											"end": 22190,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22071,
											"end": 22200,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21236,
											"end": 22207,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 21236,
											"end": 22207,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 21236,
											"end": 22207,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21236,
											"end": 22207,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 21236,
											"end": 22207,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 21236,
											"end": 22207,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 21236,
											"end": 22207,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 21236,
											"end": 22207,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21236,
											"end": 22207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22213,
											"end": 22623,
											"name": "tag",
											"source": 16,
											"value": "137"
										},
										{
											"begin": 22213,
											"end": 22623,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22253,
											"end": 22260,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 22276,
											"end": 22296,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "499"
										},
										{
											"begin": 22294,
											"end": 22295,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22276,
											"end": 22296,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "172"
										},
										{
											"begin": 22276,
											"end": 22296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22276,
											"end": 22296,
											"name": "tag",
											"source": 16,
											"value": "499"
										},
										{
											"begin": 22276,
											"end": 22296,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22271,
											"end": 22296,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 22271,
											"end": 22296,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22310,
											"end": 22330,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "500"
										},
										{
											"begin": 22328,
											"end": 22329,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 22310,
											"end": 22330,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "172"
										},
										{
											"begin": 22310,
											"end": 22330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22310,
											"end": 22330,
											"name": "tag",
											"source": 16,
											"value": "500"
										},
										{
											"begin": 22310,
											"end": 22330,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22305,
											"end": 22330,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 22305,
											"end": 22330,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22365,
											"end": 22366,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22362,
											"end": 22363,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22358,
											"end": 22367,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 22387,
											"end": 22417,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "501"
										},
										{
											"begin": 22405,
											"end": 22416,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 22387,
											"end": 22417,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "172"
										},
										{
											"begin": 22387,
											"end": 22417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22387,
											"end": 22417,
											"name": "tag",
											"source": 16,
											"value": "501"
										},
										{
											"begin": 22387,
											"end": 22417,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22376,
											"end": 22417,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 22376,
											"end": 22417,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22566,
											"end": 22567,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22557,
											"end": 22564,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22553,
											"end": 22568,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 22550,
											"end": 22551,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 22547,
											"end": 22569,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 22527,
											"end": 22528,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 22520,
											"end": 22529,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 22500,
											"end": 22583,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 22477,
											"end": 22616,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "502"
										},
										{
											"begin": 22477,
											"end": 22616,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 22596,
											"end": 22614,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "503"
										},
										{
											"begin": 22596,
											"end": 22614,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "221"
										},
										{
											"begin": 22596,
											"end": 22614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22596,
											"end": 22614,
											"name": "tag",
											"source": 16,
											"value": "503"
										},
										{
											"begin": 22596,
											"end": 22614,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22477,
											"end": 22616,
											"name": "tag",
											"source": 16,
											"value": "502"
										},
										{
											"begin": 22477,
											"end": 22616,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22261,
											"end": 22623,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22213,
											"end": 22623,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 22213,
											"end": 22623,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 22213,
											"end": 22623,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22213,
											"end": 22623,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22213,
											"end": 22623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22629,
											"end": 22809,
											"name": "tag",
											"source": 16,
											"value": "242"
										},
										{
											"begin": 22629,
											"end": 22809,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22677,
											"end": 22754,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22674,
											"end": 22675,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 22667,
											"end": 22755,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 22774,
											"end": 22778,
											"name": "PUSH",
											"source": 16,
											"value": "12"
										},
										{
											"begin": 22771,
											"end": 22772,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 22764,
											"end": 22779,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 22798,
											"end": 22802,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 22795,
											"end": 22796,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 22788,
											"end": 22803,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 22815,
											"end": 23000,
											"name": "tag",
											"source": 16,
											"value": "139"
										},
										{
											"begin": 22815,
											"end": 23000,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22855,
											"end": 22856,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 22872,
											"end": 22892,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "506"
										},
										{
											"begin": 22890,
											"end": 22891,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22872,
											"end": 22892,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "172"
										},
										{
											"begin": 22872,
											"end": 22892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22872,
											"end": 22892,
											"name": "tag",
											"source": 16,
											"value": "506"
										},
										{
											"begin": 22872,
											"end": 22892,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22867,
											"end": 22892,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 22867,
											"end": 22892,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22906,
											"end": 22926,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "507"
										},
										{
											"begin": 22924,
											"end": 22925,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 22906,
											"end": 22926,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "172"
										},
										{
											"begin": 22906,
											"end": 22926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22906,
											"end": 22926,
											"name": "tag",
											"source": 16,
											"value": "507"
										},
										{
											"begin": 22906,
											"end": 22926,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22901,
											"end": 22926,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 22901,
											"end": 22926,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22945,
											"end": 22946,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22935,
											"end": 22970,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "508"
										},
										{
											"begin": 22935,
											"end": 22970,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 22950,
											"end": 22968,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "509"
										},
										{
											"begin": 22950,
											"end": 22968,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "242"
										},
										{
											"begin": 22950,
											"end": 22968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22950,
											"end": 22968,
											"name": "tag",
											"source": 16,
											"value": "509"
										},
										{
											"begin": 22950,
											"end": 22968,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22935,
											"end": 22970,
											"name": "tag",
											"source": 16,
											"value": "508"
										},
										{
											"begin": 22935,
											"end": 22970,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22992,
											"end": 22993,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22989,
											"end": 22990,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22985,
											"end": 22994,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 22980,
											"end": 22994,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 22980,
											"end": 22994,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22815,
											"end": 23000,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 22815,
											"end": 23000,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 22815,
											"end": 23000,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22815,
											"end": 23000,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22815,
											"end": 23000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 23006,
											"end": 23153,
											"name": "tag",
											"source": 16,
											"value": "243"
										},
										{
											"begin": 23006,
											"end": 23153,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23107,
											"end": 23118,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 23144,
											"end": 23147,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 23129,
											"end": 23147,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 23129,
											"end": 23147,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23006,
											"end": 23153,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 23006,
											"end": 23153,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 23006,
											"end": 23153,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23006,
											"end": 23153,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23006,
											"end": 23153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 23159,
											"end": 23273,
											"name": "tag",
											"source": 16,
											"value": "244"
										},
										{
											"begin": 23159,
											"end": 23273,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23159,
											"end": 23273,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23159,
											"end": 23273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 23279,
											"end": 23677,
											"name": "tag",
											"source": 16,
											"value": "245"
										},
										{
											"begin": 23279,
											"end": 23677,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23438,
											"end": 23441,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 23459,
											"end": 23542,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "513"
										},
										{
											"begin": 23540,
											"end": 23541,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 23535,
											"end": 23538,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 23459,
											"end": 23542,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "243"
										},
										{
											"begin": 23459,
											"end": 23542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 23459,
											"end": 23542,
											"name": "tag",
											"source": 16,
											"value": "513"
										},
										{
											"begin": 23459,
											"end": 23542,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23452,
											"end": 23542,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 23452,
											"end": 23542,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23551,
											"end": 23644,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "514"
										},
										{
											"begin": 23640,
											"end": 23643,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 23551,
											"end": 23644,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "244"
										},
										{
											"begin": 23551,
											"end": 23644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 23551,
											"end": 23644,
											"name": "tag",
											"source": 16,
											"value": "514"
										},
										{
											"begin": 23551,
											"end": 23644,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23669,
											"end": 23670,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 23664,
											"end": 23667,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 23660,
											"end": 23671,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 23653,
											"end": 23671,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 23653,
											"end": 23671,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23279,
											"end": 23677,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 23279,
											"end": 23677,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 23279,
											"end": 23677,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23279,
											"end": 23677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 23683,
											"end": 24062,
											"name": "tag",
											"source": 16,
											"value": "143"
										},
										{
											"begin": 23683,
											"end": 24062,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23867,
											"end": 23870,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 23889,
											"end": 24036,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "516"
										},
										{
											"begin": 24032,
											"end": 24035,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 23889,
											"end": 24036,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "245"
										},
										{
											"begin": 23889,
											"end": 24036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 23889,
											"end": 24036,
											"name": "tag",
											"source": 16,
											"value": "516"
										},
										{
											"begin": 23889,
											"end": 24036,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23882,
											"end": 24036,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 23882,
											"end": 24036,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 24053,
											"end": 24056,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 24046,
											"end": 24056,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 24046,
											"end": 24056,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23683,
											"end": 24062,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 23683,
											"end": 24062,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 23683,
											"end": 24062,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23683,
											"end": 24062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"contracts/Master.sol",
								"contracts/cover/Cover.sol",
								"contracts/interfaces/ICover.sol",
								"contracts/interfaces/ICoverNFT.sol",
								"contracts/interfaces/IMCR.sol",
								"contracts/interfaces/IPool.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"activeCoverAmount()": "7e9e1abe",
							"buyCover((address,address,uint256,uint256,uint256,uint256,uint256,string,uint256))": "279f54ce",
							"coverAmountInETH((address,address,uint256,uint256,uint256,uint256,uint256,string,uint256))": "d05808f8",
							"coverDataCount()": "404730f4",
							"coverNFT()": "42e53fcf",
							"coverPrice((address,address,uint256,uint256,uint256,uint256,uint256,string,uint256))": "1f5e4583",
							"decActiveCoverInETH(uint256)": "4b61a44b",
							"getCoverData(uint256)": "00407d2a",
							"getLiveDataUniswap(address)": "4230a777",
							"getUnitPX(address)": "de071a0a",
							"master()": "ee97f7f3",
							"totalActiveCoverInETH()": "ed3b657a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ICoverNFT\",\"name\":\"_coverNFT\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"masterAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InsufficientEthSent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReturningEthRemainderToSenderFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SendingEthToCommissionDestinationFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SendingEthToPoolFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"activeCoverAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"token1Qty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0Qty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerBoundRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upperBoundRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pairStr\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialPoolPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct BuyCoverParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"buyCover\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"coverId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"token1Qty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0Qty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerBoundRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upperBoundRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pairStr\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialPoolPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct BuyCoverParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"coverAmountInETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"coverDataCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"coverNFT\",\"outputs\":[{\"internalType\":\"contract ICoverNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"token1Qty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0Qty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerBoundRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upperBoundRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pairStr\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialPoolPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct BuyCoverParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"coverPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dec\",\"type\":\"uint256\"}],\"name\":\"decActiveCoverInETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"coverid\",\"type\":\"uint256\"}],\"name\":\"getCoverData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amountPaidOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalClaimAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"token0Qty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1Qty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerBoundRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upperBoundRatio\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pairStr\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialPoolPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct CoverData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"x\",\"type\":\"address\"}],\"name\":\"getLiveDataUniswap\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"\",\"type\":\"uint160\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"x\",\"type\":\"address\"}],\"name\":\"getUnitPX\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"master\",\"outputs\":[{\"internalType\":\"contract Master\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalActiveCoverInETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/cover/Cover.sol\":\"Cover\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"contracts/Master.sol\":{\"keccak256\":\"0x3d3184b9516122e6fb70e4b5d512b6a0219abe38c4792b9cbf382dbffb880c65\",\"urls\":[\"bzz-raw://e1bb612708fc4fd742569a13ff47a2b359e21044f201e7eb99316a25c648203a\",\"dweb:/ipfs/QmZZwWpCLopjSVdjPNR1LxxrBXp7wFEgmqzYuQUQFh1z6J\"]},\"contracts/cover/Cover.sol\":{\"keccak256\":\"0x53107efefcff4067a406d9f1b3581807bc8d685277c1a2549d9c41f98a1816b5\",\"urls\":[\"bzz-raw://41be9f4e1c555721a1f68109632830dc8a6656ed01bb54c8ac16b3ba661fe491\",\"dweb:/ipfs/QmSVMfESdzXACt3QAN7jREDy7QeyR1U7iYsRxdeZQP3bQg\"]},\"contracts/interfaces/ICover.sol\":{\"keccak256\":\"0x19d03f7e84362ae7fe3dc52f5cc6e15a5de042405538966fcc5e5e441e1cc531\",\"urls\":[\"bzz-raw://40e1b2e6a36d3d3f1f115c7cb2658d71462d6ea7f0c23377dacd0f227e9a5e5f\",\"dweb:/ipfs/QmV9qZc4dXrX3sABnVdYfabu3gYyZR1TJJW7kLG6Rom2QX\"]},\"contracts/interfaces/ICoverNFT.sol\":{\"keccak256\":\"0x79d602e1cd332d73b59651d0af301a23071e4ca225097b24d80f9947393e2582\",\"urls\":[\"bzz-raw://a8b78909a6db032e68906729c03fb6e3b8183264fc34fe4009c4c0a598a00a7a\",\"dweb:/ipfs/QmaGEKqDiifEftwiPbBEnaduhZzUwzEBbj89xEdzkx1iB7\"]},\"contracts/interfaces/IMCR.sol\":{\"keccak256\":\"0xfe501e970cfca32e379ff35233f5c149a6b84345e2d76cc4e9d3f351ae9c9317\",\"urls\":[\"bzz-raw://8c67be9e233b4f1f26aee5cbbd19a0b65d64b5a416089940498e906347753317\",\"dweb:/ipfs/QmS1D3y8xGr11FpZu51KzbFTHrwYYMMAk3mazP4mCZW8VJ\"]},\"contracts/interfaces/IPool.sol\":{\"keccak256\":\"0x4f981cd82fa7f4289d185d8b5c307a7626328196619922bf638f0214bcd42f23\",\"urls\":[\"bzz-raw://6446bfc6a64d4ebfdc35a4757c7eaf735b80bc69d07021428b97d51ac11b63ea\",\"dweb:/ipfs/QmXdu5Dtjj9eW2bCe3Q5VBEfMivRYxgPwMgwVLbUQgXRzp\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x55036158b0f3523fa36f2a576743f39dd46bb84bee57e51cd2406c906638cea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c5558c241a34b3fa54c848d99844850c88b03869b47e1fc05f6f261c54aaa35\",\"dweb:/ipfs/QmbeeMn9RKhT8DmEvDCNdfiDGtDw1YVB2D5HTLqTzefYPb\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x39194d726021816f8a5f2b821574349a4884833cf841378dc8e6862e5f789ed6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08cfffa942e4589c4d927db3fecfea998e9486ff41f48ee905fdda34d152a846\",\"dweb:/ipfs/QmQKwHL48iBd5XzRAnSNnGBXo6Ykt22iADEReEusX1SQvK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 591,
								"contract": "contracts/cover/Cover.sol:Cover",
								"label": "_coverData",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_struct(CoverData)982_storage)"
							},
							{
								"astId": 593,
								"contract": "contracts/cover/Cover.sol:Cover",
								"label": "activeCoverAmount",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 596,
								"contract": "contracts/cover/Cover.sol:Cover",
								"label": "master",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(Master)570"
							},
							{
								"astId": 599,
								"contract": "contracts/cover/Cover.sol:Cover",
								"label": "coverNFT",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(ICoverNFT)1074"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(ICoverNFT)1074": {
								"encoding": "inplace",
								"label": "contract ICoverNFT",
								"numberOfBytes": "20"
							},
							"t_contract(Master)570": {
								"encoding": "inplace",
								"label": "contract Master",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_struct(CoverData)982_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct CoverData)",
								"numberOfBytes": "32",
								"value": "t_struct(CoverData)982_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(CoverData)982_storage": {
								"encoding": "inplace",
								"label": "struct CoverData",
								"members": [
									{
										"astId": 959,
										"contract": "contracts/cover/Cover.sol:Cover",
										"label": "amountPaidOut",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 961,
										"contract": "contracts/cover/Cover.sol:Cover",
										"label": "totalClaimAmount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 963,
										"contract": "contracts/cover/Cover.sol:Cover",
										"label": "start",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 965,
										"contract": "contracts/cover/Cover.sol:Cover",
										"label": "period",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 967,
										"contract": "contracts/cover/Cover.sol:Cover",
										"label": "token0",
										"offset": 0,
										"slot": "4",
										"type": "t_address"
									},
									{
										"astId": 969,
										"contract": "contracts/cover/Cover.sol:Cover",
										"label": "token1",
										"offset": 0,
										"slot": "5",
										"type": "t_address"
									},
									{
										"astId": 971,
										"contract": "contracts/cover/Cover.sol:Cover",
										"label": "token0Qty",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 973,
										"contract": "contracts/cover/Cover.sol:Cover",
										"label": "token1Qty",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 975,
										"contract": "contracts/cover/Cover.sol:Cover",
										"label": "lowerBoundRatio",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 977,
										"contract": "contracts/cover/Cover.sol:Cover",
										"label": "upperBoundRatio",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 979,
										"contract": "contracts/cover/Cover.sol:Cover",
										"label": "pairStr",
										"offset": 0,
										"slot": "10",
										"type": "t_string_storage"
									},
									{
										"astId": 981,
										"contract": "contracts/cover/Cover.sol:Cover",
										"label": "initialPoolPrice",
										"offset": 0,
										"slot": "11",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "384"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/ICover.sol": {
				"ICover": {
					"abi": [
						{
							"inputs": [],
							"name": "InsufficientEthSent",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReturningEthRemainderToSenderFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SendingEthToCommissionDestinationFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SendingEthToPoolFailed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "token0",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "token1",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "token1Qty",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "token0Qty",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lowerBoundRatio",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "upperBoundRatio",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "period",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "pairStr",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "initialPoolPrice",
											"type": "uint256"
										}
									],
									"internalType": "struct BuyCoverParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "buyCover",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "coverId",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "coverDataCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "count",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "token0",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "token1",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "token1Qty",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "token0Qty",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lowerBoundRatio",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "upperBoundRatio",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "period",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "pairStr",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "initialPoolPrice",
											"type": "uint256"
										}
									],
									"internalType": "struct BuyCoverParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "coverPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "decActiveCoverInETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "coverId",
									"type": "uint256"
								}
							],
							"name": "getCoverData",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "amountPaidOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "totalClaimAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "start",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "period",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "token0",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "token1",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "token0Qty",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "token1Qty",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lowerBoundRatio",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "upperBoundRatio",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "pairStr",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "initialPoolPrice",
											"type": "uint256"
										}
									],
									"internalType": "struct CoverData",
									"name": "coverData",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalActiveCoverInETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"buyCover((address,address,uint256,uint256,uint256,uint256,uint256,string,uint256))": "279f54ce",
							"coverDataCount()": "404730f4",
							"coverPrice((address,address,uint256,uint256,uint256,uint256,uint256,string,uint256))": "1f5e4583",
							"decActiveCoverInETH(uint256)": "4b61a44b",
							"getCoverData(uint256)": "00407d2a",
							"totalActiveCoverInETH()": "ed3b657a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InsufficientEthSent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReturningEthRemainderToSenderFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SendingEthToCommissionDestinationFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SendingEthToPoolFailed\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"token1Qty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0Qty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerBoundRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upperBoundRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pairStr\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialPoolPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct BuyCoverParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"buyCover\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"coverId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"coverDataCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"token1Qty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0Qty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerBoundRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upperBoundRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pairStr\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialPoolPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct BuyCoverParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"coverPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"decActiveCoverInETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"coverId\",\"type\":\"uint256\"}],\"name\":\"getCoverData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amountPaidOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalClaimAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"token0Qty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1Qty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerBoundRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upperBoundRatio\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pairStr\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialPoolPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct CoverData\",\"name\":\"coverData\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalActiveCoverInETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ICover.sol\":\"ICover\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ICover.sol\":{\"keccak256\":\"0x19d03f7e84362ae7fe3dc52f5cc6e15a5de042405538966fcc5e5e441e1cc531\",\"urls\":[\"bzz-raw://40e1b2e6a36d3d3f1f115c7cb2658d71462d6ea7f0c23377dacd0f227e9a5e5f\",\"dweb:/ipfs/QmV9qZc4dXrX3sABnVdYfabu3gYyZR1TJJW7kLG6Rom2QX\"]},\"contracts/interfaces/ICoverNFT.sol\":{\"keccak256\":\"0x79d602e1cd332d73b59651d0af301a23071e4ca225097b24d80f9947393e2582\",\"urls\":[\"bzz-raw://a8b78909a6db032e68906729c03fb6e3b8183264fc34fe4009c4c0a598a00a7a\",\"dweb:/ipfs/QmaGEKqDiifEftwiPbBEnaduhZzUwzEBbj89xEdzkx1iB7\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x55036158b0f3523fa36f2a576743f39dd46bb84bee57e51cd2406c906638cea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c5558c241a34b3fa54c848d99844850c88b03869b47e1fc05f6f261c54aaa35\",\"dweb:/ipfs/QmbeeMn9RKhT8DmEvDCNdfiDGtDw1YVB2D5HTLqTzefYPb\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x39194d726021816f8a5f2b821574349a4884833cf841378dc8e6862e5f789ed6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08cfffa942e4589c4d927db3fecfea998e9486ff41f48ee905fdda34d152a846\",\"dweb:/ipfs/QmQKwHL48iBd5XzRAnSNnGBXo6Ykt22iADEReEusX1SQvK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/ICoverNFT.sol": {
				"ICoverNFT": {
					"abi": [
						{
							"inputs": [],
							"name": "AlreadyMinted",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidNewNFTDescriptorAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidNewOperatorAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidRecipient",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotAuthorized",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotMinted",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotOperator",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UnsafeRecipient",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "WrongFrom",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "isApprovedOrOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"isApprovedOrOwner(address,uint256)": "430c2081",
							"mint(address)": "6a627842",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AlreadyMinted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNewNFTDescriptorAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNewOperatorAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotMinted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsafeRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongFrom\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"isApprovedOrOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ICoverNFT.sol\":\"ICoverNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ICoverNFT.sol\":{\"keccak256\":\"0x79d602e1cd332d73b59651d0af301a23071e4ca225097b24d80f9947393e2582\",\"urls\":[\"bzz-raw://a8b78909a6db032e68906729c03fb6e3b8183264fc34fe4009c4c0a598a00a7a\",\"dweb:/ipfs/QmaGEKqDiifEftwiPbBEnaduhZzUwzEBbj89xEdzkx1iB7\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x55036158b0f3523fa36f2a576743f39dd46bb84bee57e51cd2406c906638cea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c5558c241a34b3fa54c848d99844850c88b03869b47e1fc05f6f261c54aaa35\",\"dweb:/ipfs/QmbeeMn9RKhT8DmEvDCNdfiDGtDw1YVB2D5HTLqTzefYPb\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x39194d726021816f8a5f2b821574349a4884833cf841378dc8e6862e5f789ed6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08cfffa942e4589c4d927db3fecfea998e9486ff41f48ee905fdda34d152a846\",\"dweb:/ipfs/QmQKwHL48iBd5XzRAnSNnGBXo6Ykt22iADEReEusX1SQvK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IMCR.sol": {
				"IMCR": {
					"abi": [
						{
							"inputs": [],
							"name": "getMCR",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "updateMCRInternal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getMCR()": "44936b10",
							"updateMCRInternal()": "aa5da046"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getMCR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateMCRInternal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IMCR.sol\":\"IMCR\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IMCR.sol\":{\"keccak256\":\"0xfe501e970cfca32e379ff35233f5c149a6b84345e2d76cc4e9d3f351ae9c9317\",\"urls\":[\"bzz-raw://8c67be9e233b4f1f26aee5cbbd19a0b65d64b5a416089940498e906347753317\",\"dweb:/ipfs/QmS1D3y8xGr11FpZu51KzbFTHrwYYMMAk3mazP4mCZW8VJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IPool.sol": {
				"IPool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "minTokensOut",
									"type": "uint256"
								}
							],
							"name": "buyHEDH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minEthOut",
									"type": "uint256"
								}
							],
							"name": "sellHEDH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "payoutAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "sendPayout",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"buyHEDH(uint256)": "06833ffd",
							"sellHEDH(uint256,uint256)": "bdf4872b",
							"sendPayout(address,uint256)": "cf8d133f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minTokensOut\",\"type\":\"uint256\"}],\"name\":\"buyHEDH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minEthOut\",\"type\":\"uint256\"}],\"name\":\"sellHEDH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"payoutAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sendPayout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPool.sol\":\"IPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IPool.sol\":{\"keccak256\":\"0x4f981cd82fa7f4289d185d8b5c307a7626328196619922bf638f0214bcd42f23\",\"urls\":[\"bzz-raw://6446bfc6a64d4ebfdc35a4757c7eaf735b80bc69d07021428b97d51ac11b63ea\",\"dweb:/ipfs/QmXdu5Dtjj9eW2bCe3Q5VBEfMivRYxgPwMgwVLbUQgXRzp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x55036158b0f3523fa36f2a576743f39dd46bb84bee57e51cd2406c906638cea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c5558c241a34b3fa54c848d99844850c88b03869b47e1fc05f6f261c54aaa35\",\"dweb:/ipfs/QmbeeMn9RKhT8DmEvDCNdfiDGtDw1YVB2D5HTLqTzefYPb\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x39194d726021816f8a5f2b821574349a4884833cf841378dc8e6862e5f789ed6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08cfffa942e4589c4d927db3fecfea998e9486ff41f48ee905fdda34d152a846\",\"dweb:/ipfs/QmQKwHL48iBd5XzRAnSNnGBXo6Ykt22iADEReEusX1SQvK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x39194d726021816f8a5f2b821574349a4884833cf841378dc8e6862e5f789ed6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08cfffa942e4589c4d927db3fecfea998e9486ff41f48ee905fdda34d152a846\",\"dweb:/ipfs/QmQKwHL48iBd5XzRAnSNnGBXo6Ykt22iADEReEusX1SQvK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Master.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Master.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/cover/Cover.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/cover/Cover.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/interfaces/ICover.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/interfaces/ICover.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/interfaces/ICoverNFT.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/interfaces/ICoverNFT.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/interfaces/IMCR.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/interfaces/IMCR.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/interfaces/IPool.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/interfaces/IPool.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3420",
				"formattedMessage": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.19;\"\n--> contracts/interfaces/ICoverNFT.sol\n\n",
				"message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.19;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/interfaces/ICoverNFT.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3420",
				"formattedMessage": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.19;\"\n--> contracts/interfaces/IPool.sol\n\n",
				"message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.19;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/interfaces/IPool.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3420",
				"formattedMessage": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.19;\"\n--> contracts/interfaces/IMCR.sol\n\n",
				"message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.19;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/interfaces/IMCR.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/cover/Cover.sol:61:31:\n   |\n61 |     function coverAmountInETH(BuyCoverParams calldata params) public  returns (uint amount){\n   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2088,
					"file": "contracts/cover/Cover.sol",
					"start": 2058
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/cover/Cover.sol:64:25:\n   |\n64 |     function coverPrice(BuyCoverParams calldata params) public returns (uint price){\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2211,
					"file": "contracts/cover/Cover.sol",
					"start": 2181
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/cover/Cover.sol:68:95:\n   |\n68 |     function retrievePayment(uint premiumInPaymentAsset, uint paymentAsset) internal returns (bool success){\n   |                                                                                               ^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2420,
					"file": "contracts/cover/Cover.sol",
					"start": 2408
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> contracts/cover/Cover.sol:61:5:\n   |\n61 |     function coverAmountInETH(BuyCoverParams calldata params) public  returns (uint amount){\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 2156,
					"file": "contracts/cover/Cover.sol",
					"start": 2032
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> contracts/cover/Cover.sol:64:5:\n   |\n64 |     function coverPrice(BuyCoverParams calldata params) public returns (uint price){\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 2287,
					"file": "contracts/cover/Cover.sol",
					"start": 2161
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						]
					},
					"id": 46,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "67:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "102:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "110:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "136:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "136:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:7:0"
									},
									"scope": 45,
									"src": "93:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "156:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "193:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "193:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:15:0"
									},
									"scope": 45,
									"src": "147:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "221:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "254:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:9:0"
									},
									"scope": 45,
									"src": "212:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "276:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "296:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "289:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "289:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:17:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "355:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "348:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "348:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "377:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "370:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "370:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "399:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "391:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "424:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "416:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "416:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "448:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "441:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "441:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "340:129:0"
									},
									"scope": 45,
									"src": "267:203:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "483:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "498:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "550:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "543:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "543:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "572:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "565:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 35,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "594:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "586:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "619:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "611:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "643:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "636:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "636:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "535:129:0"
									},
									"scope": 45,
									"src": "474:191:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 46,
							"src": "57:610:0",
							"usedErrors": []
						}
					],
					"src": "32:636:0"
				},
				"id": 0
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
					"exportedSymbols": {
						"IUniswapV3Pool": [
							67
						],
						"IUniswapV3PoolActions": [
							163
						],
						"IUniswapV3PoolDerivedState": [
							194
						],
						"IUniswapV3PoolEvents": [
							313
						],
						"IUniswapV3PoolImmutables": [
							353
						],
						"IUniswapV3PoolOwnerActions": [
							379
						],
						"IUniswapV3PoolState": [
							487
						]
					},
					"id": 68,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 47,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:1"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
							"file": "./pool/IUniswapV3PoolImmutables.sol",
							"id": 48,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 68,
							"sourceUnit": 354,
							"src": "71:45:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
							"file": "./pool/IUniswapV3PoolState.sol",
							"id": 49,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 68,
							"sourceUnit": 488,
							"src": "117:40:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
							"file": "./pool/IUniswapV3PoolDerivedState.sol",
							"id": 50,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 68,
							"sourceUnit": 195,
							"src": "158:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
							"file": "./pool/IUniswapV3PoolActions.sol",
							"id": 51,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 68,
							"sourceUnit": 164,
							"src": "206:42:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
							"file": "./pool/IUniswapV3PoolOwnerActions.sol",
							"id": 52,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 68,
							"sourceUnit": 380,
							"src": "249:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
							"file": "./pool/IUniswapV3PoolEvents.sol",
							"id": 53,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 68,
							"sourceUnit": 314,
							"src": "297:41:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 55,
										"name": "IUniswapV3PoolImmutables",
										"nameLocations": [
											"637:24:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 353,
										"src": "637:24:1"
									},
									"id": 56,
									"nodeType": "InheritanceSpecifier",
									"src": "637:24:1"
								},
								{
									"baseName": {
										"id": 57,
										"name": "IUniswapV3PoolState",
										"nameLocations": [
											"667:19:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 487,
										"src": "667:19:1"
									},
									"id": 58,
									"nodeType": "InheritanceSpecifier",
									"src": "667:19:1"
								},
								{
									"baseName": {
										"id": 59,
										"name": "IUniswapV3PoolDerivedState",
										"nameLocations": [
											"692:26:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "692:26:1"
									},
									"id": 60,
									"nodeType": "InheritanceSpecifier",
									"src": "692:26:1"
								},
								{
									"baseName": {
										"id": 61,
										"name": "IUniswapV3PoolActions",
										"nameLocations": [
											"724:21:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 163,
										"src": "724:21:1"
									},
									"id": 62,
									"nodeType": "InheritanceSpecifier",
									"src": "724:21:1"
								},
								{
									"baseName": {
										"id": 63,
										"name": "IUniswapV3PoolOwnerActions",
										"nameLocations": [
											"751:26:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 379,
										"src": "751:26:1"
									},
									"id": 64,
									"nodeType": "InheritanceSpecifier",
									"src": "751:26:1"
								},
								{
									"baseName": {
										"id": 65,
										"name": "IUniswapV3PoolEvents",
										"nameLocations": [
											"783:20:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 313,
										"src": "783:20:1"
									},
									"id": 66,
									"nodeType": "InheritanceSpecifier",
									"src": "783:20:1"
								}
							],
							"canonicalName": "IUniswapV3Pool",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 54,
								"nodeType": "StructuredDocumentation",
								"src": "340:265:1",
								"text": "@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"
							},
							"fullyImplemented": false,
							"id": 67,
							"linearizedBaseContracts": [
								67,
								313,
								379,
								163,
								194,
								487,
								353
							],
							"name": "IUniswapV3Pool",
							"nameLocation": "615:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 68,
							"src": "605:203:1",
							"usedErrors": []
						}
					],
					"src": "45:764:1"
				},
				"id": 1
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolActions": [
							163
						]
					},
					"id": 164,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 69,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 70,
								"nodeType": "StructuredDocumentation",
								"src": "71:102:2",
								"text": "@title Permissionless pool actions\n @notice Contains pool methods that can be called by anyone"
							},
							"fullyImplemented": false,
							"id": 163,
							"linearizedBaseContracts": [
								163
							],
							"name": "IUniswapV3PoolActions",
							"nameLocation": "183:21:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "211:206:2",
										"text": "@notice Sets the initial price for the pool\n @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96"
									},
									"functionSelector": "f637731d",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "431:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "450:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "442:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 72,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "442:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:22:2"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "472:0:2"
									},
									"scope": 163,
									"src": "422:51:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "479:1029:2",
										"text": "@notice Adds liquidity for the given recipient/tickLower/tickUpper position\n @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n on tickLower, tickUpper, the amount of liquidity, and the current price.\n @param recipient The address for which the liquidity will be created\n @param tickLower The lower tick of the position in which to add liquidity\n @param tickUpper The upper tick of the position in which to add liquidity\n @param amount The amount of liquidity to mint\n @param data Any data that should be passed through to the callback\n @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
									},
									"functionSelector": "3c8a7d8d",
									"id": 94,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1522:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1544:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1536:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1536:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1569:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1563:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 80,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1563:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "1594:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1588:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 82,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1588:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1621:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1613:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 84,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1652:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1637:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 86,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1637:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1526:136:2"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1689:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1681:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1706:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1698:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1698:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:34:2"
									},
									"scope": 163,
									"src": "1513:202:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "1721:1053:2",
										"text": "@notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param tickLower The lower tick of the position for which to collect fees\n @param tickUpper The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "4f1eb3d8",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nameLocation": "2788:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2813:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "2805:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2838:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "2832:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 98,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2832:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2863:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "2857:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 100,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2857:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nameLocation": "2890:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "2882:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 102,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nameLocation": "2924:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "2916:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 104,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2916:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2795:151:2"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2973:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "2965:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 107,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2965:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "2982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 109,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2982:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2964:34:2"
									},
									"scope": 163,
									"src": "2779:220:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "3005:631:2",
										"text": "@notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param tickLower The lower tick of the position for which to burn liquidity\n @param tickUpper The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"
									},
									"functionSelector": "a34123a7",
									"id": 126,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "3650:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "3670:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "3664:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 114,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3664:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "3695:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "3689:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 116,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3689:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3722:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "3714:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 118,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3714:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3654:80:2"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3761:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "3753:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3778:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "3770:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3752:34:2"
									},
									"scope": 163,
									"src": "3641:146:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "3793:1015:2",
										"text": "@notice Swap token0 for token1, or token1 for token0\n @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n @param recipient The address to receive the output of the swap\n @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
									},
									"functionSelector": "128acb08",
									"id": 144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "4822:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4844:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "4836:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4836:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nameLocation": "4868:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "4863:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 130,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "amountSpecified",
												"nameLocation": "4895:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "4888:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 132,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4888:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "sqrtPriceLimitX96",
												"nameLocation": "4928:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "4920:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 134,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4920:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4970:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "4955:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 136,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4955:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4826:154:2"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5006:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "4999:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 139,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4999:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5022:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "5015:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 141,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5015:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4998:32:2"
									},
									"scope": 163,
									"src": "4813:218:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "5037:657:2",
										"text": "@notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n with 0 amount{0,1} and sending the donation amount(s) from the callback\n @param recipient The address which will receive the token0 and token1 amounts\n @param amount0 The amount of token0 to send\n @param amount1 The amount of token1 to send\n @param data Any data to be passed through to the callback"
									},
									"functionSelector": "490e6cbc",
									"id": 156,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flash",
									"nameLocation": "5708:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5731:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "5723:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5723:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5758:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "5750:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5750:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5783:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "5775:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5775:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5815:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "5800:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 152,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5800:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5713:112:2"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5834:0:2"
									},
									"scope": 163,
									"src": "5699:136:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 157,
										"nodeType": "StructuredDocumentation",
										"src": "5841:367:2",
										"text": "@notice Increase the maximum number of price and liquidity observations that this pool will store\n @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n the input observationCardinalityNext.\n @param observationCardinalityNext The desired minimum number of observations for the pool to store"
									},
									"functionSelector": "32148f67",
									"id": 162,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseObservationCardinalityNext",
									"nameLocation": "6222:34:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "6264:26:2",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "6257:33:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 158,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6256:35:2"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6300:0:2"
									},
									"scope": 163,
									"src": "6213:88:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 164,
							"src": "173:6130:2",
							"usedErrors": []
						}
					],
					"src": "45:6259:2"
				},
				"id": 2
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolDerivedState": [
							194
						]
					},
					"id": 195,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 165,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolDerivedState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 166,
								"nodeType": "StructuredDocumentation",
								"src": "71:222:3",
								"text": "@title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs."
							},
							"fullyImplemented": false,
							"id": 194,
							"linearizedBaseContracts": [
								194
							],
							"name": "IUniswapV3PoolDerivedState",
							"nameLocation": "303:26:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "336:1045:3",
										"text": "@notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n timestamp"
									},
									"functionSelector": "883bdbfd",
									"id": 179,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observe",
									"nameLocation": "1395:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "secondsAgos",
												"nameLocation": "1421:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1403:29:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 168,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "1403:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 169,
													"nodeType": "ArrayTypeName",
													"src": "1403:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1402:31:3"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "tickCumulatives",
												"nameLocation": "1496:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1481:30:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
													"typeString": "int56[]"
												},
												"typeName": {
													"baseType": {
														"id": 172,
														"name": "int56",
														"nodeType": "ElementaryTypeName",
														"src": "1481:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"id": 173,
													"nodeType": "ArrayTypeName",
													"src": "1481:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
														"typeString": "int56[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128s",
												"nameLocation": "1530:34:3",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1513:51:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 175,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "1513:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 176,
													"nodeType": "ArrayTypeName",
													"src": "1513:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1480:85:3"
									},
									"scope": 194,
									"src": "1386:180:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "1572:771:3",
										"text": "@notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n snapshot is taken and the second snapshot is taken.\n @param tickLower The lower tick of the range\n @param tickUpper The upper tick of the range\n @return tickCumulativeInside The snapshot of the tick accumulator for the range\n @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n @return secondsInside The snapshot of seconds per liquidity for the range"
									},
									"functionSelector": "a38807f2",
									"id": 193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "snapshotCumulativesInside",
									"nameLocation": "2357:25:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2389:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "2383:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 181,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2383:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2406:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "2400:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 183,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2400:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2382:34:3"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "tickCumulativeInside",
												"nameLocation": "2483:20:3",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "2477:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 186,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "2477:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "secondsPerLiquidityInsideX128",
												"nameLocation": "2525:29:3",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "2517:37:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 188,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2517:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "secondsInside",
												"nameLocation": "2575:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "2568:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 190,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2463:135:3"
									},
									"scope": 194,
									"src": "2348:251:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 195,
							"src": "293:2308:3",
							"usedErrors": []
						}
					],
					"src": "45:2557:3"
				},
				"id": 3
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
					"exportedSymbols": {
						"IUniswapV3PoolEvents": [
							313
						]
					},
					"id": 314,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolEvents",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "71:88:4",
								"text": "@title Events emitted by a pool\n @notice Contains all events emitted by the pool"
							},
							"fullyImplemented": true,
							"id": 313,
							"linearizedBaseContracts": [
								313
							],
							"name": "IUniswapV3PoolEvents",
							"nameLocation": "169:20:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "196:344:4",
										"text": "@notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
									},
									"eventSelector": "98636036cb66a9c19a37435efc1e90142190214e8abeb821bdba3f2990dd4c95",
									"id": 204,
									"name": "Initialize",
									"nameLocation": "551:10:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "570:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "562:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 199,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "590:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "584:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 201,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "584:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "561:34:4"
									},
									"src": "545:51:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "602:551:4",
										"text": "@notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"
									},
									"eventSelector": "7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde",
									"id": 221,
									"name": "Mint",
									"nameLocation": "1164:4:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1186:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1178:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1218:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1202:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1202:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1247:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1233:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 210,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1233:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "1280:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1266:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 212,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1266:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1307:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1299:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 214,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1331:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1323:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1356:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1348:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1168:201:4"
									},
									"src": "1158:212:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "1376:493:4",
										"text": "@notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"
									},
									"eventSelector": "70935338e69775456a85ddef226c395fb668b63fa0115f5f20610b388e6ca9c0",
									"id": 236,
									"name": "Collect",
									"nameLocation": "1880:7:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1913:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "1897:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1897:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1936:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "1928:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1928:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1969:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "1955:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 227,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1955:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2002:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "1988:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 229,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1988:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2029:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2021:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 231,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2054:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2046:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 233,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2046:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1887:180:4"
									},
									"src": "1874:194:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "2074:523:4",
										"text": "@notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"
									},
									"eventSelector": "0c396cd989a39f4459b5fa1aed6a9a8dcdbc45908acfd67e028cd568da98982c",
									"id": 251,
									"name": "Burn",
									"nameLocation": "2608:4:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2638:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2622:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2622:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2667:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2653:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 240,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2653:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2700:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2686:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 242,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2686:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2719:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 244,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2751:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2743:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2743:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2776:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2768:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:177:4"
									},
									"src": "2602:188:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "2796:600:4",
										"text": "@notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap"
									},
									"eventSelector": "c42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca67",
									"id": 268,
									"name": "Swap",
									"nameLocation": "3407:4:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3437:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3421:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3421:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3469:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3453:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3453:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3495:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3488:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 257,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3488:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3519:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3512:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 259,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3512:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "3544:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3536:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 261,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3536:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3574:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3566:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 263,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "3599:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3593:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 265,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3593:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3411:198:4"
									},
									"src": "3401:209:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "3616:562:4",
										"text": "@notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"
									},
									"eventSelector": "bdbdb71d7860376ba52b25a5028beea23581364a40522f6bcfb86bb1f2dca633",
									"id": 283,
									"name": "Flash",
									"nameLocation": "4189:5:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4220:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "4204:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4204:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4252:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "4236:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "4279:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "4271:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4271:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "4304:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "4296:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4296:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid0",
												"nameLocation": "4329:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "4321:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4321:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid1",
												"nameLocation": "4352:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "4344:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4344:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4194:169:4"
									},
									"src": "4183:181:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "4370:451:4",
										"text": "@notice Emitted by the pool for increases to the number of observations that can be stored\n @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n just before a mint/swap/burn.\n @param observationCardinalityNextOld The previous value of the next observation cardinality\n @param observationCardinalityNextNew The updated value of the next observation cardinality"
									},
									"eventSelector": "ac49e518f90a358f652e4400164f05a5d8f7e35e7747279bc3a93dbf584e125a",
									"id": 290,
									"name": "IncreaseObservationCardinalityNext",
									"nameLocation": "4832:34:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextOld",
												"nameLocation": "4883:29:4",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "4876:36:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 285,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4876:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextNew",
												"nameLocation": "4929:29:4",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "4922:36:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 287,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4922:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4866:98:4"
									},
									"src": "4826:139:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "4971:370:4",
										"text": "@notice Emitted when the protocol fee is changed by the pool\n @param feeProtocol0Old The previous value of the token0 protocol fee\n @param feeProtocol1Old The previous value of the token1 protocol fee\n @param feeProtocol0New The updated value of the token0 protocol fee\n @param feeProtocol1New The updated value of the token1 protocol fee"
									},
									"eventSelector": "973d8d92bb299f4af6ce49b52a8adb85ae46b9f214c4c4fc06ac77401237b133",
									"id": 301,
									"name": "SetFeeProtocol",
									"nameLocation": "5352:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0Old",
												"nameLocation": "5373:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "5367:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 292,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5367:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1Old",
												"nameLocation": "5396:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "5390:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 294,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5390:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0New",
												"nameLocation": "5419:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "5413:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 296,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5413:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1New",
												"nameLocation": "5442:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "5436:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 298,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5436:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5366:92:4"
									},
									"src": "5346:113:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "5465:384:4",
										"text": "@notice Emitted when the collected protocol fees are withdrawn by the factory owner\n @param sender The address that collects the protocol fees\n @param recipient The address that receives the collected protocol fees\n @param amount0 The amount of token0 protocol fees that is withdrawn\n @param amount0 The amount of token1 protocol fees that is withdrawn"
									},
									"eventSelector": "596b573906218d3411850b26a6b437d6c4522fdb43d2d2386263f86d50b8b151",
									"id": 312,
									"name": "CollectProtocol",
									"nameLocation": "5860:15:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5892:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5876:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5876:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5916:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5900:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5935:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5927:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 307,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5927:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5952:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5944:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 309,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5944:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5875:85:4"
									},
									"src": "5854:107:4"
								}
							],
							"scope": 314,
							"src": "159:5804:4",
							"usedErrors": []
						}
					],
					"src": "45:5919:4"
				},
				"id": 4
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
					"exportedSymbols": {
						"IUniswapV3PoolImmutables": [
							353
						]
					},
					"id": 354,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 315,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolImmutables",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 316,
								"nodeType": "StructuredDocumentation",
								"src": "71:153:5",
								"text": "@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
							},
							"fullyImplemented": false,
							"id": 353,
							"linearizedBaseContracts": [
								353
							],
							"name": "IUniswapV3PoolImmutables",
							"nameLocation": "234:24:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "265:138:5",
										"text": "@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"
									},
									"functionSelector": "c45a0155",
									"id": 322,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "417:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "424:2:5"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "450:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "450:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "449:9:5"
									},
									"scope": 353,
									"src": "408:51:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "465:113:5",
										"text": "@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "0dfe1681",
									"id": 328,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "592:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "598:2:5"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "624:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:9:5"
									},
									"scope": 353,
									"src": "583:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "639:114:5",
										"text": "@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "d21220a7",
									"id": 334,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "767:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "773:2:5"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "799:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:9:5"
									},
									"scope": 353,
									"src": "758:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "814:84:5",
										"text": "@notice The pool's fee in hundredths of a bip, i.e. 1e-6\n @return The fee"
									},
									"functionSelector": "ddca3f43",
									"id": 340,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fee",
									"nameLocation": "912:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "915:2:5"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "941:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 337,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "941:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "940:8:5"
									},
									"scope": 353,
									"src": "903:46:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "955:358:5",
										"text": "@notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"
									},
									"functionSelector": "d0c93a7c",
									"id": 346,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickSpacing",
									"nameLocation": "1327:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1338:2:5"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1364:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 343,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1364:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1363:7:5"
									},
									"scope": 353,
									"src": "1318:53:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "1377:363:5",
										"text": "@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"
									},
									"functionSelector": "70cf754a",
									"id": 352,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxLiquidityPerTick",
									"nameLocation": "1754:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:5"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "1799:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 349,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1798:9:5"
									},
									"scope": 353,
									"src": "1745:63:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 354,
							"src": "224:1586:5",
							"usedErrors": []
						}
					],
					"src": "45:1766:5"
				},
				"id": 5
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolOwnerActions": [
							379
						]
					},
					"id": 380,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 355,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolOwnerActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 356,
								"nodeType": "StructuredDocumentation",
								"src": "71:116:6",
								"text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
							},
							"fullyImplemented": false,
							"id": 379,
							"linearizedBaseContracts": [
								379
							],
							"name": "IUniswapV3PoolOwnerActions",
							"nameLocation": "197:26:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 357,
										"nodeType": "StructuredDocumentation",
										"src": "230:205:6",
										"text": "@notice Set the denominator of the protocol's % share of the fees\n @param feeProtocol0 new protocol fee for token0 of the pool\n @param feeProtocol1 new protocol fee for token1 of the pool"
									},
									"functionSelector": "8206a4d1",
									"id": 364,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeProtocol",
									"nameLocation": "449:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "feeProtocol0",
												"nameLocation": "470:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "464:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 358,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "464:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "feeProtocol1",
												"nameLocation": "490:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "484:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 360,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "484:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "463:40:6"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:0:6"
									},
									"scope": 379,
									"src": "440:73:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "519:483:6",
										"text": "@notice Collect the protocol fee accrued to the pool\n @param recipient The address to which collected protocol fees should be sent\n @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n @return amount0 The protocol fee collected in token0\n @return amount1 The protocol fee collected in token1"
									},
									"functionSelector": "85b66729",
									"id": 378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectProtocol",
									"nameLocation": "1016:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1049:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "1041:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1041:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nameLocation": "1076:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "1068:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 368,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1068:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nameLocation": "1110:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "1102:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 370,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1031:101:6"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1159:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "1151:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 373,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1176:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "1168:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 375,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1150:34:6"
									},
									"scope": 379,
									"src": "1007:178:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 380,
							"src": "187:1000:6",
							"usedErrors": []
						}
					],
					"src": "45:1143:6"
				},
				"id": 6
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolState": [
							487
						]
					},
					"id": 488,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 381,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 382,
								"nodeType": "StructuredDocumentation",
								"src": "71:169:7",
								"text": "@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"
							},
							"fullyImplemented": false,
							"id": 487,
							"linearizedBaseContracts": [
								487
							],
							"name": "IUniswapV3PoolState",
							"nameLocation": "250:19:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "276:1140:7",
										"text": "@notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n when accessed externally.\n @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n tick The current tick of the pool, i.e. according to the last tick transition that was run.\n This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n boundary.\n observationIndex The index of the last oracle observation that was written,\n observationCardinality The current maximum number of observations stored in the pool,\n observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n feeProtocol The protocol fee for both tokens of the pool.\n Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n unlocked Whether the pool is currently locked to reentrancy"
									},
									"functionSelector": "3850c7bd",
									"id": 400,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slot0",
									"nameLocation": "1430:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1435:2:7"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1506:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1498:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 385,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1498:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "1538:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1532:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 387,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1532:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "observationIndex",
												"nameLocation": "1563:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1556:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 389,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1556:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "observationCardinality",
												"nameLocation": "1600:22:7",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1593:29:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 391,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1593:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "1643:26:7",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1636:33:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 393,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1636:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "feeProtocol",
												"nameLocation": "1689:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1683:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 395,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1683:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "unlocked",
												"nameLocation": "1719:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1714:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1714:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1484:253:7"
									},
									"scope": 487,
									"src": "1421:317:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "1744:168:7",
										"text": "@notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "f3058399",
									"id": 406,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal0X128",
									"nameLocation": "1926:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1946:2:7"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "1972:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1972:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1971:9:7"
									},
									"scope": 487,
									"src": "1917:64:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "1987:168:7",
										"text": "@notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "46141319",
									"id": 412,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal1X128",
									"nameLocation": "2169:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2189:2:7"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2215:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2215:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2214:9:7"
									},
									"scope": 487,
									"src": "2160:64:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "2230:147:7",
										"text": "@notice The amounts of token0 and token1 that are owed to the protocol\n @dev Protocol fees will never exceed uint128 max in either token"
									},
									"functionSelector": "1ad8b03b",
									"id": 420,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "protocolFees",
									"nameLocation": "2391:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2403:2:7"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "2437:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "2429:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 415,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "2453:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "2445:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 417,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2428:32:7"
									},
									"scope": 487,
									"src": "2382:79:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "2467:150:7",
										"text": "@notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks"
									},
									"functionSelector": "1a686502",
									"id": 426,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidity",
									"nameLocation": "2631:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:2:7"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2666:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 423,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:9:7"
									},
									"scope": 487,
									"src": "2622:53:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "2681:1244:7",
										"text": "@notice Look up information about a specific tick in the pool\n @param tick The tick to look up\n @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n tick upper,\n liquidityNet how much liquidity changes when the pool price crosses the tick,\n feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n secondsOutside the seconds spent on the other side of the tick from the current tick,\n initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."
									},
									"functionSelector": "f30dba93",
									"id": 448,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ticks",
									"nameLocation": "3939:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "3951:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3945:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 428,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3945:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3944:12:7"
									},
									"returnParameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "liquidityGross",
												"nameLocation": "4025:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "4017:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 431,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4017:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "liquidityNet",
												"nameLocation": "4060:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "4053:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 433,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "4053:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "feeGrowthOutside0X128",
												"nameLocation": "4094:21:7",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "4086:29:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "feeGrowthOutside1X128",
												"nameLocation": "4137:21:7",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "4129:29:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4129:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "tickCumulativeOutside",
												"nameLocation": "4178:21:7",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "4172:27:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 439,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "4172:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "secondsPerLiquidityOutsideX128",
												"nameLocation": "4221:30:7",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "4213:38:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 441,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4213:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "secondsOutside",
												"nameLocation": "4272:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "4265:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 443,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4265:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "4305:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "4300:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 445,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4300:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:323:7"
									},
									"scope": 487,
									"src": "3930:397:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 449,
										"nodeType": "StructuredDocumentation",
										"src": "4333:99:7",
										"text": "@notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
									},
									"functionSelector": "5339c296",
									"id": 456,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickBitmap",
									"nameLocation": "4446:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "wordPosition",
												"nameLocation": "4463:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "4457:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 450,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "4457:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:20:7"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "4500:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4500:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4499:9:7"
									},
									"scope": 487,
									"src": "4437:72:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "4515:700:7",
										"text": "@notice Returns the information about a position by the position's key\n @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n @return _liquidity The amount of liquidity in the position,\n Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
									},
									"functionSelector": "514ea4bf",
									"id": 472,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nameLocation": "5229:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "5247:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "5239:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 458,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5239:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5238:13:7"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "_liquidity",
												"nameLocation": "5320:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "5312:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 461,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5312:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nameLocation": "5352:24:7",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "5344:32:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5344:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nameLocation": "5398:24:7",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "5390:32:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5390:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nameLocation": "5444:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "5436:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 467,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5436:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nameLocation": "5477:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "5469:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 469,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5469:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5298:200:7"
									},
									"scope": 487,
									"src": "5220:279:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "5505:749:7",
										"text": "@notice Returns data about a specific observation index\n @param index The element of the observations array to fetch\n @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n ago, rather than at a specific index in the array.\n @return blockTimestamp The timestamp of the observation,\n Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n Returns initialized whether the observation has been initialized and the values are safe to use"
									},
									"functionSelector": "252c09d7",
									"id": 486,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observations",
									"nameLocation": "6268:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "6289:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "6281:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6281:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6280:15:7"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "blockTimestamp",
												"nameLocation": "6363:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "6356:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 477,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6356:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "tickCumulative",
												"nameLocation": "6397:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "6391:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 479,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "6391:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128",
												"nameLocation": "6433:33:7",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "6425:41:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 481,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6425:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "6485:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "6480:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 483,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6480:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6342:164:7"
									},
									"scope": 487,
									"src": "6259:248:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 488,
							"src": "240:6269:7",
							"usedErrors": []
						}
					],
					"src": "45:6465:7"
				},
				"id": 7
			},
			"contracts/Master.sol": {
				"ast": {
					"absolutePath": "contracts/Master.sol",
					"exportedSymbols": {
						"Master": [
							570
						]
					},
					"id": 571,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 489,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Master",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 570,
							"linearizedBaseContracts": [
								570
							],
							"name": "Master",
							"nameLocation": "34:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "9ccc903d",
									"id": 495,
									"mutability": "mutable",
									"name": "PoolAddress",
									"nameLocation": "63:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 570,
									"src": "47:42:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 490,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "47:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307830",
												"id": 493,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "85:3:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0x0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"id": 492,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "77:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 491,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "77:7:8",
												"typeDescriptions": {}
											}
										},
										"id": 494,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "77:12:8",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7abc3964",
									"id": 501,
									"mutability": "mutable",
									"name": "CommissionDestination",
									"nameLocation": "111:21:8",
									"nodeType": "VariableDeclaration",
									"scope": 570,
									"src": "95:52:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 496,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "95:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307830",
												"id": 499,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "143:3:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0x0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"id": 498,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "135:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 497,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "135:7:8",
												"typeDescriptions": {}
											}
										},
										"id": 500,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "135:12:8",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e67cdafd",
									"id": 507,
									"mutability": "mutable",
									"name": "CoverAddress",
									"nameLocation": "169:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 570,
									"src": "153:43:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 502,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "153:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307830",
												"id": 505,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "192:3:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0x0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"id": 504,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "184:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 503,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "184:7:8",
												"typeDescriptions": {}
											}
										},
										"id": 506,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "184:12:8",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "88ea0751",
									"id": 513,
									"mutability": "mutable",
									"name": "MCRAddress",
									"nameLocation": "218:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 570,
									"src": "202:41:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 508,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "202:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307830",
												"id": 511,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "239:3:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0x0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"id": 510,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "231:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 509,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "231:7:8",
												"typeDescriptions": {}
											}
										},
										"id": 512,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "231:12:8",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ff5f1b9f",
									"id": 519,
									"mutability": "mutable",
									"name": "AssessmentAddress",
									"nameLocation": "265:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 570,
									"src": "249:48:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 514,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "249:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307830",
												"id": 517,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "293:3:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0x0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"id": 516,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "285:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 515,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "285:7:8",
												"typeDescriptions": {}
											}
										},
										"id": 518,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "285:12:8",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "347:32:8",
										"statements": [
											{
												"expression": {
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 524,
														"name": "PoolAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "357:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 525,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "371:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "357:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "357:15:8"
											}
										]
									},
									"functionSelector": "e9e15b4f",
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setPoolAddress",
									"nameLocation": "313:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "337:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "329:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "329:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "328:11:8"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "347:0:8"
									},
									"scope": 570,
									"src": "304:75:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 538,
										"nodeType": "Block",
										"src": "436:42:8",
										"statements": [
											{
												"expression": {
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 534,
														"name": "CommissionDestination",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "446:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 535,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "470:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "446:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "446:25:8"
											}
										]
									},
									"functionSelector": "6178cfca",
									"id": 539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setCommissionDestination",
									"nameLocation": "393:24:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "427:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "419:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "419:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "418:11:8"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "436:0:8"
									},
									"scope": 570,
									"src": "384:94:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "527:33:8",
										"statements": [
											{
												"expression": {
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 544,
														"name": "CoverAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 507,
														"src": "537:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 545,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 541,
														"src": "552:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "537:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "537:16:8"
											}
										]
									},
									"functionSelector": "e07ee06d",
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setCoverAddress",
									"nameLocation": "492:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "517:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "509:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "509:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "508:11:8"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "527:0:8"
									},
									"scope": 570,
									"src": "483:77:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "607:31:8",
										"statements": [
											{
												"expression": {
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 554,
														"name": "MCRAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "617:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 555,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 551,
														"src": "630:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "617:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 557,
												"nodeType": "ExpressionStatement",
												"src": "617:14:8"
											}
										]
									},
									"functionSelector": "7346d3f8",
									"id": 559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setMCRAddress",
									"nameLocation": "574:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "597:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "589:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "589:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "588:11:8"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "607:0:8"
									},
									"scope": 570,
									"src": "565:73:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 568,
										"nodeType": "Block",
										"src": "691:38:8",
										"statements": [
											{
												"expression": {
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 564,
														"name": "AssessmentAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "701:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 565,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 561,
														"src": "721:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "701:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 567,
												"nodeType": "ExpressionStatement",
												"src": "701:21:8"
											}
										]
									},
									"functionSelector": "75924419",
									"id": 569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setAssessmentAddress",
									"nameLocation": "652:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "681:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "673:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "673:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:11:8"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "691:0:8"
									},
									"scope": 570,
									"src": "643:86:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 571,
							"src": "25:706:8",
							"usedErrors": []
						}
					],
					"src": "0:731:8"
				},
				"id": 8
			},
			"contracts/cover/Cover.sol": {
				"ast": {
					"absolutePath": "contracts/cover/Cover.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						],
						"BuyCoverParams": [
							957
						],
						"Cover": [
							935
						],
						"CoverData": [
							982
						],
						"ETH_ASSET_ID": [
							581
						],
						"ICover": [
							1030
						],
						"ICoverNFT": [
							1074
						],
						"IERC165": [
							1234
						],
						"IERC721": [
							1222
						],
						"IMCR": [
							1084
						],
						"IPool": [
							1105
						],
						"IUniswapV3Pool": [
							67
						],
						"IUniswapV3PoolActions": [
							163
						],
						"IUniswapV3PoolDerivedState": [
							194
						],
						"IUniswapV3PoolEvents": [
							313
						],
						"IUniswapV3PoolImmutables": [
							353
						],
						"IUniswapV3PoolOwnerActions": [
							379
						],
						"IUniswapV3PoolState": [
							487
						],
						"Master": [
							570
						],
						"commissionRate": [
							584
						]
					},
					"id": 936,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 572,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".",
								"*"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:9"
						},
						{
							"absolutePath": "contracts/interfaces/ICover.sol",
							"file": "../interfaces/ICover.sol",
							"id": 573,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 936,
							"sourceUnit": 1031,
							"src": "24:34:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Master.sol",
							"file": "../Master.sol",
							"id": 574,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 936,
							"sourceUnit": 571,
							"src": "59:23:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IPool.sol",
							"file": "../interfaces/IPool.sol",
							"id": 575,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 936,
							"sourceUnit": 1106,
							"src": "83:33:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IMCR.sol",
							"file": "../interfaces/IMCR.sol",
							"id": 576,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 936,
							"sourceUnit": 1085,
							"src": "117:32:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"id": 577,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 936,
							"sourceUnit": 68,
							"src": "151:66:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"id": 578,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 936,
							"sourceUnit": 46,
							"src": "218:76:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"constant": true,
							"id": 581,
							"mutability": "constant",
							"name": "ETH_ASSET_ID",
							"nameLocation": "393:12:9",
							"nodeType": "VariableDeclaration",
							"scope": 936,
							"src": "377:32:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint32",
								"typeString": "uint32"
							},
							"typeName": {
								"id": 579,
								"name": "uint32",
								"nodeType": "ElementaryTypeName",
								"src": "377:6:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint32",
									"typeString": "uint32"
								}
							},
							"value": {
								"hexValue": "30",
								"id": 580,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "408:1:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_0_by_1",
									"typeString": "int_const 0"
								},
								"value": "0"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 584,
							"mutability": "constant",
							"name": "commissionRate",
							"nameLocation": "427:14:9",
							"nodeType": "VariableDeclaration",
							"scope": 936,
							"src": "411:36:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint32",
								"typeString": "uint32"
							},
							"typeName": {
								"id": 582,
								"name": "uint32",
								"nodeType": "ElementaryTypeName",
								"src": "411:6:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint32",
									"typeString": "uint32"
								}
							},
							"value": {
								"hexValue": "313031",
								"id": 583,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "444:3:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_101_by_1",
									"typeString": "int_const 101"
								},
								"value": "101"
							},
							"visibility": "internal"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 585,
										"name": "ICover",
										"nameLocations": [
											"474:6:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1030,
										"src": "474:6:9"
									},
									"id": 586,
									"nodeType": "InheritanceSpecifier",
									"src": "474:6:9"
								}
							],
							"canonicalName": "Cover",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 935,
							"linearizedBaseContracts": [
								935,
								1030
							],
							"name": "Cover",
							"nameLocation": "465:5:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 591,
									"mutability": "mutable",
									"name": "_coverData",
									"nameLocation": "522:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 935,
									"src": "487:45:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_CoverData_$982_storage_$",
										"typeString": "mapping(uint256 => struct CoverData)"
									},
									"typeName": {
										"id": 590,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 587,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "495:4:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "487:26:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_CoverData_$982_storage_$",
											"typeString": "mapping(uint256 => struct CoverData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 589,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 588,
												"name": "CoverData",
												"nameLocations": [
													"503:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 982,
												"src": "503:9:9"
											},
											"referencedDeclaration": 982,
											"src": "503:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_CoverData_$982_storage_ptr",
												"typeString": "struct CoverData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "7e9e1abe",
									"id": 593,
									"mutability": "mutable",
									"name": "activeCoverAmount",
									"nameLocation": "617:17:9",
									"nodeType": "VariableDeclaration",
									"scope": 935,
									"src": "602:32:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 592,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "602:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ee97f7f3",
									"id": 596,
									"mutability": "mutable",
									"name": "master",
									"nameLocation": "655:6:9",
									"nodeType": "VariableDeclaration",
									"scope": 935,
									"src": "641:20:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_Master_$570",
										"typeString": "contract Master"
									},
									"typeName": {
										"id": 595,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 594,
											"name": "Master",
											"nameLocations": [
												"641:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 570,
											"src": "641:6:9"
										},
										"referencedDeclaration": 570,
										"src": "641:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Master_$570",
											"typeString": "contract Master"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "42e53fcf",
									"id": 599,
									"mutability": "mutable",
									"name": "coverNFT",
									"nameLocation": "685:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 935,
									"src": "667:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ICoverNFT_$1074",
										"typeString": "contract ICoverNFT"
									},
									"typeName": {
										"id": 598,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 597,
											"name": "ICoverNFT",
											"nameLocations": [
												"667:9:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1074,
											"src": "667:9:9"
										},
										"referencedDeclaration": 1074,
										"src": "667:9:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ICoverNFT_$1074",
											"typeString": "contract ICoverNFT"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "778:170:9",
										"statements": [
											{
												"expression": {
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 607,
														"name": "coverNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "850:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ICoverNFT_$1074",
															"typeString": "contract ICoverNFT"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 608,
														"name": "_coverNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "861:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ICoverNFT_$1074",
															"typeString": "contract ICoverNFT"
														}
													},
													"src": "850:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ICoverNFT_$1074",
														"typeString": "contract ICoverNFT"
													}
												},
												"id": 610,
												"nodeType": "ExpressionStatement",
												"src": "850:20:9"
											},
											{
												"expression": {
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 611,
														"name": "activeCoverAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "880:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 612,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "900:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "880:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 614,
												"nodeType": "ExpressionStatement",
												"src": "880:21:9"
											},
											{
												"expression": {
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 615,
														"name": "master",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "911:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Master_$570",
															"typeString": "contract Master"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 617,
																"name": "masterAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 604,
																"src": "927:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 616,
															"name": "Master",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "920:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Master_$570_$",
																"typeString": "type(contract Master)"
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "920:21:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Master_$570",
															"typeString": "contract Master"
														}
													},
													"src": "911:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Master_$570",
														"typeString": "contract Master"
													}
												},
												"id": 620,
												"nodeType": "ExpressionStatement",
												"src": "911:30:9"
											}
										]
									},
									"id": 622,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "_coverNFT",
												"nameLocation": "731:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "721:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ICoverNFT_$1074",
													"typeString": "contract ICoverNFT"
												},
												"typeName": {
													"id": 601,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 600,
														"name": "ICoverNFT",
														"nameLocations": [
															"721:9:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1074,
														"src": "721:9:9"
													},
													"referencedDeclaration": 1074,
													"src": "721:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ICoverNFT_$1074",
														"typeString": "contract ICoverNFT"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "masterAddress",
												"nameLocation": "758:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "750:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "750:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "711:66:9"
									},
									"returnParameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "778:0:9"
									},
									"scope": 935,
									"src": "700:248:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1011
									],
									"body": {
										"id": 634,
										"nodeType": "Block",
										"src": "1032:43:9",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 630,
														"name": "_coverData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "1049:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_CoverData_$982_storage_$",
															"typeString": "mapping(uint256 => struct CoverData storage ref)"
														}
													},
													"id": 632,
													"indexExpression": {
														"id": 631,
														"name": "coverid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "1060:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1049:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CoverData_$982_storage",
														"typeString": "struct CoverData storage ref"
													}
												},
												"functionReturnParameters": 629,
												"id": 633,
												"nodeType": "Return",
												"src": "1042:26:9"
											}
										]
									},
									"functionSelector": "00407d2a",
									"id": 635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCoverData",
									"nameLocation": "962:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "coverid",
												"nameLocation": "980:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "975:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "975:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "974:14:9"
									},
									"returnParameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "1013:16:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_CoverData_$982_memory_ptr",
													"typeString": "struct CoverData"
												},
												"typeName": {
													"id": 627,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 626,
														"name": "CoverData",
														"nameLocations": [
															"1013:9:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 982,
														"src": "1013:9:9"
													},
													"referencedDeclaration": 982,
													"src": "1013:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CoverData_$982_storage_ptr",
														"typeString": "struct CoverData"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1012:19:9"
									},
									"scope": 935,
									"src": "953:122:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										990
									],
									"body": {
										"id": 714,
										"nodeType": "Block",
										"src": "1169:754:9",
										"statements": [
											{
												"expression": {
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 643,
														"name": "coverId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 641,
														"src": "1197:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 646,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1221:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1225:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1221:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 644,
																"name": "coverNFT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 599,
																"src": "1207:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ICoverNFT_$1074",
																	"typeString": "contract ICoverNFT"
																}
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1216:4:9",
															"memberName": "mint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1050,
															"src": "1207:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) external returns (uint256)"
															}
														},
														"id": 648,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1207:25:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1197:35:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 650,
												"nodeType": "ExpressionStatement",
												"src": "1197:35:9"
											},
											{
												"expression": {
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 651,
															"name": "_coverData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "1242:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_CoverData_$982_storage_$",
																"typeString": "mapping(uint256 => struct CoverData storage ref)"
															}
														},
														"id": 653,
														"indexExpression": {
															"id": 652,
															"name": "coverId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "1253:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1242:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_CoverData_$982_storage",
															"typeString": "struct CoverData storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1274:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"arguments": [
																	{
																		"id": 657,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 638,
																		"src": "1294:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BuyCoverParams_$957_calldata_ptr",
																			"typeString": "struct BuyCoverParams calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_BuyCoverParams_$957_calldata_ptr",
																			"typeString": "struct BuyCoverParams calldata"
																		}
																	],
																	"id": 656,
																	"name": "coverAmountInETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 736,
																	"src": "1277:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_BuyCoverParams_$957_calldata_ptr_$returns$_t_uint256_$",
																		"typeString": "function (struct BuyCoverParams calldata) returns (uint256)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1277:24:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 659,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1345:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1351:9:9",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1345:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 661,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "1383:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BuyCoverParams_$957_calldata_ptr",
																		"typeString": "struct BuyCoverParams calldata"
																	}
																},
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1390:6:9",
																"memberName": "period",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 952,
																"src": "1383:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 663,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "1422:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BuyCoverParams_$957_calldata_ptr",
																		"typeString": "struct BuyCoverParams calldata"
																	}
																},
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1429:6:9",
																"memberName": "token0",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 940,
																"src": "1422:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"id": 665,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "1449:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BuyCoverParams_$957_calldata_ptr",
																		"typeString": "struct BuyCoverParams calldata"
																	}
																},
																"id": 666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1456:6:9",
																"memberName": "token1",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 942,
																"src": "1449:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"id": 667,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "1476:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BuyCoverParams_$957_calldata_ptr",
																		"typeString": "struct BuyCoverParams calldata"
																	}
																},
																"id": 668,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1483:9:9",
																"memberName": "token0Qty",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 946,
																"src": "1476:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 669,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "1506:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BuyCoverParams_$957_calldata_ptr",
																		"typeString": "struct BuyCoverParams calldata"
																	}
																},
																"id": 670,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1513:9:9",
																"memberName": "token1Qty",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 944,
																"src": "1506:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 671,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "1536:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BuyCoverParams_$957_calldata_ptr",
																		"typeString": "struct BuyCoverParams calldata"
																	}
																},
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1543:15:9",
																"memberName": "lowerBoundRatio",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 948,
																"src": "1536:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 673,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "1572:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BuyCoverParams_$957_calldata_ptr",
																		"typeString": "struct BuyCoverParams calldata"
																	}
																},
																"id": 674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1579:15:9",
																"memberName": "upperBoundRatio",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 950,
																"src": "1572:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 675,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "1608:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BuyCoverParams_$957_calldata_ptr",
																		"typeString": "struct BuyCoverParams calldata"
																	}
																},
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1615:7:9",
																"memberName": "pairStr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 954,
																"src": "1608:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_calldata_ptr",
																	"typeString": "string calldata"
																}
															},
															{
																"expression": {
																	"id": 677,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "1636:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BuyCoverParams_$957_calldata_ptr",
																		"typeString": "struct BuyCoverParams calldata"
																	}
																},
																"id": 678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1643:16:9",
																"memberName": "initialPoolPrice",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 956,
																"src": "1636:23:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_string_calldata_ptr",
																	"typeString": "string calldata"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 654,
															"name": "CoverData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "1264:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_CoverData_$982_storage_ptr_$",
																"typeString": "type(struct CoverData storage pointer)"
															}
														},
														"id": 679,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1264:405:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_CoverData_$982_memory_ptr",
															"typeString": "struct CoverData memory"
														}
													},
													"src": "1242:427:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CoverData_$982_storage",
														"typeString": "struct CoverData storage ref"
													}
												},
												"id": 681,
												"nodeType": "ExpressionStatement",
												"src": "1242:427:9"
											},
											{
												"assignments": [
													683
												],
												"declarations": [
													{
														"constant": false,
														"id": 683,
														"mutability": "mutable",
														"name": "premiumToPay",
														"nameLocation": "1684:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 714,
														"src": "1679:17:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 682,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1679:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 687,
												"initialValue": {
													"arguments": [
														{
															"id": 685,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "1710:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BuyCoverParams_$957_calldata_ptr",
																"typeString": "struct BuyCoverParams calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_BuyCoverParams_$957_calldata_ptr",
																"typeString": "struct BuyCoverParams calldata"
															}
														],
														"id": 684,
														"name": "coverPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "1699:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_BuyCoverParams_$957_calldata_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct BuyCoverParams calldata) returns (uint256)"
														}
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1699:18:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1679:38:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 689,
															"name": "premiumToPay",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "1743:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 690,
															"name": "ETH_ASSET_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "1756:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														],
														"id": 688,
														"name": "retrievePayment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 867,
														"src": "1727:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (uint256,uint256) returns (bool)"
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1727:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "1727:42:9"
											},
											{
												"expression": {
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 693,
														"name": "activeCoverAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "1779:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"baseExpression": {
																"id": 694,
																"name": "_coverData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 591,
																"src": "1800:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_CoverData_$982_storage_$",
																	"typeString": "mapping(uint256 => struct CoverData storage ref)"
																}
															},
															"id": 696,
															"indexExpression": {
																"id": 695,
																"name": "coverId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 641,
																"src": "1811:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1800:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CoverData_$982_storage",
																"typeString": "struct CoverData storage ref"
															}
														},
														"id": 697,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1820:16:9",
														"memberName": "totalClaimAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 961,
														"src": "1800:36:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1779:57:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 699,
												"nodeType": "ExpressionStatement",
												"src": "1779:57:9"
											},
											{
												"assignments": [
													702
												],
												"declarations": [
													{
														"constant": false,
														"id": 702,
														"mutability": "mutable",
														"name": "mcr",
														"nameLocation": "1851:3:9",
														"nodeType": "VariableDeclaration",
														"scope": 714,
														"src": "1846:8:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMCR_$1084",
															"typeString": "contract IMCR"
														},
														"typeName": {
															"id": 701,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 700,
																"name": "IMCR",
																"nameLocations": [
																	"1846:4:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1084,
																"src": "1846:4:9"
															},
															"referencedDeclaration": 1084,
															"src": "1846:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMCR_$1084",
																"typeString": "contract IMCR"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 708,
												"initialValue": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 704,
																	"name": "master",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 596,
																	"src": "1862:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Master_$570",
																		"typeString": "contract Master"
																	}
																},
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1869:10:9",
																"memberName": "MCRAddress",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 513,
																"src": "1862:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																	"typeString": "function () view external returns (address)"
																}
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1862:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 703,
														"name": "IMCR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "1857:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IMCR_$1084_$",
															"typeString": "type(contract IMCR)"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1857:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMCR_$1084",
														"typeString": "contract IMCR"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1846:36:9"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 709,
															"name": "mcr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "1892:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMCR_$1084",
																"typeString": "contract IMCR"
															}
														},
														"id": 711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1896:17:9",
														"memberName": "updateMCRInternal",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1083,
														"src": "1892:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
															"typeString": "function () external"
														}
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1892:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 713,
												"nodeType": "ExpressionStatement",
												"src": "1892:23:9"
											}
										]
									},
									"functionSelector": "279f54ce",
									"id": 715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyCover",
									"nameLocation": "1089:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1122:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "1098:30:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BuyCoverParams_$957_calldata_ptr",
													"typeString": "struct BuyCoverParams"
												},
												"typeName": {
													"id": 637,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 636,
														"name": "BuyCoverParams",
														"nameLocations": [
															"1098:14:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 957,
														"src": "1098:14:9"
													},
													"referencedDeclaration": 957,
													"src": "1098:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BuyCoverParams_$957_storage_ptr",
														"typeString": "struct BuyCoverParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1097:32:9"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "coverId",
												"nameLocation": "1161:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "1156:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1156:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1155:14:9"
									},
									"scope": 935,
									"src": "1080:843:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1003
									],
									"body": {
										"id": 724,
										"nodeType": "Block",
										"src": "1981:46:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 720,
															"name": "coverNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "1998:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICoverNFT_$1074",
																"typeString": "contract ICoverNFT"
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2007:11:9",
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1055,
														"src": "1998:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:22:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 719,
												"id": 723,
												"nodeType": "Return",
												"src": "1991:29:9"
											}
										]
									},
									"functionSelector": "404730f4",
									"id": 725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "coverDataCount",
									"nameLocation": "1937:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1951:2:9"
									},
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "1975:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 717,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1975:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1974:7:9"
									},
									"scope": 935,
									"src": "1928:99:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 735,
										"nodeType": "Block",
										"src": "2119:37:9",
										"statements": [
											{
												"expression": {
													"hexValue": "31303030303030303030303030",
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2136:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000_by_1",
														"typeString": "int_const 1000000000000"
													},
													"value": "1000000000000"
												},
												"functionReturnParameters": 732,
												"id": 734,
												"nodeType": "Return",
												"src": "2129:20:9"
											}
										]
									},
									"functionSelector": "d05808f8",
									"id": 736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "coverAmountInETH",
									"nameLocation": "2041:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2082:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "2058:30:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BuyCoverParams_$957_calldata_ptr",
													"typeString": "struct BuyCoverParams"
												},
												"typeName": {
													"id": 727,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 726,
														"name": "BuyCoverParams",
														"nameLocations": [
															"2058:14:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 957,
														"src": "2058:14:9"
													},
													"referencedDeclaration": 957,
													"src": "2058:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BuyCoverParams_$957_storage_ptr",
														"typeString": "struct BuyCoverParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2057:32:9"
									},
									"returnParameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2112:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "2107:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 730,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2107:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2106:13:9"
									},
									"scope": 935,
									"src": "2032:124:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										998
									],
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "2240:47:9",
										"statements": [
											{
												"expression": {
													"hexValue": "31303030303030303030303030",
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2267:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000_by_1",
														"typeString": "int_const 1000000000000"
													},
													"value": "1000000000000"
												},
												"functionReturnParameters": 743,
												"id": 745,
												"nodeType": "Return",
												"src": "2260:20:9"
											}
										]
									},
									"functionSelector": "1f5e4583",
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "coverPrice",
									"nameLocation": "2170:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2205:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "2181:30:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BuyCoverParams_$957_calldata_ptr",
													"typeString": "struct BuyCoverParams"
												},
												"typeName": {
													"id": 738,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 737,
														"name": "BuyCoverParams",
														"nameLocations": [
															"2181:14:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 957,
														"src": "2181:14:9"
													},
													"referencedDeclaration": 957,
													"src": "2181:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BuyCoverParams_$957_storage_ptr",
														"typeString": "struct BuyCoverParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2180:32:9"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "2234:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "2229:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 741,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2229:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2228:12:9"
									},
									"scope": 935,
									"src": "2161:126:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 866,
										"nodeType": "Block",
										"src": "2421:1226:9",
										"statements": [
											{
												"assignments": [
													758
												],
												"declarations": [
													{
														"constant": false,
														"id": 758,
														"mutability": "mutable",
														"name": "_pool",
														"nameLocation": "2438:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 866,
														"src": "2432:11:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPool_$1105",
															"typeString": "contract IPool"
														},
														"typeName": {
															"id": 757,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 756,
																"name": "IPool",
																"nameLocations": [
																	"2432:5:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1105,
																"src": "2432:5:9"
															},
															"referencedDeclaration": 1105,
															"src": "2432:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPool_$1105",
																"typeString": "contract IPool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 761,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 759,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 898,
														"src": "2446:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IPool_$1105_$",
															"typeString": "function () view returns (contract IPool)"
														}
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2446:6:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPool_$1105",
														"typeString": "contract IPool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2432:20:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 762,
														"name": "paymentAsset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "2466:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 763,
														"name": "ETH_ASSET_ID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "2482:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "2466:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 865,
												"nodeType": "IfStatement",
												"src": "2462:1155:9",
												"trueBody": {
													"id": 864,
													"nodeType": "Block",
													"src": "2496:1121:9",
													"statements": [
														{
															"assignments": [
																766
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 766,
																	"mutability": "mutable",
																	"name": "premiumWithCommission",
																	"nameLocation": "2511:21:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 864,
																	"src": "2506:26:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 765,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "2506:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 772,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 767,
																		"name": "commissionRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 584,
																		"src": "2535:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 768,
																		"name": "premiumInPaymentAsset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 749,
																		"src": "2550:21:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2535:36:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2572:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "2535:40:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2506:69:9"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 773,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2593:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2597:5:9",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "2593:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "premiumInPaymentAsset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "2605:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2593:33:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 781,
															"nodeType": "IfStatement",
															"src": "2589:96:9",
															"trueBody": {
																"id": 780,
																"nodeType": "Block",
																"src": "2628:57:9",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 777,
																				"name": "InsufficientEthSent",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1023,
																				"src": "2653:19:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 778,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2653:21:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 779,
																		"nodeType": "RevertStatement",
																		"src": "2646:28:9"
																	}
																]
															}
														},
														{
															"assignments": [
																783
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 783,
																	"mutability": "mutable",
																	"name": "remainder",
																	"nameLocation": "2701:9:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 864,
																	"src": "2696:14:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 782,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "2696:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 788,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 784,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2713:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2717:5:9",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "2713:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 786,
																	"name": "premiumWithCommission",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 766,
																	"src": "2725:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2713:33:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2696:50:9"
														},
														{
															"id": 808,
															"nodeType": "Block",
															"src": "2754:270:9",
															"statements": [
																{
																	"assignments": [
																		790,
																		null
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 790,
																			"mutability": "mutable",
																			"name": "ok",
																			"nameLocation": "2872:2:9",
																			"nodeType": "VariableDeclaration",
																			"scope": 808,
																			"src": "2867:7:9",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"typeName": {
																				"id": 789,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "2867:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"visibility": "internal"
																		},
																		null
																	],
																	"id": 800,
																	"initialValue": {
																		"arguments": [
																			{
																				"hexValue": "",
																				"id": 798,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2940:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																					"typeString": "literal_string \"\""
																				},
																				"value": ""
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																					"typeString": "literal_string \"\""
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																						"typeString": "literal_string \"\""
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 793,
																							"name": "_pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 758,
																							"src": "2898:5:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IPool_$1105",
																								"typeString": "contract IPool"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_IPool_$1105",
																								"typeString": "contract IPool"
																							}
																						],
																						"id": 792,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "2890:7:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 791,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "2890:7:9",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 794,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2890:14:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"id": 795,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2905:4:9",
																				"memberName": "call",
																				"nodeType": "MemberAccess",
																				"src": "2890:19:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																					"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																				}
																			},
																			"id": 797,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"names": [
																				"value"
																			],
																			"nodeType": "FunctionCallOptions",
																			"options": [
																				{
																					"id": 796,
																					"name": "premiumInPaymentAsset",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 749,
																					"src": "2917:21:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"src": "2890:49:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																				"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																			}
																		},
																		"id": 799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2890:53:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "tuple(bool,bytes memory)"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "2866:77:9"
																},
																{
																	"condition": {
																		"id": 802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "2957:3:9",
																		"subExpression": {
																			"id": 801,
																			"name": "ok",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 790,
																			"src": "2958:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 807,
																	"nodeType": "IfStatement",
																	"src": "2953:63:9",
																	"trueBody": {
																		"id": 806,
																		"nodeType": "Block",
																		"src": "2962:54:9",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 803,
																						"name": "SendingEthToPoolFailed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1025,
																						"src": "2981:22:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 804,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2981:24:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 805,
																				"nodeType": "RevertStatement",
																				"src": "2974:31:9"
																			}
																		]
																	}
																}
															]
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 809,
																		"name": "premiumWithCommission",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 766,
																		"src": "3061:21:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 810,
																		"name": "premiumInPaymentAsset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 749,
																		"src": "3085:21:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3061:45:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3109:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3061:49:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 838,
															"nodeType": "IfStatement",
															"src": "3057:289:9",
															"trueBody": {
																"id": 837,
																"nodeType": "Block",
																"src": "3112:234:9",
																"statements": [
																	{
																		"assignments": [
																			815,
																			null
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 815,
																				"mutability": "mutable",
																				"name": "ok",
																				"nameLocation": "3128:2:9",
																				"nodeType": "VariableDeclaration",
																				"scope": 837,
																				"src": "3123:7:9",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"typeName": {
																					"id": 814,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "3123:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"visibility": "internal"
																			},
																			null
																		],
																		"id": 829,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "",
																					"id": 827,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3245:2:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																						"typeString": "literal_string \"\""
																					},
																					"value": ""
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																						"typeString": "literal_string \"\""
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																							"typeString": "literal_string \"\""
																						}
																					],
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"expression": {
																										"id": 818,
																										"name": "master",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 596,
																										"src": "3154:6:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_contract$_Master_$570",
																											"typeString": "contract Master"
																										}
																									},
																									"id": 819,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "3161:21:9",
																									"memberName": "CommissionDestination",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 501,
																									"src": "3154:28:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																										"typeString": "function () view external returns (address)"
																									}
																								},
																								"id": 820,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "3154:30:9",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"id": 817,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3146:7:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 816,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3146:7:9",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 821,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3146:39:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"id": 822,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3186:4:9",
																					"memberName": "call",
																					"nodeType": "MemberAccess",
																					"src": "3146:44:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																						"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																					}
																				},
																				"id": 826,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"names": [
																					"value"
																				],
																				"nodeType": "FunctionCallOptions",
																				"options": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 825,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 823,
																							"name": "premiumWithCommission",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 766,
																							"src": "3198:21:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 824,
																							"name": "premiumInPaymentAsset",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 749,
																							"src": "3222:21:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3198:45:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"src": "3146:98:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																					"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																				}
																			},
																			"id": 828,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3146:102:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																				"typeString": "tuple(bool,bytes memory)"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3122:126:9"
																	},
																	{
																		"condition": {
																			"id": 831,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "3262:3:9",
																			"subExpression": {
																				"id": 830,
																				"name": "ok",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 815,
																				"src": "3263:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 836,
																		"nodeType": "IfStatement",
																		"src": "3258:80:9",
																		"trueBody": {
																			"id": 835,
																			"nodeType": "Block",
																			"src": "3267:71:9",
																			"statements": [
																				{
																					"errorCall": {
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 832,
																							"name": "SendingEthToCommissionDestinationFailed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1027,
																							"src": "3286:39:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_error_pure$__$returns$__$",
																								"typeString": "function () pure"
																							}
																						},
																						"id": 833,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3286:41:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 834,
																					"nodeType": "RevertStatement",
																					"src": "3279:48:9"
																				}
																			]
																		}
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 839,
																	"name": "remainder",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "3358:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3370:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3358:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 863,
															"nodeType": "IfStatement",
															"src": "3354:252:9",
															"trueBody": {
																"id": 862,
																"nodeType": "Block",
																"src": "3373:233:9",
																"statements": [
																	{
																		"assignments": [
																			843,
																			null
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 843,
																				"mutability": "mutable",
																				"name": "ok",
																				"nameLocation": "3448:2:9",
																				"nodeType": "VariableDeclaration",
																				"scope": 862,
																				"src": "3443:7:9",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"typeName": {
																					"id": 842,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "3443:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"visibility": "internal"
																			},
																			null
																		],
																		"id": 854,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "",
																					"id": 852,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3509:2:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																						"typeString": "literal_string \"\""
																					},
																					"value": ""
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																						"typeString": "literal_string \"\""
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																							"typeString": "literal_string \"\""
																						}
																					],
																					"expression": {
																						"arguments": [
																							{
																								"expression": {
																									"id": 846,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967281,
																									"src": "3474:3:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 847,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "3478:6:9",
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"src": "3474:10:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"id": 845,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3466:7:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 844,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3466:7:9",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 848,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3466:19:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"id": 849,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3486:4:9",
																					"memberName": "call",
																					"nodeType": "MemberAccess",
																					"src": "3466:24:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																						"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																					}
																				},
																				"id": 851,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"names": [
																					"value"
																				],
																				"nodeType": "FunctionCallOptions",
																				"options": [
																					{
																						"id": 850,
																						"name": "remainder",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 783,
																						"src": "3498:9:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"src": "3466:42:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																					"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																				}
																			},
																			"id": 853,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3466:46:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																				"typeString": "tuple(bool,bytes memory)"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3442:70:9"
																	},
																	{
																		"condition": {
																			"id": 856,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "3526:3:9",
																			"subExpression": {
																				"id": 855,
																				"name": "ok",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 843,
																				"src": "3527:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 861,
																		"nodeType": "IfStatement",
																		"src": "3522:76:9",
																		"trueBody": {
																			"id": 860,
																			"nodeType": "Block",
																			"src": "3531:67:9",
																			"statements": [
																				{
																					"errorCall": {
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 857,
																							"name": "ReturningEthRemainderToSenderFailed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1029,
																							"src": "3550:35:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_error_pure$__$returns$__$",
																								"typeString": "function () pure"
																							}
																						},
																						"id": 858,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3550:37:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 859,
																					"nodeType": "RevertStatement",
																					"src": "3543:44:9"
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"id": 867,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "retrievePayment",
									"nameLocation": "2327:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "premiumInPaymentAsset",
												"nameLocation": "2348:21:9",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "2343:26:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 748,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2343:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "paymentAsset",
												"nameLocation": "2376:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "2371:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2371:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2342:47:9"
									},
									"returnParameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2413:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "2408:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 753,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2408:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2407:14:9"
									},
									"scope": 935,
									"src": "2318:1329:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1021
									],
									"body": {
										"id": 876,
										"nodeType": "Block",
										"src": "3699:40:9",
										"statements": [
											{
												"expression": {
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 872,
														"name": "activeCoverAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "3708:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 873,
														"name": "dec",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "3729:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3708:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 875,
												"nodeType": "ExpressionStatement",
												"src": "3708:24:9"
											}
										]
									},
									"functionSelector": "4b61a44b",
									"id": 877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decActiveCoverInETH",
									"nameLocation": "3662:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "dec",
												"nameLocation": "3687:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "3682:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3682:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3681:10:9"
									},
									"returnParameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3699:0:9"
									},
									"scope": 935,
									"src": "3653:86:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1016
									],
									"body": {
										"id": 884,
										"nodeType": "Block",
										"src": "3806:41:9",
										"statements": [
											{
												"expression": {
													"id": 882,
													"name": "activeCoverAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 593,
													"src": "3823:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 881,
												"id": 883,
												"nodeType": "Return",
												"src": "3816:24:9"
											}
										]
									},
									"functionSelector": "ed3b657a",
									"id": 885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalActiveCoverInETH",
									"nameLocation": "3753:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3774:2:9"
									},
									"returnParameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "3798:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3798:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3797:9:9"
									},
									"scope": 935,
									"src": "3744:103:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "3899:51:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 892,
																	"name": "master",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 596,
																	"src": "3922:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Master_$570",
																		"typeString": "contract Master"
																	}
																},
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3929:11:9",
																"memberName": "PoolAddress",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 495,
																"src": "3922:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																	"typeString": "function () view external returns (address)"
																}
															},
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3922:20:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 891,
														"name": "IPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1105,
														"src": "3916:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IPool_$1105_$",
															"typeString": "type(contract IPool)"
														}
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3916:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPool_$1105",
														"typeString": "contract IPool"
													}
												},
												"functionReturnParameters": 890,
												"id": 896,
												"nodeType": "Return",
												"src": "3909:34:9"
											}
										]
									},
									"id": 898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pool",
									"nameLocation": "3862:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3866:2:9"
									},
									"returnParameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "3892:5:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IPool_$1105",
													"typeString": "contract IPool"
												},
												"typeName": {
													"id": 888,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 887,
														"name": "IPool",
														"nameLocations": [
															"3892:5:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1105,
														"src": "3892:5:9"
													},
													"referencedDeclaration": 1105,
													"src": "3892:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPool_$1105",
														"typeString": "contract IPool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3891:7:9"
									},
									"scope": 935,
									"src": "3853:97:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 915,
										"nodeType": "Block",
										"src": "4024:100:9",
										"statements": [
											{
												"assignments": [
													906,
													null,
													null,
													null,
													null,
													null,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 906,
														"mutability": "mutable",
														"name": "sqrtPX",
														"nameLocation": "4045:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 915,
														"src": "4037:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 905,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "4037:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null,
													null,
													null,
													null
												],
												"id": 912,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 908,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 900,
																	"src": "4082:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 907,
																"name": "IUniswapV3Pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "4067:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$67_$",
																	"typeString": "type(contract IUniswapV3Pool)"
																}
															},
															"id": 909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4067:17:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$67",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 910,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4085:5:9",
														"memberName": "slot0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 400,
														"src": "4067:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
															"typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
														}
													},
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4067:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
														"typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4036:56:9"
											},
											{
												"expression": {
													"id": 913,
													"name": "sqrtPX",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 906,
													"src": "4111:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"functionReturnParameters": 904,
												"id": 914,
												"nodeType": "Return",
												"src": "4104:13:9"
											}
										]
									},
									"functionSelector": "4230a777",
									"id": 916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLiveDataUniswap",
									"nameLocation": "3965:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3992:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "3984:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3984:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3983:11:9"
									},
									"returnParameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "4016:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 902,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4016:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:9:9"
									},
									"scope": 935,
									"src": "3956:168:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 933,
										"nodeType": "Block",
										"src": "4187:100:9",
										"statements": [
											{
												"assignments": [
													null,
													924,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 924,
														"mutability": "mutable",
														"name": "unitPX",
														"nameLocation": "4203:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 933,
														"src": "4199:10:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 923,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "4199:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 930,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 926,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 918,
																	"src": "4237:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 925,
																"name": "AggregatorV3Interface",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "4215:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																	"typeString": "type(contract AggregatorV3Interface)"
																}
															},
															"id": 927,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4215:24:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 928,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4240:15:9",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "4215:40:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4215:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4197:60:9"
											},
											{
												"expression": {
													"id": 931,
													"name": "unitPX",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 924,
													"src": "4274:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 922,
												"id": 932,
												"nodeType": "Return",
												"src": "4267:13:9"
											}
										]
									},
									"functionSelector": "de071a0a",
									"id": 934,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUnitPX",
									"nameLocation": "4141:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "4159:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "4151:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4151:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4150:11:9"
									},
									"returnParameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "4183:3:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 920,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "4183:3:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4182:5:9"
									},
									"scope": 935,
									"src": "4132:155:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 936,
							"src": "456:3835:9",
							"usedErrors": [
								1023,
								1025,
								1027,
								1029
							]
						}
					],
					"src": "0:4292:9"
				},
				"id": 9
			},
			"contracts/interfaces/ICover.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/ICover.sol",
					"exportedSymbols": {
						"BuyCoverParams": [
							957
						],
						"CoverData": [
							982
						],
						"ICover": [
							1030
						],
						"ICoverNFT": [
							1074
						],
						"IERC165": [
							1234
						],
						"IERC721": [
							1222
						]
					},
					"id": 1031,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 937,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:10"
						},
						{
							"absolutePath": "contracts/interfaces/ICoverNFT.sol",
							"file": "./ICoverNFT.sol",
							"id": 938,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 1075,
							"src": "25:25:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"canonicalName": "BuyCoverParams",
							"id": 957,
							"members": [
								{
									"constant": false,
									"id": 940,
									"mutability": "mutable",
									"name": "token0",
									"nameLocation": "88:6:10",
									"nodeType": "VariableDeclaration",
									"scope": 957,
									"src": "80:14:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 939,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "80:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 942,
									"mutability": "mutable",
									"name": "token1",
									"nameLocation": "123:6:10",
									"nodeType": "VariableDeclaration",
									"scope": 957,
									"src": "115:14:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 941,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "115:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 944,
									"mutability": "mutable",
									"name": "token1Qty",
									"nameLocation": "156:9:10",
									"nodeType": "VariableDeclaration",
									"scope": 957,
									"src": "151:14:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 943,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "151:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 946,
									"mutability": "mutable",
									"name": "token0Qty",
									"nameLocation": "176:9:10",
									"nodeType": "VariableDeclaration",
									"scope": 957,
									"src": "171:14:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 945,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "171:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 948,
									"mutability": "mutable",
									"name": "lowerBoundRatio",
									"nameLocation": "196:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 957,
									"src": "191:20:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 947,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "191:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 950,
									"mutability": "mutable",
									"name": "upperBoundRatio",
									"nameLocation": "222:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 957,
									"src": "217:20:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 949,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "217:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 952,
									"mutability": "mutable",
									"name": "period",
									"nameLocation": "248:6:10",
									"nodeType": "VariableDeclaration",
									"scope": 957,
									"src": "243:11:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 951,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "243:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 954,
									"mutability": "mutable",
									"name": "pairStr",
									"nameLocation": "267:7:10",
									"nodeType": "VariableDeclaration",
									"scope": 957,
									"src": "260:14:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 953,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "260:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 956,
									"mutability": "mutable",
									"name": "initialPoolPrice",
									"nameLocation": "285:16:10",
									"nodeType": "VariableDeclaration",
									"scope": 957,
									"src": "280:21:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 955,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "280:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "BuyCoverParams",
							"nameLocation": "59:14:10",
							"nodeType": "StructDefinition",
							"scope": 1031,
							"src": "52:252:10",
							"visibility": "public"
						},
						{
							"canonicalName": "CoverData",
							"id": 982,
							"members": [
								{
									"constant": false,
									"id": 959,
									"mutability": "mutable",
									"name": "amountPaidOut",
									"nameLocation": "335:13:10",
									"nodeType": "VariableDeclaration",
									"scope": 982,
									"src": "327:21:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 958,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "327:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 961,
									"mutability": "mutable",
									"name": "totalClaimAmount",
									"nameLocation": "360:16:10",
									"nodeType": "VariableDeclaration",
									"scope": 982,
									"src": "352:24:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 960,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "352:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 963,
									"mutability": "mutable",
									"name": "start",
									"nameLocation": "388:5:10",
									"nodeType": "VariableDeclaration",
									"scope": 982,
									"src": "380:13:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 962,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "380:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 965,
									"mutability": "mutable",
									"name": "period",
									"nameLocation": "405:6:10",
									"nodeType": "VariableDeclaration",
									"scope": 982,
									"src": "397:14:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 964,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "397:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 967,
									"mutability": "mutable",
									"name": "token0",
									"nameLocation": "438:6:10",
									"nodeType": "VariableDeclaration",
									"scope": 982,
									"src": "430:14:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 966,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "430:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 969,
									"mutability": "mutable",
									"name": "token1",
									"nameLocation": "458:6:10",
									"nodeType": "VariableDeclaration",
									"scope": 982,
									"src": "450:14:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 968,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "450:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 971,
									"mutability": "mutable",
									"name": "token0Qty",
									"nameLocation": "478:9:10",
									"nodeType": "VariableDeclaration",
									"scope": 982,
									"src": "470:17:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 970,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "470:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 973,
									"mutability": "mutable",
									"name": "token1Qty",
									"nameLocation": "501:9:10",
									"nodeType": "VariableDeclaration",
									"scope": 982,
									"src": "493:17:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 972,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "493:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 975,
									"mutability": "mutable",
									"name": "lowerBoundRatio",
									"nameLocation": "525:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 982,
									"src": "517:23:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 974,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "517:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 977,
									"mutability": "mutable",
									"name": "upperBoundRatio",
									"nameLocation": "554:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 982,
									"src": "546:23:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 976,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "546:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 979,
									"mutability": "mutable",
									"name": "pairStr",
									"nameLocation": "582:7:10",
									"nodeType": "VariableDeclaration",
									"scope": 982,
									"src": "575:14:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 978,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "575:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 981,
									"mutability": "mutable",
									"name": "initialPoolPrice",
									"nameLocation": "600:16:10",
									"nodeType": "VariableDeclaration",
									"scope": 982,
									"src": "595:21:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 980,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "595:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "CoverData",
							"nameLocation": "313:9:10",
							"nodeType": "StructDefinition",
							"scope": 1031,
							"src": "306:313:10",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ICover",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1030,
							"linearizedBaseContracts": [
								1030
							],
							"name": "ICover",
							"nameLocation": "633:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "279f54ce",
									"id": 990,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "buyCover",
									"nameLocation": "728:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "761:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "737:30:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BuyCoverParams_$957_calldata_ptr",
													"typeString": "struct BuyCoverParams"
												},
												"typeName": {
													"id": 984,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 983,
														"name": "BuyCoverParams",
														"nameLocations": [
															"737:14:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 957,
														"src": "737:14:10"
													},
													"referencedDeclaration": 957,
													"src": "737:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BuyCoverParams_$957_storage_ptr",
														"typeString": "struct BuyCoverParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:32:10"
									},
									"returnParameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "coverId",
												"nameLocation": "800:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "795:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "795:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "794:14:10"
									},
									"scope": 1030,
									"src": "719:90:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f5e4583",
									"id": 998,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "coverPrice",
									"nameLocation": "824:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "859:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "835:30:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BuyCoverParams_$957_calldata_ptr",
													"typeString": "struct BuyCoverParams"
												},
												"typeName": {
													"id": 992,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 991,
														"name": "BuyCoverParams",
														"nameLocations": [
															"835:14:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 957,
														"src": "835:14:10"
													},
													"referencedDeclaration": 957,
													"src": "835:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BuyCoverParams_$957_storage_ptr",
														"typeString": "struct BuyCoverParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "834:32:10"
									},
									"returnParameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "890:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "885:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 995,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "885:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "884:12:10"
									},
									"scope": 1030,
									"src": "815:82:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "404730f4",
									"id": 1003,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "coverDataCount",
									"nameLocation": "1072:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1086:2:10"
									},
									"returnParameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "count",
												"nameLocation": "1117:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "1112:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1000,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1112:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1111:12:10"
									},
									"scope": 1030,
									"src": "1063:61:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "00407d2a",
									"id": 1011,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCoverData",
									"nameLocation": "1139:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "coverId",
												"nameLocation": "1157:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "1152:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1152:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1151:14:10"
									},
									"returnParameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "coverData",
												"nameLocation": "1206:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "1189:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_CoverData_$982_memory_ptr",
													"typeString": "struct CoverData"
												},
												"typeName": {
													"id": 1008,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1007,
														"name": "CoverData",
														"nameLocations": [
															"1189:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 982,
														"src": "1189:9:10"
													},
													"referencedDeclaration": 982,
													"src": "1189:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CoverData_$982_storage_ptr",
														"typeString": "struct CoverData"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1188:28:10"
									},
									"scope": 1030,
									"src": "1130:87:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ed3b657a",
									"id": 1016,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalActiveCoverInETH",
									"nameLocation": "1231:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1252:2:10"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "1277:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1277:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1276:6:10"
									},
									"scope": 1030,
									"src": "1222:61:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4b61a44b",
									"id": 1021,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decActiveCoverInETH",
									"nameLocation": "1297:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "1317:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1017,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1317:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1316:7:10"
									},
									"returnParameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1332:0:10"
									},
									"scope": 1030,
									"src": "1288:45:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"errorSelector": "f244866f",
									"id": 1023,
									"name": "InsufficientEthSent",
									"nameLocation": "1365:19:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1384:2:10"
									},
									"src": "1359:28:10"
								},
								{
									"errorSelector": "ab1ee9bf",
									"id": 1025,
									"name": "SendingEthToPoolFailed",
									"nameLocation": "1398:22:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1420:2:10"
									},
									"src": "1392:31:10"
								},
								{
									"errorSelector": "204633a4",
									"id": 1027,
									"name": "SendingEthToCommissionDestinationFailed",
									"nameLocation": "1434:39:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:10"
									},
									"src": "1428:48:10"
								},
								{
									"errorSelector": "cd57d4da",
									"id": 1029,
									"name": "ReturningEthRemainderToSenderFailed",
									"nameLocation": "1487:35:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1522:2:10"
									},
									"src": "1481:44:10"
								}
							],
							"scope": 1031,
							"src": "623:904:10",
							"usedErrors": [
								1023,
								1025,
								1027,
								1029
							]
						}
					],
					"src": "0:1527:10"
				},
				"id": 10
			},
			"contracts/interfaces/ICoverNFT.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/ICoverNFT.sol",
					"exportedSymbols": {
						"ICoverNFT": [
							1074
						],
						"IERC165": [
							1234
						],
						"IERC721": [
							1222
						]
					},
					"id": 1075,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
							"id": 1032,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1075,
							"sourceUnit": 1223,
							"src": "1:111:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1033,
										"name": "IERC721",
										"nameLocations": [
											"137:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1222,
										"src": "137:7:11"
									},
									"id": 1034,
									"nodeType": "InheritanceSpecifier",
									"src": "137:7:11"
								}
							],
							"canonicalName": "ICoverNFT",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1074,
							"linearizedBaseContracts": [
								1074,
								1222,
								1234
							],
							"name": "ICoverNFT",
							"nameLocation": "124:9:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "430c2081",
									"id": 1043,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedOrOwner",
									"nameLocation": "159:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "185:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "177:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "177:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "199:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "194:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "194:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "176:31:11"
									},
									"returnParameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "226:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1040,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "226:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "225:6:11"
									},
									"scope": 1074,
									"src": "150:82:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6a627842",
									"id": 1050,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "247:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "260:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "252:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "252:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "251:12:11"
									},
									"returnParameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "287:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "282:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1047,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "282:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "281:14:11"
									},
									"scope": 1074,
									"src": "238:58:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 1055,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "343:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "354:2:11"
									},
									"returnParameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "380:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1052,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "380:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:6:11"
									},
									"scope": 1074,
									"src": "334:52:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"errorSelector": "7c214f04",
									"id": 1057,
									"name": "NotOperator",
									"nameLocation": "398:11:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "409:2:11"
									},
									"src": "392:20:11"
								},
								{
									"errorSelector": "4d5e5fb3",
									"id": 1059,
									"name": "NotMinted",
									"nameLocation": "423:9:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "432:2:11"
									},
									"src": "417:18:11"
								},
								{
									"errorSelector": "c6de3f25",
									"id": 1061,
									"name": "WrongFrom",
									"nameLocation": "446:9:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "455:2:11"
									},
									"src": "440:18:11"
								},
								{
									"errorSelector": "9c8d2cd2",
									"id": 1063,
									"name": "InvalidRecipient",
									"nameLocation": "469:16:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "485:2:11"
									},
									"src": "463:25:11"
								},
								{
									"errorSelector": "0ae7cb04",
									"id": 1065,
									"name": "InvalidNewOperatorAddress",
									"nameLocation": "499:25:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "524:2:11"
									},
									"src": "493:34:11"
								},
								{
									"errorSelector": "edb7f571",
									"id": 1067,
									"name": "InvalidNewNFTDescriptorAddress",
									"nameLocation": "538:30:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "568:2:11"
									},
									"src": "532:39:11"
								},
								{
									"errorSelector": "ea8e4eb5",
									"id": 1069,
									"name": "NotAuthorized",
									"nameLocation": "582:13:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "595:2:11"
									},
									"src": "576:22:11"
								},
								{
									"errorSelector": "3da63931",
									"id": 1071,
									"name": "UnsafeRecipient",
									"nameLocation": "609:15:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "624:2:11"
									},
									"src": "603:24:11"
								},
								{
									"errorSelector": "ddefae28",
									"id": 1073,
									"name": "AlreadyMinted",
									"nameLocation": "638:13:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "651:2:11"
									},
									"src": "632:22:11"
								}
							],
							"scope": 1075,
							"src": "114:728:11",
							"usedErrors": [
								1057,
								1059,
								1061,
								1063,
								1065,
								1067,
								1069,
								1071,
								1073
							]
						}
					],
					"src": "1:841:11"
				},
				"id": 11
			},
			"contracts/interfaces/IMCR.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IMCR.sol",
					"exportedSymbols": {
						"IMCR": [
							1084
						]
					},
					"id": 1085,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMCR",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1084,
							"linearizedBaseContracts": [
								1084
							],
							"name": "IMCR",
							"nameLocation": "10:4:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "44936b10",
									"id": 1080,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMCR",
									"nameLocation": "29:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35:2:12"
									},
									"returnParameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "61:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1077,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "61:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60:6:12"
									},
									"scope": 1084,
									"src": "20:47:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "aa5da046",
									"id": 1083,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateMCRInternal",
									"nameLocation": "81:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "98:2:12"
									},
									"returnParameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "109:0:12"
									},
									"scope": 1084,
									"src": "72:38:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1085,
							"src": "0:112:12",
							"usedErrors": []
						}
					],
					"src": "0:112:12"
				},
				"id": 12
			},
			"contracts/interfaces/IPool.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IPool.sol",
					"exportedSymbols": {
						"IPool": [
							1105
						]
					},
					"id": 1106,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPool",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1105,
							"linearizedBaseContracts": [
								1105
							],
							"name": "IPool",
							"nameLocation": "10:5:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "06833ffd",
									"id": 1090,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "buyHEDH",
									"nameLocation": "31:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "minTokensOut",
												"nameLocation": "44:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "39:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "39:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38:19:13"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "74:0:13"
									},
									"scope": 1105,
									"src": "22:53:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bdf4872b",
									"id": 1097,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sellHEDH",
									"nameLocation": "89:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "103:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "98:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1091,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "98:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "minEthOut",
												"nameLocation": "121:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "116:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1093,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "116:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "97:34:13"
									},
									"returnParameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "140:0:13"
									},
									"scope": 1105,
									"src": "80:61:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "cf8d133f",
									"id": 1104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sendPayout",
									"nameLocation": "155:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "payoutAddress",
												"nameLocation": "182:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "166:29:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "166:15:13",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "202:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "197:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "197:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "165:44:13"
									},
									"returnParameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "218:0:13"
									},
									"scope": 1105,
									"src": "146:73:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1106,
							"src": "0:221:13",
							"usedErrors": []
						}
					],
					"src": "0:221:13"
				},
				"id": 13
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1234
						],
						"IERC721": [
							1222
						]
					},
					"id": 1223,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1107,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:25:14"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1109,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1223,
							"sourceUnit": 1235,
							"src": "135:62:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1108,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1234,
										"src": "143:7:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1111,
										"name": "IERC165",
										"nameLocations": [
											"288:7:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1234,
										"src": "288:7:14"
									},
									"id": 1112,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:14"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1110,
								"nodeType": "StructuredDocumentation",
								"src": "199:67:14",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1222,
							"linearizedBaseContracts": [
								1222,
								1234
							],
							"name": "IERC721",
							"nameLocation": "277:7:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1113,
										"nodeType": "StructuredDocumentation",
										"src": "302:88:14",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1121,
									"name": "Transfer",
									"nameLocation": "401:8:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "426:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "410:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "448:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "432:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "432:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "468:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "452:23:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "452:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:67:14"
									},
									"src": "395:82:14"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1122,
										"nodeType": "StructuredDocumentation",
										"src": "483:94:14",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1130,
									"name": "Approval",
									"nameLocation": "588:8:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "613:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "597:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1126,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "636:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "620:24:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1128,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "662:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "646:23:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "596:74:14"
									},
									"src": "582:89:14"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1131,
										"nodeType": "StructuredDocumentation",
										"src": "677:117:14",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1139,
									"name": "ApprovalForAll",
									"nameLocation": "805:14:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "836:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "820:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "859:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "843:24:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "843:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "874:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "869:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1136,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "869:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:64:14"
									},
									"src": "799:85:14"
								},
								{
									"documentation": {
										"id": 1140,
										"nodeType": "StructuredDocumentation",
										"src": "890:76:14",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "980:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "998:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "990:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:15:14"
									},
									"returnParameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1036:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "1028:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:17:14"
									},
									"scope": 1222,
									"src": "971:74:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1148,
										"nodeType": "StructuredDocumentation",
										"src": "1051:131:14",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1155,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1196:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1212:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "1204:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1204:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1203:17:14"
									},
									"returnParameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1252:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "1244:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1244:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:15:14"
									},
									"scope": 1222,
									"src": "1187:72:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1156,
										"nodeType": "StructuredDocumentation",
										"src": "1265:556:14",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1835:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1860:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "1852:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1852:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "1866:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1886:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "1878:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1910:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "1895:19:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1163,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1895:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1851:64:14"
									},
									"returnParameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1924:0:14"
									},
									"scope": 1222,
									"src": "1826:99:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1168,
										"nodeType": "StructuredDocumentation",
										"src": "1931:687:14",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2632:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2657:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "2649:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2649:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2671:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "2663:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2663:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2683:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "2675:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2648:43:14"
									},
									"returnParameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2700:0:14"
									},
									"scope": 1222,
									"src": "2623:78:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1178,
										"nodeType": "StructuredDocumentation",
										"src": "2707:732:14",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1187,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3453:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3474:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "3466:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3488:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "3480:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3480:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3500:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "3492:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3465:43:14"
									},
									"returnParameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3517:0:14"
									},
									"scope": 1222,
									"src": "3444:74:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1188,
										"nodeType": "StructuredDocumentation",
										"src": "3524:452:14",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1195,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3990:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4006:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "3998:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3998:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4018:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "4010:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4010:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3997:29:14"
									},
									"returnParameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4035:0:14"
									},
									"scope": 1222,
									"src": "3981:55:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1196,
										"nodeType": "StructuredDocumentation",
										"src": "4042:309:14",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1203,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4365:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4391:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "4383:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4383:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4406:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "4401:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1199,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4401:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4382:33:14"
									},
									"returnParameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4424:0:14"
									},
									"scope": 1222,
									"src": "4356:69:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1204,
										"nodeType": "StructuredDocumentation",
										"src": "4431:139:14",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1211,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4584:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4604:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "4596:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4596:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4595:17:14"
									},
									"returnParameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4644:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "4636:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4636:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4635:18:14"
									},
									"scope": 1222,
									"src": "4575:79:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1212,
										"nodeType": "StructuredDocumentation",
										"src": "4660:138:14",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1221,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4812:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4837:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "4829:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4829:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4852:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "4844:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4844:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4828:33:14"
									},
									"returnParameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "4885:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1218,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4885:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4884:6:14"
									},
									"scope": 1222,
									"src": "4803:88:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1223,
							"src": "267:4626:14",
							"usedErrors": []
						}
					],
					"src": "108:4786:14"
				},
				"id": 14
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1234
						]
					},
					"id": 1235,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1224,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1225,
								"nodeType": "StructuredDocumentation",
								"src": "126:279:15",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1234,
							"linearizedBaseContracts": [
								1234
							],
							"name": "IERC165",
							"nameLocation": "416:7:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1226,
										"nodeType": "StructuredDocumentation",
										"src": "430:340:15",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1233,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "784:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "809:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "802:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1227,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "802:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "801:20:15"
									},
									"returnParameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "845:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1230,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "845:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "844:6:15"
									},
									"scope": 1234,
									"src": "775:76:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1235,
							"src": "406:447:15",
							"usedErrors": []
						}
					],
					"src": "100:754:15"
				},
				"id": 15
			}
		}
	}
}
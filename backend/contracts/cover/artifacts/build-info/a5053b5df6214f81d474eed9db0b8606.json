{
	"id": "a5053b5df6214f81d474eed9db0b8606",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/cover/Cover.sol": {
				"content": "pragma solidity ^0.8.*;\nimport \"../interfaces/ICover.sol\";\nimport \"../Master.sol\";\nimport \"../interfaces/IPool.sol\";\nimport \"../interfaces/IMCR.sol\";\n\nimport \"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\n// Task 1: input spec, display price, pay to mint a CoverNFT and list CoverNFTs \n\nuint32 constant ETH_ASSET_ID = 0;\nuint32 constant commissionRate = 101; // 1%\n\ncontract Cover is ICover{\n\n    mapping(uint => CoverData) private _coverData;\n\n    // mapping(uint => CoverSegment[]) private _coverSegments;\n    uint256 public activeCoverAmount ;\n    Master public master;\n    ICoverNFT public  coverNFT;\n\n    constructor(\n        ICoverNFT _coverNFT,\n        address masterAddress\n    ) {\n        // in constructor we only initialize immutable fields\n        coverNFT = _coverNFT;\n        activeCoverAmount = 0;\n        master = Master(masterAddress);\n    }\n    function getCoverData(uint coverid) external view returns  (CoverData memory ) {\n        return _coverData[coverid];\n    }\n    function buyCover(BuyCoverParams calldata params) external payable returns (uint coverId){\n        \n        \n        coverId = coverNFT.mint(msg.sender);\n        _coverData[coverId] = CoverData(0, coverAmountInETH(params),// cover amount in cover asset\n            block.timestamp, // start\n            params.period, // period);\n            params.token0,\n            params.token1,\n            params.token0Qty,\n            params.token1Qty,\n            params.lowerBoundRatio,\n            params.upperBoundRatio,\n            params.pairStr\n        );\n        uint premiumToPay = coverPrice(params);\n        retrievePayment(premiumToPay,ETH_ASSET_ID);\n        activeCoverAmount += _coverData[coverId].totalClaimAmount;\n        IMCR mcr = IMCR(master.MCRAddress());\n        mcr.updateMCRInternal();\n\n    }\n    function coverDataCount() public view returns (uint ){\n        return coverNFT.totalSupply();\n    }\n    function coverAmountInETH(BuyCoverParams calldata params) public returns (uint amount){\n        return 1000000000000;\n    }\n    function coverPrice(BuyCoverParams calldata params) public returns (uint price){\n        return 1000000000000;\n    } // oracle is not involved\n    function retrievePayment(uint premiumInPaymentAsset, uint paymentAsset) internal returns (bool success){\n\n        IPool _pool = pool();\n        if (paymentAsset == ETH_ASSET_ID) {\n        uint premiumWithCommission = commissionRate*premiumInPaymentAsset/100;\n            if (msg.value < premiumInPaymentAsset) {\n                revert InsufficientEthSent();\n        }\n\n\n        uint remainder = msg.value - premiumWithCommission;\n      {\n        // send premium in eth to the pool\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool ok, /* data */) = address(_pool).call{value: premiumInPaymentAsset}(\"\");\n        if (!ok) {\n          revert SendingEthToPoolFailed();\n        }\n      }\n\n      // send commission\n      if (premiumWithCommission - premiumInPaymentAsset > 0) {\n        (bool ok, /* data */) = address(master.CommissionDestination()).call{value: premiumWithCommission - premiumInPaymentAsset}(\"\");\n        if (!ok) {\n          revert SendingEthToCommissionDestinationFailed();\n        }\n      }\n\n      if (remainder > 0) {\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool ok, /* data */) = address(msg.sender).call{value: remainder}(\"\");\n        if (!ok) {\n          revert ReturningEthRemainderToSenderFailed();\n        }\n      }\n    \n    } // pay premium to Pool\n\n    }\n\n    function decActiveCoverInETH(uint dec) public {\n       activeCoverAmount -= dec;\n    }\n    function totalActiveCoverInETH() public view returns (uint256){\n        return activeCoverAmount;\n    }\n\n    function pool() internal view returns (IPool) {\n        return IPool(master.PoolAddress());\n    }\n\n    function getLiveDataUniswap(address x) public view returns (uint160){\n          (uint160 sqrtPX, , , , , , ) = IUniswapV3Pool(x).slot0();\n          return sqrtPX;\n    }\n  \n    function getUnitPX(address x) public view returns (int){\n        (,int unitPX,,,)= AggregatorV3Interface(x).latestRoundData();\n        return unitPX;\n    }\n  }\n"
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(uint80 _roundId)\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\nimport './pool/IUniswapV3PoolImmutables.sol';\nimport './pool/IUniswapV3PoolState.sol';\nimport './pool/IUniswapV3PoolDerivedState.sol';\nimport './pool/IUniswapV3PoolActions.sol';\nimport './pool/IUniswapV3PoolOwnerActions.sol';\nimport './pool/IUniswapV3PoolEvents.sol';\n\n/// @title The interface for a Uniswap V3 Pool\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n/// to the ERC20 specification\n/// @dev The pool interface is broken up into many smaller pieces\ninterface IUniswapV3Pool is\n    IUniswapV3PoolImmutables,\n    IUniswapV3PoolState,\n    IUniswapV3PoolDerivedState,\n    IUniswapV3PoolActions,\n    IUniswapV3PoolOwnerActions,\n    IUniswapV3PoolEvents\n{\n\n}\n"
			},
			"contracts/interfaces/IMCR.sol": {
				"content": "interface IMCR{\n    function getMCR() view external returns (uint);\n    function updateMCRInternal() external;\n}"
			},
			"contracts/interfaces/IPool.sol": {
				"content": "interface IPool {\n    function buyHEDH(uint minTokensOut) external payable;\n    function sellHEDH(uint tokenAmount, uint minEthOut) external;\n    function sendPayout(address payable payoutAddress, uint amount) external;\n}"
			},
			"contracts/Master.sol": {
				"content": "pragma solidity ^0.8.0;\n\ncontract Master {\n    address public  PoolAddress = address(0x0);\n    address public  CommissionDestination = address(0x0);\n    address public  CoverAddress = address(0x0);\n    address public  MCRAddress = address(0x0);\n    address public  AssessmentAddress = address(0x0);\n\n    function setPoolAddress (address x) public {\n        PoolAddress = x;\n    }\n    function setCommissionDestination (address x) public{\n        CommissionDestination = x;\n    }\n    function setCoverAddress (address x) public {\n        CoverAddress = x;\n    }\n    function setMCRAddress (address x) public {\n        MCRAddress = x;\n    }\n    function setAssessmentAddress(address x) public {\n        AssessmentAddress = x;\n    }\n}"
			},
			"contracts/interfaces/ICover.sol": {
				"content": "pragma solidity >=0.5.0;\nimport \"./ICoverNFT.sol\";\n\nstruct BuyCoverParams {\n    address token0;\n    address token1;\n    uint token1Qty;\n    uint token0Qty;\n    uint lowerBoundRatio;\n    uint upperBoundRatio;\n    uint period;\n    string pairStr;\n}\n\nstruct CoverData {\n  uint256 amountPaidOut;\n  uint256 totalClaimAmount;\n  uint256 start;\n  uint256 period; // seconds\n \n    address token0;\n    address token1;\n    uint256 token0Qty;\n    uint256 token1Qty;\n    uint256 lowerBoundRatio;\n    uint256 upperBoundRatio;\n    string pairStr;\n}\n\n\n\ninterface ICover {\n    //mapping(uint => CoverData) private _coverData; _coverData[coverId]\n    function buyCover(BuyCoverParams calldata params) external payable returns (uint coverId); \n    function coverPrice(BuyCoverParams calldata params) external returns (uint price); // oracle is not involved\n    // function retrievePayment(uint premiumInPaymentAsset, uint paymentAsset) external returns (bool success); // pay premium to Pool\n    function coverDataCount() external view returns (uint count);\n\n    function getCoverData(uint coverId) external view returns (CoverData memory coverData);\n    function totalActiveCoverInETH()external view returns (uint);\n    function decActiveCoverInETH(uint ) external;\n    // ETH transfers\n    error InsufficientEthSent();\n    error SendingEthToPoolFailed();\n    error SendingEthToCommissionDestinationFailed();\n    error ReturningEthRemainderToSenderFailed();\n}"
			},
			"contracts/interfaces/ICoverNFT.sol": {
				"content": "\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol\";\n\ninterface ICoverNFT is IERC721{\n    function isApprovedOrOwner(address spender, uint tokenId) external returns (bool);\n\n    function mint(address to) external returns (uint tokenId); // coverdata is stored in Cover \n    function totalSupply() external view returns (uint);\n\n    error NotOperator();\n    error NotMinted();\n    error WrongFrom();\n    error InvalidRecipient();\n    error InvalidNewOperatorAddress();\n    error InvalidNewNFTDescriptorAddress();\n    error NotAuthorized();\n    error UnsafeRecipient();\n    error AlreadyMinted();\n    // function changeOperator(address newOperator) external;\n\n    // function totalSupply() external view returns (uint);\n\n    // function name() external view returns (string memory);\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\n\npragma solidity >= 0.8.0;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Events emitted by a pool\n/// @notice Contains all events emitted by the pool\ninterface IUniswapV3PoolEvents {\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\n\n    /// @notice Emitted when liquidity is minted for a given position\n    /// @param sender The address that minted the liquidity\n    /// @param owner The owner of the position and recipient of any minted liquidity\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity minted to the position range\n    /// @param amount0 How much token0 was required for the minted liquidity\n    /// @param amount1 How much token1 was required for the minted liquidity\n    event Mint(\n        address sender,\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted when fees are collected by the owner of a position\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n    /// @param owner The owner of the position for which fees are collected\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount0 The amount of token0 fees collected\n    /// @param amount1 The amount of token1 fees collected\n    event Collect(\n        address indexed owner,\n        address recipient,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount0,\n        uint128 amount1\n    );\n\n    /// @notice Emitted when a position's liquidity is removed\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n    /// @param owner The owner of the position for which liquidity is removed\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity to remove\n    /// @param amount0 The amount of token0 withdrawn\n    /// @param amount1 The amount of token1 withdrawn\n    event Burn(\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted by the pool for any swaps between token0 and token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the output of the swap\n    /// @param amount0 The delta of the token0 balance of the pool\n    /// @param amount1 The delta of the token1 balance of the pool\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n    /// @param liquidity The liquidity of the pool after the swap\n    /// @param tick The log base 1.0001 of price of the pool after the swap\n    event Swap(\n        address indexed sender,\n        address indexed recipient,\n        int256 amount0,\n        int256 amount1,\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        int24 tick\n    );\n\n    /// @notice Emitted by the pool for any flashes of token0/token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the tokens from flash\n    /// @param amount0 The amount of token0 that was flashed\n    /// @param amount1 The amount of token1 that was flashed\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\n    event Flash(\n        address indexed sender,\n        address indexed recipient,\n        uint256 amount0,\n        uint256 amount1,\n        uint256 paid0,\n        uint256 paid1\n    );\n\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n    /// just before a mint/swap/burn.\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\n    event IncreaseObservationCardinalityNext(\n        uint16 observationCardinalityNextOld,\n        uint16 observationCardinalityNextNew\n    );\n\n    /// @notice Emitted when the protocol fee is changed by the pool\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\n\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\n    /// @param sender The address that collects the protocol fees\n    /// @param recipient The address that receives the collected protocol fees\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissioned pool actions\n/// @notice Contains pool methods that may only be called by the factory owner\ninterface IUniswapV3PoolOwnerActions {\n    /// @notice Set the denominator of the protocol's % share of the fees\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\n\n    /// @notice Collect the protocol fee accrued to the pool\n    /// @param recipient The address to which collected protocol fees should be sent\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n    /// @return amount0 The protocol fee collected in token0\n    /// @return amount1 The protocol fee collected in token1\n    function collectProtocol(\n        address recipient,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissionless pool actions\n/// @notice Contains pool methods that can be called by anyone\ninterface IUniswapV3PoolActions {\n    /// @notice Sets the initial price for the pool\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\n    function initialize(uint160 sqrtPriceX96) external;\n\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\n    /// @param recipient The address for which the liquidity will be created\n    /// @param tickLower The lower tick of the position in which to add liquidity\n    /// @param tickUpper The upper tick of the position in which to add liquidity\n    /// @param amount The amount of liquidity to mint\n    /// @param data Any data that should be passed through to the callback\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    function mint(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount,\n        bytes calldata data\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Collects tokens owed to a position\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n    /// @param recipient The address which should receive the fees collected\n    /// @param tickLower The lower tick of the position for which to collect fees\n    /// @param tickUpper The upper tick of the position for which to collect fees\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n    /// @dev Fees must be collected separately via a call to #collect\n    /// @param tickLower The lower tick of the position for which to burn liquidity\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\n    /// @param amount How much liquidity to burn\n    /// @return amount0 The amount of token0 sent to the recipient\n    /// @return amount1 The amount of token1 sent to the recipient\n    function burn(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Swap token0 for token1, or token1 for token0\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n    /// @param recipient The address to receive the output of the swap\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\n    /// @param data Any data to be passed through to the callback\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\n    function swap(\n        address recipient,\n        bool zeroForOne,\n        int256 amountSpecified,\n        uint160 sqrtPriceLimitX96,\n        bytes calldata data\n    ) external returns (int256 amount0, int256 amount1);\n\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\n    /// @param recipient The address which will receive the token0 and token1 amounts\n    /// @param amount0 The amount of token0 to send\n    /// @param amount1 The amount of token1 to send\n    /// @param data Any data to be passed through to the callback\n    function flash(\n        address recipient,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external;\n\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n    /// the input observationCardinalityNext.\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that is not stored\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n/// blockchain. The functions here may have variable gas costs.\ninterface IUniswapV3PoolDerivedState {\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n    /// you must call it with secondsAgos = [3600, 0].\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n    /// timestamp\n    function observe(uint32[] calldata secondsAgos)\n        external\n        view\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\n\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n    /// snapshot is taken and the second snapshot is taken.\n    /// @param tickLower The lower tick of the range\n    /// @param tickUpper The upper tick of the range\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\n        external\n        view\n        returns (\n            int56 tickCumulativeInside,\n            uint160 secondsPerLiquidityInsideX128,\n            uint32 secondsInside\n        );\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that can change\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\n/// per transaction\ninterface IUniswapV3PoolState {\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n    /// when accessed externally.\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n    /// boundary.\n    /// observationIndex The index of the last oracle observation that was written,\n    /// observationCardinality The current maximum number of observations stored in the pool,\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n    /// feeProtocol The protocol fee for both tokens of the pool.\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n    /// unlocked Whether the pool is currently locked to reentrancy\n    function slot0()\n        external\n        view\n        returns (\n            uint160 sqrtPriceX96,\n            int24 tick,\n            uint16 observationIndex,\n            uint16 observationCardinality,\n            uint16 observationCardinalityNext,\n            uint8 feeProtocol,\n            bool unlocked\n        );\n\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal0X128() external view returns (uint256);\n\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal1X128() external view returns (uint256);\n\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\n    /// @dev Protocol fees will never exceed uint128 max in either token\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\n\n    /// @notice The currently in range liquidity available to the pool\n    /// @dev This value has no relationship to the total liquidity across all ticks\n    function liquidity() external view returns (uint128);\n\n    /// @notice Look up information about a specific tick in the pool\n    /// @param tick The tick to look up\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n    /// tick upper,\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\n    /// a specific position.\n    function ticks(int24 tick)\n        external\n        view\n        returns (\n            uint128 liquidityGross,\n            int128 liquidityNet,\n            uint256 feeGrowthOutside0X128,\n            uint256 feeGrowthOutside1X128,\n            int56 tickCumulativeOutside,\n            uint160 secondsPerLiquidityOutsideX128,\n            uint32 secondsOutside,\n            bool initialized\n        );\n\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\n\n    /// @notice Returns the information about a position by the position's key\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n    /// @return _liquidity The amount of liquidity in the position,\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\n    function positions(bytes32 key)\n        external\n        view\n        returns (\n            uint128 _liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    /// @notice Returns data about a specific observation index\n    /// @param index The element of the observations array to fetch\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n    /// ago, rather than at a specific index in the array.\n    /// @return blockTimestamp The timestamp of the observation,\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\n    function observations(uint256 index)\n        external\n        view\n        returns (\n            uint32 blockTimestamp,\n            int56 tickCumulative,\n            uint160 secondsPerLiquidityCumulativeX128,\n            bool initialized\n        );\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that never changes\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\ninterface IUniswapV3PoolImmutables {\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n    /// @return The contract address\n    function factory() external view returns (address);\n\n    /// @notice The first of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token0() external view returns (address);\n\n    /// @notice The second of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token1() external view returns (address);\n\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\n    /// @return The fee\n    function fee() external view returns (uint24);\n\n    /// @notice The pool tick spacing\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n    /// This value is an int24 to avoid casting even though it is always positive.\n    /// @return The tick spacing\n    function tickSpacing() external view returns (int24);\n\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n    /// @return The max amount of liquidity per tick\n    function maxLiquidityPerTick() external view returns (uint128);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.19;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"IUniswapV3Pool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The pool interface is broken up into many smaller pieces",
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "The interface for a Uniswap V3 Pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"liquidity()": "1a686502",
							"maxLiquidityPerTick()": "70cf754a",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"observations(uint256)": "252c09d7",
							"observe(uint32[])": "883bdbfd",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"setFeeProtocol(uint8,uint8)": "8206a4d1",
							"slot0()": "3850c7bd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2",
							"swap(address,bool,int256,uint160,bytes)": "128acb08",
							"tickBitmap(int16)": "5339c296",
							"tickSpacing()": "d0c93a7c",
							"ticks(int24)": "f30dba93",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":\"IUniswapV3Pool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"IUniswapV3PoolActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							}
						},
						"title": "Permissionless pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"swap(address,bool,int256,uint160,bytes)": "128acb08"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"title\":\"Permissionless pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"}},\"notice\":\"Contains pool methods that can be called by anyone\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":\"IUniswapV3PoolActions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							}
						},
						"notice": "Contains pool methods that can be called by anyone",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"IUniswapV3PoolDerivedState": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							}
						},
						"title": "Pool state that is not stored",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"observe(uint32[])": "883bdbfd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}}},\"title\":\"Pool state that is not stored\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"}},\"notice\":\"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":\"IUniswapV3PoolDerivedState\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							}
						},
						"notice": "Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"IUniswapV3PoolEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						}
					],
					"devdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"title": "Events emitted by a pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":\"IUniswapV3PoolEvents\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {},
						"notice": "Contains all events emitted by the pool",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"IUniswapV3PoolImmutables": {
					"abi": [
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "Pool state that never changes",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"maxLiquidityPerTick()": "70cf754a",
							"tickSpacing()": "d0c93a7c",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":\"IUniswapV3PoolImmutables\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "These parameters are fixed for a pool forever, i.e., the methods will always return the same values",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"IUniswapV3PoolOwnerActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							}
						},
						"title": "Permissioned pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"setFeeProtocol(uint8,uint8)": "8206a4d1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":\"IUniswapV3PoolOwnerActions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							}
						},
						"notice": "Contains pool methods that may only be called by the factory owner",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"IUniswapV3PoolState": {
					"abi": [
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							}
						},
						"title": "Pool state that can change",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"liquidity()": "1a686502",
							"observations(uint256)": "252c09d7",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"slot0()": "3850c7bd",
							"tickBitmap(int16)": "5339c296",
							"ticks(int24)": "f30dba93"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}}},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"}},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":\"IUniswapV3PoolState\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							}
						},
						"notice": "These methods compose the pool's state, and can change with any frequency including multiple times per transaction",
						"version": 1
					}
				}
			},
			"contracts/Master.sol": {
				"Master": {
					"abi": [
						{
							"inputs": [],
							"name": "AssessmentAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "CommissionDestination",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "CoverAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MCRAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PoolAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "x",
									"type": "address"
								}
							],
							"name": "setAssessmentAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "x",
									"type": "address"
								}
							],
							"name": "setCommissionDestination",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "x",
									"type": "address"
								}
							],
							"name": "setCoverAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "x",
									"type": "address"
								}
							],
							"name": "setMCRAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "x",
									"type": "address"
								}
							],
							"name": "setPoolAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Master.sol\":25:731  contract Master {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Master.sol\":85:88  0x0 */\n  0x00\n    /* \"contracts/Master.sol\":47:89  address public  PoolAddress = address(0x0) */\n  dup1\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Master.sol\":143:146  0x0 */\n  0x00\n    /* \"contracts/Master.sol\":95:147  address public  CommissionDestination = address(0x0) */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Master.sol\":192:195  0x0 */\n  0x00\n    /* \"contracts/Master.sol\":153:196  address public  CoverAddress = address(0x0) */\n  0x02\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Master.sol\":239:242  0x0 */\n  0x00\n    /* \"contracts/Master.sol\":202:243  address public  MCRAddress = address(0x0) */\n  0x03\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Master.sol\":293:296  0x0 */\n  0x00\n    /* \"contracts/Master.sol\":249:297  address public  AssessmentAddress = address(0x0) */\n  0x04\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Master.sol\":25:731  contract Master {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Master.sol\":25:731  contract Master {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9ccc903d\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x9ccc903d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe07ee06d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xe67cdafd\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xe9e15b4f\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xff5f1b9f\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x6178cfca\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x7346d3f8\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x75924419\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x7abc3964\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x88ea0751\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Master.sol\":384:478  function setCommissionDestination (address x) public{... */\n    tag_3:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      stop\n        /* \"contracts/Master.sol\":565:638  function setMCRAddress (address x) public {... */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_19:\n      tag_20\n      jump\t// in\n    tag_18:\n      stop\n        /* \"contracts/Master.sol\":643:729  function setAssessmentAddress(address x) public {... */\n    tag_5:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_22:\n      tag_23\n      jump\t// in\n    tag_21:\n      stop\n        /* \"contracts/Master.sol\":95:147  address public  CommissionDestination = address(0x0) */\n    tag_6:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Master.sol\":202:243  address public  MCRAddress = address(0x0) */\n    tag_7:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Master.sol\":47:89  address public  PoolAddress = address(0x0) */\n    tag_8:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Master.sol\":483:560  function setCoverAddress (address x) public {... */\n    tag_9:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n    tag_34:\n      stop\n        /* \"contracts/Master.sol\":153:196  address public  CoverAddress = address(0x0) */\n    tag_10:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Master.sol\":304:379  function setPoolAddress (address x) public {... */\n    tag_11:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n    tag_40:\n      stop\n        /* \"contracts/Master.sol\":249:297  address public  AssessmentAddress = address(0x0) */\n    tag_12:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Master.sol\":384:478  function setCommissionDestination (address x) public{... */\n    tag_17:\n        /* \"contracts/Master.sol\":470:471  x */\n      dup1\n        /* \"contracts/Master.sol\":446:467  CommissionDestination */\n      0x01\n      0x00\n        /* \"contracts/Master.sol\":446:471  CommissionDestination = x */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Master.sol\":384:478  function setCommissionDestination (address x) public{... */\n      pop\n      jump\t// out\n        /* \"contracts/Master.sol\":565:638  function setMCRAddress (address x) public {... */\n    tag_20:\n        /* \"contracts/Master.sol\":630:631  x */\n      dup1\n        /* \"contracts/Master.sol\":617:627  MCRAddress */\n      0x03\n      0x00\n        /* \"contracts/Master.sol\":617:631  MCRAddress = x */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Master.sol\":565:638  function setMCRAddress (address x) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/Master.sol\":643:729  function setAssessmentAddress(address x) public {... */\n    tag_23:\n        /* \"contracts/Master.sol\":721:722  x */\n      dup1\n        /* \"contracts/Master.sol\":701:718  AssessmentAddress */\n      0x04\n      0x00\n        /* \"contracts/Master.sol\":701:722  AssessmentAddress = x */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Master.sol\":643:729  function setAssessmentAddress(address x) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/Master.sol\":95:147  address public  CommissionDestination = address(0x0) */\n    tag_25:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Master.sol\":202:243  address public  MCRAddress = address(0x0) */\n    tag_29:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Master.sol\":47:89  address public  PoolAddress = address(0x0) */\n    tag_32:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Master.sol\":483:560  function setCoverAddress (address x) public {... */\n    tag_36:\n        /* \"contracts/Master.sol\":552:553  x */\n      dup1\n        /* \"contracts/Master.sol\":537:549  CoverAddress */\n      0x02\n      0x00\n        /* \"contracts/Master.sol\":537:553  CoverAddress = x */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Master.sol\":483:560  function setCoverAddress (address x) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/Master.sol\":153:196  address public  CoverAddress = address(0x0) */\n    tag_38:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Master.sol\":304:379  function setPoolAddress (address x) public {... */\n    tag_42:\n        /* \"contracts/Master.sol\":371:372  x */\n      dup1\n        /* \"contracts/Master.sol\":357:368  PoolAddress */\n      0x00\n      dup1\n        /* \"contracts/Master.sol\":357:372  PoolAddress = x */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Master.sol\":304:379  function setPoolAddress (address x) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/Master.sol\":249:297  address public  AssessmentAddress = address(0x0) */\n    tag_44:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_52:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_54:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_55:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_65\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_54\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_56:\n        /* \"#utility.yul\":641:665   */\n      tag_67\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_55\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_68\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_68:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_57:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_70\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_56\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_16:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_72\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_73\n      tag_52\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":917:1036   */\n    tag_72:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_74\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_57\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1294   */\n    tag_58:\n        /* \"#utility.yul\":1263:1287   */\n      tag_76\n        /* \"#utility.yul\":1281:1286   */\n      dup2\n        /* \"#utility.yul\":1263:1287   */\n      tag_55\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":1258:1261   */\n      dup3\n        /* \"#utility.yul\":1251:1288   */\n      mstore\n        /* \"#utility.yul\":1176:1294   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1300:1522   */\n    tag_27:\n        /* \"#utility.yul\":1393:1397   */\n      0x00\n        /* \"#utility.yul\":1431:1433   */\n      0x20\n        /* \"#utility.yul\":1420:1429   */\n      dup3\n        /* \"#utility.yul\":1416:1434   */\n      add\n        /* \"#utility.yul\":1408:1434   */\n      swap1\n      pop\n        /* \"#utility.yul\":1444:1515   */\n      tag_78\n        /* \"#utility.yul\":1512:1513   */\n      0x00\n        /* \"#utility.yul\":1501:1510   */\n      dup4\n        /* \"#utility.yul\":1497:1514   */\n      add\n        /* \"#utility.yul\":1488:1494   */\n      dup5\n        /* \"#utility.yul\":1444:1515   */\n      tag_58\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1300:1522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c72efe2fd6e2e609983ffb535836ee760ea96e0e0381ff41a2b864729349128964736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561015957600080fd5b506104c4806101696000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80639ccc903d116100665780639ccc903d14610133578063e07ee06d14610151578063e67cdafd1461016d578063e9e15b4f1461018b578063ff5f1b9f146101a75761009e565b80636178cfca146100a35780637346d3f8146100bf57806375924419146100db5780637abc3964146100f757806388ea075114610115575b600080fd5b6100bd60048036038101906100b89190610437565b6101c5565b005b6100d960048036038101906100d49190610437565b610209565b005b6100f560048036038101906100f09190610437565b61024d565b005b6100ff610291565b60405161010c9190610473565b60405180910390f35b61011d6102b7565b60405161012a9190610473565b60405180910390f35b61013b6102dd565b6040516101489190610473565b60405180910390f35b61016b60048036038101906101669190610437565b610301565b005b610175610345565b6040516101829190610473565b60405180910390f35b6101a560048036038101906101a09190610437565b61036b565b005b6101af6103ae565b6040516101bc9190610473565b60405180910390f35b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610404826103d9565b9050919050565b610414816103f9565b811461041f57600080fd5b50565b6000813590506104318161040b565b92915050565b60006020828403121561044d5761044c6103d4565b5b600061045b84828501610422565b91505092915050565b61046d816103f9565b82525050565b60006020820190506104886000830184610464565b9291505056fea2646970667358221220c72efe2fd6e2e609983ffb535836ee760ea96e0e0381ff41a2b864729349128964736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C4 DUP1 PUSH2 0x169 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9CCC903D GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x9CCC903D EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0xE07EE06D EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0xE67CDAFD EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xE9E15B4F EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0xFF5F1B9F EQ PUSH2 0x1A7 JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x6178CFCA EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x7346D3F8 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0x75924419 EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x7ABC3964 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x88EA0751 EQ PUSH2 0x115 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH2 0x1C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH2 0x209 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH2 0x24D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFF PUSH2 0x291 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH2 0x2B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH2 0x2DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH2 0x301 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x175 PUSH2 0x345 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH2 0x36B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AF PUSH2 0x3AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x404 DUP3 PUSH2 0x3D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x414 DUP2 PUSH2 0x3F9 JUMP JUMPDEST DUP2 EQ PUSH2 0x41F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x431 DUP2 PUSH2 0x40B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x44D JUMPI PUSH2 0x44C PUSH2 0x3D4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x45B DUP5 DUP3 DUP6 ADD PUSH2 0x422 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x46D DUP2 PUSH2 0x3F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x488 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x464 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0x2E INVALID 0x2F 0xD6 0xE2 0xE6 MULMOD SWAP9 EXTCODEHASH 0xFB MSTORE8 PC CALLDATASIZE 0xEE PUSH23 0xEA96E0E0381FF41A2B864729349128964736F6C634300 ADDMOD SGT STOP CALLER ",
							"sourceMap": "25:706:8:-:0;;;85:3;47:42;;;;;;;;;;;;;;;;;;;;143:3;95:52;;;;;;;;;;;;;;;;;;;;192:3;153:43;;;;;;;;;;;;;;;;;;;;239:3;202:41;;;;;;;;;;;;;;;;;;;;293:3;249:48;;;;;;;;;;;;;;;;;;;;25:706;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@AssessmentAddress_519": {
									"entryPoint": 942,
									"id": 519,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@CommissionDestination_501": {
									"entryPoint": 657,
									"id": 501,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@CoverAddress_507": {
									"entryPoint": 837,
									"id": 507,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MCRAddress_513": {
									"entryPoint": 695,
									"id": 513,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PoolAddress_495": {
									"entryPoint": 733,
									"id": 495,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setAssessmentAddress_569": {
									"entryPoint": 589,
									"id": 569,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setCommissionDestination_539": {
									"entryPoint": 453,
									"id": 539,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setCoverAddress_549": {
									"entryPoint": 769,
									"id": 549,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMCRAddress_559": {
									"entryPoint": 521,
									"id": 559,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setPoolAddress_529": {
									"entryPoint": 875,
									"id": 529,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1058,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1124,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1017,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 980,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1035,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1525:16",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:16"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:16"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:16",
														"type": ""
													}
												],
												"src": "7:75:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:16"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:16"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:16",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:16",
														"type": ""
													}
												],
												"src": "334:126:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:16",
														"type": ""
													}
												],
												"src": "466:96:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:16"
															},
															"nodeType": "YulIf",
															"src": "621:63:16"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:16",
														"type": ""
													}
												],
												"src": "568:122:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:16"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:16",
														"type": ""
													}
												],
												"src": "696:139:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:16"
															},
															"nodeType": "YulIf",
															"src": "917:119:16"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:16",
														"type": ""
													}
												],
												"src": "841:329:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1241:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1258:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1281:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1263:17:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1263:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1251:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:37:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:37:16"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1229:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1236:3:16",
														"type": ""
													}
												],
												"src": "1176:118:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1398:124:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1408:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1420:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1431:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1416:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1416:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1408:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1488:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1501:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1512:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1497:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1444:43:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1444:71:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1444:71:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1370:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1382:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1393:4:16",
														"type": ""
													}
												],
												"src": "1300:222:16"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061009e5760003560e01c80639ccc903d116100665780639ccc903d14610133578063e07ee06d14610151578063e67cdafd1461016d578063e9e15b4f1461018b578063ff5f1b9f146101a75761009e565b80636178cfca146100a35780637346d3f8146100bf57806375924419146100db5780637abc3964146100f757806388ea075114610115575b600080fd5b6100bd60048036038101906100b89190610437565b6101c5565b005b6100d960048036038101906100d49190610437565b610209565b005b6100f560048036038101906100f09190610437565b61024d565b005b6100ff610291565b60405161010c9190610473565b60405180910390f35b61011d6102b7565b60405161012a9190610473565b60405180910390f35b61013b6102dd565b6040516101489190610473565b60405180910390f35b61016b60048036038101906101669190610437565b610301565b005b610175610345565b6040516101829190610473565b60405180910390f35b6101a560048036038101906101a09190610437565b61036b565b005b6101af6103ae565b6040516101bc9190610473565b60405180910390f35b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610404826103d9565b9050919050565b610414816103f9565b811461041f57600080fd5b50565b6000813590506104318161040b565b92915050565b60006020828403121561044d5761044c6103d4565b5b600061045b84828501610422565b91505092915050565b61046d816103f9565b82525050565b60006020820190506104886000830184610464565b9291505056fea2646970667358221220c72efe2fd6e2e609983ffb535836ee760ea96e0e0381ff41a2b864729349128964736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9CCC903D GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x9CCC903D EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0xE07EE06D EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0xE67CDAFD EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xE9E15B4F EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0xFF5F1B9F EQ PUSH2 0x1A7 JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x6178CFCA EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x7346D3F8 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0x75924419 EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x7ABC3964 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x88EA0751 EQ PUSH2 0x115 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH2 0x1C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH2 0x209 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH2 0x24D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFF PUSH2 0x291 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH2 0x2B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH2 0x2DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH2 0x301 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x175 PUSH2 0x345 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH2 0x36B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AF PUSH2 0x3AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x404 DUP3 PUSH2 0x3D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x414 DUP2 PUSH2 0x3F9 JUMP JUMPDEST DUP2 EQ PUSH2 0x41F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x431 DUP2 PUSH2 0x40B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x44D JUMPI PUSH2 0x44C PUSH2 0x3D4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x45B DUP5 DUP3 DUP6 ADD PUSH2 0x422 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x46D DUP2 PUSH2 0x3F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x488 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x464 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0x2E INVALID 0x2F 0xD6 0xE2 0xE6 MULMOD SWAP9 EXTCODEHASH 0xFB MSTORE8 PC CALLDATASIZE 0xEE PUSH23 0xEA96E0E0381FF41A2B864729349128964736F6C634300 ADDMOD SGT STOP CALLER ",
							"sourceMap": "25:706:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;384:94;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;565:73;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;643:86;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;95:52;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;202:41;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;47:42;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;483:77;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;153:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;304:75;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;249:48;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;384:94;470:1;446:21;;:25;;;;;;;;;;;;;;;;;;384:94;:::o;565:73::-;630:1;617:10;;:14;;;;;;;;;;;;;;;;;;565:73;:::o;643:86::-;721:1;701:17;;:21;;;;;;;;;;;;;;;;;;643:86;:::o;95:52::-;;;;;;;;;;;;;:::o;202:41::-;;;;;;;;;;;;;:::o;47:42::-;;;;;;;;;;;;:::o;483:77::-;552:1;537:12;;:16;;;;;;;;;;;;;;;;;;483:77;:::o;153:43::-;;;;;;;;;;;;;:::o;304:75::-;371:1;357:11;;:15;;;;;;;;;;;;;;;;;;304:75;:::o;249:48::-;;;;;;;;;;;;;:::o;88:117:16:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:118::-;1263:24;1281:5;1263:24;:::i;:::-;1258:3;1251:37;1176:118;;:::o;1300:222::-;1393:4;1431:2;1420:9;1416:18;1408:26;;1444:71;1512:1;1501:9;1497:17;1488:6;1444:71;:::i;:::-;1300:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "244000",
								"executionCost": "121622",
								"totalCost": "365622"
							},
							"external": {
								"AssessmentAddress()": "2602",
								"CommissionDestination()": "2581",
								"CoverAddress()": "2558",
								"MCRAddress()": "2603",
								"PoolAddress()": "2511",
								"setAssessmentAddress(address)": "24767",
								"setCommissionDestination(address)": "24723",
								"setCoverAddress(address)": "24744",
								"setMCRAddress(address)": "24745",
								"setPoolAddress(address)": "24788"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 731,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 25,
									"end": 731,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 25,
									"end": 731,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 85,
									"end": 88,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 47,
									"end": 89,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 47,
									"end": 89,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 47,
									"end": 89,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 47,
									"end": 89,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 47,
									"end": 89,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 47,
									"end": 89,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 47,
									"end": 89,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 47,
									"end": 89,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 47,
									"end": 89,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 47,
									"end": 89,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 47,
									"end": 89,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 47,
									"end": 89,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 47,
									"end": 89,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 47,
									"end": 89,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 47,
									"end": 89,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 47,
									"end": 89,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 47,
									"end": 89,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 47,
									"end": 89,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 47,
									"end": 89,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 47,
									"end": 89,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 143,
									"end": 146,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 147,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 95,
									"end": 147,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 147,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 95,
									"end": 147,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 95,
									"end": 147,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 95,
									"end": 147,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 95,
									"end": 147,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 95,
									"end": 147,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 95,
									"end": 147,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 95,
									"end": 147,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 95,
									"end": 147,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 95,
									"end": 147,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 95,
									"end": 147,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 95,
									"end": 147,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 95,
									"end": 147,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 95,
									"end": 147,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 95,
									"end": 147,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 95,
									"end": 147,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 95,
									"end": 147,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 95,
									"end": 147,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 192,
									"end": 195,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 153,
									"end": 196,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 153,
									"end": 196,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 153,
									"end": 196,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 153,
									"end": 196,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 153,
									"end": 196,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 153,
									"end": 196,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 153,
									"end": 196,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 153,
									"end": 196,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 153,
									"end": 196,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 153,
									"end": 196,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 153,
									"end": 196,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 153,
									"end": 196,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 153,
									"end": 196,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 153,
									"end": 196,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 153,
									"end": 196,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 153,
									"end": 196,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 153,
									"end": 196,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 153,
									"end": 196,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 153,
									"end": 196,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 153,
									"end": 196,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 239,
									"end": 242,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 243,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 202,
									"end": 243,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 243,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 202,
									"end": 243,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 202,
									"end": 243,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 202,
									"end": 243,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 202,
									"end": 243,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 202,
									"end": 243,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 202,
									"end": 243,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 202,
									"end": 243,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 202,
									"end": 243,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 202,
									"end": 243,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 202,
									"end": 243,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 202,
									"end": 243,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 202,
									"end": 243,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 202,
									"end": 243,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 202,
									"end": 243,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 202,
									"end": 243,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 202,
									"end": 243,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 202,
									"end": 243,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 293,
									"end": 296,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 297,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 249,
									"end": 297,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 297,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 249,
									"end": 297,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 249,
									"end": 297,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 249,
									"end": 297,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 249,
									"end": 297,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 249,
									"end": 297,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 249,
									"end": 297,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 249,
									"end": 297,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 249,
									"end": 297,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 249,
									"end": 297,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 249,
									"end": 297,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 249,
									"end": 297,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 249,
									"end": 297,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 249,
									"end": 297,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 249,
									"end": 297,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 249,
									"end": 297,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 249,
									"end": 297,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 249,
									"end": 297,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 25,
									"end": 731,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 25,
									"end": 731,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 25,
									"end": 731,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 25,
									"end": 731,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 25,
									"end": 731,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 25,
									"end": 731,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 731,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 25,
									"end": 731,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 25,
									"end": 731,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 25,
									"end": 731,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 25,
									"end": 731,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 25,
									"end": 731,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 731,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 25,
									"end": 731,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 731,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 731,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 25,
									"end": 731,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 731,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c72efe2fd6e2e609983ffb535836ee760ea96e0e0381ff41a2b864729349128964736f6c63430008130033",
									".code": [
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "9CCC903D"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "9CCC903D"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "E07EE06D"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "E67CDAFD"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "E9E15B4F"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "FF5F1B9F"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "6178CFCA"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "7346D3F8"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "75924419"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "7ABC3964"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "88EA0751"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25,
											"end": 731,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 25,
											"end": 731,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 384,
											"end": 478,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 384,
											"end": 478,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 384,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 384,
											"end": 478,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 384,
											"end": 478,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 384,
											"end": 478,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 384,
											"end": 478,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 384,
											"end": 478,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 384,
											"end": 478,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 384,
											"end": 478,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 384,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 384,
											"end": 478,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 384,
											"end": 478,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 384,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 384,
											"end": 478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 384,
											"end": 478,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 384,
											"end": 478,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 384,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 384,
											"end": 478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 384,
											"end": 478,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 384,
											"end": 478,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 384,
											"end": 478,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 565,
											"end": 638,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 565,
											"end": 638,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 565,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 565,
											"end": 638,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 565,
											"end": 638,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 565,
											"end": 638,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 565,
											"end": 638,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 565,
											"end": 638,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 565,
											"end": 638,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 565,
											"end": 638,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 565,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 565,
											"end": 638,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 565,
											"end": 638,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 565,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 565,
											"end": 638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 565,
											"end": 638,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 565,
											"end": 638,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 565,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 565,
											"end": 638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 565,
											"end": 638,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 565,
											"end": 638,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 565,
											"end": 638,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 643,
											"end": 729,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 643,
											"end": 729,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 643,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 643,
											"end": 729,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 643,
											"end": 729,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 643,
											"end": 729,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 643,
											"end": 729,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 643,
											"end": 729,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 643,
											"end": 729,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 643,
											"end": 729,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 643,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 643,
											"end": 729,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 643,
											"end": 729,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 643,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 643,
											"end": 729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 643,
											"end": 729,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 643,
											"end": 729,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 643,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 643,
											"end": 729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 643,
											"end": 729,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 643,
											"end": 729,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 643,
											"end": 729,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 95,
											"end": 147,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 95,
											"end": 147,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 95,
											"end": 147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 95,
											"end": 147,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 95,
											"end": 147,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 95,
											"end": 147,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 95,
											"end": 147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 95,
											"end": 147,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 95,
											"end": 147,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 202,
											"end": 243,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 202,
											"end": 243,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 202,
											"end": 243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 202,
											"end": 243,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 243,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 202,
											"end": 243,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 202,
											"end": 243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 202,
											"end": 243,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 243,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 47,
											"end": 89,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 47,
											"end": 89,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 47,
											"end": 89,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 47,
											"end": 89,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 47,
											"end": 89,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 47,
											"end": 89,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 47,
											"end": 89,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 47,
											"end": 89,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 47,
											"end": 89,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 483,
											"end": 560,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 483,
											"end": 560,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 483,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 483,
											"end": 560,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 560,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 483,
											"end": 560,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 483,
											"end": 560,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 483,
											"end": 560,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 483,
											"end": 560,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 483,
											"end": 560,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 483,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 483,
											"end": 560,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 483,
											"end": 560,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 483,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 483,
											"end": 560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 483,
											"end": 560,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 483,
											"end": 560,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 483,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 483,
											"end": 560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 483,
											"end": 560,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 483,
											"end": 560,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 483,
											"end": 560,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 153,
											"end": 196,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 153,
											"end": 196,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 153,
											"end": 196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 153,
											"end": 196,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 153,
											"end": 196,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 153,
											"end": 196,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 153,
											"end": 196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 153,
											"end": 196,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 153,
											"end": 196,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 304,
											"end": 379,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 304,
											"end": 379,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 304,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 304,
											"end": 379,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 304,
											"end": 379,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 304,
											"end": 379,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 304,
											"end": 379,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 304,
											"end": 379,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 304,
											"end": 379,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 304,
											"end": 379,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 304,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 304,
											"end": 379,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 304,
											"end": 379,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 304,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 304,
											"end": 379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 304,
											"end": 379,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 304,
											"end": 379,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 304,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 304,
											"end": 379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 304,
											"end": 379,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 304,
											"end": 379,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 304,
											"end": 379,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 249,
											"end": 297,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 249,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 249,
											"end": 297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 249,
											"end": 297,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 249,
											"end": 297,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 249,
											"end": 297,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 249,
											"end": 297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 249,
											"end": 297,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 249,
											"end": 297,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 384,
											"end": 478,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 384,
											"end": 478,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 470,
											"end": 471,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 446,
											"end": 467,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 446,
											"end": 467,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 446,
											"end": 471,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 446,
											"end": 471,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 446,
											"end": 471,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 446,
											"end": 471,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 446,
											"end": 471,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 446,
											"end": 471,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 446,
											"end": 471,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 446,
											"end": 471,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 446,
											"end": 471,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 446,
											"end": 471,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 446,
											"end": 471,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 446,
											"end": 471,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 446,
											"end": 471,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 446,
											"end": 471,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 446,
											"end": 471,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 446,
											"end": 471,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 446,
											"end": 471,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 446,
											"end": 471,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 384,
											"end": 478,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 384,
											"end": 478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 565,
											"end": 638,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 565,
											"end": 638,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 630,
											"end": 631,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 617,
											"end": 627,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 617,
											"end": 627,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 617,
											"end": 631,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 617,
											"end": 631,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 617,
											"end": 631,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 617,
											"end": 631,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 617,
											"end": 631,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 617,
											"end": 631,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 617,
											"end": 631,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 617,
											"end": 631,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 617,
											"end": 631,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 617,
											"end": 631,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 617,
											"end": 631,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 617,
											"end": 631,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 617,
											"end": 631,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 617,
											"end": 631,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 617,
											"end": 631,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 617,
											"end": 631,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 617,
											"end": 631,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 617,
											"end": 631,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 565,
											"end": 638,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 565,
											"end": 638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 643,
											"end": 729,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 643,
											"end": 729,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 721,
											"end": 722,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 701,
											"end": 718,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 701,
											"end": 718,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 722,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 701,
											"end": 722,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 701,
											"end": 722,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 701,
											"end": 722,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 701,
											"end": 722,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 701,
											"end": 722,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 701,
											"end": 722,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 701,
											"end": 722,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 701,
											"end": 722,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 701,
											"end": 722,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 701,
											"end": 722,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 701,
											"end": 722,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 701,
											"end": 722,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 701,
											"end": 722,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 701,
											"end": 722,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 701,
											"end": 722,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 701,
											"end": 722,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 701,
											"end": 722,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 643,
											"end": 729,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 643,
											"end": 729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 95,
											"end": 147,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 95,
											"end": 147,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 95,
											"end": 147,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 95,
											"end": 147,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 95,
											"end": 147,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 95,
											"end": 147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 202,
											"end": 243,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 202,
											"end": 243,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 243,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 202,
											"end": 243,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 202,
											"end": 243,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 202,
											"end": 243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 47,
											"end": 89,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 47,
											"end": 89,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 47,
											"end": 89,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47,
											"end": 89,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 47,
											"end": 89,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 483,
											"end": 560,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 483,
											"end": 560,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 552,
											"end": 553,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 537,
											"end": 549,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 537,
											"end": 549,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 537,
											"end": 553,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 537,
											"end": 553,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 537,
											"end": 553,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 537,
											"end": 553,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 537,
											"end": 553,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 537,
											"end": 553,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 537,
											"end": 553,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 537,
											"end": 553,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 537,
											"end": 553,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 537,
											"end": 553,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 537,
											"end": 553,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 537,
											"end": 553,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 537,
											"end": 553,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 537,
											"end": 553,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 537,
											"end": 553,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 537,
											"end": 553,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 537,
											"end": 553,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 537,
											"end": 553,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 483,
											"end": 560,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 483,
											"end": 560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 153,
											"end": 196,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 153,
											"end": 196,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 153,
											"end": 196,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 153,
											"end": 196,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 153,
											"end": 196,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 153,
											"end": 196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 304,
											"end": 379,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 304,
											"end": 379,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 371,
											"end": 372,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 357,
											"end": 368,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 368,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 357,
											"end": 372,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 357,
											"end": 372,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 357,
											"end": 372,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 357,
											"end": 372,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 357,
											"end": 372,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 357,
											"end": 372,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 357,
											"end": 372,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 357,
											"end": 372,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 357,
											"end": 372,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 357,
											"end": 372,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 357,
											"end": 372,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 357,
											"end": 372,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 357,
											"end": 372,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 357,
											"end": 372,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 357,
											"end": 372,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 357,
											"end": 372,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 357,
											"end": 372,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 357,
											"end": 372,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 304,
											"end": 379,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 304,
											"end": 379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 249,
											"end": 297,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 249,
											"end": 297,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 297,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 249,
											"end": 297,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 249,
											"end": 297,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 249,
											"end": 297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 16,
											"value": "52"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 16,
											"value": "54"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 16,
											"value": "55"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "65"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "54"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 16,
											"value": "65"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 16,
											"value": "56"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "67"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "55"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 16,
											"value": "67"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "68"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 16,
											"value": "68"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 16,
											"value": "57"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "70"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "56"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 16,
											"value": "70"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 16,
											"value": "16"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "72"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "73"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "52"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 16,
											"value": "73"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 16,
											"value": "72"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "74"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "57"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 16,
											"value": "74"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "tag",
											"source": 16,
											"value": "58"
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "76"
										},
										{
											"begin": 1281,
											"end": 1286,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "55"
										},
										{
											"begin": 1263,
											"end": 1287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "tag",
											"source": 16,
											"value": "76"
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1258,
											"end": 1261,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1251,
											"end": 1288,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1176,
											"end": 1294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "tag",
											"source": 16,
											"value": "27"
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1397,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1431,
											"end": 1433,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1420,
											"end": 1429,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1416,
											"end": 1434,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1408,
											"end": 1434,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1408,
											"end": 1434,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "78"
										},
										{
											"begin": 1512,
											"end": 1513,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1510,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1497,
											"end": 1514,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "58"
										},
										{
											"begin": 1444,
											"end": 1515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "tag",
											"source": 16,
											"value": "78"
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1300,
											"end": 1522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"contracts/Master.sol",
								"contracts/cover/Cover.sol",
								"contracts/interfaces/ICover.sol",
								"contracts/interfaces/ICoverNFT.sol",
								"contracts/interfaces/IMCR.sol",
								"contracts/interfaces/IPool.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"AssessmentAddress()": "ff5f1b9f",
							"CommissionDestination()": "7abc3964",
							"CoverAddress()": "e67cdafd",
							"MCRAddress()": "88ea0751",
							"PoolAddress()": "9ccc903d",
							"setAssessmentAddress(address)": "75924419",
							"setCommissionDestination(address)": "6178cfca",
							"setCoverAddress(address)": "e07ee06d",
							"setMCRAddress(address)": "7346d3f8",
							"setPoolAddress(address)": "e9e15b4f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AssessmentAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CommissionDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CoverAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MCRAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"x\",\"type\":\"address\"}],\"name\":\"setAssessmentAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"x\",\"type\":\"address\"}],\"name\":\"setCommissionDestination\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"x\",\"type\":\"address\"}],\"name\":\"setCoverAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"x\",\"type\":\"address\"}],\"name\":\"setMCRAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"x\",\"type\":\"address\"}],\"name\":\"setPoolAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Master.sol\":\"Master\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Master.sol\":{\"keccak256\":\"0x3d3184b9516122e6fb70e4b5d512b6a0219abe38c4792b9cbf382dbffb880c65\",\"urls\":[\"bzz-raw://e1bb612708fc4fd742569a13ff47a2b359e21044f201e7eb99316a25c648203a\",\"dweb:/ipfs/QmZZwWpCLopjSVdjPNR1LxxrBXp7wFEgmqzYuQUQFh1z6J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 495,
								"contract": "contracts/Master.sol:Master",
								"label": "PoolAddress",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 501,
								"contract": "contracts/Master.sol:Master",
								"label": "CommissionDestination",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 507,
								"contract": "contracts/Master.sol:Master",
								"label": "CoverAddress",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 513,
								"contract": "contracts/Master.sol:Master",
								"label": "MCRAddress",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 519,
								"contract": "contracts/Master.sol:Master",
								"label": "AssessmentAddress",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/cover/Cover.sol": {
				"Cover": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract ICoverNFT",
									"name": "_coverNFT",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "masterAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "InsufficientEthSent",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReturningEthRemainderToSenderFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SendingEthToCommissionDestinationFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SendingEthToPoolFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "activeCoverAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "token0",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "token1",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "token1Qty",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "token0Qty",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lowerBoundRatio",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "upperBoundRatio",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "period",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "pairStr",
											"type": "string"
										}
									],
									"internalType": "struct BuyCoverParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "buyCover",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "coverId",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "token0",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "token1",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "token1Qty",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "token0Qty",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lowerBoundRatio",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "upperBoundRatio",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "period",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "pairStr",
											"type": "string"
										}
									],
									"internalType": "struct BuyCoverParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "coverAmountInETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "coverDataCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "coverNFT",
							"outputs": [
								{
									"internalType": "contract ICoverNFT",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "token0",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "token1",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "token1Qty",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "token0Qty",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lowerBoundRatio",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "upperBoundRatio",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "period",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "pairStr",
											"type": "string"
										}
									],
									"internalType": "struct BuyCoverParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "coverPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "dec",
									"type": "uint256"
								}
							],
							"name": "decActiveCoverInETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "coverid",
									"type": "uint256"
								}
							],
							"name": "getCoverData",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "amountPaidOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "totalClaimAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "start",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "period",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "token0",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "token1",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "token0Qty",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "token1Qty",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lowerBoundRatio",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "upperBoundRatio",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "pairStr",
											"type": "string"
										}
									],
									"internalType": "struct CoverData",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "x",
									"type": "address"
								}
							],
							"name": "getLiveDataUniswap",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "",
									"type": "uint160"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "x",
									"type": "address"
								}
							],
							"name": "getUnitPX",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "master",
							"outputs": [
								{
									"internalType": "contract Master",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalActiveCoverInETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/cover/Cover.sol\":456:4243  contract Cover is ICover{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/cover/Cover.sol\":700:948  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/cover/Cover.sol\":861:870  _coverNFT */\n  dup2\n    /* \"contracts/cover/Cover.sol\":850:858  coverNFT */\n  0x03\n  0x00\n    /* \"contracts/cover/Cover.sol\":850:870  coverNFT = _coverNFT */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/cover/Cover.sol\":900:901  0 */\n  0x00\n    /* \"contracts/cover/Cover.sol\":880:897  activeCoverAmount */\n  0x01\n    /* \"contracts/cover/Cover.sol\":880:901  activeCoverAmount = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/cover/Cover.sol\":927:940  masterAddress */\n  dup1\n    /* \"contracts/cover/Cover.sol\":911:917  master */\n  0x02\n  0x00\n    /* \"contracts/cover/Cover.sol\":911:941  master = Master(masterAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/cover/Cover.sol\":700:948  constructor(... */\n  pop\n  pop\n    /* \"contracts/cover/Cover.sol\":456:4243  contract Cover is ICover{... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_23\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:682   */\ntag_12:\n    /* \"#utility.yul\":623:630   */\n  0x00\n    /* \"#utility.yul\":652:676   */\n  tag_25\n    /* \"#utility.yul\":670:675   */\n  dup3\n    /* \"#utility.yul\":652:676   */\n  tag_11\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":641:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:846   */\ntag_13:\n    /* \"#utility.yul\":779:821   */\n  tag_27\n    /* \"#utility.yul\":815:820   */\n  dup2\n    /* \"#utility.yul\":779:821   */\n  tag_12\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":772:777   */\n  dup2\n    /* \"#utility.yul\":769:822   */\n  eq\n    /* \"#utility.yul\":759:840   */\n  tag_28\n  jumpi\n    /* \"#utility.yul\":836:837   */\n  0x00\n    /* \"#utility.yul\":833:834   */\n  dup1\n    /* \"#utility.yul\":826:838   */\n  revert\n    /* \"#utility.yul\":759:840   */\ntag_28:\n    /* \"#utility.yul\":688:846   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":852:1031   */\ntag_14:\n    /* \"#utility.yul\":927:932   */\n  0x00\n    /* \"#utility.yul\":958:964   */\n  dup2\n    /* \"#utility.yul\":952:965   */\n  mload\n    /* \"#utility.yul\":943:965   */\n  swap1\n  pop\n    /* \"#utility.yul\":974:1025   */\n  tag_30\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":974:1025   */\n  tag_13\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":852:1031   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1037:1159   */\ntag_15:\n    /* \"#utility.yul\":1110:1134   */\n  tag_32\n    /* \"#utility.yul\":1128:1133   */\n  dup2\n    /* \"#utility.yul\":1110:1134   */\n  tag_11\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1103:1108   */\n  dup2\n    /* \"#utility.yul\":1100:1135   */\n  eq\n    /* \"#utility.yul\":1090:1153   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":1149:1150   */\n  0x00\n    /* \"#utility.yul\":1146:1147   */\n  dup1\n    /* \"#utility.yul\":1139:1151   */\n  revert\n    /* \"#utility.yul\":1090:1153   */\ntag_33:\n    /* \"#utility.yul\":1037:1159   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1165:1308   */\ntag_16:\n    /* \"#utility.yul\":1222:1227   */\n  0x00\n    /* \"#utility.yul\":1253:1259   */\n  dup2\n    /* \"#utility.yul\":1247:1260   */\n  mload\n    /* \"#utility.yul\":1238:1260   */\n  swap1\n  pop\n    /* \"#utility.yul\":1269:1302   */\n  tag_35\n    /* \"#utility.yul\":1296:1301   */\n  dup2\n    /* \"#utility.yul\":1269:1302   */\n  tag_15\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":1165:1308   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1314:1857   */\ntag_3:\n    /* \"#utility.yul\":1411:1417   */\n  0x00\n    /* \"#utility.yul\":1419:1425   */\n  dup1\n    /* \"#utility.yul\":1468:1470   */\n  0x40\n    /* \"#utility.yul\":1456:1465   */\n  dup4\n    /* \"#utility.yul\":1447:1454   */\n  dup6\n    /* \"#utility.yul\":1443:1466   */\n  sub\n    /* \"#utility.yul\":1439:1471   */\n  slt\n    /* \"#utility.yul\":1436:1555   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1474:1553   */\n  tag_38\n  tag_8\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1436:1555   */\ntag_37:\n    /* \"#utility.yul\":1594:1595   */\n  0x00\n    /* \"#utility.yul\":1619:1701   */\n  tag_39\n    /* \"#utility.yul\":1693:1700   */\n  dup6\n    /* \"#utility.yul\":1684:1690   */\n  dup3\n    /* \"#utility.yul\":1673:1682   */\n  dup7\n    /* \"#utility.yul\":1669:1691   */\n  add\n    /* \"#utility.yul\":1619:1701   */\n  tag_14\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1609:1701   */\n  swap3\n  pop\n    /* \"#utility.yul\":1565:1711   */\n  pop\n    /* \"#utility.yul\":1750:1752   */\n  0x20\n    /* \"#utility.yul\":1776:1840   */\n  tag_40\n    /* \"#utility.yul\":1832:1839   */\n  dup6\n    /* \"#utility.yul\":1823:1829   */\n  dup3\n    /* \"#utility.yul\":1812:1821   */\n  dup7\n    /* \"#utility.yul\":1808:1830   */\n  add\n    /* \"#utility.yul\":1776:1840   */\n  tag_16\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1766:1840   */\n  swap2\n  pop\n    /* \"#utility.yul\":1721:1850   */\n  pop\n    /* \"#utility.yul\":1314:1857   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/cover/Cover.sol\":456:4243  contract Cover is ICover{... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/cover/Cover.sol\":456:4243  contract Cover is ICover{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7e9e1abe\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x7e9e1abe\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa71467a8\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xc9b10d3f\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xde071a0a\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xed3b657a\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xee97f7f3\n      eq\n      tag_13\n      jumpi\n      jump(tag_1)\n    tag_14:\n      dup1\n      0x407d2a\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x404730f4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4230a777\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x42e53fcf\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x4b61a44b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x6c57b95d\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/cover/Cover.sol\":953:1075  function getCoverData(uint coverid) external view returns  (CoverData memory ) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/cover/Cover.sol\":1891:1990  function coverDataCount() public view returns (uint ){... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/cover/Cover.sol\":3908:4076  function getLiveDataUniswap(address x) public view returns (uint160){... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/cover/Cover.sol\":667:693  ICoverNFT public  coverNFT */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/cover/Cover.sol\":3605:3691  function decActiveCoverInETH(uint dec) public {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n    tag_40:\n      stop\n        /* \"contracts/cover/Cover.sol\":2123:2239  function coverPrice(BuyCoverParams calldata params) public returns (uint price){... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/cover/Cover.sol\":602:634  uint256 public activeCoverAmount */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/cover/Cover.sol\":1080:1886  function buyCover(BuyCoverParams calldata params) external payable returns (uint coverId){... */\n    tag_9:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/cover/Cover.sol\":1995:2118  function coverAmountInETH(BuyCoverParams calldata params) public returns (uint amount){... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/cover/Cover.sol\":4084:4239  function getUnitPX(address x) public view returns (int){... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/cover/Cover.sol\":3696:3799  function totalActiveCoverInETH() public view returns (uint256){... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/cover/Cover.sol\":641:661  Master public master */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/cover/Cover.sol\":953:1075  function getCoverData(uint coverid) external view returns  (CoverData memory ) {... */\n    tag_19:\n        /* \"contracts/cover/Cover.sol\":1013:1029  CoverData memory */\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"contracts/cover/Cover.sol\":1049:1059  _coverData */\n      0x00\n        /* \"contracts/cover/Cover.sol\":1049:1068  _coverData[coverid] */\n      dup1\n        /* \"contracts/cover/Cover.sol\":1060:1067  coverid */\n      dup4\n        /* \"contracts/cover/Cover.sol\":1049:1068  _coverData[coverid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/cover/Cover.sol\":1042:1068  return _coverData[coverid] */\n      mload(0x40)\n      dup1\n      0x0160\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x06\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x07\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x08\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x09\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x0a\n      dup3\n      add\n      dup1\n      sload\n      tag_80\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_82\n      swap1\n      tag_81\n      jump\t// in\n    tag_82:\n      dup1\n      iszero\n      tag_83\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_84\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_83)\n    tag_84:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_85:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_85\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_83:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/cover/Cover.sol\":953:1075  function getCoverData(uint coverid) external view returns  (CoverData memory ) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/cover/Cover.sol\":1891:1990  function coverDataCount() public view returns (uint ){... */\n    tag_24:\n        /* \"contracts/cover/Cover.sol\":1938:1942  uint */\n      0x00\n        /* \"contracts/cover/Cover.sol\":1961:1969  coverNFT */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/cover/Cover.sol\":1961:1981  coverNFT.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"contracts/cover/Cover.sol\":1961:1983  coverNFT.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_88\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_88:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n        /* \"contracts/cover/Cover.sol\":1954:1983  return coverNFT.totalSupply() */\n      swap1\n      pop\n        /* \"contracts/cover/Cover.sol\":1891:1990  function coverDataCount() public view returns (uint ){... */\n      swap1\n      jump\t// out\n        /* \"contracts/cover/Cover.sol\":3908:4076  function getLiveDataUniswap(address x) public view returns (uint160){... */\n    tag_31:\n        /* \"contracts/cover/Cover.sol\":3968:3975  uint160 */\n      0x00\n        /* \"contracts/cover/Cover.sol\":3989:4003  uint160 sqrtPX */\n      dup1\n        /* \"contracts/cover/Cover.sol\":4034:4035  x */\n      dup3\n        /* \"contracts/cover/Cover.sol\":4019:4042  IUniswapV3Pool(x).slot0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3850c7bd\n        /* \"contracts/cover/Cover.sol\":4019:4044  IUniswapV3Pool(x).slot0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xe0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_93\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n        /* \"contracts/cover/Cover.sol\":3988:4044  (uint160 sqrtPX, , , , , , ) = IUniswapV3Pool(x).slot0() */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/cover/Cover.sol\":4063:4069  sqrtPX */\n      dup1\n        /* \"contracts/cover/Cover.sol\":4056:4069  return sqrtPX */\n      swap2\n      pop\n      pop\n        /* \"contracts/cover/Cover.sol\":3908:4076  function getLiveDataUniswap(address x) public view returns (uint160){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/cover/Cover.sol\":667:693  ICoverNFT public  coverNFT */\n    tag_36:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/cover/Cover.sol\":3605:3691  function decActiveCoverInETH(uint dec) public {... */\n    tag_42:\n        /* \"contracts/cover/Cover.sol\":3681:3684  dec */\n      dup1\n        /* \"contracts/cover/Cover.sol\":3660:3677  activeCoverAmount */\n      0x01\n      0x00\n        /* \"contracts/cover/Cover.sol\":3660:3684  activeCoverAmount -= dec */\n      dup3\n      dup3\n      sload\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/cover/Cover.sol\":3605:3691  function decActiveCoverInETH(uint dec) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/cover/Cover.sol\":2123:2239  function coverPrice(BuyCoverParams calldata params) public returns (uint price){... */\n    tag_47:\n        /* \"contracts/cover/Cover.sol\":2191:2201  uint price */\n      0x00\n        /* \"contracts/cover/Cover.sol\":2219:2232  1000000000000 */\n      0xe8d4a51000\n        /* \"contracts/cover/Cover.sol\":2212:2232  return 1000000000000 */\n      swap1\n      pop\n        /* \"contracts/cover/Cover.sol\":2123:2239  function coverPrice(BuyCoverParams calldata params) public returns (uint price){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/cover/Cover.sol\":602:634  uint256 public activeCoverAmount */\n    tag_51:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/cover/Cover.sol\":1080:1886  function buyCover(BuyCoverParams calldata params) external payable returns (uint coverId){... */\n    tag_55:\n        /* \"contracts/cover/Cover.sol\":1156:1168  uint coverId */\n      0x00\n        /* \"contracts/cover/Cover.sol\":1207:1215  coverNFT */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/cover/Cover.sol\":1207:1220  coverNFT.mint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6a627842\n        /* \"contracts/cover/Cover.sol\":1221:1231  msg.sender */\n      caller\n        /* \"contracts/cover/Cover.sol\":1207:1232  coverNFT.mint(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_104\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_104:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_105:\n        /* \"contracts/cover/Cover.sol\":1197:1232  coverId = coverNFT.mint(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/cover/Cover.sol\":1264:1632  CoverData(0, coverAmountInETH(params),// cover amount in cover asset... */\n      mload(0x40)\n      dup1\n      0x0160\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/cover/Cover.sol\":1274:1275  0 */\n      0x00\n        /* \"contracts/cover/Cover.sol\":1264:1632  CoverData(0, coverAmountInETH(params),// cover amount in cover asset... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/cover/Cover.sol\":1277:1301  coverAmountInETH(params) */\n      tag_106\n        /* \"contracts/cover/Cover.sol\":1294:1300  params */\n      dup5\n        /* \"contracts/cover/Cover.sol\":1277:1293  coverAmountInETH */\n      tag_60\n        /* \"contracts/cover/Cover.sol\":1277:1301  coverAmountInETH(params) */\n      jump\t// in\n    tag_106:\n        /* \"contracts/cover/Cover.sol\":1264:1632  CoverData(0, coverAmountInETH(params),// cover amount in cover asset... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/cover/Cover.sol\":1345:1360  block.timestamp */\n      timestamp\n        /* \"contracts/cover/Cover.sol\":1264:1632  CoverData(0, coverAmountInETH(params),// cover amount in cover asset... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/cover/Cover.sol\":1383:1389  params */\n      dup4\n        /* \"contracts/cover/Cover.sol\":1383:1396  params.period */\n      0xc0\n      add\n      calldataload\n        /* \"contracts/cover/Cover.sol\":1264:1632  CoverData(0, coverAmountInETH(params),// cover amount in cover asset... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/cover/Cover.sol\":1422:1428  params */\n      dup4\n        /* \"contracts/cover/Cover.sol\":1422:1435  params.token0 */\n      0x00\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_107:\n        /* \"contracts/cover/Cover.sol\":1264:1632  CoverData(0, coverAmountInETH(params),// cover amount in cover asset... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/cover/Cover.sol\":1449:1455  params */\n      dup4\n        /* \"contracts/cover/Cover.sol\":1449:1462  params.token1 */\n      0x20\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_108:\n        /* \"contracts/cover/Cover.sol\":1264:1632  CoverData(0, coverAmountInETH(params),// cover amount in cover asset... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/cover/Cover.sol\":1476:1482  params */\n      dup4\n        /* \"contracts/cover/Cover.sol\":1476:1492  params.token0Qty */\n      0x60\n      add\n      calldataload\n        /* \"contracts/cover/Cover.sol\":1264:1632  CoverData(0, coverAmountInETH(params),// cover amount in cover asset... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/cover/Cover.sol\":1506:1512  params */\n      dup4\n        /* \"contracts/cover/Cover.sol\":1506:1522  params.token1Qty */\n      0x40\n      add\n      calldataload\n        /* \"contracts/cover/Cover.sol\":1264:1632  CoverData(0, coverAmountInETH(params),// cover amount in cover asset... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/cover/Cover.sol\":1536:1542  params */\n      dup4\n        /* \"contracts/cover/Cover.sol\":1536:1558  params.lowerBoundRatio */\n      0x80\n      add\n      calldataload\n        /* \"contracts/cover/Cover.sol\":1264:1632  CoverData(0, coverAmountInETH(params),// cover amount in cover asset... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/cover/Cover.sol\":1572:1578  params */\n      dup4\n        /* \"contracts/cover/Cover.sol\":1572:1594  params.upperBoundRatio */\n      0xa0\n      add\n      calldataload\n        /* \"contracts/cover/Cover.sol\":1264:1632  CoverData(0, coverAmountInETH(params),// cover amount in cover asset... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/cover/Cover.sol\":1608:1614  params */\n      dup4\n        /* \"contracts/cover/Cover.sol\":1608:1622  params.pairStr */\n      dup1\n      0xe0\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n        /* \"contracts/cover/Cover.sol\":1264:1632  CoverData(0, coverAmountInETH(params),// cover amount in cover asset... */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      dup2\n      dup5\n      add\n      mstore\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      swap1\n      pop\n      dup1\n      dup4\n      add\n      swap3\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      pop\n        /* \"contracts/cover/Cover.sol\":1242:1252  _coverData */\n      0x00\n        /* \"contracts/cover/Cover.sol\":1242:1261  _coverData[coverId] */\n      dup1\n        /* \"contracts/cover/Cover.sol\":1253:1260  coverId */\n      dup4\n        /* \"contracts/cover/Cover.sol\":1242:1261  _coverData[coverId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/cover/Cover.sol\":1242:1632  _coverData[coverId] = CoverData(0, coverAmountInETH(params),// cover amount in cover asset... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xc0\n      dup3\n      add\n      mload\n      dup2\n      0x06\n      add\n      sstore\n      0xe0\n      dup3\n      add\n      mload\n      dup2\n      0x07\n      add\n      sstore\n      0x0100\n      dup3\n      add\n      mload\n      dup2\n      0x08\n      add\n      sstore\n      0x0120\n      dup3\n      add\n      mload\n      dup2\n      0x09\n      add\n      sstore\n      0x0140\n      dup3\n      add\n      mload\n      dup2\n      0x0a\n      add\n      swap1\n      dup2\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/cover/Cover.sol\":1642:1659  uint premiumToPay */\n      0x00\n        /* \"contracts/cover/Cover.sol\":1662:1680  coverPrice(params) */\n      tag_113\n        /* \"contracts/cover/Cover.sol\":1673:1679  params */\n      dup4\n        /* \"contracts/cover/Cover.sol\":1662:1672  coverPrice */\n      tag_47\n        /* \"contracts/cover/Cover.sol\":1662:1680  coverPrice(params) */\n      jump\t// in\n    tag_113:\n        /* \"contracts/cover/Cover.sol\":1642:1680  uint premiumToPay = coverPrice(params) */\n      swap1\n      pop\n        /* \"contracts/cover/Cover.sol\":1690:1732  retrievePayment(premiumToPay,ETH_ASSET_ID) */\n      tag_114\n        /* \"contracts/cover/Cover.sol\":1706:1718  premiumToPay */\n      dup2\n        /* \"contracts/cover/Cover.sol\":408:409  0 */\n      0x00\n        /* \"contracts/cover/Cover.sol\":1690:1732  retrievePayment(premiumToPay,ETH_ASSET_ID) */\n      0xffffffff\n      and\n        /* \"contracts/cover/Cover.sol\":1690:1705  retrievePayment */\n      tag_115\n        /* \"contracts/cover/Cover.sol\":1690:1732  retrievePayment(premiumToPay,ETH_ASSET_ID) */\n      jump\t// in\n    tag_114:\n      pop\n        /* \"contracts/cover/Cover.sol\":1763:1773  _coverData */\n      0x00\n        /* \"contracts/cover/Cover.sol\":1763:1782  _coverData[coverId] */\n      dup1\n        /* \"contracts/cover/Cover.sol\":1774:1781  coverId */\n      dup4\n        /* \"contracts/cover/Cover.sol\":1763:1782  _coverData[coverId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/cover/Cover.sol\":1763:1799  _coverData[coverId].totalClaimAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/cover/Cover.sol\":1742:1759  activeCoverAmount */\n      0x01\n      0x00\n        /* \"contracts/cover/Cover.sol\":1742:1799  activeCoverAmount += _coverData[coverId].totalClaimAmount */\n      dup3\n      dup3\n      sload\n      tag_116\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/cover/Cover.sol\":1809:1817  IMCR mcr */\n      0x00\n        /* \"contracts/cover/Cover.sol\":1825:1831  master */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/cover/Cover.sol\":1825:1842  master.MCRAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x88ea0751\n        /* \"contracts/cover/Cover.sol\":1825:1844  master.MCRAddress() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_119\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_119:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_120\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n        /* \"contracts/cover/Cover.sol\":1809:1845  IMCR mcr = IMCR(master.MCRAddress()) */\n      swap1\n      pop\n        /* \"contracts/cover/Cover.sol\":1855:1858  mcr */\n      dup1\n        /* \"contracts/cover/Cover.sol\":1855:1876  mcr.updateMCRInternal */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xaa5da046\n        /* \"contracts/cover/Cover.sol\":1855:1878  mcr.updateMCRInternal() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_122\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_122:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_124\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_124:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/cover/Cover.sol\":1169:1886  {... */\n      pop\n      pop\n        /* \"contracts/cover/Cover.sol\":1080:1886  function buyCover(BuyCoverParams calldata params) external payable returns (uint coverId){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/cover/Cover.sol\":1995:2118  function coverAmountInETH(BuyCoverParams calldata params) public returns (uint amount){... */\n    tag_60:\n        /* \"contracts/cover/Cover.sol\":2069:2080  uint amount */\n      0x00\n        /* \"contracts/cover/Cover.sol\":2098:2111  1000000000000 */\n      0xe8d4a51000\n        /* \"contracts/cover/Cover.sol\":2091:2111  return 1000000000000 */\n      swap1\n      pop\n        /* \"contracts/cover/Cover.sol\":1995:2118  function coverAmountInETH(BuyCoverParams calldata params) public returns (uint amount){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/cover/Cover.sol\":4084:4239  function getUnitPX(address x) public view returns (int){... */\n    tag_65:\n        /* \"contracts/cover/Cover.sol\":4135:4138  int */\n      0x00\n        /* \"contracts/cover/Cover.sol\":4151:4161  int unitPX */\n      dup1\n        /* \"contracts/cover/Cover.sol\":4189:4190  x */\n      dup3\n        /* \"contracts/cover/Cover.sol\":4167:4207  AggregatorV3Interface(x).latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"contracts/cover/Cover.sol\":4167:4209  AggregatorV3Interface(x).latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_128\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_128:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_129\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"contracts/cover/Cover.sol\":4149:4209  (,int unitPX,,,)= AggregatorV3Interface(x).latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/cover/Cover.sol\":4226:4232  unitPX */\n      dup1\n        /* \"contracts/cover/Cover.sol\":4219:4232  return unitPX */\n      swap2\n      pop\n      pop\n        /* \"contracts/cover/Cover.sol\":4084:4239  function getUnitPX(address x) public view returns (int){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/cover/Cover.sol\":3696:3799  function totalActiveCoverInETH() public view returns (uint256){... */\n    tag_70:\n        /* \"contracts/cover/Cover.sol\":3750:3757  uint256 */\n      0x00\n        /* \"contracts/cover/Cover.sol\":3775:3792  activeCoverAmount */\n      sload(0x01)\n        /* \"contracts/cover/Cover.sol\":3768:3792  return activeCoverAmount */\n      swap1\n      pop\n        /* \"contracts/cover/Cover.sol\":3696:3799  function totalActiveCoverInETH() public view returns (uint256){... */\n      swap1\n      jump\t// out\n        /* \"contracts/cover/Cover.sol\":641:661  Master public master */\n    tag_74:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/cover/Cover.sol\":2270:3599  function retrievePayment(uint premiumInPaymentAsset, uint paymentAsset) internal returns (bool success){... */\n    tag_115:\n        /* \"contracts/cover/Cover.sol\":2360:2372  bool success */\n      0x00\n        /* \"contracts/cover/Cover.sol\":2384:2395  IPool _pool */\n      dup1\n        /* \"contracts/cover/Cover.sol\":2398:2404  pool() */\n      tag_133\n        /* \"contracts/cover/Cover.sol\":2398:2402  pool */\n      tag_134\n        /* \"contracts/cover/Cover.sol\":2398:2404  pool() */\n      jump\t// in\n    tag_133:\n        /* \"contracts/cover/Cover.sol\":2384:2404  IPool _pool = pool() */\n      swap1\n      pop\n        /* \"contracts/cover/Cover.sol\":408:409  0 */\n      0x00\n        /* \"contracts/cover/Cover.sol\":2418:2446  paymentAsset == ETH_ASSET_ID */\n      0xffffffff\n      and\n        /* \"contracts/cover/Cover.sol\":2418:2430  paymentAsset */\n      dup4\n        /* \"contracts/cover/Cover.sol\":2418:2446  paymentAsset == ETH_ASSET_ID */\n      sub\n        /* \"contracts/cover/Cover.sol\":2414:3569  if (paymentAsset == ETH_ASSET_ID) {... */\n      tag_135\n      jumpi\n        /* \"contracts/cover/Cover.sol\":2458:2484  uint premiumWithCommission */\n      0x00\n        /* \"contracts/cover/Cover.sol\":2524:2527  100 */\n      0x64\n        /* \"contracts/cover/Cover.sol\":2502:2523  premiumInPaymentAsset */\n      dup6\n        /* \"contracts/cover/Cover.sol\":444:447  101 */\n      0x65\n        /* \"contracts/cover/Cover.sol\":2487:2523  commissionRate*premiumInPaymentAsset */\n      0xffffffff\n      and\n      tag_136\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n        /* \"contracts/cover/Cover.sol\":2487:2527  commissionRate*premiumInPaymentAsset/100 */\n      tag_138\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n        /* \"contracts/cover/Cover.sol\":2458:2527  uint premiumWithCommission = commissionRate*premiumInPaymentAsset/100 */\n      swap1\n      pop\n        /* \"contracts/cover/Cover.sol\":2557:2578  premiumInPaymentAsset */\n      dup5\n        /* \"contracts/cover/Cover.sol\":2545:2554  msg.value */\n      callvalue\n        /* \"contracts/cover/Cover.sol\":2545:2578  msg.value < premiumInPaymentAsset */\n      lt\n        /* \"contracts/cover/Cover.sol\":2541:2637  if (msg.value < premiumInPaymentAsset) {... */\n      iszero\n      tag_140\n      jumpi\n        /* \"contracts/cover/Cover.sol\":2605:2626  InsufficientEthSent() */\n      mload(0x40)\n      0xf244866f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/cover/Cover.sol\":2541:2637  if (msg.value < premiumInPaymentAsset) {... */\n    tag_140:\n        /* \"contracts/cover/Cover.sol\":2648:2662  uint remainder */\n      0x00\n        /* \"contracts/cover/Cover.sol\":2677:2698  premiumWithCommission */\n      dup2\n        /* \"contracts/cover/Cover.sol\":2665:2674  msg.value */\n      callvalue\n        /* \"contracts/cover/Cover.sol\":2665:2698  msg.value - premiumWithCommission */\n      tag_141\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_141:\n        /* \"contracts/cover/Cover.sol\":2648:2698  uint remainder = msg.value - premiumWithCommission */\n      swap1\n      pop\n        /* \"contracts/cover/Cover.sol\":2819:2826  bool ok */\n      0x00\n        /* \"contracts/cover/Cover.sol\":2850:2855  _pool */\n      dup4\n        /* \"contracts/cover/Cover.sol\":2842:2861  address(_pool).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/cover/Cover.sol\":2869:2890  premiumInPaymentAsset */\n      dup8\n        /* \"contracts/cover/Cover.sol\":2842:2895  address(_pool).call{value: premiumInPaymentAsset}(\"\") */\n      mload(0x40)\n      tag_142\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_146\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_145)\n    tag_146:\n      0x60\n      swap2\n      pop\n    tag_145:\n      pop\n        /* \"contracts/cover/Cover.sol\":2818:2895  (bool ok, /* data */) = address(_pool).call{value: premiumInPaymentAsset}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/cover/Cover.sol\":2910:2912  ok */\n      dup1\n        /* \"contracts/cover/Cover.sol\":2905:2968  if (!ok) {... */\n      tag_147\n      jumpi\n        /* \"contracts/cover/Cover.sol\":2933:2957  SendingEthToPoolFailed() */\n      mload(0x40)\n      0xab1ee9bf00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/cover/Cover.sol\":2905:2968  if (!ok) {... */\n    tag_147:\n        /* \"contracts/cover/Cover.sol\":2706:2976  {... */\n      pop\n        /* \"contracts/cover/Cover.sol\":3061:3062  0 */\n      0x00\n        /* \"contracts/cover/Cover.sol\":3037:3058  premiumInPaymentAsset */\n      dup7\n        /* \"contracts/cover/Cover.sol\":3013:3034  premiumWithCommission */\n      dup4\n        /* \"contracts/cover/Cover.sol\":3013:3058  premiumWithCommission - premiumInPaymentAsset */\n      tag_148\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_148:\n        /* \"contracts/cover/Cover.sol\":3013:3062  premiumWithCommission - premiumInPaymentAsset > 0 */\n      gt\n        /* \"contracts/cover/Cover.sol\":3009:3298  if (premiumWithCommission - premiumInPaymentAsset > 0) {... */\n      iszero\n      tag_149\n      jumpi\n        /* \"contracts/cover/Cover.sol\":3075:3082  bool ok */\n      0x00\n        /* \"contracts/cover/Cover.sol\":3106:3112  master */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/cover/Cover.sol\":3106:3134  master.CommissionDestination */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7abc3964\n        /* \"contracts/cover/Cover.sol\":3106:3136  master.CommissionDestination() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_151\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_151:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_152\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_152:\n        /* \"contracts/cover/Cover.sol\":3098:3142  address(master.CommissionDestination()).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/cover/Cover.sol\":3174:3195  premiumInPaymentAsset */\n      dup8\n        /* \"contracts/cover/Cover.sol\":3150:3171  premiumWithCommission */\n      dup5\n        /* \"contracts/cover/Cover.sol\":3150:3195  premiumWithCommission - premiumInPaymentAsset */\n      tag_153\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_153:\n        /* \"contracts/cover/Cover.sol\":3098:3200  address(master.CommissionDestination()).call{value: premiumWithCommission - premiumInPaymentAsset}(\"\") */\n      mload(0x40)\n      tag_154\n      swap1\n      tag_143\n      jump\t// in\n    tag_154:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_157\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_156)\n    tag_157:\n      0x60\n      swap2\n      pop\n    tag_156:\n      pop\n        /* \"contracts/cover/Cover.sol\":3074:3200  (bool ok, /* data */) = address(master.CommissionDestination()).call{value: premiumWithCommission - premiumInPaymentAsset}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/cover/Cover.sol\":3215:3217  ok */\n      dup1\n        /* \"contracts/cover/Cover.sol\":3210:3290  if (!ok) {... */\n      tag_158\n      jumpi\n        /* \"contracts/cover/Cover.sol\":3238:3279  SendingEthToCommissionDestinationFailed() */\n      mload(0x40)\n      0x204633a400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/cover/Cover.sol\":3210:3290  if (!ok) {... */\n    tag_158:\n        /* \"contracts/cover/Cover.sol\":3064:3298  {... */\n      pop\n        /* \"contracts/cover/Cover.sol\":3009:3298  if (premiumWithCommission - premiumInPaymentAsset > 0) {... */\n    tag_149:\n        /* \"contracts/cover/Cover.sol\":3322:3323  0 */\n      0x00\n        /* \"contracts/cover/Cover.sol\":3310:3319  remainder */\n      dup2\n        /* \"contracts/cover/Cover.sol\":3310:3323  remainder > 0 */\n      gt\n        /* \"contracts/cover/Cover.sol\":3306:3558  if (remainder > 0) {... */\n      iszero\n      tag_159\n      jumpi\n        /* \"contracts/cover/Cover.sol\":3395:3402  bool ok */\n      0x00\n        /* \"contracts/cover/Cover.sol\":3426:3436  msg.sender */\n      caller\n        /* \"contracts/cover/Cover.sol\":3418:3442  address(msg.sender).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/cover/Cover.sol\":3450:3459  remainder */\n      dup3\n        /* \"contracts/cover/Cover.sol\":3418:3464  address(msg.sender).call{value: remainder}(\"\") */\n      mload(0x40)\n      tag_160\n      swap1\n      tag_143\n      jump\t// in\n    tag_160:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_163\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_162)\n    tag_163:\n      0x60\n      swap2\n      pop\n    tag_162:\n      pop\n        /* \"contracts/cover/Cover.sol\":3394:3464  (bool ok, /* data */) = address(msg.sender).call{value: remainder}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/cover/Cover.sol\":3479:3481  ok */\n      dup1\n        /* \"contracts/cover/Cover.sol\":3474:3550  if (!ok) {... */\n      tag_164\n      jumpi\n        /* \"contracts/cover/Cover.sol\":3502:3539  ReturningEthRemainderToSenderFailed() */\n      mload(0x40)\n      0xcd57d4da00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/cover/Cover.sol\":3474:3550  if (!ok) {... */\n    tag_164:\n        /* \"contracts/cover/Cover.sol\":3325:3558  {... */\n      pop\n        /* \"contracts/cover/Cover.sol\":3306:3558  if (remainder > 0) {... */\n    tag_159:\n        /* \"contracts/cover/Cover.sol\":2448:3569  {... */\n      pop\n      pop\n        /* \"contracts/cover/Cover.sol\":2414:3569  if (paymentAsset == ETH_ASSET_ID) {... */\n    tag_135:\n        /* \"contracts/cover/Cover.sol\":2373:3599  {... */\n      pop\n        /* \"contracts/cover/Cover.sol\":2270:3599  function retrievePayment(uint premiumInPaymentAsset, uint paymentAsset) internal returns (bool success){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/cover/Cover.sol\":3805:3902  function pool() internal view returns (IPool) {... */\n    tag_134:\n        /* \"contracts/cover/Cover.sol\":3844:3849  IPool */\n      0x00\n        /* \"contracts/cover/Cover.sol\":3874:3880  master */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/cover/Cover.sol\":3874:3892  master.PoolAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9ccc903d\n        /* \"contracts/cover/Cover.sol\":3874:3894  master.PoolAddress() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_167\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_167:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_168\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_168:\n        /* \"contracts/cover/Cover.sol\":3861:3895  return IPool(master.PoolAddress()) */\n      swap1\n      pop\n        /* \"contracts/cover/Cover.sol\":3805:3902  function pool() internal view returns (IPool) {... */\n      swap1\n      jump\t// out\n    tag_78:\n      mload(0x40)\n      dup1\n      0x0160\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x60\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_170:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_171:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_172:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_173:\n        /* \"#utility.yul\":490:514   */\n      tag_252\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_172\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_253\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_253:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_174:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_255\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_173\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_18:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_257\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_258\n      tag_170\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":766:885   */\n    tag_257:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_259\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_174\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1133   */\n    tag_175:\n        /* \"#utility.yul\":1102:1126   */\n      tag_261\n        /* \"#utility.yul\":1120:1125   */\n      dup2\n        /* \"#utility.yul\":1102:1126   */\n      tag_172\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":1097:1100   */\n      dup3\n        /* \"#utility.yul\":1090:1127   */\n      mstore\n        /* \"#utility.yul\":1025:1133   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1139:1265   */\n    tag_176:\n        /* \"#utility.yul\":1176:1183   */\n      0x00\n        /* \"#utility.yul\":1216:1258   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1209:1214   */\n      dup3\n        /* \"#utility.yul\":1205:1259   */\n      and\n        /* \"#utility.yul\":1194:1259   */\n      swap1\n      pop\n        /* \"#utility.yul\":1139:1265   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1271:1367   */\n    tag_177:\n        /* \"#utility.yul\":1308:1315   */\n      0x00\n        /* \"#utility.yul\":1337:1361   */\n      tag_264\n        /* \"#utility.yul\":1355:1360   */\n      dup3\n        /* \"#utility.yul\":1337:1361   */\n      tag_176\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":1326:1361   */\n      swap1\n      pop\n        /* \"#utility.yul\":1271:1367   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1373:1481   */\n    tag_178:\n        /* \"#utility.yul\":1450:1474   */\n      tag_266\n        /* \"#utility.yul\":1468:1473   */\n      dup2\n        /* \"#utility.yul\":1450:1474   */\n      tag_177\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":1445:1448   */\n      dup3\n        /* \"#utility.yul\":1438:1475   */\n      mstore\n        /* \"#utility.yul\":1373:1481   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1487:1586   */\n    tag_179:\n        /* \"#utility.yul\":1539:1545   */\n      0x00\n        /* \"#utility.yul\":1573:1578   */\n      dup2\n        /* \"#utility.yul\":1567:1579   */\n      mload\n        /* \"#utility.yul\":1557:1579   */\n      swap1\n      pop\n        /* \"#utility.yul\":1487:1586   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1592:1751   */\n    tag_180:\n        /* \"#utility.yul\":1666:1677   */\n      0x00\n        /* \"#utility.yul\":1700:1706   */\n      dup3\n        /* \"#utility.yul\":1695:1698   */\n      dup3\n        /* \"#utility.yul\":1688:1707   */\n      mstore\n        /* \"#utility.yul\":1740:1744   */\n      0x20\n        /* \"#utility.yul\":1735:1738   */\n      dup3\n        /* \"#utility.yul\":1731:1745   */\n      add\n        /* \"#utility.yul\":1716:1745   */\n      swap1\n      pop\n        /* \"#utility.yul\":1592:1751   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1757:2003   */\n    tag_181:\n        /* \"#utility.yul\":1838:1839   */\n      0x00\n        /* \"#utility.yul\":1848:1961   */\n    tag_270:\n        /* \"#utility.yul\":1862:1868   */\n      dup4\n        /* \"#utility.yul\":1859:1860   */\n      dup2\n        /* \"#utility.yul\":1856:1869   */\n      lt\n        /* \"#utility.yul\":1848:1961   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":1947:1948   */\n      dup1\n        /* \"#utility.yul\":1942:1945   */\n      dup3\n        /* \"#utility.yul\":1938:1949   */\n      add\n        /* \"#utility.yul\":1932:1950   */\n      mload\n        /* \"#utility.yul\":1928:1929   */\n      dup2\n        /* \"#utility.yul\":1923:1926   */\n      dup5\n        /* \"#utility.yul\":1919:1930   */\n      add\n        /* \"#utility.yul\":1912:1951   */\n      mstore\n        /* \"#utility.yul\":1884:1886   */\n      0x20\n        /* \"#utility.yul\":1881:1882   */\n      dup2\n        /* \"#utility.yul\":1877:1887   */\n      add\n        /* \"#utility.yul\":1872:1887   */\n      swap1\n      pop\n        /* \"#utility.yul\":1848:1961   */\n      jump(tag_270)\n    tag_272:\n        /* \"#utility.yul\":1995:1996   */\n      0x00\n        /* \"#utility.yul\":1986:1992   */\n      dup5\n        /* \"#utility.yul\":1981:1984   */\n      dup5\n        /* \"#utility.yul\":1977:1993   */\n      add\n        /* \"#utility.yul\":1970:1997   */\n      mstore\n        /* \"#utility.yul\":1819:2003   */\n      pop\n        /* \"#utility.yul\":1757:2003   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2009:2111   */\n    tag_182:\n        /* \"#utility.yul\":2050:2056   */\n      0x00\n        /* \"#utility.yul\":2101:2103   */\n      0x1f\n        /* \"#utility.yul\":2097:2104   */\n      not\n        /* \"#utility.yul\":2092:2094   */\n      0x1f\n        /* \"#utility.yul\":2085:2090   */\n      dup4\n        /* \"#utility.yul\":2081:2095   */\n      add\n        /* \"#utility.yul\":2077:2105   */\n      and\n        /* \"#utility.yul\":2067:2105   */\n      swap1\n      pop\n        /* \"#utility.yul\":2009:2111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2117:2474   */\n    tag_183:\n        /* \"#utility.yul\":2195:2198   */\n      0x00\n        /* \"#utility.yul\":2223:2262   */\n      tag_275\n        /* \"#utility.yul\":2256:2261   */\n      dup3\n        /* \"#utility.yul\":2223:2262   */\n      tag_179\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":2278:2339   */\n      tag_276\n        /* \"#utility.yul\":2332:2338   */\n      dup2\n        /* \"#utility.yul\":2327:2330   */\n      dup6\n        /* \"#utility.yul\":2278:2339   */\n      tag_180\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":2271:2339   */\n      swap4\n      pop\n        /* \"#utility.yul\":2348:2413   */\n      tag_277\n        /* \"#utility.yul\":2406:2412   */\n      dup2\n        /* \"#utility.yul\":2401:2404   */\n      dup6\n        /* \"#utility.yul\":2394:2398   */\n      0x20\n        /* \"#utility.yul\":2387:2392   */\n      dup7\n        /* \"#utility.yul\":2383:2399   */\n      add\n        /* \"#utility.yul\":2348:2413   */\n      tag_181\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":2438:2467   */\n      tag_278\n        /* \"#utility.yul\":2460:2466   */\n      dup2\n        /* \"#utility.yul\":2438:2467   */\n      tag_182\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":2433:2436   */\n      dup5\n        /* \"#utility.yul\":2429:2468   */\n      add\n        /* \"#utility.yul\":2422:2468   */\n      swap2\n      pop\n        /* \"#utility.yul\":2199:2474   */\n      pop\n        /* \"#utility.yul\":2117:2474   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2524:4775   */\n    tag_184:\n        /* \"#utility.yul\":2645:2648   */\n      0x00\n        /* \"#utility.yul\":2681:2687   */\n      0x0160\n        /* \"#utility.yul\":2676:2679   */\n      dup4\n        /* \"#utility.yul\":2672:2688   */\n      add\n        /* \"#utility.yul\":2779:2783   */\n      0x00\n        /* \"#utility.yul\":2772:2777   */\n      dup4\n        /* \"#utility.yul\":2768:2784   */\n      add\n        /* \"#utility.yul\":2762:2785   */\n      mload\n        /* \"#utility.yul\":2798:2861   */\n      tag_280\n        /* \"#utility.yul\":2855:2859   */\n      0x00\n        /* \"#utility.yul\":2850:2853   */\n      dup7\n        /* \"#utility.yul\":2846:2860   */\n      add\n        /* \"#utility.yul\":2832:2844   */\n      dup3\n        /* \"#utility.yul\":2798:2861   */\n      tag_175\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":2698:2871   */\n      pop\n        /* \"#utility.yul\":2965:2969   */\n      0x20\n        /* \"#utility.yul\":2958:2963   */\n      dup4\n        /* \"#utility.yul\":2954:2970   */\n      add\n        /* \"#utility.yul\":2948:2971   */\n      mload\n        /* \"#utility.yul\":2984:3047   */\n      tag_281\n        /* \"#utility.yul\":3041:3045   */\n      0x20\n        /* \"#utility.yul\":3036:3039   */\n      dup7\n        /* \"#utility.yul\":3032:3046   */\n      add\n        /* \"#utility.yul\":3018:3030   */\n      dup3\n        /* \"#utility.yul\":2984:3047   */\n      tag_175\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":2881:3057   */\n      pop\n        /* \"#utility.yul\":3140:3144   */\n      0x40\n        /* \"#utility.yul\":3133:3138   */\n      dup4\n        /* \"#utility.yul\":3129:3145   */\n      add\n        /* \"#utility.yul\":3123:3146   */\n      mload\n        /* \"#utility.yul\":3159:3222   */\n      tag_282\n        /* \"#utility.yul\":3216:3220   */\n      0x40\n        /* \"#utility.yul\":3211:3214   */\n      dup7\n        /* \"#utility.yul\":3207:3221   */\n      add\n        /* \"#utility.yul\":3193:3205   */\n      dup3\n        /* \"#utility.yul\":3159:3222   */\n      tag_175\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":3067:3232   */\n      pop\n        /* \"#utility.yul\":3316:3320   */\n      0x60\n        /* \"#utility.yul\":3309:3314   */\n      dup4\n        /* \"#utility.yul\":3305:3321   */\n      add\n        /* \"#utility.yul\":3299:3322   */\n      mload\n        /* \"#utility.yul\":3335:3398   */\n      tag_283\n        /* \"#utility.yul\":3392:3396   */\n      0x60\n        /* \"#utility.yul\":3387:3390   */\n      dup7\n        /* \"#utility.yul\":3383:3397   */\n      add\n        /* \"#utility.yul\":3369:3381   */\n      dup3\n        /* \"#utility.yul\":3335:3398   */\n      tag_175\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":3242:3408   */\n      pop\n        /* \"#utility.yul\":3492:3496   */\n      0x80\n        /* \"#utility.yul\":3485:3490   */\n      dup4\n        /* \"#utility.yul\":3481:3497   */\n      add\n        /* \"#utility.yul\":3475:3498   */\n      mload\n        /* \"#utility.yul\":3511:3574   */\n      tag_284\n        /* \"#utility.yul\":3568:3572   */\n      0x80\n        /* \"#utility.yul\":3563:3566   */\n      dup7\n        /* \"#utility.yul\":3559:3573   */\n      add\n        /* \"#utility.yul\":3545:3557   */\n      dup3\n        /* \"#utility.yul\":3511:3574   */\n      tag_178\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":3418:3584   */\n      pop\n        /* \"#utility.yul\":3668:3672   */\n      0xa0\n        /* \"#utility.yul\":3661:3666   */\n      dup4\n        /* \"#utility.yul\":3657:3673   */\n      add\n        /* \"#utility.yul\":3651:3674   */\n      mload\n        /* \"#utility.yul\":3687:3750   */\n      tag_285\n        /* \"#utility.yul\":3744:3748   */\n      0xa0\n        /* \"#utility.yul\":3739:3742   */\n      dup7\n        /* \"#utility.yul\":3735:3749   */\n      add\n        /* \"#utility.yul\":3721:3733   */\n      dup3\n        /* \"#utility.yul\":3687:3750   */\n      tag_178\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":3594:3760   */\n      pop\n        /* \"#utility.yul\":3847:3851   */\n      0xc0\n        /* \"#utility.yul\":3840:3845   */\n      dup4\n        /* \"#utility.yul\":3836:3852   */\n      add\n        /* \"#utility.yul\":3830:3853   */\n      mload\n        /* \"#utility.yul\":3866:3929   */\n      tag_286\n        /* \"#utility.yul\":3923:3927   */\n      0xc0\n        /* \"#utility.yul\":3918:3921   */\n      dup7\n        /* \"#utility.yul\":3914:3928   */\n      add\n        /* \"#utility.yul\":3900:3912   */\n      dup3\n        /* \"#utility.yul\":3866:3929   */\n      tag_175\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":3770:3939   */\n      pop\n        /* \"#utility.yul\":4026:4030   */\n      0xe0\n        /* \"#utility.yul\":4019:4024   */\n      dup4\n        /* \"#utility.yul\":4015:4031   */\n      add\n        /* \"#utility.yul\":4009:4032   */\n      mload\n        /* \"#utility.yul\":4045:4108   */\n      tag_287\n        /* \"#utility.yul\":4102:4106   */\n      0xe0\n        /* \"#utility.yul\":4097:4100   */\n      dup7\n        /* \"#utility.yul\":4093:4107   */\n      add\n        /* \"#utility.yul\":4079:4091   */\n      dup3\n        /* \"#utility.yul\":4045:4108   */\n      tag_175\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":3949:4118   */\n      pop\n        /* \"#utility.yul\":4211:4217   */\n      0x0100\n        /* \"#utility.yul\":4204:4209   */\n      dup4\n        /* \"#utility.yul\":4200:4218   */\n      add\n        /* \"#utility.yul\":4194:4219   */\n      mload\n        /* \"#utility.yul\":4232:4297   */\n      tag_288\n        /* \"#utility.yul\":4289:4295   */\n      0x0100\n        /* \"#utility.yul\":4284:4287   */\n      dup7\n        /* \"#utility.yul\":4280:4296   */\n      add\n        /* \"#utility.yul\":4266:4278   */\n      dup3\n        /* \"#utility.yul\":4232:4297   */\n      tag_175\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":4128:4307   */\n      pop\n        /* \"#utility.yul\":4400:4406   */\n      0x0120\n        /* \"#utility.yul\":4393:4398   */\n      dup4\n        /* \"#utility.yul\":4389:4407   */\n      add\n        /* \"#utility.yul\":4383:4408   */\n      mload\n        /* \"#utility.yul\":4421:4486   */\n      tag_289\n        /* \"#utility.yul\":4478:4484   */\n      0x0120\n        /* \"#utility.yul\":4473:4476   */\n      dup7\n        /* \"#utility.yul\":4469:4485   */\n      add\n        /* \"#utility.yul\":4455:4467   */\n      dup3\n        /* \"#utility.yul\":4421:4486   */\n      tag_175\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":4317:4496   */\n      pop\n        /* \"#utility.yul\":4581:4587   */\n      0x0140\n        /* \"#utility.yul\":4574:4579   */\n      dup4\n        /* \"#utility.yul\":4570:4588   */\n      add\n        /* \"#utility.yul\":4564:4589   */\n      mload\n        /* \"#utility.yul\":4638:4641   */\n      dup5\n        /* \"#utility.yul\":4632:4636   */\n      dup3\n        /* \"#utility.yul\":4628:4642   */\n      sub\n        /* \"#utility.yul\":4619:4625   */\n      0x0140\n        /* \"#utility.yul\":4614:4617   */\n      dup7\n        /* \"#utility.yul\":4610:4626   */\n      add\n        /* \"#utility.yul\":4603:4643   */\n      mstore\n        /* \"#utility.yul\":4664:4737   */\n      tag_290\n        /* \"#utility.yul\":4732:4736   */\n      dup3\n        /* \"#utility.yul\":4718:4730   */\n      dup3\n        /* \"#utility.yul\":4664:4737   */\n      tag_183\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":4656:4737   */\n      swap2\n      pop\n        /* \"#utility.yul\":4506:4748   */\n      pop\n        /* \"#utility.yul\":4765:4769   */\n      dup1\n        /* \"#utility.yul\":4758:4769   */\n      swap2\n      pop\n        /* \"#utility.yul\":2650:4775   */\n      pop\n        /* \"#utility.yul\":2524:4775   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4781:5158   */\n    tag_21:\n        /* \"#utility.yul\":4926:4930   */\n      0x00\n        /* \"#utility.yul\":4964:4966   */\n      0x20\n        /* \"#utility.yul\":4953:4962   */\n      dup3\n        /* \"#utility.yul\":4949:4967   */\n      add\n        /* \"#utility.yul\":4941:4967   */\n      swap1\n      pop\n        /* \"#utility.yul\":5013:5022   */\n      dup2\n        /* \"#utility.yul\":5007:5011   */\n      dup2\n        /* \"#utility.yul\":5003:5023   */\n      sub\n        /* \"#utility.yul\":4999:5000   */\n      0x00\n        /* \"#utility.yul\":4988:4997   */\n      dup4\n        /* \"#utility.yul\":4984:5001   */\n      add\n        /* \"#utility.yul\":4977:5024   */\n      mstore\n        /* \"#utility.yul\":5041:5151   */\n      tag_292\n        /* \"#utility.yul\":5146:5150   */\n      dup2\n        /* \"#utility.yul\":5137:5143   */\n      dup5\n        /* \"#utility.yul\":5041:5151   */\n      tag_184\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":5033:5151   */\n      swap1\n      pop\n        /* \"#utility.yul\":4781:5158   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5164:5282   */\n    tag_185:\n        /* \"#utility.yul\":5251:5275   */\n      tag_294\n        /* \"#utility.yul\":5269:5274   */\n      dup2\n        /* \"#utility.yul\":5251:5275   */\n      tag_172\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":5246:5249   */\n      dup3\n        /* \"#utility.yul\":5239:5276   */\n      mstore\n        /* \"#utility.yul\":5164:5282   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5288:5510   */\n    tag_26:\n        /* \"#utility.yul\":5381:5385   */\n      0x00\n        /* \"#utility.yul\":5419:5421   */\n      0x20\n        /* \"#utility.yul\":5408:5417   */\n      dup3\n        /* \"#utility.yul\":5404:5422   */\n      add\n        /* \"#utility.yul\":5396:5422   */\n      swap1\n      pop\n        /* \"#utility.yul\":5432:5503   */\n      tag_296\n        /* \"#utility.yul\":5500:5501   */\n      0x00\n        /* \"#utility.yul\":5489:5498   */\n      dup4\n        /* \"#utility.yul\":5485:5502   */\n      add\n        /* \"#utility.yul\":5476:5482   */\n      dup5\n        /* \"#utility.yul\":5432:5503   */\n      tag_185\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":5288:5510   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5516:5638   */\n    tag_186:\n        /* \"#utility.yul\":5589:5613   */\n      tag_298\n        /* \"#utility.yul\":5607:5612   */\n      dup2\n        /* \"#utility.yul\":5589:5613   */\n      tag_177\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":5582:5587   */\n      dup2\n        /* \"#utility.yul\":5579:5614   */\n      eq\n        /* \"#utility.yul\":5569:5632   */\n      tag_299\n      jumpi\n        /* \"#utility.yul\":5628:5629   */\n      0x00\n        /* \"#utility.yul\":5625:5626   */\n      dup1\n        /* \"#utility.yul\":5618:5630   */\n      revert\n        /* \"#utility.yul\":5569:5632   */\n    tag_299:\n        /* \"#utility.yul\":5516:5638   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5644:5783   */\n    tag_187:\n        /* \"#utility.yul\":5690:5695   */\n      0x00\n        /* \"#utility.yul\":5728:5734   */\n      dup2\n        /* \"#utility.yul\":5715:5735   */\n      calldataload\n        /* \"#utility.yul\":5706:5735   */\n      swap1\n      pop\n        /* \"#utility.yul\":5744:5777   */\n      tag_301\n        /* \"#utility.yul\":5771:5776   */\n      dup2\n        /* \"#utility.yul\":5744:5777   */\n      tag_186\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":5644:5783   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5789:6118   */\n    tag_30:\n        /* \"#utility.yul\":5848:5854   */\n      0x00\n        /* \"#utility.yul\":5897:5899   */\n      0x20\n        /* \"#utility.yul\":5885:5894   */\n      dup3\n        /* \"#utility.yul\":5876:5883   */\n      dup5\n        /* \"#utility.yul\":5872:5895   */\n      sub\n        /* \"#utility.yul\":5868:5900   */\n      slt\n        /* \"#utility.yul\":5865:5984   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":5903:5982   */\n      tag_304\n      tag_170\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":5865:5984   */\n    tag_303:\n        /* \"#utility.yul\":6023:6024   */\n      0x00\n        /* \"#utility.yul\":6048:6101   */\n      tag_305\n        /* \"#utility.yul\":6093:6100   */\n      dup5\n        /* \"#utility.yul\":6084:6090   */\n      dup3\n        /* \"#utility.yul\":6073:6082   */\n      dup6\n        /* \"#utility.yul\":6069:6091   */\n      add\n        /* \"#utility.yul\":6048:6101   */\n      tag_187\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":6038:6101   */\n      swap2\n      pop\n        /* \"#utility.yul\":5994:6111   */\n      pop\n        /* \"#utility.yul\":5789:6118   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6124:6242   */\n    tag_188:\n        /* \"#utility.yul\":6211:6235   */\n      tag_307\n        /* \"#utility.yul\":6229:6234   */\n      dup2\n        /* \"#utility.yul\":6211:6235   */\n      tag_176\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":6206:6209   */\n      dup3\n        /* \"#utility.yul\":6199:6236   */\n      mstore\n        /* \"#utility.yul\":6124:6242   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6248:6470   */\n    tag_33:\n        /* \"#utility.yul\":6341:6345   */\n      0x00\n        /* \"#utility.yul\":6379:6381   */\n      0x20\n        /* \"#utility.yul\":6368:6377   */\n      dup3\n        /* \"#utility.yul\":6364:6382   */\n      add\n        /* \"#utility.yul\":6356:6382   */\n      swap1\n      pop\n        /* \"#utility.yul\":6392:6463   */\n      tag_309\n        /* \"#utility.yul\":6460:6461   */\n      0x00\n        /* \"#utility.yul\":6449:6458   */\n      dup4\n        /* \"#utility.yul\":6445:6462   */\n      add\n        /* \"#utility.yul\":6436:6442   */\n      dup5\n        /* \"#utility.yul\":6392:6463   */\n      tag_188\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":6248:6470   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6476:6536   */\n    tag_189:\n        /* \"#utility.yul\":6504:6507   */\n      0x00\n        /* \"#utility.yul\":6525:6530   */\n      dup2\n        /* \"#utility.yul\":6518:6530   */\n      swap1\n      pop\n        /* \"#utility.yul\":6476:6536   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6542:6684   */\n    tag_190:\n        /* \"#utility.yul\":6592:6601   */\n      0x00\n        /* \"#utility.yul\":6625:6678   */\n      tag_312\n        /* \"#utility.yul\":6643:6677   */\n      tag_313\n        /* \"#utility.yul\":6652:6676   */\n      tag_314\n        /* \"#utility.yul\":6670:6675   */\n      dup5\n        /* \"#utility.yul\":6652:6676   */\n      tag_176\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":6643:6677   */\n      tag_189\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":6625:6678   */\n      tag_176\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":6612:6678   */\n      swap1\n      pop\n        /* \"#utility.yul\":6542:6684   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6690:6816   */\n    tag_191:\n        /* \"#utility.yul\":6740:6749   */\n      0x00\n        /* \"#utility.yul\":6773:6810   */\n      tag_316\n        /* \"#utility.yul\":6804:6809   */\n      dup3\n        /* \"#utility.yul\":6773:6810   */\n      tag_190\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":6760:6810   */\n      swap1\n      pop\n        /* \"#utility.yul\":6690:6816   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6822:6966   */\n    tag_192:\n        /* \"#utility.yul\":6890:6899   */\n      0x00\n        /* \"#utility.yul\":6923:6960   */\n      tag_318\n        /* \"#utility.yul\":6954:6959   */\n      dup3\n        /* \"#utility.yul\":6923:6960   */\n      tag_191\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":6910:6960   */\n      swap1\n      pop\n        /* \"#utility.yul\":6822:6966   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6972:7139   */\n    tag_193:\n        /* \"#utility.yul\":7077:7132   */\n      tag_320\n        /* \"#utility.yul\":7126:7131   */\n      dup2\n        /* \"#utility.yul\":7077:7132   */\n      tag_192\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":7072:7075   */\n      dup3\n        /* \"#utility.yul\":7065:7133   */\n      mstore\n        /* \"#utility.yul\":6972:7139   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7145:7403   */\n    tag_38:\n        /* \"#utility.yul\":7256:7260   */\n      0x00\n        /* \"#utility.yul\":7294:7296   */\n      0x20\n        /* \"#utility.yul\":7283:7292   */\n      dup3\n        /* \"#utility.yul\":7279:7297   */\n      add\n        /* \"#utility.yul\":7271:7297   */\n      swap1\n      pop\n        /* \"#utility.yul\":7307:7396   */\n      tag_322\n        /* \"#utility.yul\":7393:7394   */\n      0x00\n        /* \"#utility.yul\":7382:7391   */\n      dup4\n        /* \"#utility.yul\":7378:7395   */\n      add\n        /* \"#utility.yul\":7369:7375   */\n      dup5\n        /* \"#utility.yul\":7307:7396   */\n      tag_193\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":7145:7403   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7409:7526   */\n    tag_194:\n        /* \"#utility.yul\":7518:7519   */\n      0x00\n        /* \"#utility.yul\":7515:7516   */\n      dup1\n        /* \"#utility.yul\":7508:7520   */\n      revert\n        /* \"#utility.yul\":7561:7799   */\n    tag_195:\n        /* \"#utility.yul\":7640:7645   */\n      0x00\n        /* \"#utility.yul\":7681:7684   */\n      0x0100\n        /* \"#utility.yul\":7672:7678   */\n      dup3\n        /* \"#utility.yul\":7667:7670   */\n      dup5\n        /* \"#utility.yul\":7663:7679   */\n      sub\n        /* \"#utility.yul\":7659:7685   */\n      slt\n        /* \"#utility.yul\":7656:7769   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":7688:7767   */\n      tag_326\n      tag_194\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":7656:7769   */\n    tag_325:\n        /* \"#utility.yul\":7787:7793   */\n      dup2\n        /* \"#utility.yul\":7778:7793   */\n      swap1\n      pop\n        /* \"#utility.yul\":7561:7799   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7805:8360   */\n    tag_46:\n        /* \"#utility.yul\":7897:7903   */\n      0x00\n        /* \"#utility.yul\":7946:7948   */\n      0x20\n        /* \"#utility.yul\":7934:7943   */\n      dup3\n        /* \"#utility.yul\":7925:7932   */\n      dup5\n        /* \"#utility.yul\":7921:7944   */\n      sub\n        /* \"#utility.yul\":7917:7949   */\n      slt\n        /* \"#utility.yul\":7914:8033   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":7952:8031   */\n      tag_329\n      tag_170\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":7914:8033   */\n    tag_328:\n        /* \"#utility.yul\":8100:8101   */\n      0x00\n        /* \"#utility.yul\":8089:8098   */\n      dup3\n        /* \"#utility.yul\":8085:8102   */\n      add\n        /* \"#utility.yul\":8072:8103   */\n      calldataload\n        /* \"#utility.yul\":8130:8148   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8122:8128   */\n      dup2\n        /* \"#utility.yul\":8119:8149   */\n      gt\n        /* \"#utility.yul\":8116:8233   */\n      iszero\n      tag_330\n      jumpi\n        /* \"#utility.yul\":8152:8231   */\n      tag_331\n      tag_171\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":8116:8233   */\n    tag_330:\n        /* \"#utility.yul\":8257:8343   */\n      tag_332\n        /* \"#utility.yul\":8335:8342   */\n      dup5\n        /* \"#utility.yul\":8326:8332   */\n      dup3\n        /* \"#utility.yul\":8315:8324   */\n      dup6\n        /* \"#utility.yul\":8311:8333   */\n      add\n        /* \"#utility.yul\":8257:8343   */\n      tag_195\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":8247:8343   */\n      swap2\n      pop\n        /* \"#utility.yul\":8043:8353   */\n      pop\n        /* \"#utility.yul\":7805:8360   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8366:8442   */\n    tag_196:\n        /* \"#utility.yul\":8402:8409   */\n      0x00\n        /* \"#utility.yul\":8431:8436   */\n      dup2\n        /* \"#utility.yul\":8420:8436   */\n      swap1\n      pop\n        /* \"#utility.yul\":8366:8442   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8448:8563   */\n    tag_197:\n        /* \"#utility.yul\":8533:8556   */\n      tag_335\n        /* \"#utility.yul\":8550:8555   */\n      dup2\n        /* \"#utility.yul\":8533:8556   */\n      tag_196\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":8528:8531   */\n      dup3\n        /* \"#utility.yul\":8521:8557   */\n      mstore\n        /* \"#utility.yul\":8448:8563   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8569:8787   */\n    tag_67:\n        /* \"#utility.yul\":8660:8664   */\n      0x00\n        /* \"#utility.yul\":8698:8700   */\n      0x20\n        /* \"#utility.yul\":8687:8696   */\n      dup3\n        /* \"#utility.yul\":8683:8701   */\n      add\n        /* \"#utility.yul\":8675:8701   */\n      swap1\n      pop\n        /* \"#utility.yul\":8711:8780   */\n      tag_337\n        /* \"#utility.yul\":8777:8778   */\n      0x00\n        /* \"#utility.yul\":8766:8775   */\n      dup4\n        /* \"#utility.yul\":8762:8779   */\n      add\n        /* \"#utility.yul\":8753:8759   */\n      dup5\n        /* \"#utility.yul\":8711:8780   */\n      tag_197\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":8569:8787   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8793:8933   */\n    tag_198:\n        /* \"#utility.yul\":8857:8866   */\n      0x00\n        /* \"#utility.yul\":8890:8927   */\n      tag_339\n        /* \"#utility.yul\":8921:8926   */\n      dup3\n        /* \"#utility.yul\":8890:8927   */\n      tag_191\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":8877:8927   */\n      swap1\n      pop\n        /* \"#utility.yul\":8793:8933   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8939:9098   */\n    tag_199:\n        /* \"#utility.yul\":9040:9091   */\n      tag_341\n        /* \"#utility.yul\":9085:9090   */\n      dup2\n        /* \"#utility.yul\":9040:9091   */\n      tag_198\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":9035:9038   */\n      dup3\n        /* \"#utility.yul\":9028:9092   */\n      mstore\n        /* \"#utility.yul\":8939:9098   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9104:9354   */\n    tag_76:\n        /* \"#utility.yul\":9211:9215   */\n      0x00\n        /* \"#utility.yul\":9249:9251   */\n      0x20\n        /* \"#utility.yul\":9238:9247   */\n      dup3\n        /* \"#utility.yul\":9234:9252   */\n      add\n        /* \"#utility.yul\":9226:9252   */\n      swap1\n      pop\n        /* \"#utility.yul\":9262:9347   */\n      tag_343\n        /* \"#utility.yul\":9344:9345   */\n      0x00\n        /* \"#utility.yul\":9333:9342   */\n      dup4\n        /* \"#utility.yul\":9329:9346   */\n      add\n        /* \"#utility.yul\":9320:9326   */\n      dup5\n        /* \"#utility.yul\":9262:9347   */\n      tag_199\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":9104:9354   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9360:9540   */\n    tag_200:\n        /* \"#utility.yul\":9408:9485   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9405:9406   */\n      0x00\n        /* \"#utility.yul\":9398:9486   */\n      mstore\n        /* \"#utility.yul\":9505:9509   */\n      0x22\n        /* \"#utility.yul\":9502:9503   */\n      0x04\n        /* \"#utility.yul\":9495:9510   */\n      mstore\n        /* \"#utility.yul\":9529:9533   */\n      0x24\n        /* \"#utility.yul\":9526:9527   */\n      0x00\n        /* \"#utility.yul\":9519:9534   */\n      revert\n        /* \"#utility.yul\":9546:9866   */\n    tag_81:\n        /* \"#utility.yul\":9590:9596   */\n      0x00\n        /* \"#utility.yul\":9627:9628   */\n      0x02\n        /* \"#utility.yul\":9621:9625   */\n      dup3\n        /* \"#utility.yul\":9617:9629   */\n      div\n        /* \"#utility.yul\":9607:9629   */\n      swap1\n      pop\n        /* \"#utility.yul\":9674:9675   */\n      0x01\n        /* \"#utility.yul\":9668:9672   */\n      dup3\n        /* \"#utility.yul\":9664:9676   */\n      and\n        /* \"#utility.yul\":9695:9713   */\n      dup1\n        /* \"#utility.yul\":9685:9766   */\n      tag_346\n      jumpi\n        /* \"#utility.yul\":9751:9755   */\n      0x7f\n        /* \"#utility.yul\":9743:9749   */\n      dup3\n        /* \"#utility.yul\":9739:9756   */\n      and\n        /* \"#utility.yul\":9729:9756   */\n      swap2\n      pop\n        /* \"#utility.yul\":9685:9766   */\n    tag_346:\n        /* \"#utility.yul\":9813:9815   */\n      0x20\n        /* \"#utility.yul\":9805:9811   */\n      dup3\n        /* \"#utility.yul\":9802:9816   */\n      lt\n        /* \"#utility.yul\":9782:9800   */\n      dup2\n        /* \"#utility.yul\":9779:9817   */\n      sub\n        /* \"#utility.yul\":9776:9860   */\n      tag_347\n      jumpi\n        /* \"#utility.yul\":9832:9850   */\n      tag_348\n      tag_200\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":9776:9860   */\n    tag_347:\n        /* \"#utility.yul\":9597:9866   */\n      pop\n        /* \"#utility.yul\":9546:9866   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9872:10015   */\n    tag_201:\n        /* \"#utility.yul\":9929:9934   */\n      0x00\n        /* \"#utility.yul\":9960:9966   */\n      dup2\n        /* \"#utility.yul\":9954:9967   */\n      mload\n        /* \"#utility.yul\":9945:9967   */\n      swap1\n      pop\n        /* \"#utility.yul\":9976:10009   */\n      tag_350\n        /* \"#utility.yul\":10003:10008   */\n      dup2\n        /* \"#utility.yul\":9976:10009   */\n      tag_173\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":9872:10015   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10021:10372   */\n    tag_90:\n        /* \"#utility.yul\":10091:10097   */\n      0x00\n        /* \"#utility.yul\":10140:10142   */\n      0x20\n        /* \"#utility.yul\":10128:10137   */\n      dup3\n        /* \"#utility.yul\":10119:10126   */\n      dup5\n        /* \"#utility.yul\":10115:10138   */\n      sub\n        /* \"#utility.yul\":10111:10143   */\n      slt\n        /* \"#utility.yul\":10108:10227   */\n      iszero\n      tag_352\n      jumpi\n        /* \"#utility.yul\":10146:10225   */\n      tag_353\n      tag_170\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":10108:10227   */\n    tag_352:\n        /* \"#utility.yul\":10266:10267   */\n      0x00\n        /* \"#utility.yul\":10291:10355   */\n      tag_354\n        /* \"#utility.yul\":10347:10354   */\n      dup5\n        /* \"#utility.yul\":10338:10344   */\n      dup3\n        /* \"#utility.yul\":10327:10336   */\n      dup6\n        /* \"#utility.yul\":10323:10345   */\n      add\n        /* \"#utility.yul\":10291:10355   */\n      tag_201\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":10281:10355   */\n      swap2\n      pop\n        /* \"#utility.yul\":10237:10365   */\n      pop\n        /* \"#utility.yul\":10021:10372   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10378:10500   */\n    tag_202:\n        /* \"#utility.yul\":10451:10475   */\n      tag_356\n        /* \"#utility.yul\":10469:10474   */\n      dup2\n        /* \"#utility.yul\":10451:10475   */\n      tag_176\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":10444:10449   */\n      dup2\n        /* \"#utility.yul\":10441:10476   */\n      eq\n        /* \"#utility.yul\":10431:10494   */\n      tag_357\n      jumpi\n        /* \"#utility.yul\":10490:10491   */\n      0x00\n        /* \"#utility.yul\":10487:10488   */\n      dup1\n        /* \"#utility.yul\":10480:10492   */\n      revert\n        /* \"#utility.yul\":10431:10494   */\n    tag_357:\n        /* \"#utility.yul\":10378:10500   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10506:10649   */\n    tag_203:\n        /* \"#utility.yul\":10563:10568   */\n      0x00\n        /* \"#utility.yul\":10594:10600   */\n      dup2\n        /* \"#utility.yul\":10588:10601   */\n      mload\n        /* \"#utility.yul\":10579:10601   */\n      swap1\n      pop\n        /* \"#utility.yul\":10610:10643   */\n      tag_359\n        /* \"#utility.yul\":10637:10642   */\n      dup2\n        /* \"#utility.yul\":10610:10643   */\n      tag_202\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":10506:10649   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10655:10745   */\n    tag_204:\n        /* \"#utility.yul\":10690:10697   */\n      0x00\n        /* \"#utility.yul\":10733:10738   */\n      dup2\n        /* \"#utility.yul\":10730:10731   */\n      0x02\n        /* \"#utility.yul\":10719:10739   */\n      signextend\n        /* \"#utility.yul\":10708:10739   */\n      swap1\n      pop\n        /* \"#utility.yul\":10655:10745   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10751:10869   */\n    tag_205:\n        /* \"#utility.yul\":10822:10844   */\n      tag_362\n        /* \"#utility.yul\":10838:10843   */\n      dup2\n        /* \"#utility.yul\":10822:10844   */\n      tag_204\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":10815:10820   */\n      dup2\n        /* \"#utility.yul\":10812:10845   */\n      eq\n        /* \"#utility.yul\":10802:10863   */\n      tag_363\n      jumpi\n        /* \"#utility.yul\":10859:10860   */\n      0x00\n        /* \"#utility.yul\":10856:10857   */\n      dup1\n        /* \"#utility.yul\":10849:10861   */\n      revert\n        /* \"#utility.yul\":10802:10863   */\n    tag_363:\n        /* \"#utility.yul\":10751:10869   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10875:11014   */\n    tag_206:\n        /* \"#utility.yul\":10930:10935   */\n      0x00\n        /* \"#utility.yul\":10961:10967   */\n      dup2\n        /* \"#utility.yul\":10955:10968   */\n      mload\n        /* \"#utility.yul\":10946:10968   */\n      swap1\n      pop\n        /* \"#utility.yul\":10977:11008   */\n      tag_365\n        /* \"#utility.yul\":11002:11007   */\n      dup2\n        /* \"#utility.yul\":10977:11008   */\n      tag_205\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":10875:11014   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11020:11109   */\n    tag_207:\n        /* \"#utility.yul\":11056:11063   */\n      0x00\n        /* \"#utility.yul\":11096:11102   */\n      0xffff\n        /* \"#utility.yul\":11089:11094   */\n      dup3\n        /* \"#utility.yul\":11085:11103   */\n      and\n        /* \"#utility.yul\":11074:11103   */\n      swap1\n      pop\n        /* \"#utility.yul\":11020:11109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11115:11235   */\n    tag_208:\n        /* \"#utility.yul\":11187:11210   */\n      tag_368\n        /* \"#utility.yul\":11204:11209   */\n      dup2\n        /* \"#utility.yul\":11187:11210   */\n      tag_207\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":11180:11185   */\n      dup2\n        /* \"#utility.yul\":11177:11211   */\n      eq\n        /* \"#utility.yul\":11167:11229   */\n      tag_369\n      jumpi\n        /* \"#utility.yul\":11225:11226   */\n      0x00\n        /* \"#utility.yul\":11222:11223   */\n      dup1\n        /* \"#utility.yul\":11215:11227   */\n      revert\n        /* \"#utility.yul\":11167:11229   */\n    tag_369:\n        /* \"#utility.yul\":11115:11235   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11241:11382   */\n    tag_209:\n        /* \"#utility.yul\":11297:11302   */\n      0x00\n        /* \"#utility.yul\":11328:11334   */\n      dup2\n        /* \"#utility.yul\":11322:11335   */\n      mload\n        /* \"#utility.yul\":11313:11335   */\n      swap1\n      pop\n        /* \"#utility.yul\":11344:11376   */\n      tag_371\n        /* \"#utility.yul\":11370:11375   */\n      dup2\n        /* \"#utility.yul\":11344:11376   */\n      tag_208\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":11241:11382   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11388:11474   */\n    tag_210:\n        /* \"#utility.yul\":11423:11430   */\n      0x00\n        /* \"#utility.yul\":11463:11467   */\n      0xff\n        /* \"#utility.yul\":11456:11461   */\n      dup3\n        /* \"#utility.yul\":11452:11468   */\n      and\n        /* \"#utility.yul\":11441:11468   */\n      swap1\n      pop\n        /* \"#utility.yul\":11388:11474   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11480:11598   */\n    tag_211:\n        /* \"#utility.yul\":11551:11573   */\n      tag_374\n        /* \"#utility.yul\":11567:11572   */\n      dup2\n        /* \"#utility.yul\":11551:11573   */\n      tag_210\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":11544:11549   */\n      dup2\n        /* \"#utility.yul\":11541:11574   */\n      eq\n        /* \"#utility.yul\":11531:11592   */\n      tag_375\n      jumpi\n        /* \"#utility.yul\":11588:11589   */\n      0x00\n        /* \"#utility.yul\":11585:11586   */\n      dup1\n        /* \"#utility.yul\":11578:11590   */\n      revert\n        /* \"#utility.yul\":11531:11592   */\n    tag_375:\n        /* \"#utility.yul\":11480:11598   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11604:11743   */\n    tag_212:\n        /* \"#utility.yul\":11659:11664   */\n      0x00\n        /* \"#utility.yul\":11690:11696   */\n      dup2\n        /* \"#utility.yul\":11684:11697   */\n      mload\n        /* \"#utility.yul\":11675:11697   */\n      swap1\n      pop\n        /* \"#utility.yul\":11706:11737   */\n      tag_377\n        /* \"#utility.yul\":11731:11736   */\n      dup2\n        /* \"#utility.yul\":11706:11737   */\n      tag_211\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":11604:11743   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11749:11839   */\n    tag_213:\n        /* \"#utility.yul\":11783:11790   */\n      0x00\n        /* \"#utility.yul\":11826:11831   */\n      dup2\n        /* \"#utility.yul\":11819:11832   */\n      iszero\n        /* \"#utility.yul\":11812:11833   */\n      iszero\n        /* \"#utility.yul\":11801:11833   */\n      swap1\n      pop\n        /* \"#utility.yul\":11749:11839   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11845:11961   */\n    tag_214:\n        /* \"#utility.yul\":11915:11936   */\n      tag_380\n        /* \"#utility.yul\":11930:11935   */\n      dup2\n        /* \"#utility.yul\":11915:11936   */\n      tag_213\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":11908:11913   */\n      dup2\n        /* \"#utility.yul\":11905:11937   */\n      eq\n        /* \"#utility.yul\":11895:11955   */\n      tag_381\n      jumpi\n        /* \"#utility.yul\":11951:11952   */\n      0x00\n        /* \"#utility.yul\":11948:11949   */\n      dup1\n        /* \"#utility.yul\":11941:11953   */\n      revert\n        /* \"#utility.yul\":11895:11955   */\n    tag_381:\n        /* \"#utility.yul\":11845:11961   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11967:12104   */\n    tag_215:\n        /* \"#utility.yul\":12021:12026   */\n      0x00\n        /* \"#utility.yul\":12052:12058   */\n      dup2\n        /* \"#utility.yul\":12046:12059   */\n      mload\n        /* \"#utility.yul\":12037:12059   */\n      swap1\n      pop\n        /* \"#utility.yul\":12068:12098   */\n      tag_383\n        /* \"#utility.yul\":12092:12097   */\n      dup2\n        /* \"#utility.yul\":12068:12098   */\n      tag_214\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":11967:12104   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12110:13381   */\n    tag_95:\n        /* \"#utility.yul\":12224:12230   */\n      0x00\n        /* \"#utility.yul\":12232:12238   */\n      dup1\n        /* \"#utility.yul\":12240:12246   */\n      0x00\n        /* \"#utility.yul\":12248:12254   */\n      dup1\n        /* \"#utility.yul\":12256:12262   */\n      0x00\n        /* \"#utility.yul\":12264:12270   */\n      dup1\n        /* \"#utility.yul\":12272:12278   */\n      0x00\n        /* \"#utility.yul\":12321:12324   */\n      0xe0\n        /* \"#utility.yul\":12309:12318   */\n      dup9\n        /* \"#utility.yul\":12300:12307   */\n      dup11\n        /* \"#utility.yul\":12296:12319   */\n      sub\n        /* \"#utility.yul\":12292:12325   */\n      slt\n        /* \"#utility.yul\":12289:12409   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":12328:12407   */\n      tag_386\n      tag_170\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":12289:12409   */\n    tag_385:\n        /* \"#utility.yul\":12448:12449   */\n      0x00\n        /* \"#utility.yul\":12473:12537   */\n      tag_387\n        /* \"#utility.yul\":12529:12536   */\n      dup11\n        /* \"#utility.yul\":12520:12526   */\n      dup3\n        /* \"#utility.yul\":12509:12518   */\n      dup12\n        /* \"#utility.yul\":12505:12527   */\n      add\n        /* \"#utility.yul\":12473:12537   */\n      tag_203\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":12463:12537   */\n      swap8\n      pop\n        /* \"#utility.yul\":12419:12547   */\n      pop\n        /* \"#utility.yul\":12586:12588   */\n      0x20\n        /* \"#utility.yul\":12612:12674   */\n      tag_388\n        /* \"#utility.yul\":12666:12673   */\n      dup11\n        /* \"#utility.yul\":12657:12663   */\n      dup3\n        /* \"#utility.yul\":12646:12655   */\n      dup12\n        /* \"#utility.yul\":12642:12664   */\n      add\n        /* \"#utility.yul\":12612:12674   */\n      tag_206\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":12602:12674   */\n      swap7\n      pop\n        /* \"#utility.yul\":12557:12684   */\n      pop\n        /* \"#utility.yul\":12723:12725   */\n      0x40\n        /* \"#utility.yul\":12749:12812   */\n      tag_389\n        /* \"#utility.yul\":12804:12811   */\n      dup11\n        /* \"#utility.yul\":12795:12801   */\n      dup3\n        /* \"#utility.yul\":12784:12793   */\n      dup12\n        /* \"#utility.yul\":12780:12802   */\n      add\n        /* \"#utility.yul\":12749:12812   */\n      tag_209\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":12739:12812   */\n      swap6\n      pop\n        /* \"#utility.yul\":12694:12822   */\n      pop\n        /* \"#utility.yul\":12861:12863   */\n      0x60\n        /* \"#utility.yul\":12887:12950   */\n      tag_390\n        /* \"#utility.yul\":12942:12949   */\n      dup11\n        /* \"#utility.yul\":12933:12939   */\n      dup3\n        /* \"#utility.yul\":12922:12931   */\n      dup12\n        /* \"#utility.yul\":12918:12940   */\n      add\n        /* \"#utility.yul\":12887:12950   */\n      tag_209\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":12877:12950   */\n      swap5\n      pop\n        /* \"#utility.yul\":12832:12960   */\n      pop\n        /* \"#utility.yul\":12999:13002   */\n      0x80\n        /* \"#utility.yul\":13026:13089   */\n      tag_391\n        /* \"#utility.yul\":13081:13088   */\n      dup11\n        /* \"#utility.yul\":13072:13078   */\n      dup3\n        /* \"#utility.yul\":13061:13070   */\n      dup12\n        /* \"#utility.yul\":13057:13079   */\n      add\n        /* \"#utility.yul\":13026:13089   */\n      tag_209\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":13016:13089   */\n      swap4\n      pop\n        /* \"#utility.yul\":12970:13099   */\n      pop\n        /* \"#utility.yul\":13138:13141   */\n      0xa0\n        /* \"#utility.yul\":13165:13227   */\n      tag_392\n        /* \"#utility.yul\":13219:13226   */\n      dup11\n        /* \"#utility.yul\":13210:13216   */\n      dup3\n        /* \"#utility.yul\":13199:13208   */\n      dup12\n        /* \"#utility.yul\":13195:13217   */\n      add\n        /* \"#utility.yul\":13165:13227   */\n      tag_212\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":13155:13227   */\n      swap3\n      pop\n        /* \"#utility.yul\":13109:13237   */\n      pop\n        /* \"#utility.yul\":13276:13279   */\n      0xc0\n        /* \"#utility.yul\":13303:13364   */\n      tag_393\n        /* \"#utility.yul\":13356:13363   */\n      dup11\n        /* \"#utility.yul\":13347:13353   */\n      dup3\n        /* \"#utility.yul\":13336:13345   */\n      dup12\n        /* \"#utility.yul\":13332:13354   */\n      add\n        /* \"#utility.yul\":13303:13364   */\n      tag_215\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":13293:13364   */\n      swap2\n      pop\n        /* \"#utility.yul\":13247:13374   */\n      pop\n        /* \"#utility.yul\":12110:13381   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13387:13567   */\n    tag_216:\n        /* \"#utility.yul\":13435:13512   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13432:13433   */\n      0x00\n        /* \"#utility.yul\":13425:13513   */\n      mstore\n        /* \"#utility.yul\":13532:13536   */\n      0x11\n        /* \"#utility.yul\":13529:13530   */\n      0x04\n        /* \"#utility.yul\":13522:13537   */\n      mstore\n        /* \"#utility.yul\":13556:13560   */\n      0x24\n        /* \"#utility.yul\":13553:13554   */\n      0x00\n        /* \"#utility.yul\":13546:13561   */\n      revert\n        /* \"#utility.yul\":13573:13767   */\n    tag_98:\n        /* \"#utility.yul\":13613:13617   */\n      0x00\n        /* \"#utility.yul\":13633:13653   */\n      tag_396\n        /* \"#utility.yul\":13651:13652   */\n      dup3\n        /* \"#utility.yul\":13633:13653   */\n      tag_172\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":13628:13653   */\n      swap2\n      pop\n        /* \"#utility.yul\":13667:13687   */\n      tag_397\n        /* \"#utility.yul\":13685:13686   */\n      dup4\n        /* \"#utility.yul\":13667:13687   */\n      tag_172\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":13662:13687   */\n      swap3\n      pop\n        /* \"#utility.yul\":13711:13712   */\n      dup3\n        /* \"#utility.yul\":13708:13709   */\n      dup3\n        /* \"#utility.yul\":13704:13713   */\n      sub\n        /* \"#utility.yul\":13696:13713   */\n      swap1\n      pop\n        /* \"#utility.yul\":13735:13736   */\n      dup2\n        /* \"#utility.yul\":13729:13733   */\n      dup2\n        /* \"#utility.yul\":13726:13737   */\n      gt\n        /* \"#utility.yul\":13723:13760   */\n      iszero\n      tag_398\n      jumpi\n        /* \"#utility.yul\":13740:13758   */\n      tag_399\n      tag_216\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":13723:13760   */\n    tag_398:\n        /* \"#utility.yul\":13573:13767   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13773:13891   */\n    tag_217:\n        /* \"#utility.yul\":13860:13884   */\n      tag_401\n        /* \"#utility.yul\":13878:13883   */\n      dup2\n        /* \"#utility.yul\":13860:13884   */\n      tag_177\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":13855:13858   */\n      dup3\n        /* \"#utility.yul\":13848:13885   */\n      mstore\n        /* \"#utility.yul\":13773:13891   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13897:14119   */\n    tag_102:\n        /* \"#utility.yul\":13990:13994   */\n      0x00\n        /* \"#utility.yul\":14028:14030   */\n      0x20\n        /* \"#utility.yul\":14017:14026   */\n      dup3\n        /* \"#utility.yul\":14013:14031   */\n      add\n        /* \"#utility.yul\":14005:14031   */\n      swap1\n      pop\n        /* \"#utility.yul\":14041:14112   */\n      tag_403\n        /* \"#utility.yul\":14109:14110   */\n      0x00\n        /* \"#utility.yul\":14098:14107   */\n      dup4\n        /* \"#utility.yul\":14094:14111   */\n      add\n        /* \"#utility.yul\":14085:14091   */\n      dup5\n        /* \"#utility.yul\":14041:14112   */\n      tag_217\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":13897:14119   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14125:14242   */\n    tag_218:\n        /* \"#utility.yul\":14234:14235   */\n      0x00\n        /* \"#utility.yul\":14231:14232   */\n      dup1\n        /* \"#utility.yul\":14224:14236   */\n      revert\n        /* \"#utility.yul\":14248:14365   */\n    tag_219:\n        /* \"#utility.yul\":14357:14358   */\n      0x00\n        /* \"#utility.yul\":14354:14355   */\n      dup1\n        /* \"#utility.yul\":14347:14359   */\n      revert\n        /* \"#utility.yul\":14371:14488   */\n    tag_220:\n        /* \"#utility.yul\":14480:14481   */\n      0x00\n        /* \"#utility.yul\":14477:14478   */\n      dup1\n        /* \"#utility.yul\":14470:14482   */\n      revert\n        /* \"#utility.yul\":14494:15219   */\n    tag_110:\n        /* \"#utility.yul\":14572:14576   */\n      0x00\n        /* \"#utility.yul\":14578:14584   */\n      dup1\n        /* \"#utility.yul\":14634:14645   */\n      dup4\n        /* \"#utility.yul\":14621:14646   */\n      calldataload\n        /* \"#utility.yul\":14734:14735   */\n      0x01\n        /* \"#utility.yul\":14728:14732   */\n      0x20\n        /* \"#utility.yul\":14724:14736   */\n      sub\n        /* \"#utility.yul\":14713:14721   */\n      dup5\n        /* \"#utility.yul\":14697:14711   */\n      calldatasize\n        /* \"#utility.yul\":14693:14722   */\n      sub\n        /* \"#utility.yul\":14689:14737   */\n      sub\n        /* \"#utility.yul\":14669:14687   */\n      dup2\n        /* \"#utility.yul\":14665:14738   */\n      slt\n        /* \"#utility.yul\":14655:14823   */\n      tag_408\n      jumpi\n        /* \"#utility.yul\":14742:14821   */\n      tag_409\n      tag_218\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":14655:14823   */\n    tag_408:\n        /* \"#utility.yul\":14854:14872   */\n      dup1\n        /* \"#utility.yul\":14844:14852   */\n      dup5\n        /* \"#utility.yul\":14840:14873   */\n      add\n        /* \"#utility.yul\":14832:14873   */\n      swap3\n      pop\n        /* \"#utility.yul\":14906:14910   */\n      dup3\n        /* \"#utility.yul\":14893:14911   */\n      calldataload\n        /* \"#utility.yul\":14883:14911   */\n      swap2\n      pop\n        /* \"#utility.yul\":14934:14952   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14926:14932   */\n      dup3\n        /* \"#utility.yul\":14923:14953   */\n      gt\n        /* \"#utility.yul\":14920:15037   */\n      iszero\n      tag_410\n      jumpi\n        /* \"#utility.yul\":14956:15035   */\n      tag_411\n      tag_219\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":14920:15037   */\n    tag_410:\n        /* \"#utility.yul\":15064:15066   */\n      0x20\n        /* \"#utility.yul\":15058:15062   */\n      dup4\n        /* \"#utility.yul\":15054:15067   */\n      add\n        /* \"#utility.yul\":15046:15067   */\n      swap3\n      pop\n        /* \"#utility.yul\":15121:15125   */\n      0x01\n        /* \"#utility.yul\":15113:15119   */\n      dup3\n        /* \"#utility.yul\":15109:15126   */\n      mul\n        /* \"#utility.yul\":15093:15107   */\n      calldatasize\n        /* \"#utility.yul\":15089:15127   */\n      sub\n        /* \"#utility.yul\":15083:15087   */\n      dup4\n        /* \"#utility.yul\":15079:15128   */\n      sgt\n        /* \"#utility.yul\":15076:15212   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":15131:15210   */\n      tag_413\n      tag_220\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":15076:15212   */\n    tag_412:\n        /* \"#utility.yul\":14585:15219   */\n      pop\n        /* \"#utility.yul\":14494:15219   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15225:15405   */\n    tag_221:\n        /* \"#utility.yul\":15273:15350   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15270:15271   */\n      0x00\n        /* \"#utility.yul\":15263:15351   */\n      mstore\n        /* \"#utility.yul\":15370:15374   */\n      0x41\n        /* \"#utility.yul\":15367:15368   */\n      0x04\n        /* \"#utility.yul\":15360:15375   */\n      mstore\n        /* \"#utility.yul\":15394:15398   */\n      0x24\n        /* \"#utility.yul\":15391:15392   */\n      0x00\n        /* \"#utility.yul\":15384:15399   */\n      revert\n        /* \"#utility.yul\":15411:15552   */\n    tag_222:\n        /* \"#utility.yul\":15460:15464   */\n      0x00\n        /* \"#utility.yul\":15483:15486   */\n      dup2\n        /* \"#utility.yul\":15475:15486   */\n      swap1\n      pop\n        /* \"#utility.yul\":15506:15509   */\n      dup2\n        /* \"#utility.yul\":15503:15504   */\n      0x00\n        /* \"#utility.yul\":15496:15510   */\n      mstore\n        /* \"#utility.yul\":15540:15544   */\n      0x20\n        /* \"#utility.yul\":15537:15538   */\n      0x00\n        /* \"#utility.yul\":15527:15545   */\n      keccak256\n        /* \"#utility.yul\":15519:15545   */\n      swap1\n      pop\n        /* \"#utility.yul\":15411:15552   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15558:15651   */\n    tag_223:\n        /* \"#utility.yul\":15595:15601   */\n      0x00\n        /* \"#utility.yul\":15642:15644   */\n      0x20\n        /* \"#utility.yul\":15637:15639   */\n      0x1f\n        /* \"#utility.yul\":15630:15635   */\n      dup4\n        /* \"#utility.yul\":15626:15640   */\n      add\n        /* \"#utility.yul\":15622:15645   */\n      div\n        /* \"#utility.yul\":15612:15645   */\n      swap1\n      pop\n        /* \"#utility.yul\":15558:15651   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15657:15764   */\n    tag_224:\n        /* \"#utility.yul\":15701:15709   */\n      0x00\n        /* \"#utility.yul\":15751:15756   */\n      dup3\n        /* \"#utility.yul\":15745:15749   */\n      dup3\n        /* \"#utility.yul\":15741:15757   */\n      shl\n        /* \"#utility.yul\":15720:15757   */\n      swap1\n      pop\n        /* \"#utility.yul\":15657:15764   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15770:16163   */\n    tag_225:\n        /* \"#utility.yul\":15839:15845   */\n      0x00\n        /* \"#utility.yul\":15889:15890   */\n      0x08\n        /* \"#utility.yul\":15877:15887   */\n      dup4\n        /* \"#utility.yul\":15873:15891   */\n      mul\n        /* \"#utility.yul\":15912:16009   */\n      tag_419\n        /* \"#utility.yul\":15942:16008   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15931:15940   */\n      dup3\n        /* \"#utility.yul\":15912:16009   */\n      tag_224\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":16030:16069   */\n      tag_420\n        /* \"#utility.yul\":16060:16068   */\n      dup7\n        /* \"#utility.yul\":16049:16058   */\n      dup4\n        /* \"#utility.yul\":16030:16069   */\n      tag_224\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":16018:16069   */\n      swap6\n      pop\n        /* \"#utility.yul\":16102:16106   */\n      dup1\n        /* \"#utility.yul\":16098:16107   */\n      not\n        /* \"#utility.yul\":16091:16096   */\n      dup5\n        /* \"#utility.yul\":16087:16108   */\n      and\n        /* \"#utility.yul\":16078:16108   */\n      swap4\n      pop\n        /* \"#utility.yul\":16151:16155   */\n      dup1\n        /* \"#utility.yul\":16141:16149   */\n      dup7\n        /* \"#utility.yul\":16137:16156   */\n      and\n        /* \"#utility.yul\":16130:16135   */\n      dup5\n        /* \"#utility.yul\":16127:16157   */\n      or\n        /* \"#utility.yul\":16117:16157   */\n      swap3\n      pop\n        /* \"#utility.yul\":15846:16163   */\n      pop\n      pop\n        /* \"#utility.yul\":15770:16163   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16169:16311   */\n    tag_226:\n        /* \"#utility.yul\":16219:16228   */\n      0x00\n        /* \"#utility.yul\":16252:16305   */\n      tag_422\n        /* \"#utility.yul\":16270:16304   */\n      tag_423\n        /* \"#utility.yul\":16279:16303   */\n      tag_424\n        /* \"#utility.yul\":16297:16302   */\n      dup5\n        /* \"#utility.yul\":16279:16303   */\n      tag_172\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":16270:16304   */\n      tag_189\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":16252:16305   */\n      tag_172\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":16239:16305   */\n      swap1\n      pop\n        /* \"#utility.yul\":16169:16311   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16317:16392   */\n    tag_227:\n        /* \"#utility.yul\":16360:16363   */\n      0x00\n        /* \"#utility.yul\":16381:16386   */\n      dup2\n        /* \"#utility.yul\":16374:16386   */\n      swap1\n      pop\n        /* \"#utility.yul\":16317:16392   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16398:16667   */\n    tag_228:\n        /* \"#utility.yul\":16508:16547   */\n      tag_427\n        /* \"#utility.yul\":16539:16546   */\n      dup4\n        /* \"#utility.yul\":16508:16547   */\n      tag_226\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":16569:16660   */\n      tag_428\n        /* \"#utility.yul\":16618:16659   */\n      tag_429\n        /* \"#utility.yul\":16642:16658   */\n      dup3\n        /* \"#utility.yul\":16618:16659   */\n      tag_227\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":16610:16616   */\n      dup5\n        /* \"#utility.yul\":16603:16607   */\n      dup5\n        /* \"#utility.yul\":16597:16608   */\n      sload\n        /* \"#utility.yul\":16569:16660   */\n      tag_225\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":16563:16567   */\n      dup3\n        /* \"#utility.yul\":16556:16661   */\n      sstore\n        /* \"#utility.yul\":16474:16667   */\n      pop\n        /* \"#utility.yul\":16398:16667   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16673:16746   */\n    tag_229:\n        /* \"#utility.yul\":16718:16721   */\n      0x00\n        /* \"#utility.yul\":16673:16746   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":16752:16941   */\n    tag_230:\n        /* \"#utility.yul\":16829:16861   */\n      tag_432\n      tag_229\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":16870:16935   */\n      tag_433\n        /* \"#utility.yul\":16928:16934   */\n      dup2\n        /* \"#utility.yul\":16920:16926   */\n      dup5\n        /* \"#utility.yul\":16914:16918   */\n      dup5\n        /* \"#utility.yul\":16870:16935   */\n      tag_228\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":16805:16941   */\n      pop\n        /* \"#utility.yul\":16752:16941   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16947:17133   */\n    tag_231:\n        /* \"#utility.yul\":17007:17127   */\n    tag_435:\n        /* \"#utility.yul\":17024:17027   */\n      dup2\n        /* \"#utility.yul\":17017:17022   */\n      dup2\n        /* \"#utility.yul\":17014:17028   */\n      lt\n        /* \"#utility.yul\":17007:17127   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":17078:17117   */\n      tag_438\n        /* \"#utility.yul\":17115:17116   */\n      0x00\n        /* \"#utility.yul\":17108:17113   */\n      dup3\n        /* \"#utility.yul\":17078:17117   */\n      tag_230\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":17051:17052   */\n      0x01\n        /* \"#utility.yul\":17044:17049   */\n      dup2\n        /* \"#utility.yul\":17040:17053   */\n      add\n        /* \"#utility.yul\":17031:17053   */\n      swap1\n      pop\n        /* \"#utility.yul\":17007:17127   */\n      jump(tag_435)\n    tag_437:\n        /* \"#utility.yul\":16947:17133   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17139:17682   */\n    tag_232:\n        /* \"#utility.yul\":17240:17242   */\n      0x1f\n        /* \"#utility.yul\":17235:17238   */\n      dup3\n        /* \"#utility.yul\":17232:17243   */\n      gt\n        /* \"#utility.yul\":17229:17675   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":17274:17312   */\n      tag_441\n        /* \"#utility.yul\":17306:17311   */\n      dup2\n        /* \"#utility.yul\":17274:17312   */\n      tag_222\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":17358:17387   */\n      tag_442\n        /* \"#utility.yul\":17376:17386   */\n      dup5\n        /* \"#utility.yul\":17358:17387   */\n      tag_223\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":17348:17356   */\n      dup2\n        /* \"#utility.yul\":17344:17388   */\n      add\n        /* \"#utility.yul\":17541:17543   */\n      0x20\n        /* \"#utility.yul\":17529:17539   */\n      dup6\n        /* \"#utility.yul\":17526:17544   */\n      lt\n        /* \"#utility.yul\":17523:17572   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":17562:17570   */\n      dup2\n        /* \"#utility.yul\":17547:17570   */\n      swap1\n      pop\n        /* \"#utility.yul\":17523:17572   */\n    tag_443:\n        /* \"#utility.yul\":17585:17665   */\n      tag_444\n        /* \"#utility.yul\":17641:17663   */\n      tag_445\n        /* \"#utility.yul\":17659:17662   */\n      dup6\n        /* \"#utility.yul\":17641:17663   */\n      tag_223\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":17631:17639   */\n      dup4\n        /* \"#utility.yul\":17627:17664   */\n      add\n        /* \"#utility.yul\":17614:17625   */\n      dup3\n        /* \"#utility.yul\":17585:17665   */\n      tag_231\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":17244:17675   */\n      pop\n      pop\n        /* \"#utility.yul\":17229:17675   */\n    tag_440:\n        /* \"#utility.yul\":17139:17682   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17688:17805   */\n    tag_233:\n        /* \"#utility.yul\":17742:17750   */\n      0x00\n        /* \"#utility.yul\":17792:17797   */\n      dup3\n        /* \"#utility.yul\":17786:17790   */\n      dup3\n        /* \"#utility.yul\":17782:17798   */\n      shr\n        /* \"#utility.yul\":17761:17798   */\n      swap1\n      pop\n        /* \"#utility.yul\":17688:17805   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17811:17980   */\n    tag_234:\n        /* \"#utility.yul\":17855:17861   */\n      0x00\n        /* \"#utility.yul\":17888:17939   */\n      tag_448\n        /* \"#utility.yul\":17936:17937   */\n      0x00\n        /* \"#utility.yul\":17932:17938   */\n      not\n        /* \"#utility.yul\":17924:17929   */\n      dup5\n        /* \"#utility.yul\":17921:17922   */\n      0x08\n        /* \"#utility.yul\":17917:17930   */\n      mul\n        /* \"#utility.yul\":17888:17939   */\n      tag_233\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":17884:17940   */\n      not\n        /* \"#utility.yul\":17969:17973   */\n      dup1\n        /* \"#utility.yul\":17963:17967   */\n      dup4\n        /* \"#utility.yul\":17959:17974   */\n      and\n        /* \"#utility.yul\":17949:17974   */\n      swap2\n      pop\n        /* \"#utility.yul\":17862:17980   */\n      pop\n        /* \"#utility.yul\":17811:17980   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17985:18280   */\n    tag_235:\n        /* \"#utility.yul\":18061:18065   */\n      0x00\n        /* \"#utility.yul\":18207:18236   */\n      tag_450\n        /* \"#utility.yul\":18232:18235   */\n      dup4\n        /* \"#utility.yul\":18226:18230   */\n      dup4\n        /* \"#utility.yul\":18207:18236   */\n      tag_234\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":18199:18236   */\n      swap2\n      pop\n        /* \"#utility.yul\":18269:18272   */\n      dup3\n        /* \"#utility.yul\":18266:18267   */\n      0x02\n        /* \"#utility.yul\":18262:18273   */\n      mul\n        /* \"#utility.yul\":18256:18260   */\n      dup3\n        /* \"#utility.yul\":18253:18274   */\n      or\n        /* \"#utility.yul\":18245:18274   */\n      swap1\n      pop\n        /* \"#utility.yul\":17985:18280   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18285:19680   */\n    tag_112:\n        /* \"#utility.yul\":18402:18439   */\n      tag_452\n        /* \"#utility.yul\":18435:18438   */\n      dup3\n        /* \"#utility.yul\":18402:18439   */\n      tag_179\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":18504:18522   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":18496:18502   */\n      dup2\n        /* \"#utility.yul\":18493:18523   */\n      gt\n        /* \"#utility.yul\":18490:18546   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":18526:18544   */\n      tag_454\n      tag_221\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":18490:18546   */\n    tag_453:\n        /* \"#utility.yul\":18570:18608   */\n      tag_455\n        /* \"#utility.yul\":18602:18606   */\n      dup3\n        /* \"#utility.yul\":18596:18607   */\n      sload\n        /* \"#utility.yul\":18570:18608   */\n      tag_81\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":18655:18722   */\n      tag_456\n        /* \"#utility.yul\":18715:18721   */\n      dup3\n        /* \"#utility.yul\":18707:18713   */\n      dup3\n        /* \"#utility.yul\":18701:18705   */\n      dup6\n        /* \"#utility.yul\":18655:18722   */\n      tag_232\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":18749:18750   */\n      0x00\n        /* \"#utility.yul\":18773:18777   */\n      0x20\n        /* \"#utility.yul\":18760:18777   */\n      swap1\n      pop\n        /* \"#utility.yul\":18805:18807   */\n      0x1f\n        /* \"#utility.yul\":18797:18803   */\n      dup4\n        /* \"#utility.yul\":18794:18808   */\n      gt\n        /* \"#utility.yul\":18822:18823   */\n      0x01\n        /* \"#utility.yul\":18817:19435   */\n      dup2\n      eq\n      tag_458\n      jumpi\n        /* \"#utility.yul\":19479:19480   */\n      0x00\n        /* \"#utility.yul\":19496:19502   */\n      dup5\n        /* \"#utility.yul\":19493:19570   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":19545:19554   */\n      dup3\n        /* \"#utility.yul\":19540:19543   */\n      dup8\n        /* \"#utility.yul\":19536:19555   */\n      add\n        /* \"#utility.yul\":19530:19556   */\n      mload\n        /* \"#utility.yul\":19521:19556   */\n      swap1\n      pop\n        /* \"#utility.yul\":19493:19570   */\n    tag_459:\n        /* \"#utility.yul\":19596:19663   */\n      tag_460\n        /* \"#utility.yul\":19656:19662   */\n      dup6\n        /* \"#utility.yul\":19649:19654   */\n      dup3\n        /* \"#utility.yul\":19596:19663   */\n      tag_235\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":19590:19594   */\n      dup7\n        /* \"#utility.yul\":19583:19664   */\n      sstore\n        /* \"#utility.yul\":19452:19674   */\n      pop\n        /* \"#utility.yul\":18787:19674   */\n      jump(tag_457)\n        /* \"#utility.yul\":18817:19435   */\n    tag_458:\n        /* \"#utility.yul\":18869:18873   */\n      0x1f\n        /* \"#utility.yul\":18865:18874   */\n      not\n        /* \"#utility.yul\":18857:18863   */\n      dup5\n        /* \"#utility.yul\":18853:18875   */\n      and\n        /* \"#utility.yul\":18903:18940   */\n      tag_461\n        /* \"#utility.yul\":18935:18939   */\n      dup7\n        /* \"#utility.yul\":18903:18940   */\n      tag_222\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":18962:18963   */\n      0x00\n        /* \"#utility.yul\":18976:19184   */\n    tag_462:\n        /* \"#utility.yul\":18990:18997   */\n      dup3\n        /* \"#utility.yul\":18987:18988   */\n      dup2\n        /* \"#utility.yul\":18984:18998   */\n      lt\n        /* \"#utility.yul\":18976:19184   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":19069:19078   */\n      dup5\n        /* \"#utility.yul\":19064:19067   */\n      dup10\n        /* \"#utility.yul\":19060:19079   */\n      add\n        /* \"#utility.yul\":19054:19080   */\n      mload\n        /* \"#utility.yul\":19046:19052   */\n      dup3\n        /* \"#utility.yul\":19039:19081   */\n      sstore\n        /* \"#utility.yul\":19120:19121   */\n      0x01\n        /* \"#utility.yul\":19112:19118   */\n      dup3\n        /* \"#utility.yul\":19108:19122   */\n      add\n        /* \"#utility.yul\":19098:19122   */\n      swap2\n      pop\n        /* \"#utility.yul\":19167:19169   */\n      0x20\n        /* \"#utility.yul\":19156:19165   */\n      dup6\n        /* \"#utility.yul\":19152:19170   */\n      add\n        /* \"#utility.yul\":19139:19170   */\n      swap5\n      pop\n        /* \"#utility.yul\":19013:19017   */\n      0x20\n        /* \"#utility.yul\":19010:19011   */\n      dup2\n        /* \"#utility.yul\":19006:19018   */\n      add\n        /* \"#utility.yul\":19001:19018   */\n      swap1\n      pop\n        /* \"#utility.yul\":18976:19184   */\n      jump(tag_462)\n    tag_464:\n        /* \"#utility.yul\":19212:19218   */\n      dup7\n        /* \"#utility.yul\":19203:19210   */\n      dup4\n        /* \"#utility.yul\":19200:19219   */\n      lt\n        /* \"#utility.yul\":19197:19376   */\n      iszero\n      tag_465\n      jumpi\n        /* \"#utility.yul\":19270:19279   */\n      dup5\n        /* \"#utility.yul\":19265:19268   */\n      dup10\n        /* \"#utility.yul\":19261:19280   */\n      add\n        /* \"#utility.yul\":19255:19281   */\n      mload\n        /* \"#utility.yul\":19313:19361   */\n      tag_466\n        /* \"#utility.yul\":19355:19359   */\n      0x1f\n        /* \"#utility.yul\":19347:19353   */\n      dup10\n        /* \"#utility.yul\":19343:19360   */\n      and\n        /* \"#utility.yul\":19332:19341   */\n      dup3\n        /* \"#utility.yul\":19313:19361   */\n      tag_234\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":19305:19311   */\n      dup4\n        /* \"#utility.yul\":19298:19362   */\n      sstore\n        /* \"#utility.yul\":19220:19376   */\n      pop\n        /* \"#utility.yul\":19197:19376   */\n    tag_465:\n        /* \"#utility.yul\":19422:19423   */\n      0x01\n        /* \"#utility.yul\":19418:19419   */\n      0x02\n        /* \"#utility.yul\":19410:19416   */\n      dup9\n        /* \"#utility.yul\":19406:19420   */\n      mul\n        /* \"#utility.yul\":19402:19424   */\n      add\n        /* \"#utility.yul\":19396:19400   */\n      dup9\n        /* \"#utility.yul\":19389:19425   */\n      sstore\n        /* \"#utility.yul\":18824:19435   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":18787:19674   */\n    tag_457:\n      pop\n        /* \"#utility.yul\":18377:19680   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":18285:19680   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19686:19877   */\n    tag_117:\n        /* \"#utility.yul\":19726:19729   */\n      0x00\n        /* \"#utility.yul\":19745:19765   */\n      tag_468\n        /* \"#utility.yul\":19763:19764   */\n      dup3\n        /* \"#utility.yul\":19745:19765   */\n      tag_172\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":19740:19765   */\n      swap2\n      pop\n        /* \"#utility.yul\":19779:19799   */\n      tag_469\n        /* \"#utility.yul\":19797:19798   */\n      dup4\n        /* \"#utility.yul\":19779:19799   */\n      tag_172\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":19774:19799   */\n      swap3\n      pop\n        /* \"#utility.yul\":19822:19823   */\n      dup3\n        /* \"#utility.yul\":19819:19820   */\n      dup3\n        /* \"#utility.yul\":19815:19824   */\n      add\n        /* \"#utility.yul\":19808:19824   */\n      swap1\n      pop\n        /* \"#utility.yul\":19843:19846   */\n      dup1\n        /* \"#utility.yul\":19840:19841   */\n      dup3\n        /* \"#utility.yul\":19837:19847   */\n      gt\n        /* \"#utility.yul\":19834:19870   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":19850:19868   */\n      tag_471\n      tag_216\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":19834:19870   */\n    tag_470:\n        /* \"#utility.yul\":19686:19877   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19883:20026   */\n    tag_236:\n        /* \"#utility.yul\":19940:19945   */\n      0x00\n        /* \"#utility.yul\":19971:19977   */\n      dup2\n        /* \"#utility.yul\":19965:19978   */\n      mload\n        /* \"#utility.yul\":19956:19978   */\n      swap1\n      pop\n        /* \"#utility.yul\":19987:20020   */\n      tag_473\n        /* \"#utility.yul\":20014:20019   */\n      dup2\n        /* \"#utility.yul\":19987:20020   */\n      tag_186\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":19883:20026   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20032:20383   */\n    tag_121:\n        /* \"#utility.yul\":20102:20108   */\n      0x00\n        /* \"#utility.yul\":20151:20153   */\n      0x20\n        /* \"#utility.yul\":20139:20148   */\n      dup3\n        /* \"#utility.yul\":20130:20137   */\n      dup5\n        /* \"#utility.yul\":20126:20149   */\n      sub\n        /* \"#utility.yul\":20122:20154   */\n      slt\n        /* \"#utility.yul\":20119:20238   */\n      iszero\n      tag_475\n      jumpi\n        /* \"#utility.yul\":20157:20236   */\n      tag_476\n      tag_170\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":20119:20238   */\n    tag_475:\n        /* \"#utility.yul\":20277:20278   */\n      0x00\n        /* \"#utility.yul\":20302:20366   */\n      tag_477\n        /* \"#utility.yul\":20358:20365   */\n      dup5\n        /* \"#utility.yul\":20349:20355   */\n      dup3\n        /* \"#utility.yul\":20338:20347   */\n      dup6\n        /* \"#utility.yul\":20334:20356   */\n      add\n        /* \"#utility.yul\":20302:20366   */\n      tag_236\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":20292:20366   */\n      swap2\n      pop\n        /* \"#utility.yul\":20248:20376   */\n      pop\n        /* \"#utility.yul\":20032:20383   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20389:20494   */\n    tag_237:\n        /* \"#utility.yul\":20425:20432   */\n      0x00\n        /* \"#utility.yul\":20465:20487   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":20458:20463   */\n      dup3\n        /* \"#utility.yul\":20454:20488   */\n      and\n        /* \"#utility.yul\":20443:20488   */\n      swap1\n      pop\n        /* \"#utility.yul\":20389:20494   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20500:20620   */\n    tag_238:\n        /* \"#utility.yul\":20572:20595   */\n      tag_480\n        /* \"#utility.yul\":20589:20594   */\n      dup2\n        /* \"#utility.yul\":20572:20595   */\n      tag_237\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":20565:20570   */\n      dup2\n        /* \"#utility.yul\":20562:20596   */\n      eq\n        /* \"#utility.yul\":20552:20614   */\n      tag_481\n      jumpi\n        /* \"#utility.yul\":20610:20611   */\n      0x00\n        /* \"#utility.yul\":20607:20608   */\n      dup1\n        /* \"#utility.yul\":20600:20612   */\n      revert\n        /* \"#utility.yul\":20552:20614   */\n    tag_481:\n        /* \"#utility.yul\":20500:20620   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20626:20767   */\n    tag_239:\n        /* \"#utility.yul\":20682:20687   */\n      0x00\n        /* \"#utility.yul\":20713:20719   */\n      dup2\n        /* \"#utility.yul\":20707:20720   */\n      mload\n        /* \"#utility.yul\":20698:20720   */\n      swap1\n      pop\n        /* \"#utility.yul\":20729:20761   */\n      tag_483\n        /* \"#utility.yul\":20755:20760   */\n      dup2\n        /* \"#utility.yul\":20729:20761   */\n      tag_238\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":20626:20767   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20773:20893   */\n    tag_240:\n        /* \"#utility.yul\":20845:20868   */\n      tag_485\n        /* \"#utility.yul\":20862:20867   */\n      dup2\n        /* \"#utility.yul\":20845:20868   */\n      tag_196\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":20838:20843   */\n      dup2\n        /* \"#utility.yul\":20835:20869   */\n      eq\n        /* \"#utility.yul\":20825:20887   */\n      tag_486\n      jumpi\n        /* \"#utility.yul\":20883:20884   */\n      0x00\n        /* \"#utility.yul\":20880:20881   */\n      dup1\n        /* \"#utility.yul\":20873:20885   */\n      revert\n        /* \"#utility.yul\":20825:20887   */\n    tag_486:\n        /* \"#utility.yul\":20773:20893   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20899:21040   */\n    tag_241:\n        /* \"#utility.yul\":20955:20960   */\n      0x00\n        /* \"#utility.yul\":20986:20992   */\n      dup2\n        /* \"#utility.yul\":20980:20993   */\n      mload\n        /* \"#utility.yul\":20971:20993   */\n      swap1\n      pop\n        /* \"#utility.yul\":21002:21034   */\n      tag_488\n        /* \"#utility.yul\":21028:21033   */\n      dup2\n        /* \"#utility.yul\":21002:21034   */\n      tag_240\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":20899:21040   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21046:22017   */\n    tag_130:\n        /* \"#utility.yul\":21149:21155   */\n      0x00\n        /* \"#utility.yul\":21157:21163   */\n      dup1\n        /* \"#utility.yul\":21165:21171   */\n      0x00\n        /* \"#utility.yul\":21173:21179   */\n      dup1\n        /* \"#utility.yul\":21181:21187   */\n      0x00\n        /* \"#utility.yul\":21230:21233   */\n      0xa0\n        /* \"#utility.yul\":21218:21227   */\n      dup7\n        /* \"#utility.yul\":21209:21216   */\n      dup9\n        /* \"#utility.yul\":21205:21228   */\n      sub\n        /* \"#utility.yul\":21201:21234   */\n      slt\n        /* \"#utility.yul\":21198:21318   */\n      iszero\n      tag_490\n      jumpi\n        /* \"#utility.yul\":21237:21316   */\n      tag_491\n      tag_170\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":21198:21318   */\n    tag_490:\n        /* \"#utility.yul\":21357:21358   */\n      0x00\n        /* \"#utility.yul\":21382:21445   */\n      tag_492\n        /* \"#utility.yul\":21437:21444   */\n      dup9\n        /* \"#utility.yul\":21428:21434   */\n      dup3\n        /* \"#utility.yul\":21417:21426   */\n      dup10\n        /* \"#utility.yul\":21413:21435   */\n      add\n        /* \"#utility.yul\":21382:21445   */\n      tag_239\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":21372:21445   */\n      swap6\n      pop\n        /* \"#utility.yul\":21328:21455   */\n      pop\n        /* \"#utility.yul\":21494:21496   */\n      0x20\n        /* \"#utility.yul\":21520:21583   */\n      tag_493\n        /* \"#utility.yul\":21575:21582   */\n      dup9\n        /* \"#utility.yul\":21566:21572   */\n      dup3\n        /* \"#utility.yul\":21555:21564   */\n      dup10\n        /* \"#utility.yul\":21551:21573   */\n      add\n        /* \"#utility.yul\":21520:21583   */\n      tag_241\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":21510:21583   */\n      swap5\n      pop\n        /* \"#utility.yul\":21465:21593   */\n      pop\n        /* \"#utility.yul\":21632:21634   */\n      0x40\n        /* \"#utility.yul\":21658:21722   */\n      tag_494\n        /* \"#utility.yul\":21714:21721   */\n      dup9\n        /* \"#utility.yul\":21705:21711   */\n      dup3\n        /* \"#utility.yul\":21694:21703   */\n      dup10\n        /* \"#utility.yul\":21690:21712   */\n      add\n        /* \"#utility.yul\":21658:21722   */\n      tag_201\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":21648:21722   */\n      swap4\n      pop\n        /* \"#utility.yul\":21603:21732   */\n      pop\n        /* \"#utility.yul\":21771:21773   */\n      0x60\n        /* \"#utility.yul\":21797:21861   */\n      tag_495\n        /* \"#utility.yul\":21853:21860   */\n      dup9\n        /* \"#utility.yul\":21844:21850   */\n      dup3\n        /* \"#utility.yul\":21833:21842   */\n      dup10\n        /* \"#utility.yul\":21829:21851   */\n      add\n        /* \"#utility.yul\":21797:21861   */\n      tag_201\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":21787:21861   */\n      swap3\n      pop\n        /* \"#utility.yul\":21742:21871   */\n      pop\n        /* \"#utility.yul\":21910:21913   */\n      0x80\n        /* \"#utility.yul\":21937:22000   */\n      tag_496\n        /* \"#utility.yul\":21992:21999   */\n      dup9\n        /* \"#utility.yul\":21983:21989   */\n      dup3\n        /* \"#utility.yul\":21972:21981   */\n      dup10\n        /* \"#utility.yul\":21968:21990   */\n      add\n        /* \"#utility.yul\":21937:22000   */\n      tag_239\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":21927:22000   */\n      swap2\n      pop\n        /* \"#utility.yul\":21881:22010   */\n      pop\n        /* \"#utility.yul\":21046:22017   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22023:22433   */\n    tag_137:\n        /* \"#utility.yul\":22063:22070   */\n      0x00\n        /* \"#utility.yul\":22086:22106   */\n      tag_498\n        /* \"#utility.yul\":22104:22105   */\n      dup3\n        /* \"#utility.yul\":22086:22106   */\n      tag_172\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":22081:22106   */\n      swap2\n      pop\n        /* \"#utility.yul\":22120:22140   */\n      tag_499\n        /* \"#utility.yul\":22138:22139   */\n      dup4\n        /* \"#utility.yul\":22120:22140   */\n      tag_172\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":22115:22140   */\n      swap3\n      pop\n        /* \"#utility.yul\":22175:22176   */\n      dup3\n        /* \"#utility.yul\":22172:22173   */\n      dup3\n        /* \"#utility.yul\":22168:22177   */\n      mul\n        /* \"#utility.yul\":22197:22227   */\n      tag_500\n        /* \"#utility.yul\":22215:22226   */\n      dup2\n        /* \"#utility.yul\":22197:22227   */\n      tag_172\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":22186:22227   */\n      swap2\n      pop\n        /* \"#utility.yul\":22376:22377   */\n      dup3\n        /* \"#utility.yul\":22367:22374   */\n      dup3\n        /* \"#utility.yul\":22363:22378   */\n      div\n        /* \"#utility.yul\":22360:22361   */\n      dup5\n        /* \"#utility.yul\":22357:22379   */\n      eq\n        /* \"#utility.yul\":22337:22338   */\n      dup4\n        /* \"#utility.yul\":22330:22339   */\n      iszero\n        /* \"#utility.yul\":22310:22393   */\n      or\n        /* \"#utility.yul\":22287:22426   */\n      tag_501\n      jumpi\n        /* \"#utility.yul\":22406:22424   */\n      tag_502\n      tag_216\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":22287:22426   */\n    tag_501:\n        /* \"#utility.yul\":22071:22433   */\n      pop\n        /* \"#utility.yul\":22023:22433   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22439:22619   */\n    tag_242:\n        /* \"#utility.yul\":22487:22564   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22484:22485   */\n      0x00\n        /* \"#utility.yul\":22477:22565   */\n      mstore\n        /* \"#utility.yul\":22584:22588   */\n      0x12\n        /* \"#utility.yul\":22581:22582   */\n      0x04\n        /* \"#utility.yul\":22574:22589   */\n      mstore\n        /* \"#utility.yul\":22608:22612   */\n      0x24\n        /* \"#utility.yul\":22605:22606   */\n      0x00\n        /* \"#utility.yul\":22598:22613   */\n      revert\n        /* \"#utility.yul\":22625:22810   */\n    tag_139:\n        /* \"#utility.yul\":22665:22666   */\n      0x00\n        /* \"#utility.yul\":22682:22702   */\n      tag_505\n        /* \"#utility.yul\":22700:22701   */\n      dup3\n        /* \"#utility.yul\":22682:22702   */\n      tag_172\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":22677:22702   */\n      swap2\n      pop\n        /* \"#utility.yul\":22716:22736   */\n      tag_506\n        /* \"#utility.yul\":22734:22735   */\n      dup4\n        /* \"#utility.yul\":22716:22736   */\n      tag_172\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":22711:22736   */\n      swap3\n      pop\n        /* \"#utility.yul\":22755:22756   */\n      dup3\n        /* \"#utility.yul\":22745:22780   */\n      tag_507\n      jumpi\n        /* \"#utility.yul\":22760:22778   */\n      tag_508\n      tag_242\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":22745:22780   */\n    tag_507:\n        /* \"#utility.yul\":22802:22803   */\n      dup3\n        /* \"#utility.yul\":22799:22800   */\n      dup3\n        /* \"#utility.yul\":22795:22804   */\n      div\n        /* \"#utility.yul\":22790:22804   */\n      swap1\n      pop\n        /* \"#utility.yul\":22625:22810   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22816:22963   */\n    tag_243:\n        /* \"#utility.yul\":22917:22928   */\n      0x00\n        /* \"#utility.yul\":22954:22957   */\n      dup2\n        /* \"#utility.yul\":22939:22957   */\n      swap1\n      pop\n        /* \"#utility.yul\":22816:22963   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22969:23083   */\n    tag_244:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23089:23487   */\n    tag_245:\n        /* \"#utility.yul\":23248:23251   */\n      0x00\n        /* \"#utility.yul\":23269:23352   */\n      tag_512\n        /* \"#utility.yul\":23350:23351   */\n      0x00\n        /* \"#utility.yul\":23345:23348   */\n      dup4\n        /* \"#utility.yul\":23269:23352   */\n      tag_243\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":23262:23352   */\n      swap2\n      pop\n        /* \"#utility.yul\":23361:23454   */\n      tag_513\n        /* \"#utility.yul\":23450:23453   */\n      dup3\n        /* \"#utility.yul\":23361:23454   */\n      tag_244\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":23479:23480   */\n      0x00\n        /* \"#utility.yul\":23474:23477   */\n      dup3\n        /* \"#utility.yul\":23470:23481   */\n      add\n        /* \"#utility.yul\":23463:23481   */\n      swap1\n      pop\n        /* \"#utility.yul\":23089:23487   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23493:23872   */\n    tag_143:\n        /* \"#utility.yul\":23677:23680   */\n      0x00\n        /* \"#utility.yul\":23699:23846   */\n      tag_515\n        /* \"#utility.yul\":23842:23845   */\n      dup3\n        /* \"#utility.yul\":23699:23846   */\n      tag_245\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":23692:23846   */\n      swap2\n      pop\n        /* \"#utility.yul\":23863:23866   */\n      dup2\n        /* \"#utility.yul\":23856:23866   */\n      swap1\n      pop\n        /* \"#utility.yul\":23493:23872   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122054c14137dd7630cc99263b7c7b26e8bd76e5601a166ee92cf6a0c370274b72e364736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_622": {
									"entryPoint": null,
									"id": 622,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_ICoverNFT_$1068_fromMemory": {
									"entryPoint": 304,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_ICoverNFT_$1068t_address_fromMemory": {
									"entryPoint": 376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_ICoverNFT_$1068": {
									"entryPoint": 258,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 201,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 327,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_ICoverNFT_$1068": {
									"entryPoint": 278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1860:16",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:16"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:16"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:16",
														"type": ""
													}
												],
												"src": "7:75:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:16"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:16"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:16",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:16",
														"type": ""
													}
												],
												"src": "334:126:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:16",
														"type": ""
													}
												],
												"src": "466:96:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "631:51:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "641:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "670:5:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "652:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "652:24:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "641:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_ICoverNFT_$1068",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "613:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "623:7:16",
														"type": ""
													}
												],
												"src": "568:114:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "749:97:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "824:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "833:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "836:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "826:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "826:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "826:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "772:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "815:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_ICoverNFT_$1068",
																					"nodeType": "YulIdentifier",
																					"src": "779:35:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "779:42:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "769:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "769:53:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "762:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:61:16"
															},
															"nodeType": "YulIf",
															"src": "759:81:16"
														}
													]
												},
												"name": "validator_revert_t_contract$_ICoverNFT_$1068",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:16",
														"type": ""
													}
												],
												"src": "688:158:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "933:98:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "943:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "958:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "952:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "952:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "943:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1019:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_ICoverNFT_$1068",
																	"nodeType": "YulIdentifier",
																	"src": "974:44:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "974:51:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "974:51:16"
														}
													]
												},
												"name": "abi_decode_t_contract$_ICoverNFT_$1068_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "911:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "919:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "927:5:16",
														"type": ""
													}
												],
												"src": "852:179:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1080:79:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1137:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1146:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1149:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1139:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1139:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1139:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1103:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1128:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1110:17:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1110:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1100:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1093:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1093:43:16"
															},
															"nodeType": "YulIf",
															"src": "1090:63:16"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1073:5:16",
														"type": ""
													}
												],
												"src": "1037:122:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1228:80:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1238:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1253:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1247:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1247:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1238:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1296:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1269:26:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1269:33:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1269:33:16"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1206:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1214:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1222:5:16",
														"type": ""
													}
												],
												"src": "1165:143:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1426:431:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1472:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1474:77:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1474:79:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1474:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1447:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1456:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1443:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1443:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1468:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1439:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1439:32:16"
															},
															"nodeType": "YulIf",
															"src": "1436:119:16"
														},
														{
															"nodeType": "YulBlock",
															"src": "1565:146:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1580:15:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1594:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1584:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1609:92:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1673:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1684:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1669:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1669:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1693:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_ICoverNFT_$1068_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1619:49:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1619:82:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1609:6:16"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1721:129:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1736:16:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1750:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1740:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1766:74:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1812:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1823:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1808:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1808:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1832:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1776:31:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1776:64:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1766:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ICoverNFT_$1068t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1388:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1399:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1411:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1419:6:16",
														"type": ""
													}
												],
												"src": "1314:543:16"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ICoverNFT_$1068(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ICoverNFT_$1068(value) {\n        if iszero(eq(value, cleanup_t_contract$_ICoverNFT_$1068(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ICoverNFT_$1068_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ICoverNFT_$1068(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ICoverNFT_$1068t_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ICoverNFT_$1068_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1DF6 CODESIZE SUB DUP1 PUSH3 0x1DF6 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x178 JUMP JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x1BF JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFB DUP3 PUSH3 0xCE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x10F DUP3 PUSH3 0xEE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x121 DUP2 PUSH3 0x102 JUMP JUMPDEST DUP2 EQ PUSH3 0x12D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x141 DUP2 PUSH3 0x116 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x152 DUP2 PUSH3 0xEE JUMP JUMPDEST DUP2 EQ PUSH3 0x15E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x172 DUP2 PUSH3 0x147 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x192 JUMPI PUSH3 0x191 PUSH3 0xC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x1A2 DUP6 DUP3 DUP7 ADD PUSH3 0x130 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x1B5 DUP6 DUP3 DUP7 ADD PUSH3 0x161 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C27 DUP1 PUSH3 0x1CF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E9E1ABE GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x7E9E1ABE EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0xA71467A8 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0xC9B10D3F EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xDE071A0A EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xED3B657A EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0xEE97F7F3 EQ PUSH2 0x2E1 JUMPI PUSH2 0xA6 JUMP JUMPDEST DUP1 PUSH3 0x407D2A EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x404730F4 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x4230A777 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x42E53FCF EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x4B61A44B EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x6C57B95D EQ PUSH2 0x1A4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCD SWAP2 SWAP1 PUSH2 0xF91 JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDF SWAP2 SWAP1 PUSH2 0x118D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFD PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10A SWAP2 SWAP1 PUSH2 0x11BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x1205 JUMP JUMPDEST PUSH2 0x55F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x1241 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x165 PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x12BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19D SWAP2 SWAP1 PUSH2 0xF91 JUMP JUMPDEST PUSH2 0x608 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x12FB JUMP JUMPDEST PUSH2 0x624 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x11BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F6 PUSH2 0x633 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x11BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x226 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x12FB JUMP JUMPDEST PUSH2 0x639 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x11BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x263 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x12FB JUMP JUMPDEST PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x270 SWAP2 SWAP1 PUSH2 0x11BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x1205 JUMP JUMPDEST PUSH2 0xA4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x135D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CB PUSH2 0xACB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x11BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F6 PUSH2 0xAD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x1399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x314 PUSH2 0xECB JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD DUP1 SLOAD PUSH2 0x43E SWAP1 PUSH2 0x13E3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x46A SWAP1 PUSH2 0x13E3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4B7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x48C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4B7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x49A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x536 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x55A SWAP2 SWAP1 PUSH2 0x1429 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5AD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x1566 JUMP JUMPDEST POP POP POP POP POP POP SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x61A SWAP2 SWAP1 PUSH2 0x1637 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0xE8D4A51000 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6A627842 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x696 SWAP2 SWAP1 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6D9 SWAP2 SWAP1 PUSH2 0x1429 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6F7 DUP5 PUSH2 0xA3B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0xC0 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x71F SWAP2 SWAP1 PUSH2 0x1205 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x74D SWAP2 SWAP1 PUSH2 0x1205 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x60 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x40 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x80 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0xA0 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP1 PUSH1 0xE0 ADD SWAP1 PUSH2 0x7A0 SWAP2 SWAP1 PUSH2 0x16A4 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP2 MSTORE POP PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0xA ADD SWAP1 DUP2 PUSH2 0x8EE SWAP2 SWAP1 PUSH2 0x18D8 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x0 PUSH2 0x8FD DUP4 PUSH2 0x624 JUMP JUMPDEST SWAP1 POP PUSH2 0x910 DUP2 PUSH1 0x0 PUSH4 0xFFFFFFFF AND PUSH2 0xAFB JUMP JUMPDEST POP PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x938 SWAP2 SWAP1 PUSH2 0x19AA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x88EA0751 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9D2 SWAP2 SWAP1 PUSH2 0x19F3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAA5DA046 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA30 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0xE8D4A51000 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA98 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xABC SWAP2 SWAP1 PUSH2 0x1A8E JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB06 PUSH2 0xE33 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP4 SUB PUSH2 0xE2C JUMPI PUSH1 0x0 PUSH1 0x64 DUP6 PUSH1 0x65 PUSH4 0xFFFFFFFF AND PUSH2 0xB2D SWAP2 SWAP1 PUSH2 0x1B09 JUMP JUMPDEST PUSH2 0xB37 SWAP2 SWAP1 PUSH2 0x1B7A JUMP JUMPDEST SWAP1 POP DUP5 CALLVALUE LT ISZERO PUSH2 0xB73 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF244866F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 CALLVALUE PUSH2 0xB81 SWAP2 SWAP1 PUSH2 0x1637 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH1 0x40 MLOAD PUSH2 0xBA9 SWAP1 PUSH2 0x1BDC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xBE6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBEB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xC26 JUMPI PUSH1 0x40 MLOAD PUSH32 0xAB1EE9BF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP7 DUP4 PUSH2 0xC35 SWAP2 SWAP1 PUSH2 0x1637 JUMP JUMPDEST GT ISZERO PUSH2 0xD7B JUMPI PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7ABC3964 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCAA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCCE SWAP2 SWAP1 PUSH2 0x19F3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 DUP5 PUSH2 0xCF0 SWAP2 SWAP1 PUSH2 0x1637 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCFC SWAP1 PUSH2 0x1BDC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xD39 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD3E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xD79 JUMPI PUSH1 0x40 MLOAD PUSH32 0x204633A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xE29 JUMPI PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xDAA SWAP1 PUSH2 0x1BDC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xDE7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xDEC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xE27 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCD57D4DA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9CCC903D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEA2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEC6 SWAP2 SWAP1 PUSH2 0x19F3 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF6E DUP2 PUSH2 0xF5B JUMP JUMPDEST DUP2 EQ PUSH2 0xF79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF8B DUP2 PUSH2 0xF65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFA7 JUMPI PUSH2 0xFA6 PUSH2 0xF51 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFB5 DUP5 DUP3 DUP6 ADD PUSH2 0xF7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFC7 DUP2 PUSH2 0xF5B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFF8 DUP3 PUSH2 0xFCD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1008 DUP2 PUSH2 0xFED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1048 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x102D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1070 DUP3 PUSH2 0x100E JUMP JUMPDEST PUSH2 0x107A DUP2 DUP6 PUSH2 0x1019 JUMP JUMPDEST SWAP4 POP PUSH2 0x108A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x102A JUMP JUMPDEST PUSH2 0x1093 DUP2 PUSH2 0x1054 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x10B7 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0xFBE JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x10CA PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0xFBE JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x10DD PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0xFBE JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x10F0 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0xFBE JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x1103 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0xFFF JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x1116 PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0xFFF JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x1129 PUSH1 0xC0 DUP7 ADD DUP3 PUSH2 0xFBE JUMP JUMPDEST POP PUSH1 0xE0 DUP4 ADD MLOAD PUSH2 0x113C PUSH1 0xE0 DUP7 ADD DUP3 PUSH2 0xFBE JUMP JUMPDEST POP PUSH2 0x100 DUP4 ADD MLOAD PUSH2 0x1151 PUSH2 0x100 DUP7 ADD DUP3 PUSH2 0xFBE JUMP JUMPDEST POP PUSH2 0x120 DUP4 ADD MLOAD PUSH2 0x1166 PUSH2 0x120 DUP7 ADD DUP3 PUSH2 0xFBE JUMP JUMPDEST POP PUSH2 0x140 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH2 0x140 DUP7 ADD MSTORE PUSH2 0x1180 DUP3 DUP3 PUSH2 0x1065 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11A7 DUP2 DUP5 PUSH2 0x109E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11B8 DUP2 PUSH2 0xF5B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11D3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11E2 DUP2 PUSH2 0xFED JUMP JUMPDEST DUP2 EQ PUSH2 0x11ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11FF DUP2 PUSH2 0x11D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x121B JUMPI PUSH2 0x121A PUSH2 0xF51 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1229 DUP5 DUP3 DUP6 ADD PUSH2 0x11F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x123B DUP2 PUSH2 0xFCD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1256 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1232 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1281 PUSH2 0x127C PUSH2 0x1277 DUP5 PUSH2 0xFCD JUMP JUMPDEST PUSH2 0x125C JUMP JUMPDEST PUSH2 0xFCD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1293 DUP3 PUSH2 0x1266 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A5 DUP3 PUSH2 0x1288 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12B5 DUP2 PUSH2 0x129A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12D0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12F2 JUMPI PUSH2 0x12F1 PUSH2 0x12D6 JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1311 JUMPI PUSH2 0x1310 PUSH2 0xF51 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x132F JUMPI PUSH2 0x132E PUSH2 0xF56 JUMP JUMPDEST JUMPDEST PUSH2 0x133B DUP5 DUP3 DUP6 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1357 DUP2 PUSH2 0x1344 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1372 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x134E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1383 DUP3 PUSH2 0x1288 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1393 DUP2 PUSH2 0x1378 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13AE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x138A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x13FB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x140E JUMPI PUSH2 0x140D PUSH2 0x13B4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1423 DUP2 PUSH2 0xF65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x143F JUMPI PUSH2 0x143E PUSH2 0xF51 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x144D DUP5 DUP3 DUP6 ADD PUSH2 0x1414 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x145F DUP2 PUSH2 0xFCD JUMP JUMPDEST DUP2 EQ PUSH2 0x146A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x147C DUP2 PUSH2 0x1456 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1498 DUP2 PUSH2 0x1482 JUMP JUMPDEST DUP2 EQ PUSH2 0x14A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x14B5 DUP2 PUSH2 0x148F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14D2 DUP2 PUSH2 0x14BB JUMP JUMPDEST DUP2 EQ PUSH2 0x14DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x14EF DUP2 PUSH2 0x14C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x150B DUP2 PUSH2 0x14F5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1516 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1528 DUP2 PUSH2 0x1502 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1543 DUP2 PUSH2 0x152E JUMP JUMPDEST DUP2 EQ PUSH2 0x154E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1560 DUP2 PUSH2 0x153A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1585 JUMPI PUSH2 0x1584 PUSH2 0xF51 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1593 DUP11 DUP3 DUP12 ADD PUSH2 0x146D JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x15A4 DUP11 DUP3 DUP12 ADD PUSH2 0x14A6 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x15B5 DUP11 DUP3 DUP12 ADD PUSH2 0x14E0 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x15C6 DUP11 DUP3 DUP12 ADD PUSH2 0x14E0 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x15D7 DUP11 DUP3 DUP12 ADD PUSH2 0x14E0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x15E8 DUP11 DUP3 DUP12 ADD PUSH2 0x1519 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x15F9 DUP11 DUP3 DUP12 ADD PUSH2 0x1551 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1642 DUP3 PUSH2 0xF5B JUMP JUMPDEST SWAP2 POP PUSH2 0x164D DUP4 PUSH2 0xF5B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1665 JUMPI PUSH2 0x1664 PUSH2 0x1608 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1674 DUP2 PUSH2 0xFED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x168F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x166B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x16C1 JUMPI PUSH2 0x16C0 PUSH2 0x1695 JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x16E3 JUMPI PUSH2 0x16E2 PUSH2 0x169A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x16FF JUMPI PUSH2 0x16FE PUSH2 0x169F JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x1798 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x175B JUMP JUMPDEST PUSH2 0x17A2 DUP7 DUP4 PUSH2 0x175B JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17D5 PUSH2 0x17D0 PUSH2 0x17CB DUP5 PUSH2 0xF5B JUMP JUMPDEST PUSH2 0x125C JUMP JUMPDEST PUSH2 0xF5B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17EF DUP4 PUSH2 0x17BA JUMP JUMPDEST PUSH2 0x1803 PUSH2 0x17FB DUP3 PUSH2 0x17DC JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1768 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1818 PUSH2 0x180B JUMP JUMPDEST PUSH2 0x1823 DUP2 DUP5 DUP5 PUSH2 0x17E6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1847 JUMPI PUSH2 0x183C PUSH1 0x0 DUP3 PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1829 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x188C JUMPI PUSH2 0x185D DUP2 PUSH2 0x1736 JUMP JUMPDEST PUSH2 0x1866 DUP5 PUSH2 0x174B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1875 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1889 PUSH2 0x1881 DUP6 PUSH2 0x174B JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1828 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18AF PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1891 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18C8 DUP4 DUP4 PUSH2 0x189E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18E1 DUP3 PUSH2 0x100E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18FA JUMPI PUSH2 0x18F9 PUSH2 0x1707 JUMP JUMPDEST JUMPDEST PUSH2 0x1904 DUP3 SLOAD PUSH2 0x13E3 JUMP JUMPDEST PUSH2 0x190F DUP3 DUP3 DUP6 PUSH2 0x184B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1942 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1930 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x193A DUP6 DUP3 PUSH2 0x18BC JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x19A2 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1950 DUP7 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1978 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1953 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1995 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1991 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x189E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B5 DUP3 PUSH2 0xF5B JUMP JUMPDEST SWAP2 POP PUSH2 0x19C0 DUP4 PUSH2 0xF5B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x19D8 JUMPI PUSH2 0x19D7 PUSH2 0x1608 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x19ED DUP2 PUSH2 0x11D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A09 JUMPI PUSH2 0x1A08 PUSH2 0xF51 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A17 DUP5 DUP3 DUP6 ADD PUSH2 0x19DE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A3F DUP2 PUSH2 0x1A20 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A5C DUP2 PUSH2 0x1A36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A6B DUP2 PUSH2 0x1344 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A88 DUP2 PUSH2 0x1A62 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1AAA JUMPI PUSH2 0x1AA9 PUSH2 0xF51 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AB8 DUP9 DUP3 DUP10 ADD PUSH2 0x1A4D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1AC9 DUP9 DUP3 DUP10 ADD PUSH2 0x1A79 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1ADA DUP9 DUP3 DUP10 ADD PUSH2 0x1414 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1AEB DUP9 DUP3 DUP10 ADD PUSH2 0x1414 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x1AFC DUP9 DUP3 DUP10 ADD PUSH2 0x1A4D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B14 DUP3 PUSH2 0xF5B JUMP JUMPDEST SWAP2 POP PUSH2 0x1B1F DUP4 PUSH2 0xF5B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1B2D DUP2 PUSH2 0xF5B JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1B44 JUMPI PUSH2 0x1B43 PUSH2 0x1608 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B85 DUP3 PUSH2 0xF5B JUMP JUMPDEST SWAP2 POP PUSH2 0x1B90 DUP4 PUSH2 0xF5B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1BA0 JUMPI PUSH2 0x1B9F PUSH2 0x1B4B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC6 PUSH1 0x0 DUP4 PUSH2 0x1BAB JUMP JUMPDEST SWAP2 POP PUSH2 0x1BD1 DUP3 PUSH2 0x1BB6 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BE7 DUP3 PUSH2 0x1BB9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD 0xC1 COINBASE CALLDATACOPY 0xDD PUSH23 0x30CC99263B7C7B26E8BD76E5601A166EE92CF6A0C37027 0x4B PUSH19 0xE364736F6C6343000813003300000000000000 ",
							"sourceMap": "456:3787:9:-:0;;;700:248;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;861:9;850:8;;:20;;;;;;;;;;;;;;;;;;900:1;880:17;:21;;;;927:13;911:6;;:30;;;;;;;;;;;;;;;;;;700:248;;456:3787;;88:117:16;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:114::-;623:7;652:24;670:5;652:24;:::i;:::-;641:35;;568:114;;;:::o;688:158::-;779:42;815:5;779:42;:::i;:::-;772:5;769:53;759:81;;836:1;833;826:12;759:81;688:158;:::o;852:179::-;927:5;958:6;952:13;943:22;;974:51;1019:5;974:51;:::i;:::-;852:179;;;;:::o;1037:122::-;1110:24;1128:5;1110:24;:::i;:::-;1103:5;1100:35;1090:63;;1149:1;1146;1139:12;1090:63;1037:122;:::o;1165:143::-;1222:5;1253:6;1247:13;1238:22;;1269:33;1296:5;1269:33;:::i;:::-;1165:143;;;;:::o;1314:543::-;1411:6;1419;1468:2;1456:9;1447:7;1443:23;1439:32;1436:119;;;1474:79;;:::i;:::-;1436:119;1594:1;1619:82;1693:7;1684:6;1673:9;1669:22;1619:82;:::i;:::-;1609:92;;1565:146;1750:2;1776:64;1832:7;1823:6;1812:9;1808:22;1776:64;:::i;:::-;1766:74;;1721:129;1314:543;;;;;:::o;456:3787:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@activeCoverAmount_593": {
									"entryPoint": 1587,
									"id": 593,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buyCover_713": {
									"entryPoint": 1593,
									"id": 713,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@coverAmountInETH_734": {
									"entryPoint": 2619,
									"id": 734,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@coverDataCount_723": {
									"entryPoint": 1223,
									"id": 723,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@coverNFT_599": {
									"entryPoint": 1506,
									"id": 599,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@coverPrice_745": {
									"entryPoint": 1572,
									"id": 745,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decActiveCoverInETH_875": {
									"entryPoint": 1544,
									"id": 875,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getCoverData_635": {
									"entryPoint": 780,
									"id": 635,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getLiveDataUniswap_914": {
									"entryPoint": 1375,
									"id": 914,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUnitPX_932": {
									"entryPoint": 2634,
									"id": 932,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@master_596": {
									"entryPoint": 2773,
									"id": 596,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@pool_896": {
									"entryPoint": 3635,
									"id": 896,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@retrievePayment_865": {
									"entryPoint": 2811,
									"id": 865,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalActiveCoverInETH_883": {
									"entryPoint": 2763,
									"id": 883,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 6622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 5457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int24_fromMemory": {
									"entryPoint": 5286,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int256_fromMemory": {
									"entryPoint": 6777,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_struct$_BuyCoverParams_$953_calldata_ptr": {
									"entryPoint": 4827,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint160_fromMemory": {
									"entryPoint": 5229,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint16_fromMemory": {
									"entryPoint": 5344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 5140,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint80_fromMemory": {
									"entryPoint": 6733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 5401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 6643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_BuyCoverParams_$953_calldata_ptr": {
									"entryPoint": 4859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory": {
									"entryPoint": 5478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3985,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 6798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 4095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_ICoverNFT_$1068_to_t_address_fromStack": {
									"entryPoint": 4780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_Master_$570_to_t_address_fromStack": {
									"entryPoint": 5002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_int256_to_t_int256_fromStack": {
									"entryPoint": 4942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr": {
									"entryPoint": 4197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7097,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_CoverData_$976_memory_ptr_to_t_struct$_CoverData_$976_memory_ptr_fromStack": {
									"entryPoint": 4254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint160_to_t_uint160_fromStack": {
									"entryPoint": 4658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 4030,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7132,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ICoverNFT_$1068__to_t_address__fromStack_reversed": {
									"entryPoint": 4795,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_Master_$570__to_t_address__fromStack_reversed": {
									"entryPoint": 5017,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed": {
									"entryPoint": 4957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_CoverData_$976_memory_ptr__to_t_struct$_CoverData_$976_memory_ptr__fromStack_reversed": {
									"entryPoint": 4493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint160__to_t_uint160__fromStack_reversed": {
									"entryPoint": 4673,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"access_calldata_tail_t_string_calldata_ptr": {
									"entryPoint": 5796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 5942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4110,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr": {
									"entryPoint": 4121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6921,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 6219,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 4077,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int24": {
									"entryPoint": 5250,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 4932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint16": {
									"entryPoint": 5307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4045,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3931,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5365,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint80": {
									"entryPoint": 6688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 6184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_contract$_ICoverNFT_$1068_to_t_address": {
									"entryPoint": 4762,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_Master_$570_to_t_address": {
									"entryPoint": 4984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 4744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 4710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 6074,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 6360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4138,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 5963,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 5091,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 6332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 4700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 6302,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5640,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6987,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5044,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5895,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 6108,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a": {
									"entryPoint": 5786,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d": {
									"entryPoint": 4822,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad": {
									"entryPoint": 5781,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e": {
									"entryPoint": 5791,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 3926,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3921,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 5979,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 6289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 6160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 7094,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 5992,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 6118,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4569,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int24": {
									"entryPoint": 5263,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 6754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint16": {
									"entryPoint": 5321,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint160": {
									"entryPoint": 5206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3941,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 5378,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint80": {
									"entryPoint": 6710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 6155,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:23875:16",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:16"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:16"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:16",
														"type": ""
													}
												],
												"src": "7:75:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:16"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:16"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:16",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:16",
														"type": ""
													}
												],
												"src": "334:77:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:16"
															},
															"nodeType": "YulIf",
															"src": "470:63:16"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:16",
														"type": ""
													}
												],
												"src": "417:122:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:16"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:16",
														"type": ""
													}
												],
												"src": "545:139:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:16"
															},
															"nodeType": "YulIf",
															"src": "766:119:16"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:16",
														"type": ""
													}
												],
												"src": "690:329:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1080:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1097:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1120:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1102:17:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1102:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1090:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1090:37:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1090:37:16"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1068:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1075:3:16",
														"type": ""
													}
												],
												"src": "1025:108:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1184:81:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1194:65:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1209:5:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1216:42:16",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1205:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1205:54:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1194:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1166:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1176:7:16",
														"type": ""
													}
												],
												"src": "1139:126:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1316:51:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1326:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1355:5:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1337:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1337:24:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1326:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1298:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1308:7:16",
														"type": ""
													}
												],
												"src": "1271:96:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1428:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1445:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1468:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1450:17:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1450:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1438:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1438:37:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1438:37:16"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1416:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1423:3:16",
														"type": ""
													}
												],
												"src": "1373:108:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1546:40:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1557:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1573:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1567:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1567:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1557:6:16"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1529:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1539:6:16",
														"type": ""
													}
												],
												"src": "1487:99:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1678:73:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1695:3:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1700:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1688:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1688:19:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1688:19:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1716:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1735:3:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1740:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1731:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1731:14:16"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1716:11:16"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1650:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1655:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1666:11:16",
														"type": ""
													}
												],
												"src": "1592:159:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1819:184:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1829:10:16",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1838:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1833:1:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1898:63:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1923:3:16"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1928:1:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1919:3:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1919:11:16"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1942:3:16"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1947:1:16"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1938:3:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1938:11:16"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1932:5:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1932:18:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1912:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1912:39:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1912:39:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1859:1:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1862:6:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1856:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1856:13:16"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1870:19:16",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1872:15:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1881:1:16"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1884:2:16",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1877:3:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1877:10:16"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1872:1:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1852:3:16",
																"statements": []
															},
															"src": "1848:113:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1981:3:16"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1986:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1977:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1977:16:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1995:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1970:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1970:27:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1970:27:16"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1801:3:16",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1806:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1811:6:16",
														"type": ""
													}
												],
												"src": "1757:246:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2057:54:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2067:38:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2085:5:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2092:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2081:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2081:14:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2101:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2097:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2097:7:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2077:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2077:28:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2067:6:16"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2040:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2050:6:16",
														"type": ""
													}
												],
												"src": "2009:102:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2199:275:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2209:53:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2256:5:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2223:32:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2223:39:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2213:6:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2271:68:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2327:3:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2332:6:16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2278:48:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2278:61:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2271:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2387:5:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2394:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2383:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2383:16:16"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2401:3:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2406:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2348:34:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2348:65:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2348:65:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2422:46:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2433:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2460:6:16"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2438:21:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2438:29:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2429:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2429:39:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2422:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2180:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2187:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2195:3:16",
														"type": ""
													}
												],
												"src": "2117:357:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2650:2125:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2660:28:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2676:3:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2681:6:16",
																		"type": "",
																		"value": "0x0160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2672:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2672:16:16"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "2664:4:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2698:173:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2742:43:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2772:5:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2779:4:16",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2768:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2768:16:16"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2762:5:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2762:23:16"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2746:12:16",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2832:12:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2850:3:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2855:4:16",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2846:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2846:14:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2798:33:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2798:63:16"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2798:63:16"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2881:176:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2928:43:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2958:5:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2965:4:16",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2954:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2954:16:16"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2948:5:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2948:23:16"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2932:12:16",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3018:12:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3036:3:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3041:4:16",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3032:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3032:14:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2984:33:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2984:63:16"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2984:63:16"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3067:165:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3103:43:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3133:5:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3140:4:16",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3129:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3129:16:16"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3123:5:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3123:23:16"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3107:12:16",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3193:12:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3211:3:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3216:4:16",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3207:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3207:14:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3159:33:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3159:63:16"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3159:63:16"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3242:166:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3279:43:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3309:5:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3316:4:16",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3305:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3305:16:16"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3299:5:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:16"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3283:12:16",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3369:12:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3387:3:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3392:4:16",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3383:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3383:14:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3335:33:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3335:63:16"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3335:63:16"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3418:166:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3455:43:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3485:5:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3492:4:16",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3481:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3481:16:16"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3475:5:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3475:23:16"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3459:12:16",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3545:12:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3563:3:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3568:4:16",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3559:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3559:14:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3511:33:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3511:63:16"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3511:63:16"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3594:166:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3631:43:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3661:5:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3668:4:16",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3657:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3657:16:16"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3651:5:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3651:23:16"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3635:12:16",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3721:12:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3739:3:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3744:4:16",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3735:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3735:14:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3687:33:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3687:63:16"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3687:63:16"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3770:169:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3810:43:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3840:5:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3847:4:16",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3836:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3836:16:16"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3830:5:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3830:23:16"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3814:12:16",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3900:12:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3918:3:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3923:4:16",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3914:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3914:14:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3866:33:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3866:63:16"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3866:63:16"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3949:169:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3989:43:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4019:5:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4026:4:16",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4015:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4015:16:16"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "4009:5:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4009:23:16"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3993:12:16",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "4079:12:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "4097:3:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4102:4:16",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4093:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4093:14:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4045:33:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4045:63:16"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4045:63:16"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4128:179:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4174:45:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4204:5:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4211:6:16",
																						"type": "",
																						"value": "0x0100"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4200:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4200:18:16"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "4194:5:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4194:25:16"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "4178:12:16",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "4266:12:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "4284:3:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4289:6:16",
																						"type": "",
																						"value": "0x0100"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4280:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4280:16:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4232:33:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4232:65:16"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4232:65:16"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4317:179:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4363:45:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4393:5:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4400:6:16",
																						"type": "",
																						"value": "0x0120"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4389:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4389:18:16"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "4383:5:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4383:25:16"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "4367:12:16",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "4455:12:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "4473:3:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4478:6:16",
																						"type": "",
																						"value": "0x0120"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4469:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4469:16:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4421:33:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4421:65:16"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4421:65:16"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4506:242:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4544:45:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4574:5:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4581:6:16",
																						"type": "",
																						"value": "0x0140"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4570:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4570:18:16"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "4564:5:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4564:25:16"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "4548:12:16",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "4614:3:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4619:6:16",
																						"type": "",
																						"value": "0x0140"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4610:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4610:16:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nodeType": "YulIdentifier",
																						"src": "4632:4:16"
																					},
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "4638:3:16"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4628:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4628:14:16"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "4603:6:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4603:40:16"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4603:40:16"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4656:81:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "4718:12:16"
																			},
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4732:4:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4664:53:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4664:73:16"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nodeType": "YulIdentifier",
																			"src": "4656:4:16"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4758:11:16",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "4765:4:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4758:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_CoverData_$976_memory_ptr_to_t_struct$_CoverData_$976_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2629:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2636:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2645:3:16",
														"type": ""
													}
												],
												"src": "2524:2251:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4931:227:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4941:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4953:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4964:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4949:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4949:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4941:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4988:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4999:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4984:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4984:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5007:4:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5013:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5003:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5003:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4977:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4977:47:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4977:47:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5033:118:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5137:6:16"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5146:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_CoverData_$976_memory_ptr_to_t_struct$_CoverData_$976_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5041:95:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5041:110:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5033:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_CoverData_$976_memory_ptr__to_t_struct$_CoverData_$976_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4903:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4915:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4926:4:16",
														"type": ""
													}
												],
												"src": "4781:377:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5229:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5246:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5269:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5251:17:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5251:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5239:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5239:37:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5239:37:16"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5217:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5224:3:16",
														"type": ""
													}
												],
												"src": "5164:118:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5386:124:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5396:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5408:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5419:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5404:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5404:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5396:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5476:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5489:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5500:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5485:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5485:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5432:43:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5432:71:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5432:71:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5358:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5370:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5381:4:16",
														"type": ""
													}
												],
												"src": "5288:222:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5559:79:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5616:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5625:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5628:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5618:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5618:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5618:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5582:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5607:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "5589:17:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5589:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5579:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5579:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5572:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5572:43:16"
															},
															"nodeType": "YulIf",
															"src": "5569:63:16"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5552:5:16",
														"type": ""
													}
												],
												"src": "5516:122:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5696:87:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5706:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5728:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5715:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5715:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5706:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5771:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "5744:26:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5744:33:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5744:33:16"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5674:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5682:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5690:5:16",
														"type": ""
													}
												],
												"src": "5644:139:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5855:263:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5901:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5903:77:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5903:79:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5903:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5876:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5885:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5872:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5872:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5897:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5868:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5868:32:16"
															},
															"nodeType": "YulIf",
															"src": "5865:119:16"
														},
														{
															"nodeType": "YulBlock",
															"src": "5994:117:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6009:15:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6023:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6013:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6038:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6073:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6084:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6069:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6069:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6093:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6048:20:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6048:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6038:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5825:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5836:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5848:6:16",
														"type": ""
													}
												],
												"src": "5789:329:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6189:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6206:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6229:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint160",
																			"nodeType": "YulIdentifier",
																			"src": "6211:17:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6211:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6199:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6199:37:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6199:37:16"
														}
													]
												},
												"name": "abi_encode_t_uint160_to_t_uint160_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6177:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6184:3:16",
														"type": ""
													}
												],
												"src": "6124:118:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6346:124:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6356:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6368:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6379:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6364:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6364:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6356:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6436:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6449:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6460:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6445:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6445:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint160_to_t_uint160_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6392:43:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6392:71:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6392:71:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint160__to_t_uint160__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6318:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6330:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6341:4:16",
														"type": ""
													}
												],
												"src": "6248:222:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6508:28:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6518:12:16",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6525:5:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "6518:3:16"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6494:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "6504:3:16",
														"type": ""
													}
												],
												"src": "6476:60:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6602:82:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6612:66:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6670:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "6652:17:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6652:24:16"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "6643:8:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6643:34:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6625:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6625:53:16"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6612:9:16"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6582:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6592:9:16",
														"type": ""
													}
												],
												"src": "6542:142:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6750:66:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6760:50:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6804:5:16"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6773:30:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6773:37:16"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6760:9:16"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6730:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6740:9:16",
														"type": ""
													}
												],
												"src": "6690:126:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6900:66:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6910:50:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6954:5:16"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "6923:30:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6923:37:16"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6910:9:16"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ICoverNFT_$1068_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6880:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6890:9:16",
														"type": ""
													}
												],
												"src": "6822:144:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7055:84:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7072:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7126:5:16"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ICoverNFT_$1068_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7077:48:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7077:55:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7065:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7065:68:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7065:68:16"
														}
													]
												},
												"name": "abi_encode_t_contract$_ICoverNFT_$1068_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7043:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7050:3:16",
														"type": ""
													}
												],
												"src": "6972:167:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7261:142:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7271:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7283:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7294:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7279:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7279:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7271:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7369:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7382:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7393:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7378:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7378:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ICoverNFT_$1068_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7307:61:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7307:89:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7307:89:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ICoverNFT_$1068__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7233:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7245:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7256:4:16",
														"type": ""
													}
												],
												"src": "7145:258:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7498:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7515:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7518:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7508:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7508:12:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7508:12:16"
														}
													]
												},
												"name": "revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d",
												"nodeType": "YulFunctionDefinition",
												"src": "7409:117:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7646:153:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7686:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d",
																				"nodeType": "YulIdentifier",
																				"src": "7688:77:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7688:79:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7688:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "7667:3:16"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7672:6:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7663:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7663:16:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7681:3:16",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7659:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7659:26:16"
															},
															"nodeType": "YulIf",
															"src": "7656:113:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7778:15:16",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "7787:6:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7778:5:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_BuyCoverParams_$953_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7624:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7632:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7640:5:16",
														"type": ""
													}
												],
												"src": "7561:238:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7904:456:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7950:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7952:77:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7952:79:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7952:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7925:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7934:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7921:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7921:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7946:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7917:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7917:32:16"
															},
															"nodeType": "YulIf",
															"src": "7914:119:16"
														},
														{
															"nodeType": "YulBlock",
															"src": "8043:310:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8058:45:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8089:9:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8100:1:16",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8085:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8085:17:16"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "8072:12:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8072:31:16"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8062:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8150:83:16",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "8152:77:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8152:79:16"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8152:79:16"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8122:6:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8130:18:16",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8119:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8119:30:16"
																	},
																	"nodeType": "YulIf",
																	"src": "8116:117:16"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8247:96:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8315:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8326:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8311:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8311:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8335:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_BuyCoverParams_$953_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8257:53:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8257:86:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8247:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_BuyCoverParams_$953_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7874:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7885:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7897:6:16",
														"type": ""
													}
												],
												"src": "7805:555:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8410:32:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8420:16:16",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "8431:5:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8420:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8392:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8402:7:16",
														"type": ""
													}
												],
												"src": "8366:76:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8511:52:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8528:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8550:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int256",
																			"nodeType": "YulIdentifier",
																			"src": "8533:16:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8533:23:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8521:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8521:36:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8521:36:16"
														}
													]
												},
												"name": "abi_encode_t_int256_to_t_int256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8499:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8506:3:16",
														"type": ""
													}
												],
												"src": "8448:115:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8665:122:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8675:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8687:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8698:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8683:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8683:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8675:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8753:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8766:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8777:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8762:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8762:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8711:41:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8711:69:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8711:69:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8637:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8649:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8660:4:16",
														"type": ""
													}
												],
												"src": "8569:218:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8867:66:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8877:50:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8921:5:16"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "8890:30:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8890:37:16"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "8877:9:16"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_Master_$570_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8847:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "8857:9:16",
														"type": ""
													}
												],
												"src": "8793:140:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9018:80:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9035:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9085:5:16"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_Master_$570_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9040:44:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9040:51:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9028:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9028:64:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9028:64:16"
														}
													]
												},
												"name": "abi_encode_t_contract$_Master_$570_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9006:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9013:3:16",
														"type": ""
													}
												],
												"src": "8939:159:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9216:138:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9226:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9238:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9249:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9234:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9234:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9226:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9320:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9333:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9344:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9329:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9329:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_Master_$570_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9262:57:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9262:85:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9262:85:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_Master_$570__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9188:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9200:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9211:4:16",
														"type": ""
													}
												],
												"src": "9104:250:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9388:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9405:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9408:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9398:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9398:88:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9398:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9502:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9505:4:16",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9495:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9495:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9495:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9526:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9529:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9519:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9519:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9519:15:16"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "9360:180:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9597:269:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9607:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "9621:4:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9627:1:16",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "9617:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9617:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "9607:6:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9638:38:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "9668:4:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9674:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9664:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9664:12:16"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "9642:18:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9715:51:16",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9729:27:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "9743:6:16"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9751:4:16",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "9739:3:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9739:17:16"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9729:6:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "9695:18:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9688:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9688:26:16"
															},
															"nodeType": "YulIf",
															"src": "9685:81:16"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9818:42:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "9832:16:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9832:18:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9832:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "9782:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9805:6:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9813:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "9802:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9802:14:16"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "9779:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9779:38:16"
															},
															"nodeType": "YulIf",
															"src": "9776:84:16"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "9581:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9590:6:16",
														"type": ""
													}
												],
												"src": "9546:320:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9935:80:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9945:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9960:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9954:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9954:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "9945:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10003:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9976:26:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9976:33:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9976:33:16"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "9913:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9921:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9929:5:16",
														"type": ""
													}
												],
												"src": "9872:143:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10098:274:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10144:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10146:77:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10146:79:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10146:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10119:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10128:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10115:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10115:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10140:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10111:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10111:32:16"
															},
															"nodeType": "YulIf",
															"src": "10108:119:16"
														},
														{
															"nodeType": "YulBlock",
															"src": "10237:128:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10252:15:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10266:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10256:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10281:74:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10327:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10338:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10323:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10323:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10347:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "10291:31:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10291:64:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10281:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10068:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10079:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10091:6:16",
														"type": ""
													}
												],
												"src": "10021:351:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10421:79:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10478:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10487:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10490:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10480:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10480:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10480:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10444:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10469:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "10451:17:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10451:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10441:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10441:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10434:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10434:43:16"
															},
															"nodeType": "YulIf",
															"src": "10431:63:16"
														}
													]
												},
												"name": "validator_revert_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10414:5:16",
														"type": ""
													}
												],
												"src": "10378:122:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10569:80:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10579:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10594:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10588:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10588:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "10579:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10637:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "10610:26:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10610:33:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10610:33:16"
														}
													]
												},
												"name": "abi_decode_t_uint160_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "10547:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10555:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10563:5:16",
														"type": ""
													}
												],
												"src": "10506:143:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10698:47:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10708:31:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10730:1:16",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10733:5:16"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nodeType": "YulIdentifier",
																	"src": "10719:10:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10719:20:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10708:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10680:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10690:7:16",
														"type": ""
													}
												],
												"src": "10655:90:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10792:77:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10847:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10856:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10859:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10849:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10849:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10849:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10815:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10838:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int24",
																					"nodeType": "YulIdentifier",
																					"src": "10822:15:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10822:22:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10812:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10812:33:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10805:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10805:41:16"
															},
															"nodeType": "YulIf",
															"src": "10802:61:16"
														}
													]
												},
												"name": "validator_revert_t_int24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10785:5:16",
														"type": ""
													}
												],
												"src": "10751:118:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10936:78:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10946:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10961:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10955:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10955:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "10946:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11002:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int24",
																	"nodeType": "YulIdentifier",
																	"src": "10977:24:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10977:31:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10977:31:16"
														}
													]
												},
												"name": "abi_decode_t_int24_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "10914:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10922:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10930:5:16",
														"type": ""
													}
												],
												"src": "10875:139:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11064:45:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11074:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11089:5:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11096:6:16",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11085:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11085:18:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11074:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11046:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11056:7:16",
														"type": ""
													}
												],
												"src": "11020:89:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11157:78:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11213:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11222:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11225:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11215:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11215:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11215:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11180:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11204:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint16",
																					"nodeType": "YulIdentifier",
																					"src": "11187:16:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11187:23:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11177:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11177:34:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11170:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11170:42:16"
															},
															"nodeType": "YulIf",
															"src": "11167:62:16"
														}
													]
												},
												"name": "validator_revert_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11150:5:16",
														"type": ""
													}
												],
												"src": "11115:120:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11303:79:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11313:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "11328:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11322:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11322:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "11313:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11370:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "11344:25:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11344:32:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11344:32:16"
														}
													]
												},
												"name": "abi_decode_t_uint16_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "11281:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11289:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11297:5:16",
														"type": ""
													}
												],
												"src": "11241:141:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11431:43:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11441:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11456:5:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11463:4:16",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11452:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11452:16:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11441:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11413:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11423:7:16",
														"type": ""
													}
												],
												"src": "11388:86:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11521:77:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11576:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11585:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11588:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11578:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11578:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11578:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11544:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11567:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nodeType": "YulIdentifier",
																					"src": "11551:15:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11551:22:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11541:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11541:33:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11534:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11534:41:16"
															},
															"nodeType": "YulIf",
															"src": "11531:61:16"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11514:5:16",
														"type": ""
													}
												],
												"src": "11480:118:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11665:78:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11675:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "11690:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11684:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11684:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "11675:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11731:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "11706:24:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11706:31:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11706:31:16"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "11643:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11651:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11659:5:16",
														"type": ""
													}
												],
												"src": "11604:139:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11791:48:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11801:32:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11826:5:16"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11819:6:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11819:13:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11812:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11812:21:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11801:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11773:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11783:7:16",
														"type": ""
													}
												],
												"src": "11749:90:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11885:76:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11939:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11948:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11951:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11941:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11941:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11941:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11908:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11930:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "11915:14:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11915:21:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11905:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11905:32:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11898:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11898:40:16"
															},
															"nodeType": "YulIf",
															"src": "11895:60:16"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11878:5:16",
														"type": ""
													}
												],
												"src": "11845:116:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12027:77:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12037:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "12052:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12046:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12046:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "12037:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12092:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "12068:23:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12068:30:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12068:30:16"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "12005:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12013:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12021:5:16",
														"type": ""
													}
												],
												"src": "11967:137:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12279:1102:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12326:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "12328:77:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12328:79:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12328:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12300:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12309:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12296:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12296:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12321:3:16",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12292:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12292:33:16"
															},
															"nodeType": "YulIf",
															"src": "12289:120:16"
														},
														{
															"nodeType": "YulBlock",
															"src": "12419:128:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12434:15:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12448:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12438:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12463:74:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12509:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12520:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12505:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12505:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12529:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint160_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "12473:31:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12473:64:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "12463:6:16"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12557:127:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12572:16:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12586:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12576:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12602:72:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12646:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12657:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12642:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12642:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12666:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int24_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "12612:29:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12612:62:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "12602:6:16"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12694:128:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12709:16:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12723:2:16",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12713:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12739:73:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12784:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12795:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12780:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12780:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12804:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "12749:30:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12749:63:16"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "12739:6:16"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12832:128:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12847:16:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12861:2:16",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12851:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12877:73:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12922:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12933:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12918:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12918:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12942:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "12887:30:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12887:63:16"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "12877:6:16"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12970:129:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12985:17:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12999:3:16",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12989:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13016:73:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13061:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13072:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13057:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13057:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13081:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "13026:30:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13026:63:16"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "13016:6:16"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "13109:128:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13124:17:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13138:3:16",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13128:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13155:72:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13199:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13210:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13195:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13195:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13219:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "13165:29:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13165:62:16"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "13155:6:16"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "13247:127:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13262:17:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13276:3:16",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13266:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13293:71:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13336:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13347:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13332:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13332:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13356:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "13303:28:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13303:61:16"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nodeType": "YulIdentifier",
																			"src": "13293:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12201:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12212:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12224:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12232:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12240:6:16",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "12248:6:16",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "12256:6:16",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "12264:6:16",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "12272:6:16",
														"type": ""
													}
												],
												"src": "12110:1271:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13415:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13432:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13435:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13425:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "13425:88:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13425:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13529:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13532:4:16",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13522:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "13522:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13522:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13553:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13556:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13546:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "13546:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13546:15:16"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "13387:180:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13618:149:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13628:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13651:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13633:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "13633:20:16"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13628:1:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13662:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13685:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13667:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "13667:20:16"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13662:1:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13696:17:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13708:1:16"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13711:1:16"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13704:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "13704:9:16"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "13696:4:16"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13738:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13740:16:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13740:18:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13740:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "13729:4:16"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13735:1:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13726:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "13726:11:16"
															},
															"nodeType": "YulIf",
															"src": "13723:37:16"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13604:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13607:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "13613:4:16",
														"type": ""
													}
												],
												"src": "13573:194:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13838:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13855:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13878:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "13860:17:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13860:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13848:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "13848:37:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13848:37:16"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13826:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13833:3:16",
														"type": ""
													}
												],
												"src": "13773:118:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13995:124:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14005:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14017:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14028:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14013:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "14013:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14005:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14085:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14098:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14109:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14094:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14094:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14041:43:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "14041:71:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14041:71:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13967:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13979:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13990:4:16",
														"type": ""
													}
												],
												"src": "13897:222:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14214:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14231:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14234:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14224:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "14224:12:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14224:12:16"
														}
													]
												},
												"name": "revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad",
												"nodeType": "YulFunctionDefinition",
												"src": "14125:117:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14337:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14354:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14357:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14347:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "14347:12:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14347:12:16"
														}
													]
												},
												"name": "revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a",
												"nodeType": "YulFunctionDefinition",
												"src": "14248:117:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14460:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14477:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14480:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14470:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "14470:12:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14470:12:16"
														}
													]
												},
												"name": "revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e",
												"nodeType": "YulFunctionDefinition",
												"src": "14371:117:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14585:634:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14595:51:16",
															"value": {
																"arguments": [
																	{
																		"name": "ptr_to_tail",
																		"nodeType": "YulIdentifier",
																		"src": "14634:11:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "14621:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "14621:25:16"
															},
															"variables": [
																{
																	"name": "rel_offset_of_tail",
																	"nodeType": "YulTypedName",
																	"src": "14599:18:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14740:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad",
																				"nodeType": "YulIdentifier",
																				"src": "14742:77:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14742:79:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14742:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "rel_offset_of_tail",
																				"nodeType": "YulIdentifier",
																				"src": "14669:18:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "calldatasize",
																									"nodeType": "YulIdentifier",
																									"src": "14697:12:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "14697:14:16"
																							},
																							{
																								"name": "base_ref",
																								"nodeType": "YulIdentifier",
																								"src": "14713:8:16"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "14693:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14693:29:16"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "14728:4:16",
																								"type": "",
																								"value": "0x20"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "14734:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "14724:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14724:12:16"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "14689:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14689:48:16"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "14665:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14665:73:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14658:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "14658:81:16"
															},
															"nodeType": "YulIf",
															"src": "14655:168:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14832:41:16",
															"value": {
																"arguments": [
																	{
																		"name": "base_ref",
																		"nodeType": "YulIdentifier",
																		"src": "14844:8:16"
																	},
																	{
																		"name": "rel_offset_of_tail",
																		"nodeType": "YulIdentifier",
																		"src": "14854:18:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14840:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "14840:33:16"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nodeType": "YulIdentifier",
																	"src": "14832:4:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14883:28:16",
															"value": {
																"arguments": [
																	{
																		"name": "addr",
																		"nodeType": "YulIdentifier",
																		"src": "14906:4:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "14893:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "14893:18:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "14883:6:16"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14954:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a",
																				"nodeType": "YulIdentifier",
																				"src": "14956:77:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14956:79:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14956:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14926:6:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14934:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14923:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "14923:30:16"
															},
															"nodeType": "YulIf",
															"src": "14920:117:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15046:21:16",
															"value": {
																"arguments": [
																	{
																		"name": "addr",
																		"nodeType": "YulIdentifier",
																		"src": "15058:4:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15064:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15054:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "15054:13:16"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nodeType": "YulIdentifier",
																	"src": "15046:4:16"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15129:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e",
																				"nodeType": "YulIdentifier",
																				"src": "15131:77:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15131:79:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15131:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "addr",
																		"nodeType": "YulIdentifier",
																		"src": "15083:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "calldatasize",
																					"nodeType": "YulIdentifier",
																					"src": "15093:12:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15093:14:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "15113:6:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15121:4:16",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "15109:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15109:17:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15089:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15089:38:16"
																	}
																],
																"functionName": {
																	"name": "sgt",
																	"nodeType": "YulIdentifier",
																	"src": "15079:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "15079:49:16"
															},
															"nodeType": "YulIf",
															"src": "15076:136:16"
														}
													]
												},
												"name": "access_calldata_tail_t_string_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base_ref",
														"nodeType": "YulTypedName",
														"src": "14546:8:16",
														"type": ""
													},
													{
														"name": "ptr_to_tail",
														"nodeType": "YulTypedName",
														"src": "14556:11:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "addr",
														"nodeType": "YulTypedName",
														"src": "14572:4:16",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14578:6:16",
														"type": ""
													}
												],
												"src": "14494:725:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15253:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15270:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15273:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15263:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "15263:88:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15263:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15367:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15370:4:16",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15360:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "15360:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15360:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15391:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15394:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15384:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "15384:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15384:15:16"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "15225:180:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15465:87:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15475:11:16",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "15483:3:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "15475:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15503:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "15506:3:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15496:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "15496:14:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15496:14:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15519:26:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15537:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15540:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "15527:9:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "15527:18:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "15519:4:16"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "15452:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "15460:4:16",
														"type": ""
													}
												],
												"src": "15411:141:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15602:49:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15612:33:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15630:5:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15637:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15626:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15626:14:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15642:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "15622:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "15622:23:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "15612:6:16"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15585:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "15595:6:16",
														"type": ""
													}
												],
												"src": "15558:93:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15710:54:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15720:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "15745:4:16"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15751:5:16"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "15741:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "15741:16:16"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "15720:8:16"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "15685:4:16",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15691:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "15701:8:16",
														"type": ""
													}
												],
												"src": "15657:107:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15846:317:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15856:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "15877:10:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15889:1:16",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "15873:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "15873:18:16"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "15860:9:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15900:109:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "15931:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15942:66:16",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "15912:18:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "15912:97:16"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "15904:4:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16018:51:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "16049:9:16"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "16060:8:16"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "16030:18:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "16030:39:16"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "16018:8:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16078:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16091:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "16102:4:16"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "16098:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16098:9:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "16087:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "16087:21:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "16078:5:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16117:40:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16130:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "16141:8:16"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "16151:4:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16137:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16137:19:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "16127:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "16127:30:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "16117:6:16"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15807:5:16",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "15814:10:16",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "15826:8:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "15839:6:16",
														"type": ""
													}
												],
												"src": "15770:393:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16229:82:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16239:66:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16297:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "16279:17:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16279:24:16"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "16270:8:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16270:34:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16252:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "16252:53:16"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "16239:9:16"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16209:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "16219:9:16",
														"type": ""
													}
												],
												"src": "16169:142:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16364:28:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16374:12:16",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "16381:5:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "16374:3:16"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16350:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "16360:3:16",
														"type": ""
													}
												],
												"src": "16317:75:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16474:193:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16484:63:16",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "16539:7:16"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16508:30:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "16508:39:16"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "16488:16:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "16563:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "16603:4:16"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "16597:5:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16597:11:16"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "16610:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "16642:16:16"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "16618:23:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16618:41:16"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "16569:27:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16569:91:16"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "16556:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "16556:105:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16556:105:16"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "16451:4:16",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "16457:6:16",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "16465:7:16",
														"type": ""
													}
												],
												"src": "16398:269:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16722:24:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16732:8:16",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "16739:1:16",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "16732:3:16"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "16718:3:16",
														"type": ""
													}
												],
												"src": "16673:73:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16805:136:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16815:46:16",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16829:30:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "16829:32:16"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "16819:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "16914:4:16"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "16920:6:16"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "16928:6:16"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16870:43:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "16870:65:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16870:65:16"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "16791:4:16",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "16797:6:16",
														"type": ""
													}
												],
												"src": "16752:189:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16997:136:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17064:63:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "17108:5:16"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17115:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "17078:29:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17078:39:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17078:39:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "17017:5:16"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "17024:3:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "17014:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "17014:14:16"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "17029:26:16",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "17031:22:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "17044:5:16"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17051:1:16",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "17040:3:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17040:13:16"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "17031:5:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "17011:2:16",
																"statements": []
															},
															"src": "17007:120:16"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "16985:5:16",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16992:3:16",
														"type": ""
													}
												],
												"src": "16947:186:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17218:464:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17244:431:16",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "17258:54:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "17306:5:16"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "17274:31:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17274:38:16"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "17262:8:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "17325:63:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "17348:8:16"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "17376:10:16"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "17358:17:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "17358:29:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "17344:3:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17344:44:16"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "17329:11:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "17545:27:16",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "17547:23:16",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "17562:8:16"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "17547:11:16"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "17529:10:16"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17541:2:16",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "17526:2:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17526:18:16"
																		},
																		"nodeType": "YulIf",
																		"src": "17523:49:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "17614:11:16"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "17631:8:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "17659:3:16"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "17641:17:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "17641:22:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "17627:3:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "17627:37:16"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "17585:28:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17585:80:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17585:80:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "17235:3:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17240:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17232:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "17232:11:16"
															},
															"nodeType": "YulIf",
															"src": "17229:446:16"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "17194:5:16",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "17201:3:16",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "17206:10:16",
														"type": ""
													}
												],
												"src": "17139:543:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17751:54:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17761:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "17786:4:16"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17792:5:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "17782:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "17782:16:16"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "17761:8:16"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "17726:4:16",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17732:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "17742:8:16",
														"type": ""
													}
												],
												"src": "17688:117:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17862:118:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17872:68:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17921:1:16",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "17924:5:16"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "17917:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17917:13:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17936:1:16",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "17932:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17932:6:16"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "17888:28:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17888:51:16"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "17884:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "17884:56:16"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "17876:4:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17949:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "17963:4:16"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "17969:4:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "17959:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "17959:15:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "17949:6:16"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "17839:4:16",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "17845:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "17855:6:16",
														"type": ""
													}
												],
												"src": "17811:169:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18066:214:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18199:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "18226:4:16"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "18232:3:16"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "18207:18:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "18207:29:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "18199:4:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18245:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "18256:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18266:1:16",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "18269:3:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "18262:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18262:11:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "18253:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "18253:21:16"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "18245:4:16"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "18047:4:16",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "18053:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "18061:4:16",
														"type": ""
													}
												],
												"src": "17985:295:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18377:1303:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18388:51:16",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "18435:3:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "18402:32:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "18402:37:16"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "18392:6:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18524:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "18526:16:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18526:18:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18526:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "18496:6:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18504:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "18493:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "18493:30:16"
															},
															"nodeType": "YulIf",
															"src": "18490:56:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18556:52:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "18602:4:16"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "18596:5:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18596:11:16"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "18570:25:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "18570:38:16"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "18560:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "18701:4:16"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "18707:6:16"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "18715:6:16"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "18655:45:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "18655:67:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18655:67:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18732:18:16",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "18749:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "18736:9:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18760:17:16",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "18773:4:16",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "18760:9:16"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "18824:611:16",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "18838:37:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "18857:6:16"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "18869:4:16",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "18865:3:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "18865:9:16"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "18853:3:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18853:22:16"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "18842:7:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "18889:51:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "18935:4:16"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "18903:31:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18903:37:16"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "18893:6:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "18953:10:16",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18962:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "18957:1:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "19021:163:16",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "19046:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "19064:3:16"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "19069:9:16"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "19060:3:16"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "19060:19:16"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "19054:5:16"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "19054:26:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "19039:6:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "19039:42:16"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "19039:42:16"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "19098:24:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "19112:6:16"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "19120:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "19108:3:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "19108:14:16"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "19098:6:16"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "19139:31:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "19156:9:16"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "19167:2:16",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "19152:3:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "19152:18:16"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "19139:9:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "18987:1:16"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "18990:7:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "18984:2:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18984:14:16"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "18999:21:16",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "19001:17:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "19010:1:16"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "19013:4:16",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "19006:3:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "19006:12:16"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "19001:1:16"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "18980:3:16",
																					"statements": []
																				},
																				"src": "18976:208:16"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "19220:156:16",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "19238:43:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "19265:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "19270:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "19261:3:16"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "19261:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "19255:5:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "19255:26:16"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "19242:9:16",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "19305:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "19332:9:16"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "19347:6:16"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "19355:4:16",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "19343:3:16"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "19343:17:16"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "19313:18:16"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "19313:48:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "19298:6:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "19298:64:16"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "19298:64:16"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "19203:7:16"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "19212:6:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "19200:2:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19200:19:16"
																				},
																				"nodeType": "YulIf",
																				"src": "19197:179:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "19396:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "19410:6:16"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "19418:1:16",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "19406:3:16"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "19406:14:16"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "19422:1:16",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "19402:3:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "19402:22:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "19389:6:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19389:36:16"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "19389:36:16"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "18817:618:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18822:1:16",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "19452:222:16",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "19466:14:16",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19479:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "19470:5:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "19503:67:16",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "19521:35:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "19540:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "19545:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "19536:3:16"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "19536:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "19530:5:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "19530:26:16"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "19521:5:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "19496:6:16"
																				},
																				"nodeType": "YulIf",
																				"src": "19493:77:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "19590:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "19649:5:16"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "19656:6:16"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "19596:52:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "19596:67:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "19583:6:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19583:81:16"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "19583:81:16"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "19444:230:16",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "18797:6:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18805:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "18794:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "18794:14:16"
															},
															"nodeType": "YulSwitch",
															"src": "18787:887:16"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "18366:4:16",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "18372:3:16",
														"type": ""
													}
												],
												"src": "18285:1395:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19730:147:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19740:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19763:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19745:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "19745:20:16"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "19740:1:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19774:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19797:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19779:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "19779:20:16"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "19774:1:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19808:16:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19819:1:16"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19822:1:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19815:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "19815:9:16"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "19808:3:16"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19848:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19850:16:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19850:18:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19850:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19840:1:16"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "19843:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "19837:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "19837:10:16"
															},
															"nodeType": "YulIf",
															"src": "19834:36:16"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19717:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19720:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "19726:3:16",
														"type": ""
													}
												],
												"src": "19686:191:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19946:80:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19956:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "19971:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "19965:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "19965:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "19956:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20014:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "19987:26:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "19987:33:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19987:33:16"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "19924:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19932:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19940:5:16",
														"type": ""
													}
												],
												"src": "19883:143:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20109:274:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20155:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "20157:77:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20157:79:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20157:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20130:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20139:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20126:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20126:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20151:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "20122:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "20122:32:16"
															},
															"nodeType": "YulIf",
															"src": "20119:119:16"
														},
														{
															"nodeType": "YulBlock",
															"src": "20248:128:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20263:15:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20277:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "20267:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20292:74:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20338:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20349:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20334:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20334:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20358:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "20302:31:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20302:64:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "20292:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20079:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "20090:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20102:6:16",
														"type": ""
													}
												],
												"src": "20032:351:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20433:61:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20443:45:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20458:5:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20465:22:16",
																		"type": "",
																		"value": "0xffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "20454:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "20454:34:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "20443:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint80",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20415:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "20425:7:16",
														"type": ""
													}
												],
												"src": "20389:105:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20542:78:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20598:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20607:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20610:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "20600:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20600:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20600:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "20565:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "20589:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint80",
																					"nodeType": "YulIdentifier",
																					"src": "20572:16:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20572:23:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "20562:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20562:34:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "20555:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "20555:42:16"
															},
															"nodeType": "YulIf",
															"src": "20552:62:16"
														}
													]
												},
												"name": "validator_revert_t_uint80",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20535:5:16",
														"type": ""
													}
												],
												"src": "20500:120:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20688:79:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20698:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "20713:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "20707:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "20707:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "20698:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20755:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint80",
																	"nodeType": "YulIdentifier",
																	"src": "20729:25:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "20729:32:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20729:32:16"
														}
													]
												},
												"name": "abi_decode_t_uint80_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "20666:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20674:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20682:5:16",
														"type": ""
													}
												],
												"src": "20626:141:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20815:78:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20871:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20880:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20883:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "20873:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20873:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20873:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "20838:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "20862:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nodeType": "YulIdentifier",
																					"src": "20845:16:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20845:23:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "20835:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20835:34:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "20828:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "20828:42:16"
															},
															"nodeType": "YulIf",
															"src": "20825:62:16"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20808:5:16",
														"type": ""
													}
												],
												"src": "20773:120:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20961:79:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20971:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "20986:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "20980:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "20980:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "20971:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21028:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "21002:25:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "21002:32:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21002:32:16"
														}
													]
												},
												"name": "abi_decode_t_int256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "20939:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20947:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20955:5:16",
														"type": ""
													}
												],
												"src": "20899:141:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21188:829:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21235:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "21237:77:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21237:79:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21237:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "21209:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21218:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21205:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21205:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21230:3:16",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "21201:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "21201:33:16"
															},
															"nodeType": "YulIf",
															"src": "21198:120:16"
														},
														{
															"nodeType": "YulBlock",
															"src": "21328:127:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "21343:15:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21357:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "21347:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "21372:73:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "21417:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "21428:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "21413:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21413:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "21437:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "21382:30:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21382:63:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "21372:6:16"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "21465:128:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "21480:16:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21494:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "21484:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "21510:73:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "21555:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "21566:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "21551:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21551:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "21575:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "21520:30:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21520:63:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "21510:6:16"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "21603:129:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "21618:16:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21632:2:16",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "21622:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "21648:74:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "21694:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "21705:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "21690:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21690:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "21714:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "21658:31:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21658:64:16"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "21648:6:16"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "21742:129:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "21757:16:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21771:2:16",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "21761:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "21787:74:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "21833:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "21844:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "21829:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21829:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "21853:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "21797:31:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21797:64:16"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "21787:6:16"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "21881:129:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "21896:17:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21910:3:16",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "21900:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "21927:73:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "21972:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "21983:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "21968:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21968:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "21992:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "21937:30:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21937:63:16"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "21927:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21126:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "21137:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21149:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "21157:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "21165:6:16",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "21173:6:16",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "21181:6:16",
														"type": ""
													}
												],
												"src": "21046:971:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22071:362:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22081:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22104:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22086:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "22086:20:16"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "22081:1:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22115:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22138:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22120:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "22120:20:16"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "22115:1:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "22149:28:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22172:1:16"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22175:1:16"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "22168:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "22168:9:16"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "22153:11:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22186:41:16",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "22215:11:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22197:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "22197:30:16"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "22186:7:16"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22404:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "22406:16:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22406:18:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22406:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "22337:1:16"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "22330:6:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "22330:9:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "22360:1:16"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "22367:7:16"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "22376:1:16"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "22363:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "22363:15:16"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "22357:2:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "22357:22:16"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "22310:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22310:83:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "22290:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "22290:113:16"
															},
															"nodeType": "YulIf",
															"src": "22287:139:16"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "22054:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "22057:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "22063:7:16",
														"type": ""
													}
												],
												"src": "22023:410:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22467:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22484:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22487:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22477:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "22477:88:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22477:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22581:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22584:4:16",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22574:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "22574:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22574:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22605:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22608:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "22598:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "22598:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22598:15:16"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "22439:180:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22667:143:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22677:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22700:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22682:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "22682:20:16"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "22677:1:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22711:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22734:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22716:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "22716:20:16"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "22711:1:16"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22758:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "22760:16:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22760:18:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22760:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22755:1:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "22748:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "22748:9:16"
															},
															"nodeType": "YulIf",
															"src": "22745:35:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22790:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22799:1:16"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22802:1:16"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "22795:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "22795:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "22790:1:16"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "22656:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "22659:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "22665:1:16",
														"type": ""
													}
												],
												"src": "22625:185:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22929:34:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22939:18:16",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "22954:3:16"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "22939:11:16"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22901:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "22906:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "22917:11:16",
														"type": ""
													}
												],
												"src": "22816:147:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23075:8:16",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23067:6:16",
														"type": ""
													}
												],
												"src": "22969:114:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23252:235:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23262:90:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23345:3:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23350:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23269:75:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "23269:83:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23262:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23450:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nodeType": "YulIdentifier",
																	"src": "23361:88:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "23361:93:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23361:93:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23463:18:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23474:3:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23479:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23470:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "23470:11:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23463:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23240:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23248:3:16",
														"type": ""
													}
												],
												"src": "23089:398:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23681:191:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23692:154:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23842:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23699:141:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "23699:147:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23692:3:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23856:10:16",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "23863:3:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23856:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23668:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23677:3:16",
														"type": ""
													}
												],
												"src": "23493:379:16"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    // struct CoverData -> struct CoverData\n    function abi_encode_t_struct$_CoverData_$976_memory_ptr_to_t_struct$_CoverData_$976_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x0160)\n\n        {\n            // amountPaidOut\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // totalClaimAmount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // start\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // period\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // token0\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // token1\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // token0Qty\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // token1Qty\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xe0))\n        }\n\n        {\n            // lowerBoundRatio\n\n            let memberValue0 := mload(add(value, 0x0100))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0100))\n        }\n\n        {\n            // upperBoundRatio\n\n            let memberValue0 := mload(add(value, 0x0120))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0120))\n        }\n\n        {\n            // pairStr\n\n            let memberValue0 := mload(add(value, 0x0140))\n\n            mstore(add(pos, 0x0140), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_CoverData_$976_memory_ptr__to_t_struct$_CoverData_$976_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_CoverData_$976_memory_ptr_to_t_struct$_CoverData_$976_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint160_to_t_uint160_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint160(value))\n    }\n\n    function abi_encode_tuple_t_uint160__to_t_uint160__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint160_to_t_uint160_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ICoverNFT_$1068_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ICoverNFT_$1068_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ICoverNFT_$1068_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ICoverNFT_$1068__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ICoverNFT_$1068_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() {\n        revert(0, 0)\n    }\n\n    // struct BuyCoverParams\n    function abi_decode_t_struct$_BuyCoverParams_$953_calldata_ptr(offset, end) -> value {\n        if slt(sub(end, offset), 256) { revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() }\n        value := offset\n    }\n\n    function abi_decode_tuple_t_struct$_BuyCoverParams_$953_calldata_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_struct$_BuyCoverParams_$953_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_Master_$570_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_Master_$570_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Master_$570_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_Master_$570__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Master_$570_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint160(value) {\n        if iszero(eq(value, cleanup_t_uint160(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint160_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint160(value)\n    }\n\n    function cleanup_t_int24(value) -> cleaned {\n        cleaned := signextend(2, value)\n    }\n\n    function validator_revert_t_int24(value) {\n        if iszero(eq(value, cleanup_t_int24(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int24_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int24(value)\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint160_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int24_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() {\n        revert(0, 0)\n    }\n\n    function revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() {\n        revert(0, 0)\n    }\n\n    function revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() {\n        revert(0, 0)\n    }\n\n    function access_calldata_tail_t_string_calldata_ptr(base_ref, ptr_to_tail) -> addr, length {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x20, 1)))) { revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() }\n        addr := add(base_ref, rel_offset_of_tail)\n\n        length := calldataload(addr)\n        if gt(length, 0xffffffffffffffff) { revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() }\n        addr := add(addr, 32)\n        if sgt(addr, sub(calldatasize(), mul(length, 0x01))) { revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() }\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100a65760003560e01c80637e9e1abe116100645780637e9e1abe146101e1578063a71467a81461020c578063c9b10d3f1461023c578063de071a0a14610279578063ed3b657a146102b6578063ee97f7f3146102e1576100a6565b8062407d2a146100ab578063404730f4146100e85780634230a7771461011357806342e53fcf146101505780634b61a44b1461017b5780636c57b95d146101a4575b600080fd5b3480156100b757600080fd5b506100d260048036038101906100cd9190610f91565b61030c565b6040516100df919061118d565b60405180910390f35b3480156100f457600080fd5b506100fd6104c7565b60405161010a91906111be565b60405180910390f35b34801561011f57600080fd5b5061013a60048036038101906101359190611205565b61055f565b6040516101479190611241565b60405180910390f35b34801561015c57600080fd5b506101656105e2565b60405161017291906112bb565b60405180910390f35b34801561018757600080fd5b506101a2600480360381019061019d9190610f91565b610608565b005b3480156101b057600080fd5b506101cb60048036038101906101c691906112fb565b610624565b6040516101d891906111be565b60405180910390f35b3480156101ed57600080fd5b506101f6610633565b60405161020391906111be565b60405180910390f35b610226600480360381019061022191906112fb565b610639565b60405161023391906111be565b60405180910390f35b34801561024857600080fd5b50610263600480360381019061025e91906112fb565b610a3b565b60405161027091906111be565b60405180910390f35b34801561028557600080fd5b506102a0600480360381019061029b9190611205565b610a4a565b6040516102ad919061135d565b60405180910390f35b3480156102c257600080fd5b506102cb610acb565b6040516102d891906111be565b60405180910390f35b3480156102ed57600080fd5b506102f6610ad5565b6040516103039190611399565b60405180910390f35b610314610ecb565b60008083815260200190815260200160002060405180610160016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a8201805461043e906113e3565b80601f016020809104026020016040519081016040528092919081815260200182805461046a906113e3565b80156104b75780601f1061048c576101008083540402835291602001916104b7565b820191906000526020600020905b81548152906001019060200180831161049a57829003601f168201915b5050505050815250509050919050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610536573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055a9190611429565b905090565b6000808273ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156105ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d19190611566565b505050505050905080915050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b806001600082825461061a9190611637565b9250508190555050565b600064e8d4a510009050919050565b60015481565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636a627842336040518263ffffffff1660e01b8152600401610696919061167a565b6020604051808303816000875af11580156106b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d99190611429565b9050604051806101600160405280600081526020016106f784610a3b565b81526020014281526020018360c00135815260200183600001602081019061071f9190611205565b73ffffffffffffffffffffffffffffffffffffffff16815260200183602001602081019061074d9190611205565b73ffffffffffffffffffffffffffffffffffffffff1681526020018360600135815260200183604001358152602001836080013581526020018360a001358152602001838060e001906107a091906116a4565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508152506000808381526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c0820151816006015560e082015181600701556101008201518160080155610120820151816009015561014082015181600a0190816108ee91906118d8565b5090505060006108fd83610624565b905061091081600063ffffffff16610afb565b50600080838152602001908152602001600020600101546001600082825461093891906119aa565b925050819055506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166388ea07516040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d291906119f3565b90508073ffffffffffffffffffffffffffffffffffffffff1663aa5da0466040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610a1c57600080fd5b505af1158015610a30573d6000803e3d6000fd5b505050505050919050565b600064e8d4a510009050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610a98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abc9190611a8e565b50505091505080915050919050565b6000600154905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080610b06610e33565b9050600063ffffffff168303610e2c576000606485606563ffffffff16610b2d9190611b09565b610b379190611b7a565b905084341015610b73576040517ff244866f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008134610b819190611637565b905060008373ffffffffffffffffffffffffffffffffffffffff1687604051610ba990611bdc565b60006040518083038185875af1925050503d8060008114610be6576040519150601f19603f3d011682016040523d82523d6000602084013e610beb565b606091505b5050905080610c26576040517fab1ee9bf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5060008683610c359190611637565b1115610d7b576000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637abc39646040518163ffffffff1660e01b8152600401602060405180830381865afa158015610caa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cce91906119f3565b73ffffffffffffffffffffffffffffffffffffffff168784610cf09190611637565b604051610cfc90611bdc565b60006040518083038185875af1925050503d8060008114610d39576040519150601f19603f3d011682016040523d82523d6000602084013e610d3e565b606091505b5050905080610d79576040517f204633a400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b6000811115610e295760003373ffffffffffffffffffffffffffffffffffffffff1682604051610daa90611bdc565b60006040518083038185875af1925050503d8060008114610de7576040519150601f19603f3d011682016040523d82523d6000602084013e610dec565b606091505b5050905080610e27576040517fcd57d4da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b50505b5092915050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639ccc903d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ea2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec691906119f3565b905090565b60405180610160016040528060008152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200160008152602001606081525090565b600080fd5b600080fd5b6000819050919050565b610f6e81610f5b565b8114610f7957600080fd5b50565b600081359050610f8b81610f65565b92915050565b600060208284031215610fa757610fa6610f51565b5b6000610fb584828501610f7c565b91505092915050565b610fc781610f5b565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ff882610fcd565b9050919050565b61100881610fed565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561104857808201518184015260208101905061102d565b60008484015250505050565b6000601f19601f8301169050919050565b60006110708261100e565b61107a8185611019565b935061108a81856020860161102a565b61109381611054565b840191505092915050565b6000610160830160008301516110b76000860182610fbe565b5060208301516110ca6020860182610fbe565b5060408301516110dd6040860182610fbe565b5060608301516110f06060860182610fbe565b5060808301516111036080860182610fff565b5060a083015161111660a0860182610fff565b5060c083015161112960c0860182610fbe565b5060e083015161113c60e0860182610fbe565b50610100830151611151610100860182610fbe565b50610120830151611166610120860182610fbe565b506101408301518482036101408601526111808282611065565b9150508091505092915050565b600060208201905081810360008301526111a7818461109e565b905092915050565b6111b881610f5b565b82525050565b60006020820190506111d360008301846111af565b92915050565b6111e281610fed565b81146111ed57600080fd5b50565b6000813590506111ff816111d9565b92915050565b60006020828403121561121b5761121a610f51565b5b6000611229848285016111f0565b91505092915050565b61123b81610fcd565b82525050565b60006020820190506112566000830184611232565b92915050565b6000819050919050565b600061128161127c61127784610fcd565b61125c565b610fcd565b9050919050565b600061129382611266565b9050919050565b60006112a582611288565b9050919050565b6112b58161129a565b82525050565b60006020820190506112d060008301846112ac565b92915050565b600080fd5b600061010082840312156112f2576112f16112d6565b5b81905092915050565b60006020828403121561131157611310610f51565b5b600082013567ffffffffffffffff81111561132f5761132e610f56565b5b61133b848285016112db565b91505092915050565b6000819050919050565b61135781611344565b82525050565b6000602082019050611372600083018461134e565b92915050565b600061138382611288565b9050919050565b61139381611378565b82525050565b60006020820190506113ae600083018461138a565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806113fb57607f821691505b60208210810361140e5761140d6113b4565b5b50919050565b60008151905061142381610f65565b92915050565b60006020828403121561143f5761143e610f51565b5b600061144d84828501611414565b91505092915050565b61145f81610fcd565b811461146a57600080fd5b50565b60008151905061147c81611456565b92915050565b60008160020b9050919050565b61149881611482565b81146114a357600080fd5b50565b6000815190506114b58161148f565b92915050565b600061ffff82169050919050565b6114d2816114bb565b81146114dd57600080fd5b50565b6000815190506114ef816114c9565b92915050565b600060ff82169050919050565b61150b816114f5565b811461151657600080fd5b50565b60008151905061152881611502565b92915050565b60008115159050919050565b6115438161152e565b811461154e57600080fd5b50565b6000815190506115608161153a565b92915050565b600080600080600080600060e0888a03121561158557611584610f51565b5b60006115938a828b0161146d565b97505060206115a48a828b016114a6565b96505060406115b58a828b016114e0565b95505060606115c68a828b016114e0565b94505060806115d78a828b016114e0565b93505060a06115e88a828b01611519565b92505060c06115f98a828b01611551565b91505092959891949750929550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061164282610f5b565b915061164d83610f5b565b925082820390508181111561166557611664611608565b5b92915050565b61167481610fed565b82525050565b600060208201905061168f600083018461166b565b92915050565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126116c1576116c0611695565b5b80840192508235915067ffffffffffffffff8211156116e3576116e261169a565b5b6020830192506001820236038313156116ff576116fe61169f565b5b509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026117987fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261175b565b6117a2868361175b565b95508019841693508086168417925050509392505050565b60006117d56117d06117cb84610f5b565b61125c565b610f5b565b9050919050565b6000819050919050565b6117ef836117ba565b6118036117fb826117dc565b848454611768565b825550505050565b600090565b61181861180b565b6118238184846117e6565b505050565b5b818110156118475761183c600082611810565b600181019050611829565b5050565b601f82111561188c5761185d81611736565b6118668461174b565b81016020851015611875578190505b6118896118818561174b565b830182611828565b50505b505050565b600082821c905092915050565b60006118af60001984600802611891565b1980831691505092915050565b60006118c8838361189e565b9150826002028217905092915050565b6118e18261100e565b67ffffffffffffffff8111156118fa576118f9611707565b5b61190482546113e3565b61190f82828561184b565b600060209050601f8311600181146119425760008415611930578287015190505b61193a85826118bc565b8655506119a2565b601f19841661195086611736565b60005b8281101561197857848901518255600182019150602085019450602081019050611953565b868310156119955784890151611991601f89168261189e565b8355505b6001600288020188555050505b505050505050565b60006119b582610f5b565b91506119c083610f5b565b92508282019050808211156119d8576119d7611608565b5b92915050565b6000815190506119ed816111d9565b92915050565b600060208284031215611a0957611a08610f51565b5b6000611a17848285016119de565b91505092915050565b600069ffffffffffffffffffff82169050919050565b611a3f81611a20565b8114611a4a57600080fd5b50565b600081519050611a5c81611a36565b92915050565b611a6b81611344565b8114611a7657600080fd5b50565b600081519050611a8881611a62565b92915050565b600080600080600060a08688031215611aaa57611aa9610f51565b5b6000611ab888828901611a4d565b9550506020611ac988828901611a79565b9450506040611ada88828901611414565b9350506060611aeb88828901611414565b9250506080611afc88828901611a4d565b9150509295509295909350565b6000611b1482610f5b565b9150611b1f83610f5b565b9250828202611b2d81610f5b565b91508282048414831517611b4457611b43611608565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611b8582610f5b565b9150611b9083610f5b565b925082611ba057611b9f611b4b565b5b828204905092915050565b600081905092915050565b50565b6000611bc6600083611bab565b9150611bd182611bb6565b600082019050919050565b6000611be782611bb9565b915081905091905056fea264697066735822122054c14137dd7630cc99263b7c7b26e8bd76e5601a166ee92cf6a0c370274b72e364736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E9E1ABE GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x7E9E1ABE EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0xA71467A8 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0xC9B10D3F EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xDE071A0A EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xED3B657A EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0xEE97F7F3 EQ PUSH2 0x2E1 JUMPI PUSH2 0xA6 JUMP JUMPDEST DUP1 PUSH3 0x407D2A EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x404730F4 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x4230A777 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x42E53FCF EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x4B61A44B EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x6C57B95D EQ PUSH2 0x1A4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCD SWAP2 SWAP1 PUSH2 0xF91 JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDF SWAP2 SWAP1 PUSH2 0x118D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFD PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10A SWAP2 SWAP1 PUSH2 0x11BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x1205 JUMP JUMPDEST PUSH2 0x55F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x1241 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x165 PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x12BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19D SWAP2 SWAP1 PUSH2 0xF91 JUMP JUMPDEST PUSH2 0x608 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x12FB JUMP JUMPDEST PUSH2 0x624 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x11BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F6 PUSH2 0x633 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x11BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x226 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x12FB JUMP JUMPDEST PUSH2 0x639 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x11BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x263 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x12FB JUMP JUMPDEST PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x270 SWAP2 SWAP1 PUSH2 0x11BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x1205 JUMP JUMPDEST PUSH2 0xA4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x135D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CB PUSH2 0xACB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x11BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F6 PUSH2 0xAD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x1399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x314 PUSH2 0xECB JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD DUP1 SLOAD PUSH2 0x43E SWAP1 PUSH2 0x13E3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x46A SWAP1 PUSH2 0x13E3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4B7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x48C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4B7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x49A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x536 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x55A SWAP2 SWAP1 PUSH2 0x1429 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5AD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x1566 JUMP JUMPDEST POP POP POP POP POP POP SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x61A SWAP2 SWAP1 PUSH2 0x1637 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0xE8D4A51000 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6A627842 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x696 SWAP2 SWAP1 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6D9 SWAP2 SWAP1 PUSH2 0x1429 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6F7 DUP5 PUSH2 0xA3B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0xC0 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x71F SWAP2 SWAP1 PUSH2 0x1205 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x74D SWAP2 SWAP1 PUSH2 0x1205 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x60 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x40 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x80 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0xA0 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP1 PUSH1 0xE0 ADD SWAP1 PUSH2 0x7A0 SWAP2 SWAP1 PUSH2 0x16A4 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP2 MSTORE POP PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0xA ADD SWAP1 DUP2 PUSH2 0x8EE SWAP2 SWAP1 PUSH2 0x18D8 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x0 PUSH2 0x8FD DUP4 PUSH2 0x624 JUMP JUMPDEST SWAP1 POP PUSH2 0x910 DUP2 PUSH1 0x0 PUSH4 0xFFFFFFFF AND PUSH2 0xAFB JUMP JUMPDEST POP PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x938 SWAP2 SWAP1 PUSH2 0x19AA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x88EA0751 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9D2 SWAP2 SWAP1 PUSH2 0x19F3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAA5DA046 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA30 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0xE8D4A51000 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA98 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xABC SWAP2 SWAP1 PUSH2 0x1A8E JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB06 PUSH2 0xE33 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP4 SUB PUSH2 0xE2C JUMPI PUSH1 0x0 PUSH1 0x64 DUP6 PUSH1 0x65 PUSH4 0xFFFFFFFF AND PUSH2 0xB2D SWAP2 SWAP1 PUSH2 0x1B09 JUMP JUMPDEST PUSH2 0xB37 SWAP2 SWAP1 PUSH2 0x1B7A JUMP JUMPDEST SWAP1 POP DUP5 CALLVALUE LT ISZERO PUSH2 0xB73 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF244866F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 CALLVALUE PUSH2 0xB81 SWAP2 SWAP1 PUSH2 0x1637 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH1 0x40 MLOAD PUSH2 0xBA9 SWAP1 PUSH2 0x1BDC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xBE6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBEB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xC26 JUMPI PUSH1 0x40 MLOAD PUSH32 0xAB1EE9BF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP7 DUP4 PUSH2 0xC35 SWAP2 SWAP1 PUSH2 0x1637 JUMP JUMPDEST GT ISZERO PUSH2 0xD7B JUMPI PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7ABC3964 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCAA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCCE SWAP2 SWAP1 PUSH2 0x19F3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 DUP5 PUSH2 0xCF0 SWAP2 SWAP1 PUSH2 0x1637 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCFC SWAP1 PUSH2 0x1BDC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xD39 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD3E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xD79 JUMPI PUSH1 0x40 MLOAD PUSH32 0x204633A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xE29 JUMPI PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xDAA SWAP1 PUSH2 0x1BDC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xDE7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xDEC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xE27 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCD57D4DA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9CCC903D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEA2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEC6 SWAP2 SWAP1 PUSH2 0x19F3 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF6E DUP2 PUSH2 0xF5B JUMP JUMPDEST DUP2 EQ PUSH2 0xF79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF8B DUP2 PUSH2 0xF65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFA7 JUMPI PUSH2 0xFA6 PUSH2 0xF51 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFB5 DUP5 DUP3 DUP6 ADD PUSH2 0xF7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFC7 DUP2 PUSH2 0xF5B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFF8 DUP3 PUSH2 0xFCD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1008 DUP2 PUSH2 0xFED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1048 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x102D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1070 DUP3 PUSH2 0x100E JUMP JUMPDEST PUSH2 0x107A DUP2 DUP6 PUSH2 0x1019 JUMP JUMPDEST SWAP4 POP PUSH2 0x108A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x102A JUMP JUMPDEST PUSH2 0x1093 DUP2 PUSH2 0x1054 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x10B7 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0xFBE JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x10CA PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0xFBE JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x10DD PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0xFBE JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x10F0 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0xFBE JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x1103 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0xFFF JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x1116 PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0xFFF JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x1129 PUSH1 0xC0 DUP7 ADD DUP3 PUSH2 0xFBE JUMP JUMPDEST POP PUSH1 0xE0 DUP4 ADD MLOAD PUSH2 0x113C PUSH1 0xE0 DUP7 ADD DUP3 PUSH2 0xFBE JUMP JUMPDEST POP PUSH2 0x100 DUP4 ADD MLOAD PUSH2 0x1151 PUSH2 0x100 DUP7 ADD DUP3 PUSH2 0xFBE JUMP JUMPDEST POP PUSH2 0x120 DUP4 ADD MLOAD PUSH2 0x1166 PUSH2 0x120 DUP7 ADD DUP3 PUSH2 0xFBE JUMP JUMPDEST POP PUSH2 0x140 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH2 0x140 DUP7 ADD MSTORE PUSH2 0x1180 DUP3 DUP3 PUSH2 0x1065 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11A7 DUP2 DUP5 PUSH2 0x109E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11B8 DUP2 PUSH2 0xF5B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11D3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11E2 DUP2 PUSH2 0xFED JUMP JUMPDEST DUP2 EQ PUSH2 0x11ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11FF DUP2 PUSH2 0x11D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x121B JUMPI PUSH2 0x121A PUSH2 0xF51 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1229 DUP5 DUP3 DUP6 ADD PUSH2 0x11F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x123B DUP2 PUSH2 0xFCD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1256 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1232 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1281 PUSH2 0x127C PUSH2 0x1277 DUP5 PUSH2 0xFCD JUMP JUMPDEST PUSH2 0x125C JUMP JUMPDEST PUSH2 0xFCD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1293 DUP3 PUSH2 0x1266 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A5 DUP3 PUSH2 0x1288 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12B5 DUP2 PUSH2 0x129A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12D0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12F2 JUMPI PUSH2 0x12F1 PUSH2 0x12D6 JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1311 JUMPI PUSH2 0x1310 PUSH2 0xF51 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x132F JUMPI PUSH2 0x132E PUSH2 0xF56 JUMP JUMPDEST JUMPDEST PUSH2 0x133B DUP5 DUP3 DUP6 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1357 DUP2 PUSH2 0x1344 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1372 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x134E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1383 DUP3 PUSH2 0x1288 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1393 DUP2 PUSH2 0x1378 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13AE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x138A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x13FB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x140E JUMPI PUSH2 0x140D PUSH2 0x13B4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1423 DUP2 PUSH2 0xF65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x143F JUMPI PUSH2 0x143E PUSH2 0xF51 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x144D DUP5 DUP3 DUP6 ADD PUSH2 0x1414 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x145F DUP2 PUSH2 0xFCD JUMP JUMPDEST DUP2 EQ PUSH2 0x146A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x147C DUP2 PUSH2 0x1456 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1498 DUP2 PUSH2 0x1482 JUMP JUMPDEST DUP2 EQ PUSH2 0x14A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x14B5 DUP2 PUSH2 0x148F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14D2 DUP2 PUSH2 0x14BB JUMP JUMPDEST DUP2 EQ PUSH2 0x14DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x14EF DUP2 PUSH2 0x14C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x150B DUP2 PUSH2 0x14F5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1516 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1528 DUP2 PUSH2 0x1502 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1543 DUP2 PUSH2 0x152E JUMP JUMPDEST DUP2 EQ PUSH2 0x154E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1560 DUP2 PUSH2 0x153A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1585 JUMPI PUSH2 0x1584 PUSH2 0xF51 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1593 DUP11 DUP3 DUP12 ADD PUSH2 0x146D JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x15A4 DUP11 DUP3 DUP12 ADD PUSH2 0x14A6 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x15B5 DUP11 DUP3 DUP12 ADD PUSH2 0x14E0 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x15C6 DUP11 DUP3 DUP12 ADD PUSH2 0x14E0 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x15D7 DUP11 DUP3 DUP12 ADD PUSH2 0x14E0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x15E8 DUP11 DUP3 DUP12 ADD PUSH2 0x1519 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x15F9 DUP11 DUP3 DUP12 ADD PUSH2 0x1551 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1642 DUP3 PUSH2 0xF5B JUMP JUMPDEST SWAP2 POP PUSH2 0x164D DUP4 PUSH2 0xF5B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1665 JUMPI PUSH2 0x1664 PUSH2 0x1608 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1674 DUP2 PUSH2 0xFED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x168F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x166B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x16C1 JUMPI PUSH2 0x16C0 PUSH2 0x1695 JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x16E3 JUMPI PUSH2 0x16E2 PUSH2 0x169A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x16FF JUMPI PUSH2 0x16FE PUSH2 0x169F JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x1798 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x175B JUMP JUMPDEST PUSH2 0x17A2 DUP7 DUP4 PUSH2 0x175B JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17D5 PUSH2 0x17D0 PUSH2 0x17CB DUP5 PUSH2 0xF5B JUMP JUMPDEST PUSH2 0x125C JUMP JUMPDEST PUSH2 0xF5B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17EF DUP4 PUSH2 0x17BA JUMP JUMPDEST PUSH2 0x1803 PUSH2 0x17FB DUP3 PUSH2 0x17DC JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1768 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1818 PUSH2 0x180B JUMP JUMPDEST PUSH2 0x1823 DUP2 DUP5 DUP5 PUSH2 0x17E6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1847 JUMPI PUSH2 0x183C PUSH1 0x0 DUP3 PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1829 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x188C JUMPI PUSH2 0x185D DUP2 PUSH2 0x1736 JUMP JUMPDEST PUSH2 0x1866 DUP5 PUSH2 0x174B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1875 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1889 PUSH2 0x1881 DUP6 PUSH2 0x174B JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1828 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18AF PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1891 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18C8 DUP4 DUP4 PUSH2 0x189E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18E1 DUP3 PUSH2 0x100E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18FA JUMPI PUSH2 0x18F9 PUSH2 0x1707 JUMP JUMPDEST JUMPDEST PUSH2 0x1904 DUP3 SLOAD PUSH2 0x13E3 JUMP JUMPDEST PUSH2 0x190F DUP3 DUP3 DUP6 PUSH2 0x184B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1942 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1930 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x193A DUP6 DUP3 PUSH2 0x18BC JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x19A2 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1950 DUP7 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1978 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1953 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1995 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1991 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x189E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B5 DUP3 PUSH2 0xF5B JUMP JUMPDEST SWAP2 POP PUSH2 0x19C0 DUP4 PUSH2 0xF5B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x19D8 JUMPI PUSH2 0x19D7 PUSH2 0x1608 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x19ED DUP2 PUSH2 0x11D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A09 JUMPI PUSH2 0x1A08 PUSH2 0xF51 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A17 DUP5 DUP3 DUP6 ADD PUSH2 0x19DE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A3F DUP2 PUSH2 0x1A20 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A5C DUP2 PUSH2 0x1A36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A6B DUP2 PUSH2 0x1344 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A88 DUP2 PUSH2 0x1A62 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1AAA JUMPI PUSH2 0x1AA9 PUSH2 0xF51 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AB8 DUP9 DUP3 DUP10 ADD PUSH2 0x1A4D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1AC9 DUP9 DUP3 DUP10 ADD PUSH2 0x1A79 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1ADA DUP9 DUP3 DUP10 ADD PUSH2 0x1414 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1AEB DUP9 DUP3 DUP10 ADD PUSH2 0x1414 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x1AFC DUP9 DUP3 DUP10 ADD PUSH2 0x1A4D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B14 DUP3 PUSH2 0xF5B JUMP JUMPDEST SWAP2 POP PUSH2 0x1B1F DUP4 PUSH2 0xF5B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1B2D DUP2 PUSH2 0xF5B JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1B44 JUMPI PUSH2 0x1B43 PUSH2 0x1608 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B85 DUP3 PUSH2 0xF5B JUMP JUMPDEST SWAP2 POP PUSH2 0x1B90 DUP4 PUSH2 0xF5B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1BA0 JUMPI PUSH2 0x1B9F PUSH2 0x1B4B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC6 PUSH1 0x0 DUP4 PUSH2 0x1BAB JUMP JUMPDEST SWAP2 POP PUSH2 0x1BD1 DUP3 PUSH2 0x1BB6 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BE7 DUP3 PUSH2 0x1BB9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD 0xC1 COINBASE CALLDATACOPY 0xDD PUSH23 0x30CC99263B7C7B26E8BD76E5601A166EE92CF6A0C37027 0x4B PUSH19 0xE364736F6C6343000813003300000000000000 ",
							"sourceMap": "456:3787:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;953:122;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1891:99;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3908:168;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;667:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3605:86;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2123:116;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;602:32;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1080:806;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1995:123;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4084:155;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3696:103;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;641:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;953:122;1013:16;;:::i;:::-;1049:10;:19;1060:7;1049:19;;;;;;;;;;;1042:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;953:122;;;:::o;1891:99::-;1938:4;1961:8;;;;;;;;;;;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1954:29;;1891:99;:::o;3908:168::-;3968:7;3989:14;4034:1;4019:23;;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3988:56;;;;;;;;4063:6;4056:13;;;3908:168;;;:::o;667:26::-;;;;;;;;;;;;;:::o;3605:86::-;3681:3;3660:17;;:24;;;;;;;:::i;:::-;;;;;;;;3605:86;:::o;2123:116::-;2191:10;2219:13;2212:20;;2123:116;;;:::o;602:32::-;;;;:::o;1080:806::-;1156:12;1207:8;;;;;;;;;;;:13;;;1221:10;1207:25;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1197:35;;1264:368;;;;;;;;1274:1;1264:368;;;;1277:24;1294:6;1277:16;:24::i;:::-;1264:368;;;;1345:15;1264:368;;;;1383:6;:13;;;1264:368;;;;1422:6;:13;;;;;;;;;;:::i;:::-;1264:368;;;;;;1449:6;:13;;;;;;;;;;:::i;:::-;1264:368;;;;;;1476:6;:16;;;1264:368;;;;1506:6;:16;;;1264:368;;;;1536:6;:22;;;1264:368;;;;1572:6;:22;;;1264:368;;;;1608:6;:14;;;;;;;;:::i;:::-;1264:368;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1242:10;:19;1253:7;1242:19;;;;;;;;;;;:390;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;1642:17;1662:18;1673:6;1662:10;:18::i;:::-;1642:38;;1690:42;1706:12;408:1;1690:42;;:15;:42::i;:::-;;1763:10;:19;1774:7;1763:19;;;;;;;;;;;:36;;;1742:17;;:57;;;;;;;:::i;:::-;;;;;;;;1809:8;1825:6;;;;;;;;;;;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1809:36;;1855:3;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1169:717;;1080:806;;;:::o;1995:123::-;2069:11;2098:13;2091:20;;1995:123;;;:::o;4084:155::-;4135:3;4151:10;4189:1;4167:40;;;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4149:60;;;;;;4226:6;4219:13;;;4084:155;;;:::o;3696:103::-;3750:7;3775:17;;3768:24;;3696:103;:::o;641:20::-;;;;;;;;;;;;;:::o;2270:1329::-;2360:12;2384:11;2398:6;:4;:6::i;:::-;2384:20;;408:1;2418:28;;:12;:28;2414:1155;;2458:26;2524:3;2502:21;444:3;2487:36;;;;;;:::i;:::-;:40;;;;:::i;:::-;2458:69;;2557:21;2545:9;:33;2541:96;;;2605:21;;;;;;;;;;;;;;2541:96;2648:14;2677:21;2665:9;:33;;;;:::i;:::-;2648:50;;2819:7;2850:5;2842:19;;2869:21;2842:53;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2818:77;;;2910:2;2905:63;;2933:24;;;;;;;;;;;;;;2905:63;2706:270;3061:1;3037:21;3013;:45;;;;:::i;:::-;:49;3009:289;;;3075:7;3106:6;;;;;;;;;;;:28;;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3098:44;;3174:21;3150;:45;;;;:::i;:::-;3098:102;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3074:126;;;3215:2;3210:80;;3238:41;;;;;;;;;;;;;;3210:80;3064:234;3009:289;3322:1;3310:9;:13;3306:252;;;3395:7;3426:10;3418:24;;3450:9;3418:46;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3394:70;;;3479:2;3474:76;;3502:37;;;;;;;;;;;;;;3474:76;3325:233;3306:252;2448:1121;;2414:1155;2373:1226;2270:1329;;;;:::o;3805:97::-;3844:5;3874:6;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3861:34;;3805:97;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;88:117:16:-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:108::-;1102:24;1120:5;1102:24;:::i;:::-;1097:3;1090:37;1025:108;;:::o;1139:126::-;1176:7;1216:42;1209:5;1205:54;1194:65;;1139:126;;;:::o;1271:96::-;1308:7;1337:24;1355:5;1337:24;:::i;:::-;1326:35;;1271:96;;;:::o;1373:108::-;1450:24;1468:5;1450:24;:::i;:::-;1445:3;1438:37;1373:108;;:::o;1487:99::-;1539:6;1573:5;1567:12;1557:22;;1487:99;;;:::o;1592:159::-;1666:11;1700:6;1695:3;1688:19;1740:4;1735:3;1731:14;1716:29;;1592:159;;;;:::o;1757:246::-;1838:1;1848:113;1862:6;1859:1;1856:13;1848:113;;;1947:1;1942:3;1938:11;1932:18;1928:1;1923:3;1919:11;1912:39;1884:2;1881:1;1877:10;1872:15;;1848:113;;;1995:1;1986:6;1981:3;1977:16;1970:27;1819:184;1757:246;;;:::o;2009:102::-;2050:6;2101:2;2097:7;2092:2;2085:5;2081:14;2077:28;2067:38;;2009:102;;;:::o;2117:357::-;2195:3;2223:39;2256:5;2223:39;:::i;:::-;2278:61;2332:6;2327:3;2278:61;:::i;:::-;2271:68;;2348:65;2406:6;2401:3;2394:4;2387:5;2383:16;2348:65;:::i;:::-;2438:29;2460:6;2438:29;:::i;:::-;2433:3;2429:39;2422:46;;2199:275;2117:357;;;;:::o;2524:2251::-;2645:3;2681:6;2676:3;2672:16;2779:4;2772:5;2768:16;2762:23;2798:63;2855:4;2850:3;2846:14;2832:12;2798:63;:::i;:::-;2698:173;2965:4;2958:5;2954:16;2948:23;2984:63;3041:4;3036:3;3032:14;3018:12;2984:63;:::i;:::-;2881:176;3140:4;3133:5;3129:16;3123:23;3159:63;3216:4;3211:3;3207:14;3193:12;3159:63;:::i;:::-;3067:165;3316:4;3309:5;3305:16;3299:23;3335:63;3392:4;3387:3;3383:14;3369:12;3335:63;:::i;:::-;3242:166;3492:4;3485:5;3481:16;3475:23;3511:63;3568:4;3563:3;3559:14;3545:12;3511:63;:::i;:::-;3418:166;3668:4;3661:5;3657:16;3651:23;3687:63;3744:4;3739:3;3735:14;3721:12;3687:63;:::i;:::-;3594:166;3847:4;3840:5;3836:16;3830:23;3866:63;3923:4;3918:3;3914:14;3900:12;3866:63;:::i;:::-;3770:169;4026:4;4019:5;4015:16;4009:23;4045:63;4102:4;4097:3;4093:14;4079:12;4045:63;:::i;:::-;3949:169;4211:6;4204:5;4200:18;4194:25;4232:65;4289:6;4284:3;4280:16;4266:12;4232:65;:::i;:::-;4128:179;4400:6;4393:5;4389:18;4383:25;4421:65;4478:6;4473:3;4469:16;4455:12;4421:65;:::i;:::-;4317:179;4581:6;4574:5;4570:18;4564:25;4638:3;4632:4;4628:14;4619:6;4614:3;4610:16;4603:40;4664:73;4732:4;4718:12;4664:73;:::i;:::-;4656:81;;4506:242;4765:4;4758:11;;2650:2125;2524:2251;;;;:::o;4781:377::-;4926:4;4964:2;4953:9;4949:18;4941:26;;5013:9;5007:4;5003:20;4999:1;4988:9;4984:17;4977:47;5041:110;5146:4;5137:6;5041:110;:::i;:::-;5033:118;;4781:377;;;;:::o;5164:118::-;5251:24;5269:5;5251:24;:::i;:::-;5246:3;5239:37;5164:118;;:::o;5288:222::-;5381:4;5419:2;5408:9;5404:18;5396:26;;5432:71;5500:1;5489:9;5485:17;5476:6;5432:71;:::i;:::-;5288:222;;;;:::o;5516:122::-;5589:24;5607:5;5589:24;:::i;:::-;5582:5;5579:35;5569:63;;5628:1;5625;5618:12;5569:63;5516:122;:::o;5644:139::-;5690:5;5728:6;5715:20;5706:29;;5744:33;5771:5;5744:33;:::i;:::-;5644:139;;;;:::o;5789:329::-;5848:6;5897:2;5885:9;5876:7;5872:23;5868:32;5865:119;;;5903:79;;:::i;:::-;5865:119;6023:1;6048:53;6093:7;6084:6;6073:9;6069:22;6048:53;:::i;:::-;6038:63;;5994:117;5789:329;;;;:::o;6124:118::-;6211:24;6229:5;6211:24;:::i;:::-;6206:3;6199:37;6124:118;;:::o;6248:222::-;6341:4;6379:2;6368:9;6364:18;6356:26;;6392:71;6460:1;6449:9;6445:17;6436:6;6392:71;:::i;:::-;6248:222;;;;:::o;6476:60::-;6504:3;6525:5;6518:12;;6476:60;;;:::o;6542:142::-;6592:9;6625:53;6643:34;6652:24;6670:5;6652:24;:::i;:::-;6643:34;:::i;:::-;6625:53;:::i;:::-;6612:66;;6542:142;;;:::o;6690:126::-;6740:9;6773:37;6804:5;6773:37;:::i;:::-;6760:50;;6690:126;;;:::o;6822:144::-;6890:9;6923:37;6954:5;6923:37;:::i;:::-;6910:50;;6822:144;;;:::o;6972:167::-;7077:55;7126:5;7077:55;:::i;:::-;7072:3;7065:68;6972:167;;:::o;7145:258::-;7256:4;7294:2;7283:9;7279:18;7271:26;;7307:89;7393:1;7382:9;7378:17;7369:6;7307:89;:::i;:::-;7145:258;;;;:::o;7409:117::-;7518:1;7515;7508:12;7561:238;7640:5;7681:3;7672:6;7667:3;7663:16;7659:26;7656:113;;;7688:79;;:::i;:::-;7656:113;7787:6;7778:15;;7561:238;;;;:::o;7805:555::-;7897:6;7946:2;7934:9;7925:7;7921:23;7917:32;7914:119;;;7952:79;;:::i;:::-;7914:119;8100:1;8089:9;8085:17;8072:31;8130:18;8122:6;8119:30;8116:117;;;8152:79;;:::i;:::-;8116:117;8257:86;8335:7;8326:6;8315:9;8311:22;8257:86;:::i;:::-;8247:96;;8043:310;7805:555;;;;:::o;8366:76::-;8402:7;8431:5;8420:16;;8366:76;;;:::o;8448:115::-;8533:23;8550:5;8533:23;:::i;:::-;8528:3;8521:36;8448:115;;:::o;8569:218::-;8660:4;8698:2;8687:9;8683:18;8675:26;;8711:69;8777:1;8766:9;8762:17;8753:6;8711:69;:::i;:::-;8569:218;;;;:::o;8793:140::-;8857:9;8890:37;8921:5;8890:37;:::i;:::-;8877:50;;8793:140;;;:::o;8939:159::-;9040:51;9085:5;9040:51;:::i;:::-;9035:3;9028:64;8939:159;;:::o;9104:250::-;9211:4;9249:2;9238:9;9234:18;9226:26;;9262:85;9344:1;9333:9;9329:17;9320:6;9262:85;:::i;:::-;9104:250;;;;:::o;9360:180::-;9408:77;9405:1;9398:88;9505:4;9502:1;9495:15;9529:4;9526:1;9519:15;9546:320;9590:6;9627:1;9621:4;9617:12;9607:22;;9674:1;9668:4;9664:12;9695:18;9685:81;;9751:4;9743:6;9739:17;9729:27;;9685:81;9813:2;9805:6;9802:14;9782:18;9779:38;9776:84;;9832:18;;:::i;:::-;9776:84;9597:269;9546:320;;;:::o;9872:143::-;9929:5;9960:6;9954:13;9945:22;;9976:33;10003:5;9976:33;:::i;:::-;9872:143;;;;:::o;10021:351::-;10091:6;10140:2;10128:9;10119:7;10115:23;10111:32;10108:119;;;10146:79;;:::i;:::-;10108:119;10266:1;10291:64;10347:7;10338:6;10327:9;10323:22;10291:64;:::i;:::-;10281:74;;10237:128;10021:351;;;;:::o;10378:122::-;10451:24;10469:5;10451:24;:::i;:::-;10444:5;10441:35;10431:63;;10490:1;10487;10480:12;10431:63;10378:122;:::o;10506:143::-;10563:5;10594:6;10588:13;10579:22;;10610:33;10637:5;10610:33;:::i;:::-;10506:143;;;;:::o;10655:90::-;10690:7;10733:5;10730:1;10719:20;10708:31;;10655:90;;;:::o;10751:118::-;10822:22;10838:5;10822:22;:::i;:::-;10815:5;10812:33;10802:61;;10859:1;10856;10849:12;10802:61;10751:118;:::o;10875:139::-;10930:5;10961:6;10955:13;10946:22;;10977:31;11002:5;10977:31;:::i;:::-;10875:139;;;;:::o;11020:89::-;11056:7;11096:6;11089:5;11085:18;11074:29;;11020:89;;;:::o;11115:120::-;11187:23;11204:5;11187:23;:::i;:::-;11180:5;11177:34;11167:62;;11225:1;11222;11215:12;11167:62;11115:120;:::o;11241:141::-;11297:5;11328:6;11322:13;11313:22;;11344:32;11370:5;11344:32;:::i;:::-;11241:141;;;;:::o;11388:86::-;11423:7;11463:4;11456:5;11452:16;11441:27;;11388:86;;;:::o;11480:118::-;11551:22;11567:5;11551:22;:::i;:::-;11544:5;11541:33;11531:61;;11588:1;11585;11578:12;11531:61;11480:118;:::o;11604:139::-;11659:5;11690:6;11684:13;11675:22;;11706:31;11731:5;11706:31;:::i;:::-;11604:139;;;;:::o;11749:90::-;11783:7;11826:5;11819:13;11812:21;11801:32;;11749:90;;;:::o;11845:116::-;11915:21;11930:5;11915:21;:::i;:::-;11908:5;11905:32;11895:60;;11951:1;11948;11941:12;11895:60;11845:116;:::o;11967:137::-;12021:5;12052:6;12046:13;12037:22;;12068:30;12092:5;12068:30;:::i;:::-;11967:137;;;;:::o;12110:1271::-;12224:6;12232;12240;12248;12256;12264;12272;12321:3;12309:9;12300:7;12296:23;12292:33;12289:120;;;12328:79;;:::i;:::-;12289:120;12448:1;12473:64;12529:7;12520:6;12509:9;12505:22;12473:64;:::i;:::-;12463:74;;12419:128;12586:2;12612:62;12666:7;12657:6;12646:9;12642:22;12612:62;:::i;:::-;12602:72;;12557:127;12723:2;12749:63;12804:7;12795:6;12784:9;12780:22;12749:63;:::i;:::-;12739:73;;12694:128;12861:2;12887:63;12942:7;12933:6;12922:9;12918:22;12887:63;:::i;:::-;12877:73;;12832:128;12999:3;13026:63;13081:7;13072:6;13061:9;13057:22;13026:63;:::i;:::-;13016:73;;12970:129;13138:3;13165:62;13219:7;13210:6;13199:9;13195:22;13165:62;:::i;:::-;13155:72;;13109:128;13276:3;13303:61;13356:7;13347:6;13336:9;13332:22;13303:61;:::i;:::-;13293:71;;13247:127;12110:1271;;;;;;;;;;:::o;13387:180::-;13435:77;13432:1;13425:88;13532:4;13529:1;13522:15;13556:4;13553:1;13546:15;13573:194;13613:4;13633:20;13651:1;13633:20;:::i;:::-;13628:25;;13667:20;13685:1;13667:20;:::i;:::-;13662:25;;13711:1;13708;13704:9;13696:17;;13735:1;13729:4;13726:11;13723:37;;;13740:18;;:::i;:::-;13723:37;13573:194;;;;:::o;13773:118::-;13860:24;13878:5;13860:24;:::i;:::-;13855:3;13848:37;13773:118;;:::o;13897:222::-;13990:4;14028:2;14017:9;14013:18;14005:26;;14041:71;14109:1;14098:9;14094:17;14085:6;14041:71;:::i;:::-;13897:222;;;;:::o;14125:117::-;14234:1;14231;14224:12;14248:117;14357:1;14354;14347:12;14371:117;14480:1;14477;14470:12;14494:725;14572:4;14578:6;14634:11;14621:25;14734:1;14728:4;14724:12;14713:8;14697:14;14693:29;14689:48;14669:18;14665:73;14655:168;;14742:79;;:::i;:::-;14655:168;14854:18;14844:8;14840:33;14832:41;;14906:4;14893:18;14883:28;;14934:18;14926:6;14923:30;14920:117;;;14956:79;;:::i;:::-;14920:117;15064:2;15058:4;15054:13;15046:21;;15121:4;15113:6;15109:17;15093:14;15089:38;15083:4;15079:49;15076:136;;;15131:79;;:::i;:::-;15076:136;14585:634;14494:725;;;;;:::o;15225:180::-;15273:77;15270:1;15263:88;15370:4;15367:1;15360:15;15394:4;15391:1;15384:15;15411:141;15460:4;15483:3;15475:11;;15506:3;15503:1;15496:14;15540:4;15537:1;15527:18;15519:26;;15411:141;;;:::o;15558:93::-;15595:6;15642:2;15637;15630:5;15626:14;15622:23;15612:33;;15558:93;;;:::o;15657:107::-;15701:8;15751:5;15745:4;15741:16;15720:37;;15657:107;;;;:::o;15770:393::-;15839:6;15889:1;15877:10;15873:18;15912:97;15942:66;15931:9;15912:97;:::i;:::-;16030:39;16060:8;16049:9;16030:39;:::i;:::-;16018:51;;16102:4;16098:9;16091:5;16087:21;16078:30;;16151:4;16141:8;16137:19;16130:5;16127:30;16117:40;;15846:317;;15770:393;;;;;:::o;16169:142::-;16219:9;16252:53;16270:34;16279:24;16297:5;16279:24;:::i;:::-;16270:34;:::i;:::-;16252:53;:::i;:::-;16239:66;;16169:142;;;:::o;16317:75::-;16360:3;16381:5;16374:12;;16317:75;;;:::o;16398:269::-;16508:39;16539:7;16508:39;:::i;:::-;16569:91;16618:41;16642:16;16618:41;:::i;:::-;16610:6;16603:4;16597:11;16569:91;:::i;:::-;16563:4;16556:105;16474:193;16398:269;;;:::o;16673:73::-;16718:3;16673:73;:::o;16752:189::-;16829:32;;:::i;:::-;16870:65;16928:6;16920;16914:4;16870:65;:::i;:::-;16805:136;16752:189;;:::o;16947:186::-;17007:120;17024:3;17017:5;17014:14;17007:120;;;17078:39;17115:1;17108:5;17078:39;:::i;:::-;17051:1;17044:5;17040:13;17031:22;;17007:120;;;16947:186;;:::o;17139:543::-;17240:2;17235:3;17232:11;17229:446;;;17274:38;17306:5;17274:38;:::i;:::-;17358:29;17376:10;17358:29;:::i;:::-;17348:8;17344:44;17541:2;17529:10;17526:18;17523:49;;;17562:8;17547:23;;17523:49;17585:80;17641:22;17659:3;17641:22;:::i;:::-;17631:8;17627:37;17614:11;17585:80;:::i;:::-;17244:431;;17229:446;17139:543;;;:::o;17688:117::-;17742:8;17792:5;17786:4;17782:16;17761:37;;17688:117;;;;:::o;17811:169::-;17855:6;17888:51;17936:1;17932:6;17924:5;17921:1;17917:13;17888:51;:::i;:::-;17884:56;17969:4;17963;17959:15;17949:25;;17862:118;17811:169;;;;:::o;17985:295::-;18061:4;18207:29;18232:3;18226:4;18207:29;:::i;:::-;18199:37;;18269:3;18266:1;18262:11;18256:4;18253:21;18245:29;;17985:295;;;;:::o;18285:1395::-;18402:37;18435:3;18402:37;:::i;:::-;18504:18;18496:6;18493:30;18490:56;;;18526:18;;:::i;:::-;18490:56;18570:38;18602:4;18596:11;18570:38;:::i;:::-;18655:67;18715:6;18707;18701:4;18655:67;:::i;:::-;18749:1;18773:4;18760:17;;18805:2;18797:6;18794:14;18822:1;18817:618;;;;19479:1;19496:6;19493:77;;;19545:9;19540:3;19536:19;19530:26;19521:35;;19493:77;19596:67;19656:6;19649:5;19596:67;:::i;:::-;19590:4;19583:81;19452:222;18787:887;;18817:618;18869:4;18865:9;18857:6;18853:22;18903:37;18935:4;18903:37;:::i;:::-;18962:1;18976:208;18990:7;18987:1;18984:14;18976:208;;;19069:9;19064:3;19060:19;19054:26;19046:6;19039:42;19120:1;19112:6;19108:14;19098:24;;19167:2;19156:9;19152:18;19139:31;;19013:4;19010:1;19006:12;19001:17;;18976:208;;;19212:6;19203:7;19200:19;19197:179;;;19270:9;19265:3;19261:19;19255:26;19313:48;19355:4;19347:6;19343:17;19332:9;19313:48;:::i;:::-;19305:6;19298:64;19220:156;19197:179;19422:1;19418;19410:6;19406:14;19402:22;19396:4;19389:36;18824:611;;;18787:887;;18377:1303;;;18285:1395;;:::o;19686:191::-;19726:3;19745:20;19763:1;19745:20;:::i;:::-;19740:25;;19779:20;19797:1;19779:20;:::i;:::-;19774:25;;19822:1;19819;19815:9;19808:16;;19843:3;19840:1;19837:10;19834:36;;;19850:18;;:::i;:::-;19834:36;19686:191;;;;:::o;19883:143::-;19940:5;19971:6;19965:13;19956:22;;19987:33;20014:5;19987:33;:::i;:::-;19883:143;;;;:::o;20032:351::-;20102:6;20151:2;20139:9;20130:7;20126:23;20122:32;20119:119;;;20157:79;;:::i;:::-;20119:119;20277:1;20302:64;20358:7;20349:6;20338:9;20334:22;20302:64;:::i;:::-;20292:74;;20248:128;20032:351;;;;:::o;20389:105::-;20425:7;20465:22;20458:5;20454:34;20443:45;;20389:105;;;:::o;20500:120::-;20572:23;20589:5;20572:23;:::i;:::-;20565:5;20562:34;20552:62;;20610:1;20607;20600:12;20552:62;20500:120;:::o;20626:141::-;20682:5;20713:6;20707:13;20698:22;;20729:32;20755:5;20729:32;:::i;:::-;20626:141;;;;:::o;20773:120::-;20845:23;20862:5;20845:23;:::i;:::-;20838:5;20835:34;20825:62;;20883:1;20880;20873:12;20825:62;20773:120;:::o;20899:141::-;20955:5;20986:6;20980:13;20971:22;;21002:32;21028:5;21002:32;:::i;:::-;20899:141;;;;:::o;21046:971::-;21149:6;21157;21165;21173;21181;21230:3;21218:9;21209:7;21205:23;21201:33;21198:120;;;21237:79;;:::i;:::-;21198:120;21357:1;21382:63;21437:7;21428:6;21417:9;21413:22;21382:63;:::i;:::-;21372:73;;21328:127;21494:2;21520:63;21575:7;21566:6;21555:9;21551:22;21520:63;:::i;:::-;21510:73;;21465:128;21632:2;21658:64;21714:7;21705:6;21694:9;21690:22;21658:64;:::i;:::-;21648:74;;21603:129;21771:2;21797:64;21853:7;21844:6;21833:9;21829:22;21797:64;:::i;:::-;21787:74;;21742:129;21910:3;21937:63;21992:7;21983:6;21972:9;21968:22;21937:63;:::i;:::-;21927:73;;21881:129;21046:971;;;;;;;;:::o;22023:410::-;22063:7;22086:20;22104:1;22086:20;:::i;:::-;22081:25;;22120:20;22138:1;22120:20;:::i;:::-;22115:25;;22175:1;22172;22168:9;22197:30;22215:11;22197:30;:::i;:::-;22186:41;;22376:1;22367:7;22363:15;22360:1;22357:22;22337:1;22330:9;22310:83;22287:139;;22406:18;;:::i;:::-;22287:139;22071:362;22023:410;;;;:::o;22439:180::-;22487:77;22484:1;22477:88;22584:4;22581:1;22574:15;22608:4;22605:1;22598:15;22625:185;22665:1;22682:20;22700:1;22682:20;:::i;:::-;22677:25;;22716:20;22734:1;22716:20;:::i;:::-;22711:25;;22755:1;22745:35;;22760:18;;:::i;:::-;22745:35;22802:1;22799;22795:9;22790:14;;22625:185;;;;:::o;22816:147::-;22917:11;22954:3;22939:18;;22816:147;;;;:::o;22969:114::-;;:::o;23089:398::-;23248:3;23269:83;23350:1;23345:3;23269:83;:::i;:::-;23262:90;;23361:93;23450:3;23361:93;:::i;:::-;23479:1;23474:3;23470:11;23463:18;;23089:398;;;:::o;23493:379::-;23677:3;23699:147;23842:3;23699:147;:::i;:::-;23692:154;;23863:3;23856:10;;23493:379;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1441400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"activeCoverAmount()": "2429",
								"buyCover((address,address,uint256,uint256,uint256,uint256,uint256,string))": "infinite",
								"coverAmountInETH((address,address,uint256,uint256,uint256,uint256,uint256,string))": "615",
								"coverDataCount()": "infinite",
								"coverNFT()": "infinite",
								"coverPrice((address,address,uint256,uint256,uint256,uint256,uint256,string))": "682",
								"decActiveCoverInETH(uint256)": "infinite",
								"getCoverData(uint256)": "infinite",
								"getLiveDataUniswap(address)": "infinite",
								"getUnitPX(address)": "infinite",
								"master()": "infinite",
								"totalActiveCoverInETH()": "2525"
							},
							"internal": {
								"pool()": "infinite",
								"retrievePayment(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 456,
									"end": 4243,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 456,
									"end": 4243,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 456,
									"end": 4243,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 700,
									"end": 948,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 700,
									"end": 948,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 700,
									"end": 948,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 700,
									"end": 948,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 700,
									"end": 948,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 700,
									"end": 948,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 700,
									"end": 948,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 700,
									"end": 948,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 861,
									"end": 870,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 850,
									"end": 858,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 850,
									"end": 858,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 850,
									"end": 870,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 850,
									"end": 870,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 850,
									"end": 870,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 850,
									"end": 870,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 850,
									"end": 870,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 850,
									"end": 870,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 850,
									"end": 870,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 850,
									"end": 870,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 850,
									"end": 870,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 850,
									"end": 870,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 850,
									"end": 870,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 850,
									"end": 870,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 850,
									"end": 870,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 850,
									"end": 870,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 850,
									"end": 870,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 850,
									"end": 870,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 850,
									"end": 870,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 850,
									"end": 870,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 900,
									"end": 901,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 880,
									"end": 897,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 880,
									"end": 901,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 880,
									"end": 901,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 880,
									"end": 901,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 880,
									"end": 901,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 927,
									"end": 940,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 911,
									"end": 917,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 911,
									"end": 917,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 941,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 911,
									"end": 941,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 911,
									"end": 941,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 911,
									"end": 941,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 911,
									"end": 941,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 911,
									"end": 941,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 911,
									"end": 941,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 911,
									"end": 941,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 911,
									"end": 941,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 911,
									"end": 941,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 911,
									"end": 941,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 911,
									"end": 941,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 911,
									"end": 941,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 911,
									"end": 941,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 911,
									"end": 941,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 911,
									"end": 941,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 911,
									"end": 941,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 911,
									"end": 941,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 700,
									"end": 948,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 456,
									"end": 4243,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 456,
									"end": 4243,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 16,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 16,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 16,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "23"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 16,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 568,
									"end": 682,
									"name": "tag",
									"source": 16,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 682,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 623,
									"end": 630,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 652,
									"end": 676,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "25"
								},
								{
									"begin": 670,
									"end": 675,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 652,
									"end": 676,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "11"
								},
								{
									"begin": 652,
									"end": 676,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 652,
									"end": 676,
									"name": "tag",
									"source": 16,
									"value": "25"
								},
								{
									"begin": 652,
									"end": 676,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 641,
									"end": 676,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 641,
									"end": 676,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 568,
									"end": 682,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 568,
									"end": 682,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 568,
									"end": 682,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 568,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 688,
									"end": 846,
									"name": "tag",
									"source": 16,
									"value": "13"
								},
								{
									"begin": 688,
									"end": 846,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 779,
									"end": 821,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "27"
								},
								{
									"begin": 815,
									"end": 820,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 779,
									"end": 821,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "12"
								},
								{
									"begin": 779,
									"end": 821,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 779,
									"end": 821,
									"name": "tag",
									"source": 16,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 821,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 772,
									"end": 777,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 769,
									"end": 822,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 759,
									"end": 840,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "28"
								},
								{
									"begin": 759,
									"end": 840,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 836,
									"end": 837,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 833,
									"end": 834,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 826,
									"end": 838,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 759,
									"end": 840,
									"name": "tag",
									"source": 16,
									"value": "28"
								},
								{
									"begin": 759,
									"end": 840,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 688,
									"end": 846,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 688,
									"end": 846,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 852,
									"end": 1031,
									"name": "tag",
									"source": 16,
									"value": "14"
								},
								{
									"begin": 852,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 927,
									"end": 932,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 958,
									"end": 964,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 952,
									"end": 965,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 943,
									"end": 965,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 943,
									"end": 965,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 974,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "30"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 974,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "13"
								},
								{
									"begin": 974,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 974,
									"end": 1025,
									"name": "tag",
									"source": 16,
									"value": "30"
								},
								{
									"begin": 974,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 852,
									"end": 1031,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 852,
									"end": 1031,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 852,
									"end": 1031,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 852,
									"end": 1031,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 852,
									"end": 1031,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1037,
									"end": 1159,
									"name": "tag",
									"source": 16,
									"value": "15"
								},
								{
									"begin": 1037,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1110,
									"end": 1134,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "32"
								},
								{
									"begin": 1128,
									"end": 1133,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1110,
									"end": 1134,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "11"
								},
								{
									"begin": 1110,
									"end": 1134,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1110,
									"end": 1134,
									"name": "tag",
									"source": 16,
									"value": "32"
								},
								{
									"begin": 1110,
									"end": 1134,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1103,
									"end": 1108,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1100,
									"end": 1135,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 1090,
									"end": 1153,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "33"
								},
								{
									"begin": 1090,
									"end": 1153,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1149,
									"end": 1150,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1146,
									"end": 1147,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1139,
									"end": 1151,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 1090,
									"end": 1153,
									"name": "tag",
									"source": 16,
									"value": "33"
								},
								{
									"begin": 1090,
									"end": 1153,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1037,
									"end": 1159,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1037,
									"end": 1159,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1165,
									"end": 1308,
									"name": "tag",
									"source": 16,
									"value": "16"
								},
								{
									"begin": 1165,
									"end": 1308,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1222,
									"end": 1227,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1253,
									"end": 1259,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1247,
									"end": 1260,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 1238,
									"end": 1260,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1238,
									"end": 1260,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1269,
									"end": 1302,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "35"
								},
								{
									"begin": 1296,
									"end": 1301,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1269,
									"end": 1302,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "15"
								},
								{
									"begin": 1269,
									"end": 1302,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1269,
									"end": 1302,
									"name": "tag",
									"source": 16,
									"value": "35"
								},
								{
									"begin": 1269,
									"end": 1302,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1165,
									"end": 1308,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 1165,
									"end": 1308,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1165,
									"end": 1308,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1165,
									"end": 1308,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1165,
									"end": 1308,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1314,
									"end": 1857,
									"name": "tag",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 1314,
									"end": 1857,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1411,
									"end": 1417,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1419,
									"end": 1425,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1468,
									"end": 1470,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 1456,
									"end": 1465,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 1447,
									"end": 1454,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 1443,
									"end": 1466,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 1439,
									"end": 1471,
									"name": "SLT",
									"source": 16
								},
								{
									"begin": 1436,
									"end": 1555,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1436,
									"end": 1555,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 1436,
									"end": 1555,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1474,
									"end": 1553,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "38"
								},
								{
									"begin": 1474,
									"end": 1553,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "8"
								},
								{
									"begin": 1474,
									"end": 1553,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1474,
									"end": 1553,
									"name": "tag",
									"source": 16,
									"value": "38"
								},
								{
									"begin": 1474,
									"end": 1553,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1436,
									"end": 1555,
									"name": "tag",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 1436,
									"end": 1555,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1594,
									"end": 1595,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1619,
									"end": 1701,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "39"
								},
								{
									"begin": 1693,
									"end": 1700,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 1684,
									"end": 1690,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1673,
									"end": 1682,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 1669,
									"end": 1691,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1619,
									"end": 1701,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "14"
								},
								{
									"begin": 1619,
									"end": 1701,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1619,
									"end": 1701,
									"name": "tag",
									"source": 16,
									"value": "39"
								},
								{
									"begin": 1619,
									"end": 1701,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1609,
									"end": 1701,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 1609,
									"end": 1701,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1565,
									"end": 1711,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1750,
									"end": 1752,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1776,
									"end": 1840,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 1832,
									"end": 1839,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 1823,
									"end": 1829,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1812,
									"end": 1821,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 1808,
									"end": 1830,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1776,
									"end": 1840,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "16"
								},
								{
									"begin": 1776,
									"end": 1840,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1776,
									"end": 1840,
									"name": "tag",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 1776,
									"end": 1840,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1766,
									"end": 1840,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1766,
									"end": 1840,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1721,
									"end": 1850,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1314,
									"end": 1857,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 1314,
									"end": 1857,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1314,
									"end": 1857,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 1314,
									"end": 1857,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1314,
									"end": 1857,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1314,
									"end": 1857,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 456,
									"end": 4243,
									"name": "tag",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 456,
									"end": 4243,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 456,
									"end": 4243,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 456,
									"end": 4243,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 456,
									"end": 4243,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 456,
									"end": 4243,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 456,
									"end": 4243,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 456,
									"end": 4243,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 456,
									"end": 4243,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122054c14137dd7630cc99263b7c7b26e8bd76e5601a166ee92cf6a0c370274b72e364736f6c63430008130033",
									".code": [
										{
											"begin": 456,
											"end": 4243,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "PUSH",
											"source": 9,
											"value": "7E9E1ABE"
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "PUSH",
											"source": 9,
											"value": "7E9E1ABE"
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "PUSH",
											"source": 9,
											"value": "A71467A8"
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "PUSH",
											"source": 9,
											"value": "C9B10D3F"
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "PUSH",
											"source": 9,
											"value": "DE071A0A"
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "PUSH",
											"source": 9,
											"value": "ED3B657A"
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "PUSH",
											"source": 9,
											"value": "EE97F7F3"
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "PUSH",
											"source": 9,
											"value": "407D2A"
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "PUSH",
											"source": 9,
											"value": "404730F4"
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "PUSH",
											"source": 9,
											"value": "4230A777"
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "PUSH",
											"source": 9,
											"value": "42E53FCF"
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "PUSH",
											"source": 9,
											"value": "4B61A44B"
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "PUSH",
											"source": 9,
											"value": "6C57B95D"
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 456,
											"end": 4243,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 953,
											"end": 1075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 953,
											"end": 1075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 953,
											"end": 1075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1891,
											"end": 1990,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1891,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1891,
											"end": 1990,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1891,
											"end": 1990,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1891,
											"end": 1990,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1891,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 1891,
											"end": 1990,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1891,
											"end": 1990,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1891,
											"end": 1990,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1891,
											"end": 1990,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1891,
											"end": 1990,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 1891,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1891,
											"end": 1990,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1891,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1891,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1891,
											"end": 1990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1891,
											"end": 1990,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1891,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1891,
											"end": 1990,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1891,
											"end": 1990,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1891,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1891,
											"end": 1990,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1891,
											"end": 1990,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1891,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1891,
											"end": 1990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1891,
											"end": 1990,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1891,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1891,
											"end": 1990,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1891,
											"end": 1990,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1891,
											"end": 1990,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1891,
											"end": 1990,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1891,
											"end": 1990,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1891,
											"end": 1990,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1891,
											"end": 1990,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 3908,
											"end": 4076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 3908,
											"end": 4076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 3908,
											"end": 4076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 667,
											"end": 693,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 667,
											"end": 693,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 667,
											"end": 693,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 667,
											"end": 693,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 667,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 667,
											"end": 693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 667,
											"end": 693,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 667,
											"end": 693,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 667,
											"end": 693,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 667,
											"end": 693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 667,
											"end": 693,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 667,
											"end": 693,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3605,
											"end": 3691,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3605,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3605,
											"end": 3691,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3605,
											"end": 3691,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3605,
											"end": 3691,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3605,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 3605,
											"end": 3691,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3605,
											"end": 3691,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3605,
											"end": 3691,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3605,
											"end": 3691,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3605,
											"end": 3691,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 3605,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3605,
											"end": 3691,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3605,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3605,
											"end": 3691,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3605,
											"end": 3691,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3605,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3605,
											"end": 3691,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3605,
											"end": 3691,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3605,
											"end": 3691,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3605,
											"end": 3691,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3605,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 3605,
											"end": 3691,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3605,
											"end": 3691,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3605,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 3605,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3605,
											"end": 3691,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 3605,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3605,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 3605,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3605,
											"end": 3691,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3605,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3605,
											"end": 3691,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 2123,
											"end": 2239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 2123,
											"end": 2239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 2123,
											"end": 2239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 602,
											"end": 634,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 602,
											"end": 634,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 602,
											"end": 634,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 602,
											"end": 634,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 602,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 602,
											"end": 634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 602,
											"end": 634,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 602,
											"end": 634,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 602,
											"end": 634,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 602,
											"end": 634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 602,
											"end": 634,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 602,
											"end": 634,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1886,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1080,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1080,
											"end": 1886,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1080,
											"end": 1886,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1886,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1886,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1886,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1886,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1886,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 1080,
											"end": 1886,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1886,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1080,
											"end": 1886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1886,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 1080,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 1080,
											"end": 1886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1886,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1080,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1886,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1080,
											"end": 1886,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 1080,
											"end": 1886,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1886,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1080,
											"end": 1886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1886,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 1080,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1886,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1080,
											"end": 1886,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1886,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1886,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1886,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1886,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1886,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1995,
											"end": 2118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1995,
											"end": 2118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1995,
											"end": 2118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 4084,
											"end": 4239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 4084,
											"end": 4239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 4084,
											"end": 4239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3696,
											"end": 3799,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 3696,
											"end": 3799,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3696,
											"end": 3799,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3696,
											"end": 3799,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3696,
											"end": 3799,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3696,
											"end": 3799,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 3696,
											"end": 3799,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3696,
											"end": 3799,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3696,
											"end": 3799,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3696,
											"end": 3799,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3696,
											"end": 3799,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 3696,
											"end": 3799,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3696,
											"end": 3799,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3696,
											"end": 3799,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 3696,
											"end": 3799,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 3696,
											"end": 3799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3696,
											"end": 3799,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 3696,
											"end": 3799,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3696,
											"end": 3799,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3696,
											"end": 3799,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3696,
											"end": 3799,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 3696,
											"end": 3799,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3696,
											"end": 3799,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3696,
											"end": 3799,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 3696,
											"end": 3799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3696,
											"end": 3799,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 3696,
											"end": 3799,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3696,
											"end": 3799,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3696,
											"end": 3799,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3696,
											"end": 3799,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3696,
											"end": 3799,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3696,
											"end": 3799,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3696,
											"end": 3799,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3696,
											"end": 3799,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 641,
											"end": 661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 641,
											"end": 661,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 641,
											"end": 661,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 641,
											"end": 661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 641,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 641,
											"end": 661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 641,
											"end": 661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 641,
											"end": 661,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 641,
											"end": 661,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 641,
											"end": 661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 641,
											"end": 661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 641,
											"end": 661,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1013,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 1013,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 1013,
											"end": 1029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1013,
											"end": 1029,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 1013,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1049,
											"end": 1059,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1049,
											"end": 1068,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1049,
											"end": 1068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1049,
											"end": 1068,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1049,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1049,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1049,
											"end": 1068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1049,
											"end": 1068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1049,
											"end": 1068,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1049,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1049,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1049,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1049,
											"end": 1068,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 1042,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 1042,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 953,
											"end": 1075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1891,
											"end": 1990,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1891,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1938,
											"end": 1942,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1961,
											"end": 1969,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1961,
											"end": 1969,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1961,
											"end": 1969,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1969,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1969,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1969,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1961,
											"end": 1969,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1969,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1969,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1969,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1961,
											"end": 1969,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1981,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1961,
											"end": 1981,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1981,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 1961,
											"end": 1983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1891,
											"end": 1990,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1891,
											"end": 1990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 3975,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3989,
											"end": 4003,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4034,
											"end": 4035,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4042,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4019,
											"end": 4042,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4042,
											"name": "PUSH",
											"source": 9,
											"value": "3850C7BD"
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 4019,
											"end": 4044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3988,
											"end": 4044,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3988,
											"end": 4044,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3988,
											"end": 4044,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3988,
											"end": 4044,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3988,
											"end": 4044,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3988,
											"end": 4044,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3988,
											"end": 4044,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3988,
											"end": 4044,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4063,
											"end": 4069,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4056,
											"end": 4069,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4056,
											"end": 4069,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4056,
											"end": 4069,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4076,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 667,
											"end": 693,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 667,
											"end": 693,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 667,
											"end": 693,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 667,
											"end": 693,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 667,
											"end": 693,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 667,
											"end": 693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3605,
											"end": 3691,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 3605,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3684,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3660,
											"end": 3684,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3660,
											"end": 3684,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3660,
											"end": 3684,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3660,
											"end": 3684,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 3660,
											"end": 3684,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3660,
											"end": 3684,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3660,
											"end": 3684,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 3660,
											"end": 3684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3660,
											"end": 3684,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 3660,
											"end": 3684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3660,
											"end": 3684,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3660,
											"end": 3684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3660,
											"end": 3684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3660,
											"end": 3684,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3660,
											"end": 3684,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3660,
											"end": 3684,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3660,
											"end": 3684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3605,
											"end": 3691,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3605,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2219,
											"end": 2232,
											"name": "PUSH",
											"source": 9,
											"value": "E8D4A51000"
										},
										{
											"begin": 2212,
											"end": 2232,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2212,
											"end": 2232,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2239,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 602,
											"end": 634,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 602,
											"end": 634,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 602,
											"end": 634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1886,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 1080,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1156,
											"end": 1168,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1215,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1207,
											"end": 1215,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1215,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1215,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1215,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1215,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1207,
											"end": 1215,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1215,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1215,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1215,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1207,
											"end": 1215,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1220,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1207,
											"end": 1220,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1220,
											"name": "PUSH",
											"source": 9,
											"value": "6A627842"
										},
										{
											"begin": 1221,
											"end": 1231,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 1207,
											"end": 1232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 1207,
											"end": 1232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 1207,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1232,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1232,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1274,
											"end": 1275,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1277,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 1294,
											"end": 1300,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1277,
											"end": 1293,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1277,
											"end": 1301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1277,
											"end": 1301,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 1277,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1345,
											"end": 1360,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1383,
											"end": 1389,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1383,
											"end": 1396,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 1383,
											"end": 1396,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1383,
											"end": 1396,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1422,
											"end": 1428,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1422,
											"end": 1435,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1435,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1422,
											"end": 1435,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1422,
											"end": 1435,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1422,
											"end": 1435,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1422,
											"end": 1435,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1422,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 1422,
											"end": 1435,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1422,
											"end": 1435,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1422,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 1422,
											"end": 1435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1422,
											"end": 1435,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 1422,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1449,
											"end": 1455,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1449,
											"end": 1462,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1449,
											"end": 1462,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1449,
											"end": 1462,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1449,
											"end": 1462,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1449,
											"end": 1462,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1449,
											"end": 1462,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1449,
											"end": 1462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 1449,
											"end": 1462,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1449,
											"end": 1462,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1449,
											"end": 1462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 1449,
											"end": 1462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1449,
											"end": 1462,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 1449,
											"end": 1462,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1482,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1492,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1476,
											"end": 1492,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1492,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1506,
											"end": 1512,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1506,
											"end": 1522,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1522,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1506,
											"end": 1522,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1536,
											"end": 1558,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1536,
											"end": 1558,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1536,
											"end": 1558,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1572,
											"end": 1578,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1572,
											"end": 1594,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1572,
											"end": 1594,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1572,
											"end": 1594,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1608,
											"end": 1614,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1608,
											"end": 1622,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1608,
											"end": 1622,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1608,
											"end": 1622,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1608,
											"end": 1622,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1608,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 1608,
											"end": 1622,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1608,
											"end": 1622,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1608,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 1608,
											"end": 1622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1608,
											"end": 1622,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 1608,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1632,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1252,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1261,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1253,
											"end": 1260,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1261,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1261,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1261,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1242,
											"end": 1261,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1261,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1261,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1261,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1261,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1242,
											"end": 1261,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1261,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1261,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 1242,
											"end": 1632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1632,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1642,
											"end": 1659,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1662,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 1673,
											"end": 1679,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1662,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 1662,
											"end": 1680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1662,
											"end": 1680,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 1662,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1642,
											"end": 1680,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1642,
											"end": 1680,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1690,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 1706,
											"end": 1718,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 408,
											"end": 409,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1690,
											"end": 1732,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1690,
											"end": 1732,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1690,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 1690,
											"end": 1732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1690,
											"end": 1732,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 1690,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1690,
											"end": 1732,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1763,
											"end": 1773,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1763,
											"end": 1782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1781,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1763,
											"end": 1782,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1763,
											"end": 1782,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1763,
											"end": 1782,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1763,
											"end": 1782,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1763,
											"end": 1782,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1763,
											"end": 1782,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1763,
											"end": 1782,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1763,
											"end": 1782,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1763,
											"end": 1782,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1763,
											"end": 1782,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1763,
											"end": 1782,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1763,
											"end": 1799,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1763,
											"end": 1799,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1763,
											"end": 1799,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1742,
											"end": 1759,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1742,
											"end": 1759,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1742,
											"end": 1799,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1742,
											"end": 1799,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1742,
											"end": 1799,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1742,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 1742,
											"end": 1799,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1742,
											"end": 1799,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1742,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 1742,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1742,
											"end": 1799,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 1742,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1742,
											"end": 1799,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1742,
											"end": 1799,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1742,
											"end": 1799,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1742,
											"end": 1799,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1742,
											"end": 1799,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1742,
											"end": 1799,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1742,
											"end": 1799,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1809,
											"end": 1817,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1825,
											"end": 1831,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1825,
											"end": 1831,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1825,
											"end": 1831,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1831,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1831,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1831,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1825,
											"end": 1831,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1831,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1831,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1831,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1825,
											"end": 1831,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1842,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1825,
											"end": 1842,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1842,
											"name": "PUSH",
											"source": 9,
											"value": "88EA0751"
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 1825,
											"end": 1844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1809,
											"end": 1845,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1809,
											"end": 1845,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1858,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1876,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1876,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1876,
											"name": "PUSH",
											"source": 9,
											"value": "AA5DA046"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1169,
											"end": 1886,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1169,
											"end": 1886,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1886,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1886,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1886,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2098,
											"end": 2111,
											"name": "PUSH",
											"source": 9,
											"value": "E8D4A51000"
										},
										{
											"begin": 2091,
											"end": 2111,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2111,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2118,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4135,
											"end": 4138,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4151,
											"end": 4161,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4189,
											"end": 4190,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "PUSH",
											"source": 9,
											"value": "FEAF968C"
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 4167,
											"end": 4209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 4167,
											"end": 4209,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4149,
											"end": 4209,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4149,
											"end": 4209,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4149,
											"end": 4209,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4149,
											"end": 4209,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4149,
											"end": 4209,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4149,
											"end": 4209,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4232,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4219,
											"end": 4232,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4219,
											"end": 4232,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4219,
											"end": 4232,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4084,
											"end": 4239,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4084,
											"end": 4239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3696,
											"end": 3799,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 3696,
											"end": 3799,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3750,
											"end": 3757,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3775,
											"end": 3792,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3775,
											"end": 3792,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3768,
											"end": 3792,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3768,
											"end": 3792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3696,
											"end": 3799,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3696,
											"end": 3799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 641,
											"end": 661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 641,
											"end": 661,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 641,
											"end": 661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 641,
											"end": 661,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 641,
											"end": 661,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 641,
											"end": 661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2270,
											"end": 3599,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 2270,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2372,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2395,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2398,
											"end": 2404,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 2398,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 2398,
											"end": 2404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2398,
											"end": 2404,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 2398,
											"end": 2404,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2384,
											"end": 2404,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2384,
											"end": 2404,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 408,
											"end": 409,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2418,
											"end": 2446,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2418,
											"end": 2446,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2418,
											"end": 2430,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2418,
											"end": 2446,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2414,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 2414,
											"end": 3569,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2458,
											"end": 2484,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2524,
											"end": 2527,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2502,
											"end": 2523,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 444,
											"end": 447,
											"name": "PUSH",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 2487,
											"end": 2523,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2487,
											"end": 2523,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2487,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 2487,
											"end": 2523,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2487,
											"end": 2523,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2487,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 2487,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2487,
											"end": 2523,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 2487,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2487,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 2487,
											"end": 2527,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2487,
											"end": 2527,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2487,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 2487,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2487,
											"end": 2527,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 2487,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2458,
											"end": 2527,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2458,
											"end": 2527,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2578,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2545,
											"end": 2578,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2637,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2637,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 2541,
											"end": 2637,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2605,
											"end": 2626,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2605,
											"end": 2626,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2605,
											"end": 2626,
											"name": "PUSH",
											"source": 9,
											"value": "F244866F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2605,
											"end": 2626,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2605,
											"end": 2626,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2605,
											"end": 2626,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2605,
											"end": 2626,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2605,
											"end": 2626,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2605,
											"end": 2626,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2605,
											"end": 2626,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2605,
											"end": 2626,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2605,
											"end": 2626,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2605,
											"end": 2626,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2605,
											"end": 2626,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2637,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 2541,
											"end": 2637,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2648,
											"end": 2662,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2677,
											"end": 2698,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2665,
											"end": 2674,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2665,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 2665,
											"end": 2698,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2665,
											"end": 2698,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2665,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 2665,
											"end": 2698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2665,
											"end": 2698,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 2665,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2648,
											"end": 2698,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2648,
											"end": 2698,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2819,
											"end": 2826,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2855,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2861,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2842,
											"end": 2861,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2869,
											"end": 2890,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 2842,
											"end": 2895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2818,
											"end": 2895,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2818,
											"end": 2895,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2818,
											"end": 2895,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2910,
											"end": 2912,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 2905,
											"end": 2968,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2933,
											"end": 2957,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 2957,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2933,
											"end": 2957,
											"name": "PUSH",
											"source": 9,
											"value": "AB1EE9BF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2933,
											"end": 2957,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2933,
											"end": 2957,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2933,
											"end": 2957,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2933,
											"end": 2957,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2933,
											"end": 2957,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 2957,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2933,
											"end": 2957,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2933,
											"end": 2957,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2933,
											"end": 2957,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2933,
											"end": 2957,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2933,
											"end": 2957,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2968,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 2905,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2706,
											"end": 2976,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3061,
											"end": 3062,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3037,
											"end": 3058,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3013,
											"end": 3034,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3013,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 3013,
											"end": 3058,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3013,
											"end": 3058,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3013,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 3013,
											"end": 3058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3013,
											"end": 3058,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 3013,
											"end": 3058,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3013,
											"end": 3062,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3009,
											"end": 3298,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3009,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 3009,
											"end": 3298,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3075,
											"end": 3082,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3106,
											"end": 3112,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3106,
											"end": 3112,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3106,
											"end": 3112,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3112,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3112,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3112,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3106,
											"end": 3112,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3112,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3112,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3112,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3106,
											"end": 3112,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3134,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3106,
											"end": 3134,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3134,
											"name": "PUSH",
											"source": 9,
											"value": "7ABC3964"
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 3106,
											"end": 3136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 3106,
											"end": 3136,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3142,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3098,
											"end": 3142,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3174,
											"end": 3195,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3150,
											"end": 3171,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3150,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 3150,
											"end": 3195,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3150,
											"end": 3195,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3150,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 3150,
											"end": 3195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3150,
											"end": 3195,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 3150,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 3098,
											"end": 3200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3200,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3074,
											"end": 3200,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3074,
											"end": 3200,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3074,
											"end": 3200,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3215,
											"end": 3217,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3210,
											"end": 3290,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 3210,
											"end": 3290,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3238,
											"end": 3279,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3238,
											"end": 3279,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3238,
											"end": 3279,
											"name": "PUSH",
											"source": 9,
											"value": "204633A400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3238,
											"end": 3279,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3238,
											"end": 3279,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3238,
											"end": 3279,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3238,
											"end": 3279,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3238,
											"end": 3279,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3238,
											"end": 3279,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3238,
											"end": 3279,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3238,
											"end": 3279,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3238,
											"end": 3279,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3238,
											"end": 3279,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3238,
											"end": 3279,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3210,
											"end": 3290,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 3210,
											"end": 3290,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3064,
											"end": 3298,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3009,
											"end": 3298,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 3009,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3322,
											"end": 3323,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3310,
											"end": 3319,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3323,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3306,
											"end": 3558,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3306,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 3306,
											"end": 3558,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3395,
											"end": 3402,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3426,
											"end": 3436,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3442,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3418,
											"end": 3442,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3450,
											"end": 3459,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 3418,
											"end": 3464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3464,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3464,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3464,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3464,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3479,
											"end": 3481,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3474,
											"end": 3550,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 3474,
											"end": 3550,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3502,
											"end": 3539,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3502,
											"end": 3539,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3502,
											"end": 3539,
											"name": "PUSH",
											"source": 9,
											"value": "CD57D4DA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3502,
											"end": 3539,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3502,
											"end": 3539,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3502,
											"end": 3539,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3502,
											"end": 3539,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3502,
											"end": 3539,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3502,
											"end": 3539,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3502,
											"end": 3539,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3502,
											"end": 3539,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3502,
											"end": 3539,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3502,
											"end": 3539,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3502,
											"end": 3539,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3474,
											"end": 3550,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 3474,
											"end": 3550,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3558,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3306,
											"end": 3558,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 3306,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2448,
											"end": 3569,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2448,
											"end": 3569,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2414,
											"end": 3569,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 2414,
											"end": 3569,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2373,
											"end": 3599,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2270,
											"end": 3599,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2270,
											"end": 3599,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2270,
											"end": 3599,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2270,
											"end": 3599,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2270,
											"end": 3599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3805,
											"end": 3902,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 3805,
											"end": 3902,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3844,
											"end": 3849,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3880,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3874,
											"end": 3880,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3880,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3880,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3880,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3880,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3874,
											"end": 3880,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3880,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3880,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3880,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3874,
											"end": 3880,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "PUSH",
											"source": 9,
											"value": "9CCC903D"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 3874,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3861,
											"end": 3895,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3861,
											"end": 3895,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3805,
											"end": 3902,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3805,
											"end": 3902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "160"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 16,
											"value": "170"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 16,
											"value": "171"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 16,
											"value": "172"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 16,
											"value": "173"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "252"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "172"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 16,
											"value": "252"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "253"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 16,
											"value": "253"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 16,
											"value": "174"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "255"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "173"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 16,
											"value": "255"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 16,
											"value": "18"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "257"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "258"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "170"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 16,
											"value": "258"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 16,
											"value": "257"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "174"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1025,
											"end": 1133,
											"name": "tag",
											"source": 16,
											"value": "175"
										},
										{
											"begin": 1025,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1102,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "261"
										},
										{
											"begin": 1120,
											"end": 1125,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1102,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "172"
										},
										{
											"begin": 1102,
											"end": 1126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1102,
											"end": 1126,
											"name": "tag",
											"source": 16,
											"value": "261"
										},
										{
											"begin": 1102,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1097,
											"end": 1100,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1090,
											"end": 1127,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1025,
											"end": 1133,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1025,
											"end": 1133,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1025,
											"end": 1133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1139,
											"end": 1265,
											"name": "tag",
											"source": 16,
											"value": "176"
										},
										{
											"begin": 1139,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1176,
											"end": 1183,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1216,
											"end": 1258,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1209,
											"end": 1214,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1205,
											"end": 1259,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1194,
											"end": 1259,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1194,
											"end": 1259,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1139,
											"end": 1265,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1139,
											"end": 1265,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1139,
											"end": 1265,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1139,
											"end": 1265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1271,
											"end": 1367,
											"name": "tag",
											"source": 16,
											"value": "177"
										},
										{
											"begin": 1271,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1308,
											"end": 1315,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1337,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "264"
										},
										{
											"begin": 1355,
											"end": 1360,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1337,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "176"
										},
										{
											"begin": 1337,
											"end": 1361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1337,
											"end": 1361,
											"name": "tag",
											"source": 16,
											"value": "264"
										},
										{
											"begin": 1337,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1326,
											"end": 1361,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1326,
											"end": 1361,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1271,
											"end": 1367,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1271,
											"end": 1367,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1271,
											"end": 1367,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1271,
											"end": 1367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "tag",
											"source": 16,
											"value": "178"
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1450,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "266"
										},
										{
											"begin": 1468,
											"end": 1473,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1450,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "177"
										},
										{
											"begin": 1450,
											"end": 1474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1450,
											"end": 1474,
											"name": "tag",
											"source": 16,
											"value": "266"
										},
										{
											"begin": 1450,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1445,
											"end": 1448,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1438,
											"end": 1475,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1373,
											"end": 1481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1487,
											"end": 1586,
											"name": "tag",
											"source": 16,
											"value": "179"
										},
										{
											"begin": 1487,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1539,
											"end": 1545,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1578,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1567,
											"end": 1579,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1557,
											"end": 1579,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1557,
											"end": 1579,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1487,
											"end": 1586,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1487,
											"end": 1586,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1487,
											"end": 1586,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1487,
											"end": 1586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1592,
											"end": 1751,
											"name": "tag",
											"source": 16,
											"value": "180"
										},
										{
											"begin": 1592,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1666,
											"end": 1677,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1700,
											"end": 1706,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1695,
											"end": 1698,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1740,
											"end": 1744,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1735,
											"end": 1738,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1731,
											"end": 1745,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1716,
											"end": 1745,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1716,
											"end": 1745,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1592,
											"end": 1751,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1592,
											"end": 1751,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1592,
											"end": 1751,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1592,
											"end": 1751,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1592,
											"end": 1751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1757,
											"end": 2003,
											"name": "tag",
											"source": 16,
											"value": "181"
										},
										{
											"begin": 1757,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1838,
											"end": 1839,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1848,
											"end": 1961,
											"name": "tag",
											"source": 16,
											"value": "270"
										},
										{
											"begin": 1848,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1862,
											"end": 1868,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1859,
											"end": 1860,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1856,
											"end": 1869,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 1848,
											"end": 1961,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1848,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "272"
										},
										{
											"begin": 1848,
											"end": 1961,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1947,
											"end": 1948,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1942,
											"end": 1945,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1938,
											"end": 1949,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1932,
											"end": 1950,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1923,
											"end": 1926,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1919,
											"end": 1930,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1912,
											"end": 1951,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1884,
											"end": 1886,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1881,
											"end": 1882,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1877,
											"end": 1887,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1872,
											"end": 1887,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1872,
											"end": 1887,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1848,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "270"
										},
										{
											"begin": 1848,
											"end": 1961,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1848,
											"end": 1961,
											"name": "tag",
											"source": 16,
											"value": "272"
										},
										{
											"begin": 1848,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1995,
											"end": 1996,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1986,
											"end": 1992,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1981,
											"end": 1984,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1977,
											"end": 1993,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1970,
											"end": 1997,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1819,
											"end": 2003,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1757,
											"end": 2003,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1757,
											"end": 2003,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1757,
											"end": 2003,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1757,
											"end": 2003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2009,
											"end": 2111,
											"name": "tag",
											"source": 16,
											"value": "182"
										},
										{
											"begin": 2009,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2050,
											"end": 2056,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2101,
											"end": 2103,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 2097,
											"end": 2104,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 2092,
											"end": 2094,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 2085,
											"end": 2090,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2081,
											"end": 2095,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2077,
											"end": 2105,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2067,
											"end": 2105,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2067,
											"end": 2105,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2009,
											"end": 2111,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2009,
											"end": 2111,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2009,
											"end": 2111,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2009,
											"end": 2111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2117,
											"end": 2474,
											"name": "tag",
											"source": 16,
											"value": "183"
										},
										{
											"begin": 2117,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2195,
											"end": 2198,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2223,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "275"
										},
										{
											"begin": 2256,
											"end": 2261,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2223,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "179"
										},
										{
											"begin": 2223,
											"end": 2262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2223,
											"end": 2262,
											"name": "tag",
											"source": 16,
											"value": "275"
										},
										{
											"begin": 2223,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2278,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "276"
										},
										{
											"begin": 2332,
											"end": 2338,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2327,
											"end": 2330,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2278,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "180"
										},
										{
											"begin": 2278,
											"end": 2339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2278,
											"end": 2339,
											"name": "tag",
											"source": 16,
											"value": "276"
										},
										{
											"begin": 2278,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2271,
											"end": 2339,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 2271,
											"end": 2339,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2348,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "277"
										},
										{
											"begin": 2406,
											"end": 2412,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2401,
											"end": 2404,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2394,
											"end": 2398,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2387,
											"end": 2392,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 2383,
											"end": 2399,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2348,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "181"
										},
										{
											"begin": 2348,
											"end": 2413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2348,
											"end": 2413,
											"name": "tag",
											"source": 16,
											"value": "277"
										},
										{
											"begin": 2348,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2438,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "278"
										},
										{
											"begin": 2460,
											"end": 2466,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2438,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "182"
										},
										{
											"begin": 2438,
											"end": 2467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2438,
											"end": 2467,
											"name": "tag",
											"source": 16,
											"value": "278"
										},
										{
											"begin": 2438,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2433,
											"end": 2436,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2429,
											"end": 2468,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2422,
											"end": 2468,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2422,
											"end": 2468,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2199,
											"end": 2474,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2117,
											"end": 2474,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2117,
											"end": 2474,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2117,
											"end": 2474,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2117,
											"end": 2474,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2117,
											"end": 2474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2524,
											"end": 4775,
											"name": "tag",
											"source": 16,
											"value": "184"
										},
										{
											"begin": 2524,
											"end": 4775,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2645,
											"end": 2648,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2681,
											"end": 2687,
											"name": "PUSH",
											"source": 16,
											"value": "160"
										},
										{
											"begin": 2676,
											"end": 2679,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2672,
											"end": 2688,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2779,
											"end": 2783,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2772,
											"end": 2777,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2768,
											"end": 2784,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2762,
											"end": 2785,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2798,
											"end": 2861,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "280"
										},
										{
											"begin": 2855,
											"end": 2859,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2853,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 2846,
											"end": 2860,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2798,
											"end": 2861,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "175"
										},
										{
											"begin": 2798,
											"end": 2861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2798,
											"end": 2861,
											"name": "tag",
											"source": 16,
											"value": "280"
										},
										{
											"begin": 2798,
											"end": 2861,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2698,
											"end": 2871,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2965,
											"end": 2969,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2958,
											"end": 2963,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2954,
											"end": 2970,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2948,
											"end": 2971,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2984,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "281"
										},
										{
											"begin": 3041,
											"end": 3045,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3036,
											"end": 3039,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3032,
											"end": 3046,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2984,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "175"
										},
										{
											"begin": 2984,
											"end": 3047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2984,
											"end": 3047,
											"name": "tag",
											"source": 16,
											"value": "281"
										},
										{
											"begin": 2984,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2881,
											"end": 3057,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3140,
											"end": 3144,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3133,
											"end": 3138,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3123,
											"end": 3146,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3159,
											"end": 3222,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "282"
										},
										{
											"begin": 3216,
											"end": 3220,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3211,
											"end": 3214,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3207,
											"end": 3221,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3193,
											"end": 3205,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3159,
											"end": 3222,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "175"
										},
										{
											"begin": 3159,
											"end": 3222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3159,
											"end": 3222,
											"name": "tag",
											"source": 16,
											"value": "282"
										},
										{
											"begin": 3159,
											"end": 3222,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3067,
											"end": 3232,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3316,
											"end": 3320,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 3309,
											"end": 3314,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3305,
											"end": 3321,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3335,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "283"
										},
										{
											"begin": 3392,
											"end": 3396,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 3387,
											"end": 3390,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3383,
											"end": 3397,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3369,
											"end": 3381,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3335,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "175"
										},
										{
											"begin": 3335,
											"end": 3398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3335,
											"end": 3398,
											"name": "tag",
											"source": 16,
											"value": "283"
										},
										{
											"begin": 3335,
											"end": 3398,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3242,
											"end": 3408,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3492,
											"end": 3496,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 3485,
											"end": 3490,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3481,
											"end": 3497,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3475,
											"end": 3498,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3511,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "284"
										},
										{
											"begin": 3568,
											"end": 3572,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 3563,
											"end": 3566,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3559,
											"end": 3573,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3545,
											"end": 3557,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3511,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "178"
										},
										{
											"begin": 3511,
											"end": 3574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3511,
											"end": 3574,
											"name": "tag",
											"source": 16,
											"value": "284"
										},
										{
											"begin": 3511,
											"end": 3574,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3418,
											"end": 3584,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3668,
											"end": 3672,
											"name": "PUSH",
											"source": 16,
											"value": "A0"
										},
										{
											"begin": 3661,
											"end": 3666,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3657,
											"end": 3673,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3651,
											"end": 3674,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3687,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "285"
										},
										{
											"begin": 3744,
											"end": 3748,
											"name": "PUSH",
											"source": 16,
											"value": "A0"
										},
										{
											"begin": 3739,
											"end": 3742,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3735,
											"end": 3749,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3721,
											"end": 3733,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3687,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "178"
										},
										{
											"begin": 3687,
											"end": 3750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3687,
											"end": 3750,
											"name": "tag",
											"source": 16,
											"value": "285"
										},
										{
											"begin": 3687,
											"end": 3750,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3594,
											"end": 3760,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3847,
											"end": 3851,
											"name": "PUSH",
											"source": 16,
											"value": "C0"
										},
										{
											"begin": 3840,
											"end": 3845,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3836,
											"end": 3852,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3830,
											"end": 3853,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3866,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "286"
										},
										{
											"begin": 3923,
											"end": 3927,
											"name": "PUSH",
											"source": 16,
											"value": "C0"
										},
										{
											"begin": 3918,
											"end": 3921,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3914,
											"end": 3928,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3900,
											"end": 3912,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3866,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "175"
										},
										{
											"begin": 3866,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3866,
											"end": 3929,
											"name": "tag",
											"source": 16,
											"value": "286"
										},
										{
											"begin": 3866,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3770,
											"end": 3939,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4026,
											"end": 4030,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 4019,
											"end": 4024,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4015,
											"end": 4031,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4009,
											"end": 4032,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4045,
											"end": 4108,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "287"
										},
										{
											"begin": 4102,
											"end": 4106,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 4097,
											"end": 4100,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 4093,
											"end": 4107,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4079,
											"end": 4091,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4045,
											"end": 4108,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "175"
										},
										{
											"begin": 4045,
											"end": 4108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4045,
											"end": 4108,
											"name": "tag",
											"source": 16,
											"value": "287"
										},
										{
											"begin": 4045,
											"end": 4108,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3949,
											"end": 4118,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4211,
											"end": 4217,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 4204,
											"end": 4209,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4200,
											"end": 4218,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4194,
											"end": 4219,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4232,
											"end": 4297,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "288"
										},
										{
											"begin": 4289,
											"end": 4295,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 4284,
											"end": 4287,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 4280,
											"end": 4296,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4266,
											"end": 4278,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4232,
											"end": 4297,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "175"
										},
										{
											"begin": 4232,
											"end": 4297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4232,
											"end": 4297,
											"name": "tag",
											"source": 16,
											"value": "288"
										},
										{
											"begin": 4232,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4128,
											"end": 4307,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4400,
											"end": 4406,
											"name": "PUSH",
											"source": 16,
											"value": "120"
										},
										{
											"begin": 4393,
											"end": 4398,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4383,
											"end": 4408,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4421,
											"end": 4486,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "289"
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 16,
											"value": "120"
										},
										{
											"begin": 4473,
											"end": 4476,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 4469,
											"end": 4485,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4455,
											"end": 4467,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4421,
											"end": 4486,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "175"
										},
										{
											"begin": 4421,
											"end": 4486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4421,
											"end": 4486,
											"name": "tag",
											"source": 16,
											"value": "289"
										},
										{
											"begin": 4421,
											"end": 4486,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4317,
											"end": 4496,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4581,
											"end": 4587,
											"name": "PUSH",
											"source": 16,
											"value": "140"
										},
										{
											"begin": 4574,
											"end": 4579,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4570,
											"end": 4588,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4564,
											"end": 4589,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4638,
											"end": 4641,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4632,
											"end": 4636,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4628,
											"end": 4642,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4619,
											"end": 4625,
											"name": "PUSH",
											"source": 16,
											"value": "140"
										},
										{
											"begin": 4614,
											"end": 4617,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 4610,
											"end": 4626,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4603,
											"end": 4643,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4664,
											"end": 4737,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "290"
										},
										{
											"begin": 4732,
											"end": 4736,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4718,
											"end": 4730,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4664,
											"end": 4737,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "183"
										},
										{
											"begin": 4664,
											"end": 4737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4664,
											"end": 4737,
											"name": "tag",
											"source": 16,
											"value": "290"
										},
										{
											"begin": 4664,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4656,
											"end": 4737,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4656,
											"end": 4737,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4506,
											"end": 4748,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4765,
											"end": 4769,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4758,
											"end": 4769,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4758,
											"end": 4769,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2650,
											"end": 4775,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2524,
											"end": 4775,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2524,
											"end": 4775,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2524,
											"end": 4775,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2524,
											"end": 4775,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2524,
											"end": 4775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4781,
											"end": 5158,
											"name": "tag",
											"source": 16,
											"value": "21"
										},
										{
											"begin": 4781,
											"end": 5158,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4926,
											"end": 4930,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4964,
											"end": 4966,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4953,
											"end": 4962,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4941,
											"end": 4967,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4941,
											"end": 4967,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5013,
											"end": 5022,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5007,
											"end": 5011,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5003,
											"end": 5023,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4999,
											"end": 5000,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4988,
											"end": 4997,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4984,
											"end": 5001,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4977,
											"end": 5024,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5041,
											"end": 5151,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "292"
										},
										{
											"begin": 5146,
											"end": 5150,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5137,
											"end": 5143,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5041,
											"end": 5151,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "184"
										},
										{
											"begin": 5041,
											"end": 5151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5041,
											"end": 5151,
											"name": "tag",
											"source": 16,
											"value": "292"
										},
										{
											"begin": 5041,
											"end": 5151,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5033,
											"end": 5151,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5033,
											"end": 5151,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4781,
											"end": 5158,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4781,
											"end": 5158,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4781,
											"end": 5158,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4781,
											"end": 5158,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4781,
											"end": 5158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5164,
											"end": 5282,
											"name": "tag",
											"source": 16,
											"value": "185"
										},
										{
											"begin": 5164,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5251,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "294"
										},
										{
											"begin": 5269,
											"end": 5274,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5251,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "172"
										},
										{
											"begin": 5251,
											"end": 5275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5251,
											"end": 5275,
											"name": "tag",
											"source": 16,
											"value": "294"
										},
										{
											"begin": 5251,
											"end": 5275,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5246,
											"end": 5249,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5239,
											"end": 5276,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5164,
											"end": 5282,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5164,
											"end": 5282,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5164,
											"end": 5282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5288,
											"end": 5510,
											"name": "tag",
											"source": 16,
											"value": "26"
										},
										{
											"begin": 5288,
											"end": 5510,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5381,
											"end": 5385,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5419,
											"end": 5421,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5408,
											"end": 5417,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5404,
											"end": 5422,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5396,
											"end": 5422,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5396,
											"end": 5422,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5432,
											"end": 5503,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "296"
										},
										{
											"begin": 5500,
											"end": 5501,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5489,
											"end": 5498,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5485,
											"end": 5502,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5476,
											"end": 5482,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5432,
											"end": 5503,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "185"
										},
										{
											"begin": 5432,
											"end": 5503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5432,
											"end": 5503,
											"name": "tag",
											"source": 16,
											"value": "296"
										},
										{
											"begin": 5432,
											"end": 5503,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5288,
											"end": 5510,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5288,
											"end": 5510,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5288,
											"end": 5510,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5288,
											"end": 5510,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5288,
											"end": 5510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5516,
											"end": 5638,
											"name": "tag",
											"source": 16,
											"value": "186"
										},
										{
											"begin": 5516,
											"end": 5638,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5589,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "298"
										},
										{
											"begin": 5607,
											"end": 5612,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5589,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "177"
										},
										{
											"begin": 5589,
											"end": 5613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5589,
											"end": 5613,
											"name": "tag",
											"source": 16,
											"value": "298"
										},
										{
											"begin": 5589,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5582,
											"end": 5587,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 5569,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "299"
										},
										{
											"begin": 5569,
											"end": 5632,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5628,
											"end": 5629,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5625,
											"end": 5626,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5618,
											"end": 5630,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5569,
											"end": 5632,
											"name": "tag",
											"source": 16,
											"value": "299"
										},
										{
											"begin": 5569,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5516,
											"end": 5638,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5516,
											"end": 5638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5644,
											"end": 5783,
											"name": "tag",
											"source": 16,
											"value": "187"
										},
										{
											"begin": 5644,
											"end": 5783,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5690,
											"end": 5695,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5715,
											"end": 5735,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 5706,
											"end": 5735,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5706,
											"end": 5735,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5744,
											"end": 5777,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "301"
										},
										{
											"begin": 5771,
											"end": 5776,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5744,
											"end": 5777,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "186"
										},
										{
											"begin": 5744,
											"end": 5777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5744,
											"end": 5777,
											"name": "tag",
											"source": 16,
											"value": "301"
										},
										{
											"begin": 5744,
											"end": 5777,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5644,
											"end": 5783,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5644,
											"end": 5783,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5644,
											"end": 5783,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5644,
											"end": 5783,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5644,
											"end": 5783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5789,
											"end": 6118,
											"name": "tag",
											"source": 16,
											"value": "30"
										},
										{
											"begin": 5789,
											"end": 6118,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5848,
											"end": 5854,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5897,
											"end": 5899,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5885,
											"end": 5894,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5876,
											"end": 5883,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5872,
											"end": 5895,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 5868,
											"end": 5900,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 5865,
											"end": 5984,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5865,
											"end": 5984,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "303"
										},
										{
											"begin": 5865,
											"end": 5984,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5903,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 5903,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "170"
										},
										{
											"begin": 5903,
											"end": 5982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5903,
											"end": 5982,
											"name": "tag",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 5903,
											"end": 5982,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5865,
											"end": 5984,
											"name": "tag",
											"source": 16,
											"value": "303"
										},
										{
											"begin": 5865,
											"end": 5984,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6023,
											"end": 6024,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6048,
											"end": 6101,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "305"
										},
										{
											"begin": 6093,
											"end": 6100,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6084,
											"end": 6090,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6073,
											"end": 6082,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 6069,
											"end": 6091,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6048,
											"end": 6101,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "187"
										},
										{
											"begin": 6048,
											"end": 6101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6048,
											"end": 6101,
											"name": "tag",
											"source": 16,
											"value": "305"
										},
										{
											"begin": 6048,
											"end": 6101,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6038,
											"end": 6101,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6038,
											"end": 6101,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5994,
											"end": 6111,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5789,
											"end": 6118,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5789,
											"end": 6118,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5789,
											"end": 6118,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5789,
											"end": 6118,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5789,
											"end": 6118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6124,
											"end": 6242,
											"name": "tag",
											"source": 16,
											"value": "188"
										},
										{
											"begin": 6124,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6211,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "307"
										},
										{
											"begin": 6229,
											"end": 6234,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6211,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "176"
										},
										{
											"begin": 6211,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6211,
											"end": 6235,
											"name": "tag",
											"source": 16,
											"value": "307"
										},
										{
											"begin": 6211,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6206,
											"end": 6209,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6199,
											"end": 6236,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6124,
											"end": 6242,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6124,
											"end": 6242,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6124,
											"end": 6242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6248,
											"end": 6470,
											"name": "tag",
											"source": 16,
											"value": "33"
										},
										{
											"begin": 6248,
											"end": 6470,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6341,
											"end": 6345,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6379,
											"end": 6381,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6368,
											"end": 6377,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6364,
											"end": 6382,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6356,
											"end": 6382,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6356,
											"end": 6382,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6392,
											"end": 6463,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "309"
										},
										{
											"begin": 6460,
											"end": 6461,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6449,
											"end": 6458,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6445,
											"end": 6462,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6436,
											"end": 6442,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6392,
											"end": 6463,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "188"
										},
										{
											"begin": 6392,
											"end": 6463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6392,
											"end": 6463,
											"name": "tag",
											"source": 16,
											"value": "309"
										},
										{
											"begin": 6392,
											"end": 6463,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6248,
											"end": 6470,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6248,
											"end": 6470,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6248,
											"end": 6470,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6248,
											"end": 6470,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6248,
											"end": 6470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6476,
											"end": 6536,
											"name": "tag",
											"source": 16,
											"value": "189"
										},
										{
											"begin": 6476,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6504,
											"end": 6507,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6525,
											"end": 6530,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6518,
											"end": 6530,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6518,
											"end": 6530,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6476,
											"end": 6536,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6476,
											"end": 6536,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6476,
											"end": 6536,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6476,
											"end": 6536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6542,
											"end": 6684,
											"name": "tag",
											"source": 16,
											"value": "190"
										},
										{
											"begin": 6542,
											"end": 6684,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6592,
											"end": 6601,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6625,
											"end": 6678,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "312"
										},
										{
											"begin": 6643,
											"end": 6677,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "313"
										},
										{
											"begin": 6652,
											"end": 6676,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "314"
										},
										{
											"begin": 6670,
											"end": 6675,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6652,
											"end": 6676,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "176"
										},
										{
											"begin": 6652,
											"end": 6676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6652,
											"end": 6676,
											"name": "tag",
											"source": 16,
											"value": "314"
										},
										{
											"begin": 6652,
											"end": 6676,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6643,
											"end": 6677,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "189"
										},
										{
											"begin": 6643,
											"end": 6677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6643,
											"end": 6677,
											"name": "tag",
											"source": 16,
											"value": "313"
										},
										{
											"begin": 6643,
											"end": 6677,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6625,
											"end": 6678,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "176"
										},
										{
											"begin": 6625,
											"end": 6678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6625,
											"end": 6678,
											"name": "tag",
											"source": 16,
											"value": "312"
										},
										{
											"begin": 6625,
											"end": 6678,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6612,
											"end": 6678,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6612,
											"end": 6678,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6542,
											"end": 6684,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6542,
											"end": 6684,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6542,
											"end": 6684,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6542,
											"end": 6684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6690,
											"end": 6816,
											"name": "tag",
											"source": 16,
											"value": "191"
										},
										{
											"begin": 6690,
											"end": 6816,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6740,
											"end": 6749,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6773,
											"end": 6810,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "316"
										},
										{
											"begin": 6804,
											"end": 6809,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6773,
											"end": 6810,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "190"
										},
										{
											"begin": 6773,
											"end": 6810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6773,
											"end": 6810,
											"name": "tag",
											"source": 16,
											"value": "316"
										},
										{
											"begin": 6773,
											"end": 6810,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6760,
											"end": 6810,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6760,
											"end": 6810,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6690,
											"end": 6816,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6690,
											"end": 6816,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6690,
											"end": 6816,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6690,
											"end": 6816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6822,
											"end": 6966,
											"name": "tag",
											"source": 16,
											"value": "192"
										},
										{
											"begin": 6822,
											"end": 6966,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6890,
											"end": 6899,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6923,
											"end": 6960,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "318"
										},
										{
											"begin": 6954,
											"end": 6959,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6923,
											"end": 6960,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "191"
										},
										{
											"begin": 6923,
											"end": 6960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6923,
											"end": 6960,
											"name": "tag",
											"source": 16,
											"value": "318"
										},
										{
											"begin": 6923,
											"end": 6960,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6910,
											"end": 6960,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6910,
											"end": 6960,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6822,
											"end": 6966,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6822,
											"end": 6966,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6822,
											"end": 6966,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6822,
											"end": 6966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6972,
											"end": 7139,
											"name": "tag",
											"source": 16,
											"value": "193"
										},
										{
											"begin": 6972,
											"end": 7139,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7077,
											"end": 7132,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "320"
										},
										{
											"begin": 7126,
											"end": 7131,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7077,
											"end": 7132,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "192"
										},
										{
											"begin": 7077,
											"end": 7132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7077,
											"end": 7132,
											"name": "tag",
											"source": 16,
											"value": "320"
										},
										{
											"begin": 7077,
											"end": 7132,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7072,
											"end": 7075,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7065,
											"end": 7133,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6972,
											"end": 7139,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6972,
											"end": 7139,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6972,
											"end": 7139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7145,
											"end": 7403,
											"name": "tag",
											"source": 16,
											"value": "38"
										},
										{
											"begin": 7145,
											"end": 7403,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7256,
											"end": 7260,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7283,
											"end": 7292,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7279,
											"end": 7297,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7271,
											"end": 7297,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7271,
											"end": 7297,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7307,
											"end": 7396,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "322"
										},
										{
											"begin": 7393,
											"end": 7394,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7382,
											"end": 7391,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 7378,
											"end": 7395,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7369,
											"end": 7375,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 7307,
											"end": 7396,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "193"
										},
										{
											"begin": 7307,
											"end": 7396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7307,
											"end": 7396,
											"name": "tag",
											"source": 16,
											"value": "322"
										},
										{
											"begin": 7307,
											"end": 7396,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7145,
											"end": 7403,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 7145,
											"end": 7403,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7145,
											"end": 7403,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7145,
											"end": 7403,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7145,
											"end": 7403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7409,
											"end": 7526,
											"name": "tag",
											"source": 16,
											"value": "194"
										},
										{
											"begin": 7409,
											"end": 7526,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7518,
											"end": 7519,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7515,
											"end": 7516,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7508,
											"end": 7520,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 7561,
											"end": 7799,
											"name": "tag",
											"source": 16,
											"value": "195"
										},
										{
											"begin": 7561,
											"end": 7799,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7640,
											"end": 7645,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7681,
											"end": 7684,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 7672,
											"end": 7678,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7667,
											"end": 7670,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 7663,
											"end": 7679,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 7659,
											"end": 7685,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 7656,
											"end": 7769,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7656,
											"end": 7769,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "325"
										},
										{
											"begin": 7656,
											"end": 7769,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7688,
											"end": 7767,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "326"
										},
										{
											"begin": 7688,
											"end": 7767,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "194"
										},
										{
											"begin": 7688,
											"end": 7767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7688,
											"end": 7767,
											"name": "tag",
											"source": 16,
											"value": "326"
										},
										{
											"begin": 7688,
											"end": 7767,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7656,
											"end": 7769,
											"name": "tag",
											"source": 16,
											"value": "325"
										},
										{
											"begin": 7656,
											"end": 7769,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7787,
											"end": 7793,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7778,
											"end": 7793,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7778,
											"end": 7793,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7561,
											"end": 7799,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 7561,
											"end": 7799,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7561,
											"end": 7799,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7561,
											"end": 7799,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7561,
											"end": 7799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7805,
											"end": 8360,
											"name": "tag",
											"source": 16,
											"value": "46"
										},
										{
											"begin": 7805,
											"end": 8360,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7897,
											"end": 7903,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7946,
											"end": 7948,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7934,
											"end": 7943,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7925,
											"end": 7932,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 7921,
											"end": 7944,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 7917,
											"end": 7949,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 7914,
											"end": 8033,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7914,
											"end": 8033,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "328"
										},
										{
											"begin": 7914,
											"end": 8033,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7952,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "329"
										},
										{
											"begin": 7952,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "170"
										},
										{
											"begin": 7952,
											"end": 8031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7952,
											"end": 8031,
											"name": "tag",
											"source": 16,
											"value": "329"
										},
										{
											"begin": 7952,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7914,
											"end": 8033,
											"name": "tag",
											"source": 16,
											"value": "328"
										},
										{
											"begin": 7914,
											"end": 8033,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8100,
											"end": 8101,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8089,
											"end": 8098,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8085,
											"end": 8102,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8072,
											"end": 8103,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 8130,
											"end": 8148,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8122,
											"end": 8128,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8119,
											"end": 8149,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 8116,
											"end": 8233,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8116,
											"end": 8233,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "330"
										},
										{
											"begin": 8116,
											"end": 8233,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 8152,
											"end": 8231,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "331"
										},
										{
											"begin": 8152,
											"end": 8231,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "171"
										},
										{
											"begin": 8152,
											"end": 8231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8152,
											"end": 8231,
											"name": "tag",
											"source": 16,
											"value": "331"
										},
										{
											"begin": 8152,
											"end": 8231,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8116,
											"end": 8233,
											"name": "tag",
											"source": 16,
											"value": "330"
										},
										{
											"begin": 8116,
											"end": 8233,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8257,
											"end": 8343,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "332"
										},
										{
											"begin": 8335,
											"end": 8342,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8326,
											"end": 8332,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8315,
											"end": 8324,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 8311,
											"end": 8333,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8257,
											"end": 8343,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "195"
										},
										{
											"begin": 8257,
											"end": 8343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8257,
											"end": 8343,
											"name": "tag",
											"source": 16,
											"value": "332"
										},
										{
											"begin": 8257,
											"end": 8343,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8247,
											"end": 8343,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8247,
											"end": 8343,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8043,
											"end": 8353,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7805,
											"end": 8360,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 7805,
											"end": 8360,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7805,
											"end": 8360,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7805,
											"end": 8360,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7805,
											"end": 8360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8366,
											"end": 8442,
											"name": "tag",
											"source": 16,
											"value": "196"
										},
										{
											"begin": 8366,
											"end": 8442,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8402,
											"end": 8409,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8431,
											"end": 8436,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8420,
											"end": 8436,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8420,
											"end": 8436,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8366,
											"end": 8442,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8366,
											"end": 8442,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8366,
											"end": 8442,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8366,
											"end": 8442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8448,
											"end": 8563,
											"name": "tag",
											"source": 16,
											"value": "197"
										},
										{
											"begin": 8448,
											"end": 8563,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8533,
											"end": 8556,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "335"
										},
										{
											"begin": 8550,
											"end": 8555,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8533,
											"end": 8556,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "196"
										},
										{
											"begin": 8533,
											"end": 8556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8533,
											"end": 8556,
											"name": "tag",
											"source": 16,
											"value": "335"
										},
										{
											"begin": 8533,
											"end": 8556,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8528,
											"end": 8531,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8521,
											"end": 8557,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8448,
											"end": 8563,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8448,
											"end": 8563,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8448,
											"end": 8563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8569,
											"end": 8787,
											"name": "tag",
											"source": 16,
											"value": "67"
										},
										{
											"begin": 8569,
											"end": 8787,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8660,
											"end": 8664,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8698,
											"end": 8700,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8687,
											"end": 8696,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8683,
											"end": 8701,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8675,
											"end": 8701,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8675,
											"end": 8701,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8780,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "337"
										},
										{
											"begin": 8777,
											"end": 8778,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8766,
											"end": 8775,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8762,
											"end": 8779,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8753,
											"end": 8759,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8780,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "197"
										},
										{
											"begin": 8711,
											"end": 8780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8780,
											"name": "tag",
											"source": 16,
											"value": "337"
										},
										{
											"begin": 8711,
											"end": 8780,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8569,
											"end": 8787,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 8569,
											"end": 8787,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8569,
											"end": 8787,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8569,
											"end": 8787,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8569,
											"end": 8787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8793,
											"end": 8933,
											"name": "tag",
											"source": 16,
											"value": "198"
										},
										{
											"begin": 8793,
											"end": 8933,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8857,
											"end": 8866,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8890,
											"end": 8927,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "339"
										},
										{
											"begin": 8921,
											"end": 8926,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8890,
											"end": 8927,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "191"
										},
										{
											"begin": 8890,
											"end": 8927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8890,
											"end": 8927,
											"name": "tag",
											"source": 16,
											"value": "339"
										},
										{
											"begin": 8890,
											"end": 8927,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8877,
											"end": 8927,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8877,
											"end": 8927,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8793,
											"end": 8933,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8793,
											"end": 8933,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8793,
											"end": 8933,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8793,
											"end": 8933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8939,
											"end": 9098,
											"name": "tag",
											"source": 16,
											"value": "199"
										},
										{
											"begin": 8939,
											"end": 9098,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9040,
											"end": 9091,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "341"
										},
										{
											"begin": 9085,
											"end": 9090,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9040,
											"end": 9091,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "198"
										},
										{
											"begin": 9040,
											"end": 9091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9040,
											"end": 9091,
											"name": "tag",
											"source": 16,
											"value": "341"
										},
										{
											"begin": 9040,
											"end": 9091,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9035,
											"end": 9038,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9028,
											"end": 9092,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8939,
											"end": 9098,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8939,
											"end": 9098,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8939,
											"end": 9098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9104,
											"end": 9354,
											"name": "tag",
											"source": 16,
											"value": "76"
										},
										{
											"begin": 9104,
											"end": 9354,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9211,
											"end": 9215,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9249,
											"end": 9251,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 9238,
											"end": 9247,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9234,
											"end": 9252,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9226,
											"end": 9252,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9226,
											"end": 9252,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9262,
											"end": 9347,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "343"
										},
										{
											"begin": 9344,
											"end": 9345,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9333,
											"end": 9342,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 9329,
											"end": 9346,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9320,
											"end": 9326,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 9262,
											"end": 9347,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "199"
										},
										{
											"begin": 9262,
											"end": 9347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9262,
											"end": 9347,
											"name": "tag",
											"source": 16,
											"value": "343"
										},
										{
											"begin": 9262,
											"end": 9347,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9104,
											"end": 9354,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 9104,
											"end": 9354,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9104,
											"end": 9354,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9104,
											"end": 9354,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9104,
											"end": 9354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9360,
											"end": 9540,
											"name": "tag",
											"source": 16,
											"value": "200"
										},
										{
											"begin": 9360,
											"end": 9540,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9408,
											"end": 9485,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9405,
											"end": 9406,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9398,
											"end": 9486,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9505,
											"end": 9509,
											"name": "PUSH",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 9502,
											"end": 9503,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 9495,
											"end": 9510,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9529,
											"end": 9533,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 9526,
											"end": 9527,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9519,
											"end": 9534,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 9546,
											"end": 9866,
											"name": "tag",
											"source": 16,
											"value": "81"
										},
										{
											"begin": 9546,
											"end": 9866,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9590,
											"end": 9596,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9627,
											"end": 9628,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 9621,
											"end": 9625,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9617,
											"end": 9629,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 9607,
											"end": 9629,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9607,
											"end": 9629,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9674,
											"end": 9675,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 9668,
											"end": 9672,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9664,
											"end": 9676,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 9695,
											"end": 9713,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 9685,
											"end": 9766,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "346"
										},
										{
											"begin": 9685,
											"end": 9766,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 9751,
											"end": 9755,
											"name": "PUSH",
											"source": 16,
											"value": "7F"
										},
										{
											"begin": 9743,
											"end": 9749,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9739,
											"end": 9756,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 9729,
											"end": 9756,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9729,
											"end": 9756,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9685,
											"end": 9766,
											"name": "tag",
											"source": 16,
											"value": "346"
										},
										{
											"begin": 9685,
											"end": 9766,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9813,
											"end": 9815,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9802,
											"end": 9816,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 9782,
											"end": 9800,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9779,
											"end": 9817,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 9776,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "347"
										},
										{
											"begin": 9776,
											"end": 9860,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 9832,
											"end": 9850,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "348"
										},
										{
											"begin": 9832,
											"end": 9850,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "200"
										},
										{
											"begin": 9832,
											"end": 9850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9832,
											"end": 9850,
											"name": "tag",
											"source": 16,
											"value": "348"
										},
										{
											"begin": 9832,
											"end": 9850,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9776,
											"end": 9860,
											"name": "tag",
											"source": 16,
											"value": "347"
										},
										{
											"begin": 9776,
											"end": 9860,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9597,
											"end": 9866,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9546,
											"end": 9866,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9546,
											"end": 9866,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9546,
											"end": 9866,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9546,
											"end": 9866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9872,
											"end": 10015,
											"name": "tag",
											"source": 16,
											"value": "201"
										},
										{
											"begin": 9872,
											"end": 10015,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9929,
											"end": 9934,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9960,
											"end": 9966,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9954,
											"end": 9967,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 9945,
											"end": 9967,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9945,
											"end": 9967,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9976,
											"end": 10009,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "350"
										},
										{
											"begin": 10003,
											"end": 10008,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9976,
											"end": 10009,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "173"
										},
										{
											"begin": 9976,
											"end": 10009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9976,
											"end": 10009,
											"name": "tag",
											"source": 16,
											"value": "350"
										},
										{
											"begin": 9976,
											"end": 10009,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9872,
											"end": 10015,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 9872,
											"end": 10015,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9872,
											"end": 10015,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9872,
											"end": 10015,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9872,
											"end": 10015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10021,
											"end": 10372,
											"name": "tag",
											"source": 16,
											"value": "90"
										},
										{
											"begin": 10021,
											"end": 10372,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10091,
											"end": 10097,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10140,
											"end": 10142,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 10128,
											"end": 10137,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10119,
											"end": 10126,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 10115,
											"end": 10138,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 10111,
											"end": 10143,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 10108,
											"end": 10227,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 10108,
											"end": 10227,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "352"
										},
										{
											"begin": 10108,
											"end": 10227,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10146,
											"end": 10225,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "353"
										},
										{
											"begin": 10146,
											"end": 10225,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "170"
										},
										{
											"begin": 10146,
											"end": 10225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10146,
											"end": 10225,
											"name": "tag",
											"source": 16,
											"value": "353"
										},
										{
											"begin": 10146,
											"end": 10225,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10108,
											"end": 10227,
											"name": "tag",
											"source": 16,
											"value": "352"
										},
										{
											"begin": 10108,
											"end": 10227,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10266,
											"end": 10267,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10291,
											"end": 10355,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "354"
										},
										{
											"begin": 10347,
											"end": 10354,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 10338,
											"end": 10344,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10327,
											"end": 10336,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 10323,
											"end": 10345,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10291,
											"end": 10355,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "201"
										},
										{
											"begin": 10291,
											"end": 10355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10291,
											"end": 10355,
											"name": "tag",
											"source": 16,
											"value": "354"
										},
										{
											"begin": 10291,
											"end": 10355,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10281,
											"end": 10355,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10281,
											"end": 10355,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10237,
											"end": 10365,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10021,
											"end": 10372,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 10021,
											"end": 10372,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10021,
											"end": 10372,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10021,
											"end": 10372,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10021,
											"end": 10372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10378,
											"end": 10500,
											"name": "tag",
											"source": 16,
											"value": "202"
										},
										{
											"begin": 10378,
											"end": 10500,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10451,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "356"
										},
										{
											"begin": 10469,
											"end": 10474,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10451,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "176"
										},
										{
											"begin": 10451,
											"end": 10475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10451,
											"end": 10475,
											"name": "tag",
											"source": 16,
											"value": "356"
										},
										{
											"begin": 10451,
											"end": 10475,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10444,
											"end": 10449,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10441,
											"end": 10476,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 10431,
											"end": 10494,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "357"
										},
										{
											"begin": 10431,
											"end": 10494,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10490,
											"end": 10491,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10487,
											"end": 10488,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 10480,
											"end": 10492,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 10431,
											"end": 10494,
											"name": "tag",
											"source": 16,
											"value": "357"
										},
										{
											"begin": 10431,
											"end": 10494,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10378,
											"end": 10500,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10378,
											"end": 10500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10506,
											"end": 10649,
											"name": "tag",
											"source": 16,
											"value": "203"
										},
										{
											"begin": 10506,
											"end": 10649,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10563,
											"end": 10568,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10594,
											"end": 10600,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10588,
											"end": 10601,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 10579,
											"end": 10601,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10579,
											"end": 10601,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10610,
											"end": 10643,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "359"
										},
										{
											"begin": 10637,
											"end": 10642,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10610,
											"end": 10643,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "202"
										},
										{
											"begin": 10610,
											"end": 10643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10610,
											"end": 10643,
											"name": "tag",
											"source": 16,
											"value": "359"
										},
										{
											"begin": 10610,
											"end": 10643,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10506,
											"end": 10649,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 10506,
											"end": 10649,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10506,
											"end": 10649,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10506,
											"end": 10649,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10506,
											"end": 10649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10655,
											"end": 10745,
											"name": "tag",
											"source": 16,
											"value": "204"
										},
										{
											"begin": 10655,
											"end": 10745,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10690,
											"end": 10697,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10733,
											"end": 10738,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10730,
											"end": 10731,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 10719,
											"end": 10739,
											"name": "SIGNEXTEND",
											"source": 16
										},
										{
											"begin": 10708,
											"end": 10739,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10708,
											"end": 10739,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10655,
											"end": 10745,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10655,
											"end": 10745,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10655,
											"end": 10745,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10655,
											"end": 10745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10751,
											"end": 10869,
											"name": "tag",
											"source": 16,
											"value": "205"
										},
										{
											"begin": 10751,
											"end": 10869,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10822,
											"end": 10844,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "362"
										},
										{
											"begin": 10838,
											"end": 10843,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10822,
											"end": 10844,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "204"
										},
										{
											"begin": 10822,
											"end": 10844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10822,
											"end": 10844,
											"name": "tag",
											"source": 16,
											"value": "362"
										},
										{
											"begin": 10822,
											"end": 10844,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10815,
											"end": 10820,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10812,
											"end": 10845,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 10802,
											"end": 10863,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 10802,
											"end": 10863,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10859,
											"end": 10860,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10856,
											"end": 10857,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 10849,
											"end": 10861,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 10802,
											"end": 10863,
											"name": "tag",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 10802,
											"end": 10863,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10751,
											"end": 10869,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10751,
											"end": 10869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10875,
											"end": 11014,
											"name": "tag",
											"source": 16,
											"value": "206"
										},
										{
											"begin": 10875,
											"end": 11014,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10930,
											"end": 10935,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10961,
											"end": 10967,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10955,
											"end": 10968,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 10946,
											"end": 10968,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10946,
											"end": 10968,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10977,
											"end": 11008,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 11002,
											"end": 11007,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10977,
											"end": 11008,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "205"
										},
										{
											"begin": 10977,
											"end": 11008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10977,
											"end": 11008,
											"name": "tag",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 10977,
											"end": 11008,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10875,
											"end": 11014,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 10875,
											"end": 11014,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10875,
											"end": 11014,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10875,
											"end": 11014,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10875,
											"end": 11014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11020,
											"end": 11109,
											"name": "tag",
											"source": 16,
											"value": "207"
										},
										{
											"begin": 11020,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11056,
											"end": 11063,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11096,
											"end": 11102,
											"name": "PUSH",
											"source": 16,
											"value": "FFFF"
										},
										{
											"begin": 11089,
											"end": 11094,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11085,
											"end": 11103,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 11074,
											"end": 11103,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11074,
											"end": 11103,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11020,
											"end": 11109,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11020,
											"end": 11109,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11020,
											"end": 11109,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11020,
											"end": 11109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11115,
											"end": 11235,
											"name": "tag",
											"source": 16,
											"value": "208"
										},
										{
											"begin": 11115,
											"end": 11235,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11187,
											"end": 11210,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "368"
										},
										{
											"begin": 11204,
											"end": 11209,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11187,
											"end": 11210,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "207"
										},
										{
											"begin": 11187,
											"end": 11210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11187,
											"end": 11210,
											"name": "tag",
											"source": 16,
											"value": "368"
										},
										{
											"begin": 11187,
											"end": 11210,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11180,
											"end": 11185,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11177,
											"end": 11211,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 11167,
											"end": 11229,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "369"
										},
										{
											"begin": 11167,
											"end": 11229,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 11225,
											"end": 11226,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11222,
											"end": 11223,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 11215,
											"end": 11227,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 11167,
											"end": 11229,
											"name": "tag",
											"source": 16,
											"value": "369"
										},
										{
											"begin": 11167,
											"end": 11229,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11115,
											"end": 11235,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11115,
											"end": 11235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11241,
											"end": 11382,
											"name": "tag",
											"source": 16,
											"value": "209"
										},
										{
											"begin": 11241,
											"end": 11382,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11297,
											"end": 11302,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11328,
											"end": 11334,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11322,
											"end": 11335,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 11313,
											"end": 11335,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11313,
											"end": 11335,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11344,
											"end": 11376,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "371"
										},
										{
											"begin": 11370,
											"end": 11375,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11344,
											"end": 11376,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "208"
										},
										{
											"begin": 11344,
											"end": 11376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11344,
											"end": 11376,
											"name": "tag",
											"source": 16,
											"value": "371"
										},
										{
											"begin": 11344,
											"end": 11376,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11241,
											"end": 11382,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 11241,
											"end": 11382,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11241,
											"end": 11382,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11241,
											"end": 11382,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11241,
											"end": 11382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11388,
											"end": 11474,
											"name": "tag",
											"source": 16,
											"value": "210"
										},
										{
											"begin": 11388,
											"end": 11474,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11423,
											"end": 11430,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11463,
											"end": 11467,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 11456,
											"end": 11461,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11452,
											"end": 11468,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 11441,
											"end": 11468,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11441,
											"end": 11468,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11388,
											"end": 11474,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11388,
											"end": 11474,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11388,
											"end": 11474,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11388,
											"end": 11474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11480,
											"end": 11598,
											"name": "tag",
											"source": 16,
											"value": "211"
										},
										{
											"begin": 11480,
											"end": 11598,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11551,
											"end": 11573,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "374"
										},
										{
											"begin": 11567,
											"end": 11572,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11551,
											"end": 11573,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "210"
										},
										{
											"begin": 11551,
											"end": 11573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11551,
											"end": 11573,
											"name": "tag",
											"source": 16,
											"value": "374"
										},
										{
											"begin": 11551,
											"end": 11573,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11544,
											"end": 11549,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11541,
											"end": 11574,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 11531,
											"end": 11592,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "375"
										},
										{
											"begin": 11531,
											"end": 11592,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 11588,
											"end": 11589,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11585,
											"end": 11586,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 11578,
											"end": 11590,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 11531,
											"end": 11592,
											"name": "tag",
											"source": 16,
											"value": "375"
										},
										{
											"begin": 11531,
											"end": 11592,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11480,
											"end": 11598,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11480,
											"end": 11598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11604,
											"end": 11743,
											"name": "tag",
											"source": 16,
											"value": "212"
										},
										{
											"begin": 11604,
											"end": 11743,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11659,
											"end": 11664,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11690,
											"end": 11696,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11684,
											"end": 11697,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 11675,
											"end": 11697,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11675,
											"end": 11697,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11706,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "377"
										},
										{
											"begin": 11731,
											"end": 11736,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11706,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "211"
										},
										{
											"begin": 11706,
											"end": 11737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11706,
											"end": 11737,
											"name": "tag",
											"source": 16,
											"value": "377"
										},
										{
											"begin": 11706,
											"end": 11737,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11604,
											"end": 11743,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 11604,
											"end": 11743,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11604,
											"end": 11743,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11604,
											"end": 11743,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11604,
											"end": 11743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11749,
											"end": 11839,
											"name": "tag",
											"source": 16,
											"value": "213"
										},
										{
											"begin": 11749,
											"end": 11839,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11783,
											"end": 11790,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11826,
											"end": 11831,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11819,
											"end": 11832,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 11812,
											"end": 11833,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 11801,
											"end": 11833,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11801,
											"end": 11833,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11749,
											"end": 11839,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11749,
											"end": 11839,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11749,
											"end": 11839,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11749,
											"end": 11839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11845,
											"end": 11961,
											"name": "tag",
											"source": 16,
											"value": "214"
										},
										{
											"begin": 11845,
											"end": 11961,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11915,
											"end": 11936,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 11930,
											"end": 11935,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11915,
											"end": 11936,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "213"
										},
										{
											"begin": 11915,
											"end": 11936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11915,
											"end": 11936,
											"name": "tag",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 11915,
											"end": 11936,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11908,
											"end": 11913,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11905,
											"end": 11937,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 11895,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "381"
										},
										{
											"begin": 11895,
											"end": 11955,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 11951,
											"end": 11952,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11948,
											"end": 11949,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 11941,
											"end": 11953,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 11895,
											"end": 11955,
											"name": "tag",
											"source": 16,
											"value": "381"
										},
										{
											"begin": 11895,
											"end": 11955,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11845,
											"end": 11961,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11845,
											"end": 11961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11967,
											"end": 12104,
											"name": "tag",
											"source": 16,
											"value": "215"
										},
										{
											"begin": 11967,
											"end": 12104,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12021,
											"end": 12026,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12052,
											"end": 12058,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12046,
											"end": 12059,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 12037,
											"end": 12059,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12037,
											"end": 12059,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12068,
											"end": 12098,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "383"
										},
										{
											"begin": 12092,
											"end": 12097,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12068,
											"end": 12098,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "214"
										},
										{
											"begin": 12068,
											"end": 12098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12068,
											"end": 12098,
											"name": "tag",
											"source": 16,
											"value": "383"
										},
										{
											"begin": 12068,
											"end": 12098,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11967,
											"end": 12104,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 11967,
											"end": 12104,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11967,
											"end": 12104,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11967,
											"end": 12104,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11967,
											"end": 12104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12110,
											"end": 13381,
											"name": "tag",
											"source": 16,
											"value": "95"
										},
										{
											"begin": 12110,
											"end": 13381,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12224,
											"end": 12230,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12232,
											"end": 12238,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 12240,
											"end": 12246,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12248,
											"end": 12254,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 12256,
											"end": 12262,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12264,
											"end": 12270,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 12272,
											"end": 12278,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12321,
											"end": 12324,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 12309,
											"end": 12318,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 12300,
											"end": 12307,
											"name": "DUP11",
											"source": 16
										},
										{
											"begin": 12296,
											"end": 12319,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 12292,
											"end": 12325,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 12289,
											"end": 12409,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 12289,
											"end": 12409,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "385"
										},
										{
											"begin": 12289,
											"end": 12409,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12328,
											"end": 12407,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "386"
										},
										{
											"begin": 12328,
											"end": 12407,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "170"
										},
										{
											"begin": 12328,
											"end": 12407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12328,
											"end": 12407,
											"name": "tag",
											"source": 16,
											"value": "386"
										},
										{
											"begin": 12328,
											"end": 12407,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12289,
											"end": 12409,
											"name": "tag",
											"source": 16,
											"value": "385"
										},
										{
											"begin": 12289,
											"end": 12409,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12448,
											"end": 12449,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12473,
											"end": 12537,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "387"
										},
										{
											"begin": 12529,
											"end": 12536,
											"name": "DUP11",
											"source": 16
										},
										{
											"begin": 12520,
											"end": 12526,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12509,
											"end": 12518,
											"name": "DUP12",
											"source": 16
										},
										{
											"begin": 12505,
											"end": 12527,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12473,
											"end": 12537,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "203"
										},
										{
											"begin": 12473,
											"end": 12537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12473,
											"end": 12537,
											"name": "tag",
											"source": 16,
											"value": "387"
										},
										{
											"begin": 12473,
											"end": 12537,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12463,
											"end": 12537,
											"name": "SWAP8",
											"source": 16
										},
										{
											"begin": 12463,
											"end": 12537,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12419,
											"end": 12547,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12586,
											"end": 12588,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 12612,
											"end": 12674,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "388"
										},
										{
											"begin": 12666,
											"end": 12673,
											"name": "DUP11",
											"source": 16
										},
										{
											"begin": 12657,
											"end": 12663,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12646,
											"end": 12655,
											"name": "DUP12",
											"source": 16
										},
										{
											"begin": 12642,
											"end": 12664,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12612,
											"end": 12674,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "206"
										},
										{
											"begin": 12612,
											"end": 12674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12612,
											"end": 12674,
											"name": "tag",
											"source": 16,
											"value": "388"
										},
										{
											"begin": 12612,
											"end": 12674,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12602,
											"end": 12674,
											"name": "SWAP7",
											"source": 16
										},
										{
											"begin": 12602,
											"end": 12674,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12557,
											"end": 12684,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12723,
											"end": 12725,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 12749,
											"end": 12812,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "389"
										},
										{
											"begin": 12804,
											"end": 12811,
											"name": "DUP11",
											"source": 16
										},
										{
											"begin": 12795,
											"end": 12801,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12784,
											"end": 12793,
											"name": "DUP12",
											"source": 16
										},
										{
											"begin": 12780,
											"end": 12802,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12749,
											"end": 12812,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "209"
										},
										{
											"begin": 12749,
											"end": 12812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12749,
											"end": 12812,
											"name": "tag",
											"source": 16,
											"value": "389"
										},
										{
											"begin": 12749,
											"end": 12812,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12739,
											"end": 12812,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 12739,
											"end": 12812,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12694,
											"end": 12822,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12861,
											"end": 12863,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 12887,
											"end": 12950,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "390"
										},
										{
											"begin": 12942,
											"end": 12949,
											"name": "DUP11",
											"source": 16
										},
										{
											"begin": 12933,
											"end": 12939,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12922,
											"end": 12931,
											"name": "DUP12",
											"source": 16
										},
										{
											"begin": 12918,
											"end": 12940,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12887,
											"end": 12950,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "209"
										},
										{
											"begin": 12887,
											"end": 12950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12887,
											"end": 12950,
											"name": "tag",
											"source": 16,
											"value": "390"
										},
										{
											"begin": 12887,
											"end": 12950,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12877,
											"end": 12950,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 12877,
											"end": 12950,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12832,
											"end": 12960,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12999,
											"end": 13002,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 13026,
											"end": 13089,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "391"
										},
										{
											"begin": 13081,
											"end": 13088,
											"name": "DUP11",
											"source": 16
										},
										{
											"begin": 13072,
											"end": 13078,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13061,
											"end": 13070,
											"name": "DUP12",
											"source": 16
										},
										{
											"begin": 13057,
											"end": 13079,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13026,
											"end": 13089,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "209"
										},
										{
											"begin": 13026,
											"end": 13089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13026,
											"end": 13089,
											"name": "tag",
											"source": 16,
											"value": "391"
										},
										{
											"begin": 13026,
											"end": 13089,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13016,
											"end": 13089,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 13016,
											"end": 13089,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12970,
											"end": 13099,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13138,
											"end": 13141,
											"name": "PUSH",
											"source": 16,
											"value": "A0"
										},
										{
											"begin": 13165,
											"end": 13227,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "392"
										},
										{
											"begin": 13219,
											"end": 13226,
											"name": "DUP11",
											"source": 16
										},
										{
											"begin": 13210,
											"end": 13216,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13199,
											"end": 13208,
											"name": "DUP12",
											"source": 16
										},
										{
											"begin": 13195,
											"end": 13217,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13165,
											"end": 13227,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "212"
										},
										{
											"begin": 13165,
											"end": 13227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13165,
											"end": 13227,
											"name": "tag",
											"source": 16,
											"value": "392"
										},
										{
											"begin": 13165,
											"end": 13227,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13155,
											"end": 13227,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 13155,
											"end": 13227,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13109,
											"end": 13237,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13276,
											"end": 13279,
											"name": "PUSH",
											"source": 16,
											"value": "C0"
										},
										{
											"begin": 13303,
											"end": 13364,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "393"
										},
										{
											"begin": 13356,
											"end": 13363,
											"name": "DUP11",
											"source": 16
										},
										{
											"begin": 13347,
											"end": 13353,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13336,
											"end": 13345,
											"name": "DUP12",
											"source": 16
										},
										{
											"begin": 13332,
											"end": 13354,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13303,
											"end": 13364,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "215"
										},
										{
											"begin": 13303,
											"end": 13364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13303,
											"end": 13364,
											"name": "tag",
											"source": 16,
											"value": "393"
										},
										{
											"begin": 13303,
											"end": 13364,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13293,
											"end": 13364,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13293,
											"end": 13364,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13247,
											"end": 13374,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12110,
											"end": 13381,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12110,
											"end": 13381,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 12110,
											"end": 13381,
											"name": "SWAP9",
											"source": 16
										},
										{
											"begin": 12110,
											"end": 13381,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12110,
											"end": 13381,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 12110,
											"end": 13381,
											"name": "SWAP8",
											"source": 16
										},
										{
											"begin": 12110,
											"end": 13381,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12110,
											"end": 13381,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12110,
											"end": 13381,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 12110,
											"end": 13381,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12110,
											"end": 13381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13387,
											"end": 13567,
											"name": "tag",
											"source": 16,
											"value": "216"
										},
										{
											"begin": 13387,
											"end": 13567,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13435,
											"end": 13512,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13432,
											"end": 13433,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13425,
											"end": 13513,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 13532,
											"end": 13536,
											"name": "PUSH",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 13529,
											"end": 13530,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 13522,
											"end": 13537,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 13556,
											"end": 13560,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 13553,
											"end": 13554,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13546,
											"end": 13561,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 13573,
											"end": 13767,
											"name": "tag",
											"source": 16,
											"value": "98"
										},
										{
											"begin": 13573,
											"end": 13767,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13613,
											"end": 13617,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13633,
											"end": 13653,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "396"
										},
										{
											"begin": 13651,
											"end": 13652,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13633,
											"end": 13653,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "172"
										},
										{
											"begin": 13633,
											"end": 13653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13633,
											"end": 13653,
											"name": "tag",
											"source": 16,
											"value": "396"
										},
										{
											"begin": 13633,
											"end": 13653,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13628,
											"end": 13653,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13628,
											"end": 13653,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13667,
											"end": 13687,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "397"
										},
										{
											"begin": 13685,
											"end": 13686,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13667,
											"end": 13687,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "172"
										},
										{
											"begin": 13667,
											"end": 13687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13667,
											"end": 13687,
											"name": "tag",
											"source": 16,
											"value": "397"
										},
										{
											"begin": 13667,
											"end": 13687,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13662,
											"end": 13687,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 13662,
											"end": 13687,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13711,
											"end": 13712,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13708,
											"end": 13709,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13704,
											"end": 13713,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 13696,
											"end": 13713,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13696,
											"end": 13713,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13735,
											"end": 13736,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13729,
											"end": 13733,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13726,
											"end": 13737,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 13723,
											"end": 13760,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 13723,
											"end": 13760,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "398"
										},
										{
											"begin": 13723,
											"end": 13760,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 13740,
											"end": 13758,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "399"
										},
										{
											"begin": 13740,
											"end": 13758,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "216"
										},
										{
											"begin": 13740,
											"end": 13758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13740,
											"end": 13758,
											"name": "tag",
											"source": 16,
											"value": "399"
										},
										{
											"begin": 13740,
											"end": 13758,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13723,
											"end": 13760,
											"name": "tag",
											"source": 16,
											"value": "398"
										},
										{
											"begin": 13723,
											"end": 13760,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13573,
											"end": 13767,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 13573,
											"end": 13767,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13573,
											"end": 13767,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13573,
											"end": 13767,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13573,
											"end": 13767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13773,
											"end": 13891,
											"name": "tag",
											"source": 16,
											"value": "217"
										},
										{
											"begin": 13773,
											"end": 13891,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13860,
											"end": 13884,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "401"
										},
										{
											"begin": 13878,
											"end": 13883,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13860,
											"end": 13884,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "177"
										},
										{
											"begin": 13860,
											"end": 13884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13860,
											"end": 13884,
											"name": "tag",
											"source": 16,
											"value": "401"
										},
										{
											"begin": 13860,
											"end": 13884,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13855,
											"end": 13858,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13848,
											"end": 13885,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 13773,
											"end": 13891,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13773,
											"end": 13891,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13773,
											"end": 13891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13897,
											"end": 14119,
											"name": "tag",
											"source": 16,
											"value": "102"
										},
										{
											"begin": 13897,
											"end": 14119,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13990,
											"end": 13994,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14028,
											"end": 14030,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 14017,
											"end": 14026,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14013,
											"end": 14031,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14005,
											"end": 14031,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14005,
											"end": 14031,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14041,
											"end": 14112,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "403"
										},
										{
											"begin": 14109,
											"end": 14110,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14098,
											"end": 14107,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 14094,
											"end": 14111,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14085,
											"end": 14091,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 14041,
											"end": 14112,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "217"
										},
										{
											"begin": 14041,
											"end": 14112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14041,
											"end": 14112,
											"name": "tag",
											"source": 16,
											"value": "403"
										},
										{
											"begin": 14041,
											"end": 14112,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13897,
											"end": 14119,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 13897,
											"end": 14119,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13897,
											"end": 14119,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13897,
											"end": 14119,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13897,
											"end": 14119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14125,
											"end": 14242,
											"name": "tag",
											"source": 16,
											"value": "218"
										},
										{
											"begin": 14125,
											"end": 14242,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14234,
											"end": 14235,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14231,
											"end": 14232,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 14224,
											"end": 14236,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 14248,
											"end": 14365,
											"name": "tag",
											"source": 16,
											"value": "219"
										},
										{
											"begin": 14248,
											"end": 14365,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14357,
											"end": 14358,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14354,
											"end": 14355,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 14347,
											"end": 14359,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 14371,
											"end": 14488,
											"name": "tag",
											"source": 16,
											"value": "220"
										},
										{
											"begin": 14371,
											"end": 14488,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14480,
											"end": 14481,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14477,
											"end": 14478,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 14470,
											"end": 14482,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 14494,
											"end": 15219,
											"name": "tag",
											"source": 16,
											"value": "110"
										},
										{
											"begin": 14494,
											"end": 15219,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14572,
											"end": 14576,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14578,
											"end": 14584,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 14634,
											"end": 14645,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 14621,
											"end": 14646,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 14734,
											"end": 14735,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 14728,
											"end": 14732,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 14724,
											"end": 14736,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 14713,
											"end": 14721,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 14697,
											"end": 14711,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 14693,
											"end": 14722,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 14689,
											"end": 14737,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 14669,
											"end": 14687,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14665,
											"end": 14738,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 14655,
											"end": 14823,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "408"
										},
										{
											"begin": 14655,
											"end": 14823,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 14742,
											"end": 14821,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "409"
										},
										{
											"begin": 14742,
											"end": 14821,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "218"
										},
										{
											"begin": 14742,
											"end": 14821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14742,
											"end": 14821,
											"name": "tag",
											"source": 16,
											"value": "409"
										},
										{
											"begin": 14742,
											"end": 14821,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14655,
											"end": 14823,
											"name": "tag",
											"source": 16,
											"value": "408"
										},
										{
											"begin": 14655,
											"end": 14823,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14854,
											"end": 14872,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 14844,
											"end": 14852,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 14840,
											"end": 14873,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14832,
											"end": 14873,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 14832,
											"end": 14873,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14906,
											"end": 14910,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 14883,
											"end": 14911,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14883,
											"end": 14911,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14934,
											"end": 14952,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14926,
											"end": 14932,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14923,
											"end": 14953,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 14920,
											"end": 15037,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 14920,
											"end": 15037,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "410"
										},
										{
											"begin": 14920,
											"end": 15037,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 14956,
											"end": 15035,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "411"
										},
										{
											"begin": 14956,
											"end": 15035,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "219"
										},
										{
											"begin": 14956,
											"end": 15035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14956,
											"end": 15035,
											"name": "tag",
											"source": 16,
											"value": "411"
										},
										{
											"begin": 14956,
											"end": 15035,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14920,
											"end": 15037,
											"name": "tag",
											"source": 16,
											"value": "410"
										},
										{
											"begin": 14920,
											"end": 15037,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15064,
											"end": 15066,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 15058,
											"end": 15062,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 15054,
											"end": 15067,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15046,
											"end": 15067,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 15046,
											"end": 15067,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15121,
											"end": 15125,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 15113,
											"end": 15119,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15109,
											"end": 15126,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 15093,
											"end": 15107,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 15089,
											"end": 15127,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 15083,
											"end": 15087,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 15079,
											"end": 15128,
											"name": "SGT",
											"source": 16
										},
										{
											"begin": 15076,
											"end": 15212,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 15076,
											"end": 15212,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "412"
										},
										{
											"begin": 15076,
											"end": 15212,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 15131,
											"end": 15210,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "413"
										},
										{
											"begin": 15131,
											"end": 15210,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "220"
										},
										{
											"begin": 15131,
											"end": 15210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15131,
											"end": 15210,
											"name": "tag",
											"source": 16,
											"value": "413"
										},
										{
											"begin": 15131,
											"end": 15210,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15076,
											"end": 15212,
											"name": "tag",
											"source": 16,
											"value": "412"
										},
										{
											"begin": 15076,
											"end": 15212,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14585,
											"end": 15219,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14494,
											"end": 15219,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 14494,
											"end": 15219,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14494,
											"end": 15219,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 14494,
											"end": 15219,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14494,
											"end": 15219,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14494,
											"end": 15219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15225,
											"end": 15405,
											"name": "tag",
											"source": 16,
											"value": "221"
										},
										{
											"begin": 15225,
											"end": 15405,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15273,
											"end": 15350,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15270,
											"end": 15271,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15263,
											"end": 15351,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 15370,
											"end": 15374,
											"name": "PUSH",
											"source": 16,
											"value": "41"
										},
										{
											"begin": 15367,
											"end": 15368,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 15360,
											"end": 15375,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 15394,
											"end": 15398,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 15391,
											"end": 15392,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15384,
											"end": 15399,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 15411,
											"end": 15552,
											"name": "tag",
											"source": 16,
											"value": "222"
										},
										{
											"begin": 15411,
											"end": 15552,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15460,
											"end": 15464,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15483,
											"end": 15486,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15475,
											"end": 15486,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15475,
											"end": 15486,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15506,
											"end": 15509,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15503,
											"end": 15504,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15496,
											"end": 15510,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 15540,
											"end": 15544,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 15537,
											"end": 15538,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15527,
											"end": 15545,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 15519,
											"end": 15545,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15519,
											"end": 15545,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15411,
											"end": 15552,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15411,
											"end": 15552,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15411,
											"end": 15552,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15411,
											"end": 15552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15558,
											"end": 15651,
											"name": "tag",
											"source": 16,
											"value": "223"
										},
										{
											"begin": 15558,
											"end": 15651,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15595,
											"end": 15601,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15642,
											"end": 15644,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 15637,
											"end": 15639,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 15630,
											"end": 15635,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 15626,
											"end": 15640,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15622,
											"end": 15645,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 15612,
											"end": 15645,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15612,
											"end": 15645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15558,
											"end": 15651,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15558,
											"end": 15651,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15558,
											"end": 15651,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15558,
											"end": 15651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15657,
											"end": 15764,
											"name": "tag",
											"source": 16,
											"value": "224"
										},
										{
											"begin": 15657,
											"end": 15764,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15701,
											"end": 15709,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15751,
											"end": 15756,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15745,
											"end": 15749,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15741,
											"end": 15757,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 15720,
											"end": 15757,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15720,
											"end": 15757,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15657,
											"end": 15764,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 15657,
											"end": 15764,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15657,
											"end": 15764,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15657,
											"end": 15764,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15657,
											"end": 15764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15770,
											"end": 16163,
											"name": "tag",
											"source": 16,
											"value": "225"
										},
										{
											"begin": 15770,
											"end": 16163,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15839,
											"end": 15845,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15889,
											"end": 15890,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 15877,
											"end": 15887,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 15873,
											"end": 15891,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 15912,
											"end": 16009,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "419"
										},
										{
											"begin": 15942,
											"end": 16008,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15931,
											"end": 15940,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15912,
											"end": 16009,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "224"
										},
										{
											"begin": 15912,
											"end": 16009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15912,
											"end": 16009,
											"name": "tag",
											"source": 16,
											"value": "419"
										},
										{
											"begin": 15912,
											"end": 16009,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16030,
											"end": 16069,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "420"
										},
										{
											"begin": 16060,
											"end": 16068,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 16049,
											"end": 16058,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 16030,
											"end": 16069,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "224"
										},
										{
											"begin": 16030,
											"end": 16069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16030,
											"end": 16069,
											"name": "tag",
											"source": 16,
											"value": "420"
										},
										{
											"begin": 16030,
											"end": 16069,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16018,
											"end": 16069,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 16018,
											"end": 16069,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16102,
											"end": 16106,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 16098,
											"end": 16107,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 16091,
											"end": 16096,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16087,
											"end": 16108,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 16078,
											"end": 16108,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 16078,
											"end": 16108,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16151,
											"end": 16155,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 16141,
											"end": 16149,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 16137,
											"end": 16156,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 16130,
											"end": 16135,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16127,
											"end": 16157,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 16117,
											"end": 16157,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 16117,
											"end": 16157,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15846,
											"end": 16163,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15846,
											"end": 16163,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15770,
											"end": 16163,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 15770,
											"end": 16163,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 15770,
											"end": 16163,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15770,
											"end": 16163,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15770,
											"end": 16163,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15770,
											"end": 16163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16169,
											"end": 16311,
											"name": "tag",
											"source": 16,
											"value": "226"
										},
										{
											"begin": 16169,
											"end": 16311,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16219,
											"end": 16228,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16252,
											"end": 16305,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "422"
										},
										{
											"begin": 16270,
											"end": 16304,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "423"
										},
										{
											"begin": 16279,
											"end": 16303,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "424"
										},
										{
											"begin": 16297,
											"end": 16302,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16279,
											"end": 16303,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "172"
										},
										{
											"begin": 16279,
											"end": 16303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16279,
											"end": 16303,
											"name": "tag",
											"source": 16,
											"value": "424"
										},
										{
											"begin": 16279,
											"end": 16303,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16270,
											"end": 16304,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "189"
										},
										{
											"begin": 16270,
											"end": 16304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16270,
											"end": 16304,
											"name": "tag",
											"source": 16,
											"value": "423"
										},
										{
											"begin": 16270,
											"end": 16304,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16252,
											"end": 16305,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "172"
										},
										{
											"begin": 16252,
											"end": 16305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16252,
											"end": 16305,
											"name": "tag",
											"source": 16,
											"value": "422"
										},
										{
											"begin": 16252,
											"end": 16305,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16239,
											"end": 16305,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16239,
											"end": 16305,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16169,
											"end": 16311,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16169,
											"end": 16311,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16169,
											"end": 16311,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16169,
											"end": 16311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16317,
											"end": 16392,
											"name": "tag",
											"source": 16,
											"value": "227"
										},
										{
											"begin": 16317,
											"end": 16392,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16360,
											"end": 16363,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16381,
											"end": 16386,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16374,
											"end": 16386,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16374,
											"end": 16386,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16317,
											"end": 16392,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16317,
											"end": 16392,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16317,
											"end": 16392,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16317,
											"end": 16392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16398,
											"end": 16667,
											"name": "tag",
											"source": 16,
											"value": "228"
										},
										{
											"begin": 16398,
											"end": 16667,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16508,
											"end": 16547,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "427"
										},
										{
											"begin": 16539,
											"end": 16546,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 16508,
											"end": 16547,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "226"
										},
										{
											"begin": 16508,
											"end": 16547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16508,
											"end": 16547,
											"name": "tag",
											"source": 16,
											"value": "427"
										},
										{
											"begin": 16508,
											"end": 16547,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16569,
											"end": 16660,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "428"
										},
										{
											"begin": 16618,
											"end": 16659,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "429"
										},
										{
											"begin": 16642,
											"end": 16658,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16618,
											"end": 16659,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "227"
										},
										{
											"begin": 16618,
											"end": 16659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16618,
											"end": 16659,
											"name": "tag",
											"source": 16,
											"value": "429"
										},
										{
											"begin": 16618,
											"end": 16659,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16610,
											"end": 16616,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16603,
											"end": 16607,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16597,
											"end": 16608,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 16569,
											"end": 16660,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "225"
										},
										{
											"begin": 16569,
											"end": 16660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16569,
											"end": 16660,
											"name": "tag",
											"source": 16,
											"value": "428"
										},
										{
											"begin": 16569,
											"end": 16660,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16563,
											"end": 16567,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16556,
											"end": 16661,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 16474,
											"end": 16667,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16398,
											"end": 16667,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16398,
											"end": 16667,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16398,
											"end": 16667,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16398,
											"end": 16667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16673,
											"end": 16746,
											"name": "tag",
											"source": 16,
											"value": "229"
										},
										{
											"begin": 16673,
											"end": 16746,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16718,
											"end": 16721,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16673,
											"end": 16746,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16673,
											"end": 16746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16752,
											"end": 16941,
											"name": "tag",
											"source": 16,
											"value": "230"
										},
										{
											"begin": 16752,
											"end": 16941,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16829,
											"end": 16861,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "432"
										},
										{
											"begin": 16829,
											"end": 16861,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "229"
										},
										{
											"begin": 16829,
											"end": 16861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16829,
											"end": 16861,
											"name": "tag",
											"source": 16,
											"value": "432"
										},
										{
											"begin": 16829,
											"end": 16861,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16870,
											"end": 16935,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "433"
										},
										{
											"begin": 16928,
											"end": 16934,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16920,
											"end": 16926,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16914,
											"end": 16918,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16870,
											"end": 16935,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "228"
										},
										{
											"begin": 16870,
											"end": 16935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16870,
											"end": 16935,
											"name": "tag",
											"source": 16,
											"value": "433"
										},
										{
											"begin": 16870,
											"end": 16935,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16805,
											"end": 16941,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16752,
											"end": 16941,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16752,
											"end": 16941,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16752,
											"end": 16941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16947,
											"end": 17133,
											"name": "tag",
											"source": 16,
											"value": "231"
										},
										{
											"begin": 16947,
											"end": 17133,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17007,
											"end": 17127,
											"name": "tag",
											"source": 16,
											"value": "435"
										},
										{
											"begin": 17007,
											"end": 17127,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17024,
											"end": 17027,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17017,
											"end": 17022,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17014,
											"end": 17028,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 17007,
											"end": 17127,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 17007,
											"end": 17127,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "437"
										},
										{
											"begin": 17007,
											"end": 17127,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 17078,
											"end": 17117,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "438"
										},
										{
											"begin": 17115,
											"end": 17116,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17108,
											"end": 17113,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17078,
											"end": 17117,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "230"
										},
										{
											"begin": 17078,
											"end": 17117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17078,
											"end": 17117,
											"name": "tag",
											"source": 16,
											"value": "438"
										},
										{
											"begin": 17078,
											"end": 17117,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17051,
											"end": 17052,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 17044,
											"end": 17049,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17040,
											"end": 17053,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 17031,
											"end": 17053,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17031,
											"end": 17053,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17007,
											"end": 17127,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "435"
										},
										{
											"begin": 17007,
											"end": 17127,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17007,
											"end": 17127,
											"name": "tag",
											"source": 16,
											"value": "437"
										},
										{
											"begin": 17007,
											"end": 17127,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16947,
											"end": 17133,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16947,
											"end": 17133,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16947,
											"end": 17133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17139,
											"end": 17682,
											"name": "tag",
											"source": 16,
											"value": "232"
										},
										{
											"begin": 17139,
											"end": 17682,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17240,
											"end": 17242,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 17235,
											"end": 17238,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17232,
											"end": 17243,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 17229,
											"end": 17675,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 17229,
											"end": 17675,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "440"
										},
										{
											"begin": 17229,
											"end": 17675,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 17274,
											"end": 17312,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "441"
										},
										{
											"begin": 17306,
											"end": 17311,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17274,
											"end": 17312,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "222"
										},
										{
											"begin": 17274,
											"end": 17312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17274,
											"end": 17312,
											"name": "tag",
											"source": 16,
											"value": "441"
										},
										{
											"begin": 17274,
											"end": 17312,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17358,
											"end": 17387,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "442"
										},
										{
											"begin": 17376,
											"end": 17386,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 17358,
											"end": 17387,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "223"
										},
										{
											"begin": 17358,
											"end": 17387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17358,
											"end": 17387,
											"name": "tag",
											"source": 16,
											"value": "442"
										},
										{
											"begin": 17358,
											"end": 17387,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17348,
											"end": 17356,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17344,
											"end": 17388,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 17541,
											"end": 17543,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 17529,
											"end": 17539,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 17526,
											"end": 17544,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 17523,
											"end": 17572,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 17523,
											"end": 17572,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "443"
										},
										{
											"begin": 17523,
											"end": 17572,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 17562,
											"end": 17570,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17547,
											"end": 17570,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17547,
											"end": 17570,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17523,
											"end": 17572,
											"name": "tag",
											"source": 16,
											"value": "443"
										},
										{
											"begin": 17523,
											"end": 17572,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17585,
											"end": 17665,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "444"
										},
										{
											"begin": 17641,
											"end": 17663,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "445"
										},
										{
											"begin": 17659,
											"end": 17662,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 17641,
											"end": 17663,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "223"
										},
										{
											"begin": 17641,
											"end": 17663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17641,
											"end": 17663,
											"name": "tag",
											"source": 16,
											"value": "445"
										},
										{
											"begin": 17641,
											"end": 17663,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17631,
											"end": 17639,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 17627,
											"end": 17664,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 17614,
											"end": 17625,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17585,
											"end": 17665,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "231"
										},
										{
											"begin": 17585,
											"end": 17665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17585,
											"end": 17665,
											"name": "tag",
											"source": 16,
											"value": "444"
										},
										{
											"begin": 17585,
											"end": 17665,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17244,
											"end": 17675,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17244,
											"end": 17675,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17229,
											"end": 17675,
											"name": "tag",
											"source": 16,
											"value": "440"
										},
										{
											"begin": 17229,
											"end": 17675,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17139,
											"end": 17682,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17139,
											"end": 17682,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17139,
											"end": 17682,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17139,
											"end": 17682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17688,
											"end": 17805,
											"name": "tag",
											"source": 16,
											"value": "233"
										},
										{
											"begin": 17688,
											"end": 17805,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17742,
											"end": 17750,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17792,
											"end": 17797,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17786,
											"end": 17790,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17782,
											"end": 17798,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 17761,
											"end": 17798,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17761,
											"end": 17798,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17688,
											"end": 17805,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 17688,
											"end": 17805,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17688,
											"end": 17805,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17688,
											"end": 17805,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17688,
											"end": 17805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17811,
											"end": 17980,
											"name": "tag",
											"source": 16,
											"value": "234"
										},
										{
											"begin": 17811,
											"end": 17980,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17855,
											"end": 17861,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17888,
											"end": 17939,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "448"
										},
										{
											"begin": 17936,
											"end": 17937,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17932,
											"end": 17938,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 17924,
											"end": 17929,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 17921,
											"end": 17922,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 17917,
											"end": 17930,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 17888,
											"end": 17939,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "233"
										},
										{
											"begin": 17888,
											"end": 17939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17888,
											"end": 17939,
											"name": "tag",
											"source": 16,
											"value": "448"
										},
										{
											"begin": 17888,
											"end": 17939,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17884,
											"end": 17940,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 17969,
											"end": 17973,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 17963,
											"end": 17967,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 17959,
											"end": 17974,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 17949,
											"end": 17974,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17949,
											"end": 17974,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17862,
											"end": 17980,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17811,
											"end": 17980,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 17811,
											"end": 17980,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17811,
											"end": 17980,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17811,
											"end": 17980,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17811,
											"end": 17980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17985,
											"end": 18280,
											"name": "tag",
											"source": 16,
											"value": "235"
										},
										{
											"begin": 17985,
											"end": 18280,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18061,
											"end": 18065,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18207,
											"end": 18236,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "450"
										},
										{
											"begin": 18232,
											"end": 18235,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 18226,
											"end": 18230,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 18207,
											"end": 18236,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "234"
										},
										{
											"begin": 18207,
											"end": 18236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18207,
											"end": 18236,
											"name": "tag",
											"source": 16,
											"value": "450"
										},
										{
											"begin": 18207,
											"end": 18236,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18199,
											"end": 18236,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 18199,
											"end": 18236,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18269,
											"end": 18272,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18266,
											"end": 18267,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 18262,
											"end": 18273,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 18256,
											"end": 18260,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18253,
											"end": 18274,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 18245,
											"end": 18274,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 18245,
											"end": 18274,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17985,
											"end": 18280,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 17985,
											"end": 18280,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17985,
											"end": 18280,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17985,
											"end": 18280,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17985,
											"end": 18280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18285,
											"end": 19680,
											"name": "tag",
											"source": 16,
											"value": "112"
										},
										{
											"begin": 18285,
											"end": 19680,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18402,
											"end": 18439,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "452"
										},
										{
											"begin": 18435,
											"end": 18438,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18402,
											"end": 18439,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "179"
										},
										{
											"begin": 18402,
											"end": 18439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18402,
											"end": 18439,
											"name": "tag",
											"source": 16,
											"value": "452"
										},
										{
											"begin": 18402,
											"end": 18439,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18504,
											"end": 18522,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18496,
											"end": 18502,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18493,
											"end": 18523,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 18490,
											"end": 18546,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 18490,
											"end": 18546,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "453"
										},
										{
											"begin": 18490,
											"end": 18546,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 18526,
											"end": 18544,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "454"
										},
										{
											"begin": 18526,
											"end": 18544,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "221"
										},
										{
											"begin": 18526,
											"end": 18544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18526,
											"end": 18544,
											"name": "tag",
											"source": 16,
											"value": "454"
										},
										{
											"begin": 18526,
											"end": 18544,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18490,
											"end": 18546,
											"name": "tag",
											"source": 16,
											"value": "453"
										},
										{
											"begin": 18490,
											"end": 18546,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18570,
											"end": 18608,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "455"
										},
										{
											"begin": 18602,
											"end": 18606,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18596,
											"end": 18607,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 18570,
											"end": 18608,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "81"
										},
										{
											"begin": 18570,
											"end": 18608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18570,
											"end": 18608,
											"name": "tag",
											"source": 16,
											"value": "455"
										},
										{
											"begin": 18570,
											"end": 18608,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18655,
											"end": 18722,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "456"
										},
										{
											"begin": 18715,
											"end": 18721,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18707,
											"end": 18713,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18701,
											"end": 18705,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 18655,
											"end": 18722,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "232"
										},
										{
											"begin": 18655,
											"end": 18722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18655,
											"end": 18722,
											"name": "tag",
											"source": 16,
											"value": "456"
										},
										{
											"begin": 18655,
											"end": 18722,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18749,
											"end": 18750,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18773,
											"end": 18777,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 18760,
											"end": 18777,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 18760,
											"end": 18777,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18805,
											"end": 18807,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 18797,
											"end": 18803,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 18794,
											"end": 18808,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 18822,
											"end": 18823,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 18817,
											"end": 19435,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18817,
											"end": 19435,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 18817,
											"end": 19435,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "458"
										},
										{
											"begin": 18817,
											"end": 19435,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 19479,
											"end": 19480,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19496,
											"end": 19502,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 19493,
											"end": 19570,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 19493,
											"end": 19570,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "459"
										},
										{
											"begin": 19493,
											"end": 19570,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 19545,
											"end": 19554,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19540,
											"end": 19543,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 19536,
											"end": 19555,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19530,
											"end": 19556,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 19521,
											"end": 19556,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19521,
											"end": 19556,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19493,
											"end": 19570,
											"name": "tag",
											"source": 16,
											"value": "459"
										},
										{
											"begin": 19493,
											"end": 19570,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19596,
											"end": 19663,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "460"
										},
										{
											"begin": 19656,
											"end": 19662,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 19649,
											"end": 19654,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19596,
											"end": 19663,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "235"
										},
										{
											"begin": 19596,
											"end": 19663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19596,
											"end": 19663,
											"name": "tag",
											"source": 16,
											"value": "460"
										},
										{
											"begin": 19596,
											"end": 19663,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19590,
											"end": 19594,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 19583,
											"end": 19664,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 19452,
											"end": 19674,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18787,
											"end": 19674,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "457"
										},
										{
											"begin": 18787,
											"end": 19674,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18817,
											"end": 19435,
											"name": "tag",
											"source": 16,
											"value": "458"
										},
										{
											"begin": 18817,
											"end": 19435,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18869,
											"end": 18873,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 18865,
											"end": 18874,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 18857,
											"end": 18863,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 18853,
											"end": 18875,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 18903,
											"end": 18940,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "461"
										},
										{
											"begin": 18935,
											"end": 18939,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 18903,
											"end": 18940,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "222"
										},
										{
											"begin": 18903,
											"end": 18940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18903,
											"end": 18940,
											"name": "tag",
											"source": 16,
											"value": "461"
										},
										{
											"begin": 18903,
											"end": 18940,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18962,
											"end": 18963,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18976,
											"end": 19184,
											"name": "tag",
											"source": 16,
											"value": "462"
										},
										{
											"begin": 18976,
											"end": 19184,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18990,
											"end": 18997,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18987,
											"end": 18988,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18984,
											"end": 18998,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 18976,
											"end": 19184,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 18976,
											"end": 19184,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "464"
										},
										{
											"begin": 18976,
											"end": 19184,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 19069,
											"end": 19078,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 19064,
											"end": 19067,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 19060,
											"end": 19079,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19054,
											"end": 19080,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 19046,
											"end": 19052,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19039,
											"end": 19081,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 19120,
											"end": 19121,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 19112,
											"end": 19118,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19108,
											"end": 19122,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19098,
											"end": 19122,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 19098,
											"end": 19122,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19167,
											"end": 19169,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 19156,
											"end": 19165,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 19152,
											"end": 19170,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19139,
											"end": 19170,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 19139,
											"end": 19170,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19013,
											"end": 19017,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 19010,
											"end": 19011,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 19006,
											"end": 19018,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19001,
											"end": 19018,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19001,
											"end": 19018,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18976,
											"end": 19184,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "462"
										},
										{
											"begin": 18976,
											"end": 19184,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18976,
											"end": 19184,
											"name": "tag",
											"source": 16,
											"value": "464"
										},
										{
											"begin": 18976,
											"end": 19184,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19212,
											"end": 19218,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 19203,
											"end": 19210,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 19200,
											"end": 19219,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 19197,
											"end": 19376,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 19197,
											"end": 19376,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "465"
										},
										{
											"begin": 19197,
											"end": 19376,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 19270,
											"end": 19279,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 19265,
											"end": 19268,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 19261,
											"end": 19280,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19255,
											"end": 19281,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 19313,
											"end": 19361,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "466"
										},
										{
											"begin": 19355,
											"end": 19359,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 19347,
											"end": 19353,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 19343,
											"end": 19360,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 19332,
											"end": 19341,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19313,
											"end": 19361,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "234"
										},
										{
											"begin": 19313,
											"end": 19361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19313,
											"end": 19361,
											"name": "tag",
											"source": 16,
											"value": "466"
										},
										{
											"begin": 19313,
											"end": 19361,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19305,
											"end": 19311,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 19298,
											"end": 19362,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 19220,
											"end": 19376,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19197,
											"end": 19376,
											"name": "tag",
											"source": 16,
											"value": "465"
										},
										{
											"begin": 19197,
											"end": 19376,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19422,
											"end": 19423,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 19418,
											"end": 19419,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 19410,
											"end": 19416,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 19406,
											"end": 19420,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 19402,
											"end": 19424,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19396,
											"end": 19400,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 19389,
											"end": 19425,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 18824,
											"end": 19435,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18824,
											"end": 19435,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18824,
											"end": 19435,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18787,
											"end": 19674,
											"name": "tag",
											"source": 16,
											"value": "457"
										},
										{
											"begin": 18787,
											"end": 19674,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18787,
											"end": 19674,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18377,
											"end": 19680,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18377,
											"end": 19680,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18377,
											"end": 19680,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18285,
											"end": 19680,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18285,
											"end": 19680,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18285,
											"end": 19680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19686,
											"end": 19877,
											"name": "tag",
											"source": 16,
											"value": "117"
										},
										{
											"begin": 19686,
											"end": 19877,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19726,
											"end": 19729,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19745,
											"end": 19765,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "468"
										},
										{
											"begin": 19763,
											"end": 19764,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19745,
											"end": 19765,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "172"
										},
										{
											"begin": 19745,
											"end": 19765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19745,
											"end": 19765,
											"name": "tag",
											"source": 16,
											"value": "468"
										},
										{
											"begin": 19745,
											"end": 19765,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19740,
											"end": 19765,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 19740,
											"end": 19765,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19779,
											"end": 19799,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "469"
										},
										{
											"begin": 19797,
											"end": 19798,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 19779,
											"end": 19799,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "172"
										},
										{
											"begin": 19779,
											"end": 19799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19779,
											"end": 19799,
											"name": "tag",
											"source": 16,
											"value": "469"
										},
										{
											"begin": 19779,
											"end": 19799,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19774,
											"end": 19799,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 19774,
											"end": 19799,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19822,
											"end": 19823,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19819,
											"end": 19820,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19815,
											"end": 19824,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19808,
											"end": 19824,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19808,
											"end": 19824,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19843,
											"end": 19846,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 19840,
											"end": 19841,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19837,
											"end": 19847,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 19834,
											"end": 19870,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 19834,
											"end": 19870,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "470"
										},
										{
											"begin": 19834,
											"end": 19870,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 19850,
											"end": 19868,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 19850,
											"end": 19868,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "216"
										},
										{
											"begin": 19850,
											"end": 19868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19850,
											"end": 19868,
											"name": "tag",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 19850,
											"end": 19868,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19834,
											"end": 19870,
											"name": "tag",
											"source": 16,
											"value": "470"
										},
										{
											"begin": 19834,
											"end": 19870,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19686,
											"end": 19877,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 19686,
											"end": 19877,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 19686,
											"end": 19877,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19686,
											"end": 19877,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19686,
											"end": 19877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19883,
											"end": 20026,
											"name": "tag",
											"source": 16,
											"value": "236"
										},
										{
											"begin": 19883,
											"end": 20026,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19940,
											"end": 19945,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19971,
											"end": 19977,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 19965,
											"end": 19978,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 19956,
											"end": 19978,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19956,
											"end": 19978,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19987,
											"end": 20020,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "473"
										},
										{
											"begin": 20014,
											"end": 20019,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 19987,
											"end": 20020,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "186"
										},
										{
											"begin": 19987,
											"end": 20020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19987,
											"end": 20020,
											"name": "tag",
											"source": 16,
											"value": "473"
										},
										{
											"begin": 19987,
											"end": 20020,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19883,
											"end": 20026,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 19883,
											"end": 20026,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 19883,
											"end": 20026,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19883,
											"end": 20026,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19883,
											"end": 20026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20032,
											"end": 20383,
											"name": "tag",
											"source": 16,
											"value": "121"
										},
										{
											"begin": 20032,
											"end": 20383,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20102,
											"end": 20108,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20151,
											"end": 20153,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 20139,
											"end": 20148,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20130,
											"end": 20137,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 20126,
											"end": 20149,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 20122,
											"end": 20154,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 20119,
											"end": 20238,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 20119,
											"end": 20238,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "475"
										},
										{
											"begin": 20119,
											"end": 20238,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 20157,
											"end": 20236,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "476"
										},
										{
											"begin": 20157,
											"end": 20236,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "170"
										},
										{
											"begin": 20157,
											"end": 20236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20157,
											"end": 20236,
											"name": "tag",
											"source": 16,
											"value": "476"
										},
										{
											"begin": 20157,
											"end": 20236,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20119,
											"end": 20238,
											"name": "tag",
											"source": 16,
											"value": "475"
										},
										{
											"begin": 20119,
											"end": 20238,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20277,
											"end": 20278,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20302,
											"end": 20366,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "477"
										},
										{
											"begin": 20358,
											"end": 20365,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 20349,
											"end": 20355,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20338,
											"end": 20347,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 20334,
											"end": 20356,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20302,
											"end": 20366,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "236"
										},
										{
											"begin": 20302,
											"end": 20366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20302,
											"end": 20366,
											"name": "tag",
											"source": 16,
											"value": "477"
										},
										{
											"begin": 20302,
											"end": 20366,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20292,
											"end": 20366,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 20292,
											"end": 20366,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20248,
											"end": 20376,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20032,
											"end": 20383,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 20032,
											"end": 20383,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 20032,
											"end": 20383,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20032,
											"end": 20383,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20032,
											"end": 20383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20389,
											"end": 20494,
											"name": "tag",
											"source": 16,
											"value": "237"
										},
										{
											"begin": 20389,
											"end": 20494,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20425,
											"end": 20432,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20465,
											"end": 20487,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20458,
											"end": 20463,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20454,
											"end": 20488,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 20443,
											"end": 20488,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20443,
											"end": 20488,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20389,
											"end": 20494,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 20389,
											"end": 20494,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20389,
											"end": 20494,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20389,
											"end": 20494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20500,
											"end": 20620,
											"name": "tag",
											"source": 16,
											"value": "238"
										},
										{
											"begin": 20500,
											"end": 20620,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20572,
											"end": 20595,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "480"
										},
										{
											"begin": 20589,
											"end": 20594,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 20572,
											"end": 20595,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "237"
										},
										{
											"begin": 20572,
											"end": 20595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20572,
											"end": 20595,
											"name": "tag",
											"source": 16,
											"value": "480"
										},
										{
											"begin": 20572,
											"end": 20595,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20565,
											"end": 20570,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 20562,
											"end": 20596,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 20552,
											"end": 20614,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "481"
										},
										{
											"begin": 20552,
											"end": 20614,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 20610,
											"end": 20611,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20607,
											"end": 20608,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 20600,
											"end": 20612,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 20552,
											"end": 20614,
											"name": "tag",
											"source": 16,
											"value": "481"
										},
										{
											"begin": 20552,
											"end": 20614,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20500,
											"end": 20620,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20500,
											"end": 20620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20626,
											"end": 20767,
											"name": "tag",
											"source": 16,
											"value": "239"
										},
										{
											"begin": 20626,
											"end": 20767,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20682,
											"end": 20687,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20713,
											"end": 20719,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 20707,
											"end": 20720,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 20698,
											"end": 20720,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20698,
											"end": 20720,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20729,
											"end": 20761,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "483"
										},
										{
											"begin": 20755,
											"end": 20760,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 20729,
											"end": 20761,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "238"
										},
										{
											"begin": 20729,
											"end": 20761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20729,
											"end": 20761,
											"name": "tag",
											"source": 16,
											"value": "483"
										},
										{
											"begin": 20729,
											"end": 20761,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20626,
											"end": 20767,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 20626,
											"end": 20767,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 20626,
											"end": 20767,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20626,
											"end": 20767,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20626,
											"end": 20767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20773,
											"end": 20893,
											"name": "tag",
											"source": 16,
											"value": "240"
										},
										{
											"begin": 20773,
											"end": 20893,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20845,
											"end": 20868,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "485"
										},
										{
											"begin": 20862,
											"end": 20867,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 20845,
											"end": 20868,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "196"
										},
										{
											"begin": 20845,
											"end": 20868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20845,
											"end": 20868,
											"name": "tag",
											"source": 16,
											"value": "485"
										},
										{
											"begin": 20845,
											"end": 20868,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20838,
											"end": 20843,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 20835,
											"end": 20869,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 20825,
											"end": 20887,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "486"
										},
										{
											"begin": 20825,
											"end": 20887,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 20883,
											"end": 20884,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20880,
											"end": 20881,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 20873,
											"end": 20885,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 20825,
											"end": 20887,
											"name": "tag",
											"source": 16,
											"value": "486"
										},
										{
											"begin": 20825,
											"end": 20887,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20773,
											"end": 20893,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20773,
											"end": 20893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20899,
											"end": 21040,
											"name": "tag",
											"source": 16,
											"value": "241"
										},
										{
											"begin": 20899,
											"end": 21040,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20955,
											"end": 20960,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20986,
											"end": 20992,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 20980,
											"end": 20993,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 20971,
											"end": 20993,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20971,
											"end": 20993,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21002,
											"end": 21034,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "488"
										},
										{
											"begin": 21028,
											"end": 21033,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 21002,
											"end": 21034,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "240"
										},
										{
											"begin": 21002,
											"end": 21034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21002,
											"end": 21034,
											"name": "tag",
											"source": 16,
											"value": "488"
										},
										{
											"begin": 21002,
											"end": 21034,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20899,
											"end": 21040,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 20899,
											"end": 21040,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 20899,
											"end": 21040,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20899,
											"end": 21040,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20899,
											"end": 21040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21046,
											"end": 22017,
											"name": "tag",
											"source": 16,
											"value": "130"
										},
										{
											"begin": 21046,
											"end": 22017,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21149,
											"end": 21155,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21157,
											"end": 21163,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 21165,
											"end": 21171,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21173,
											"end": 21179,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 21181,
											"end": 21187,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21230,
											"end": 21233,
											"name": "PUSH",
											"source": 16,
											"value": "A0"
										},
										{
											"begin": 21218,
											"end": 21227,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 21209,
											"end": 21216,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 21205,
											"end": 21228,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 21201,
											"end": 21234,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 21198,
											"end": 21318,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 21198,
											"end": 21318,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "490"
										},
										{
											"begin": 21198,
											"end": 21318,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 21237,
											"end": 21316,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "491"
										},
										{
											"begin": 21237,
											"end": 21316,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "170"
										},
										{
											"begin": 21237,
											"end": 21316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21237,
											"end": 21316,
											"name": "tag",
											"source": 16,
											"value": "491"
										},
										{
											"begin": 21237,
											"end": 21316,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21198,
											"end": 21318,
											"name": "tag",
											"source": 16,
											"value": "490"
										},
										{
											"begin": 21198,
											"end": 21318,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21357,
											"end": 21358,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21382,
											"end": 21445,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "492"
										},
										{
											"begin": 21437,
											"end": 21444,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 21428,
											"end": 21434,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 21417,
											"end": 21426,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 21413,
											"end": 21435,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21382,
											"end": 21445,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "239"
										},
										{
											"begin": 21382,
											"end": 21445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21382,
											"end": 21445,
											"name": "tag",
											"source": 16,
											"value": "492"
										},
										{
											"begin": 21382,
											"end": 21445,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21372,
											"end": 21445,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 21372,
											"end": 21445,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21328,
											"end": 21455,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21494,
											"end": 21496,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 21520,
											"end": 21583,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "493"
										},
										{
											"begin": 21575,
											"end": 21582,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 21566,
											"end": 21572,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 21555,
											"end": 21564,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 21551,
											"end": 21573,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21520,
											"end": 21583,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "241"
										},
										{
											"begin": 21520,
											"end": 21583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21520,
											"end": 21583,
											"name": "tag",
											"source": 16,
											"value": "493"
										},
										{
											"begin": 21520,
											"end": 21583,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21510,
											"end": 21583,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 21510,
											"end": 21583,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21465,
											"end": 21593,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21632,
											"end": 21634,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 21658,
											"end": 21722,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "494"
										},
										{
											"begin": 21714,
											"end": 21721,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 21705,
											"end": 21711,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 21694,
											"end": 21703,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 21690,
											"end": 21712,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21658,
											"end": 21722,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "201"
										},
										{
											"begin": 21658,
											"end": 21722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21658,
											"end": 21722,
											"name": "tag",
											"source": 16,
											"value": "494"
										},
										{
											"begin": 21658,
											"end": 21722,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21648,
											"end": 21722,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 21648,
											"end": 21722,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21603,
											"end": 21732,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21771,
											"end": 21773,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 21797,
											"end": 21861,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "495"
										},
										{
											"begin": 21853,
											"end": 21860,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 21844,
											"end": 21850,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 21833,
											"end": 21842,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 21829,
											"end": 21851,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21797,
											"end": 21861,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "201"
										},
										{
											"begin": 21797,
											"end": 21861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21797,
											"end": 21861,
											"name": "tag",
											"source": 16,
											"value": "495"
										},
										{
											"begin": 21797,
											"end": 21861,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21787,
											"end": 21861,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 21787,
											"end": 21861,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21742,
											"end": 21871,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21910,
											"end": 21913,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 21937,
											"end": 22000,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "496"
										},
										{
											"begin": 21992,
											"end": 21999,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 21983,
											"end": 21989,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 21972,
											"end": 21981,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 21968,
											"end": 21990,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21937,
											"end": 22000,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "239"
										},
										{
											"begin": 21937,
											"end": 22000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21937,
											"end": 22000,
											"name": "tag",
											"source": 16,
											"value": "496"
										},
										{
											"begin": 21937,
											"end": 22000,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21927,
											"end": 22000,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 21927,
											"end": 22000,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21881,
											"end": 22010,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21046,
											"end": 22017,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 21046,
											"end": 22017,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 21046,
											"end": 22017,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21046,
											"end": 22017,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 21046,
											"end": 22017,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 21046,
											"end": 22017,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 21046,
											"end": 22017,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 21046,
											"end": 22017,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21046,
											"end": 22017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22023,
											"end": 22433,
											"name": "tag",
											"source": 16,
											"value": "137"
										},
										{
											"begin": 22023,
											"end": 22433,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22063,
											"end": 22070,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 22086,
											"end": 22106,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "498"
										},
										{
											"begin": 22104,
											"end": 22105,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22086,
											"end": 22106,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "172"
										},
										{
											"begin": 22086,
											"end": 22106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22086,
											"end": 22106,
											"name": "tag",
											"source": 16,
											"value": "498"
										},
										{
											"begin": 22086,
											"end": 22106,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22081,
											"end": 22106,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 22081,
											"end": 22106,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22120,
											"end": 22140,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "499"
										},
										{
											"begin": 22138,
											"end": 22139,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 22120,
											"end": 22140,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "172"
										},
										{
											"begin": 22120,
											"end": 22140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22120,
											"end": 22140,
											"name": "tag",
											"source": 16,
											"value": "499"
										},
										{
											"begin": 22120,
											"end": 22140,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22115,
											"end": 22140,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 22115,
											"end": 22140,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22175,
											"end": 22176,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22172,
											"end": 22173,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22168,
											"end": 22177,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 22197,
											"end": 22227,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "500"
										},
										{
											"begin": 22215,
											"end": 22226,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 22197,
											"end": 22227,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "172"
										},
										{
											"begin": 22197,
											"end": 22227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22197,
											"end": 22227,
											"name": "tag",
											"source": 16,
											"value": "500"
										},
										{
											"begin": 22197,
											"end": 22227,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22186,
											"end": 22227,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 22186,
											"end": 22227,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22376,
											"end": 22377,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22367,
											"end": 22374,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22363,
											"end": 22378,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 22360,
											"end": 22361,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 22357,
											"end": 22379,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 22337,
											"end": 22338,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 22330,
											"end": 22339,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 22310,
											"end": 22393,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 22287,
											"end": 22426,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "501"
										},
										{
											"begin": 22287,
											"end": 22426,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 22406,
											"end": 22424,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "502"
										},
										{
											"begin": 22406,
											"end": 22424,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "216"
										},
										{
											"begin": 22406,
											"end": 22424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22406,
											"end": 22424,
											"name": "tag",
											"source": 16,
											"value": "502"
										},
										{
											"begin": 22406,
											"end": 22424,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22287,
											"end": 22426,
											"name": "tag",
											"source": 16,
											"value": "501"
										},
										{
											"begin": 22287,
											"end": 22426,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22071,
											"end": 22433,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22023,
											"end": 22433,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 22023,
											"end": 22433,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 22023,
											"end": 22433,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22023,
											"end": 22433,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22023,
											"end": 22433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22439,
											"end": 22619,
											"name": "tag",
											"source": 16,
											"value": "242"
										},
										{
											"begin": 22439,
											"end": 22619,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22487,
											"end": 22564,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22484,
											"end": 22485,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 22477,
											"end": 22565,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 22584,
											"end": 22588,
											"name": "PUSH",
											"source": 16,
											"value": "12"
										},
										{
											"begin": 22581,
											"end": 22582,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 22574,
											"end": 22589,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 22608,
											"end": 22612,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 22605,
											"end": 22606,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 22598,
											"end": 22613,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 22625,
											"end": 22810,
											"name": "tag",
											"source": 16,
											"value": "139"
										},
										{
											"begin": 22625,
											"end": 22810,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22665,
											"end": 22666,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 22682,
											"end": 22702,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "505"
										},
										{
											"begin": 22700,
											"end": 22701,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22682,
											"end": 22702,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "172"
										},
										{
											"begin": 22682,
											"end": 22702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22682,
											"end": 22702,
											"name": "tag",
											"source": 16,
											"value": "505"
										},
										{
											"begin": 22682,
											"end": 22702,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22677,
											"end": 22702,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 22677,
											"end": 22702,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22716,
											"end": 22736,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "506"
										},
										{
											"begin": 22734,
											"end": 22735,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 22716,
											"end": 22736,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "172"
										},
										{
											"begin": 22716,
											"end": 22736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22716,
											"end": 22736,
											"name": "tag",
											"source": 16,
											"value": "506"
										},
										{
											"begin": 22716,
											"end": 22736,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22711,
											"end": 22736,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 22711,
											"end": 22736,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22755,
											"end": 22756,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22745,
											"end": 22780,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "507"
										},
										{
											"begin": 22745,
											"end": 22780,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 22760,
											"end": 22778,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "508"
										},
										{
											"begin": 22760,
											"end": 22778,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "242"
										},
										{
											"begin": 22760,
											"end": 22778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22760,
											"end": 22778,
											"name": "tag",
											"source": 16,
											"value": "508"
										},
										{
											"begin": 22760,
											"end": 22778,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22745,
											"end": 22780,
											"name": "tag",
											"source": 16,
											"value": "507"
										},
										{
											"begin": 22745,
											"end": 22780,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22802,
											"end": 22803,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22799,
											"end": 22800,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22795,
											"end": 22804,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 22790,
											"end": 22804,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 22790,
											"end": 22804,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22625,
											"end": 22810,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 22625,
											"end": 22810,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 22625,
											"end": 22810,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22625,
											"end": 22810,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22625,
											"end": 22810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22816,
											"end": 22963,
											"name": "tag",
											"source": 16,
											"value": "243"
										},
										{
											"begin": 22816,
											"end": 22963,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22917,
											"end": 22928,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 22954,
											"end": 22957,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 22939,
											"end": 22957,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 22939,
											"end": 22957,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22816,
											"end": 22963,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 22816,
											"end": 22963,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 22816,
											"end": 22963,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22816,
											"end": 22963,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22816,
											"end": 22963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22969,
											"end": 23083,
											"name": "tag",
											"source": 16,
											"value": "244"
										},
										{
											"begin": 22969,
											"end": 23083,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22969,
											"end": 23083,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22969,
											"end": 23083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 23089,
											"end": 23487,
											"name": "tag",
											"source": 16,
											"value": "245"
										},
										{
											"begin": 23089,
											"end": 23487,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23248,
											"end": 23251,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 23269,
											"end": 23352,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "512"
										},
										{
											"begin": 23350,
											"end": 23351,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 23345,
											"end": 23348,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 23269,
											"end": 23352,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "243"
										},
										{
											"begin": 23269,
											"end": 23352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 23269,
											"end": 23352,
											"name": "tag",
											"source": 16,
											"value": "512"
										},
										{
											"begin": 23269,
											"end": 23352,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23262,
											"end": 23352,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 23262,
											"end": 23352,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23361,
											"end": 23454,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "513"
										},
										{
											"begin": 23450,
											"end": 23453,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 23361,
											"end": 23454,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "244"
										},
										{
											"begin": 23361,
											"end": 23454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 23361,
											"end": 23454,
											"name": "tag",
											"source": 16,
											"value": "513"
										},
										{
											"begin": 23361,
											"end": 23454,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23479,
											"end": 23480,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 23474,
											"end": 23477,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 23470,
											"end": 23481,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 23463,
											"end": 23481,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 23463,
											"end": 23481,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23089,
											"end": 23487,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 23089,
											"end": 23487,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 23089,
											"end": 23487,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23089,
											"end": 23487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 23493,
											"end": 23872,
											"name": "tag",
											"source": 16,
											"value": "143"
										},
										{
											"begin": 23493,
											"end": 23872,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23677,
											"end": 23680,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 23699,
											"end": 23846,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "515"
										},
										{
											"begin": 23842,
											"end": 23845,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 23699,
											"end": 23846,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "245"
										},
										{
											"begin": 23699,
											"end": 23846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 23699,
											"end": 23846,
											"name": "tag",
											"source": 16,
											"value": "515"
										},
										{
											"begin": 23699,
											"end": 23846,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23692,
											"end": 23846,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 23692,
											"end": 23846,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23863,
											"end": 23866,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 23856,
											"end": 23866,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 23856,
											"end": 23866,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23493,
											"end": 23872,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 23493,
											"end": 23872,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 23493,
											"end": 23872,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23493,
											"end": 23872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"contracts/Master.sol",
								"contracts/cover/Cover.sol",
								"contracts/interfaces/ICover.sol",
								"contracts/interfaces/ICoverNFT.sol",
								"contracts/interfaces/IMCR.sol",
								"contracts/interfaces/IPool.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"activeCoverAmount()": "7e9e1abe",
							"buyCover((address,address,uint256,uint256,uint256,uint256,uint256,string))": "a71467a8",
							"coverAmountInETH((address,address,uint256,uint256,uint256,uint256,uint256,string))": "c9b10d3f",
							"coverDataCount()": "404730f4",
							"coverNFT()": "42e53fcf",
							"coverPrice((address,address,uint256,uint256,uint256,uint256,uint256,string))": "6c57b95d",
							"decActiveCoverInETH(uint256)": "4b61a44b",
							"getCoverData(uint256)": "00407d2a",
							"getLiveDataUniswap(address)": "4230a777",
							"getUnitPX(address)": "de071a0a",
							"master()": "ee97f7f3",
							"totalActiveCoverInETH()": "ed3b657a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ICoverNFT\",\"name\":\"_coverNFT\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"masterAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InsufficientEthSent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReturningEthRemainderToSenderFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SendingEthToCommissionDestinationFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SendingEthToPoolFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"activeCoverAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"token1Qty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0Qty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerBoundRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upperBoundRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pairStr\",\"type\":\"string\"}],\"internalType\":\"struct BuyCoverParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"buyCover\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"coverId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"token1Qty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0Qty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerBoundRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upperBoundRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pairStr\",\"type\":\"string\"}],\"internalType\":\"struct BuyCoverParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"coverAmountInETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"coverDataCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"coverNFT\",\"outputs\":[{\"internalType\":\"contract ICoverNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"token1Qty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0Qty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerBoundRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upperBoundRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pairStr\",\"type\":\"string\"}],\"internalType\":\"struct BuyCoverParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"coverPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dec\",\"type\":\"uint256\"}],\"name\":\"decActiveCoverInETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"coverid\",\"type\":\"uint256\"}],\"name\":\"getCoverData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amountPaidOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalClaimAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"token0Qty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1Qty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerBoundRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upperBoundRatio\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pairStr\",\"type\":\"string\"}],\"internalType\":\"struct CoverData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"x\",\"type\":\"address\"}],\"name\":\"getLiveDataUniswap\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"\",\"type\":\"uint160\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"x\",\"type\":\"address\"}],\"name\":\"getUnitPX\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"master\",\"outputs\":[{\"internalType\":\"contract Master\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalActiveCoverInETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/cover/Cover.sol\":\"Cover\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"contracts/Master.sol\":{\"keccak256\":\"0x3d3184b9516122e6fb70e4b5d512b6a0219abe38c4792b9cbf382dbffb880c65\",\"urls\":[\"bzz-raw://e1bb612708fc4fd742569a13ff47a2b359e21044f201e7eb99316a25c648203a\",\"dweb:/ipfs/QmZZwWpCLopjSVdjPNR1LxxrBXp7wFEgmqzYuQUQFh1z6J\"]},\"contracts/cover/Cover.sol\":{\"keccak256\":\"0x9b0060326d79659fbc65b13f2f808381b7145abc1d1a7c2ea13c7a75663ccbcf\",\"urls\":[\"bzz-raw://95892ec5b70cc7559be0b28073dd71636aad7bb092ee40bdbb33da253b9417cb\",\"dweb:/ipfs/QmYBu6srf25QgKY9CNfuFrTCDS6aEKkF6PMY7gkzbkgbDK\"]},\"contracts/interfaces/ICover.sol\":{\"keccak256\":\"0x618e047fdc777235144edfe506efa4cf92b8d7078c625a1f6a35274ded18b539\",\"urls\":[\"bzz-raw://1b6bbde4fd32cf465f535b0fa2d60c1a5d10a9d790ff55272d636fab8472d7d9\",\"dweb:/ipfs/Qmbu29eAmxZ5ZYYLNH9J7SsVEsvmBp9AxLFsm6jMwSAtoK\"]},\"contracts/interfaces/ICoverNFT.sol\":{\"keccak256\":\"0x79d602e1cd332d73b59651d0af301a23071e4ca225097b24d80f9947393e2582\",\"urls\":[\"bzz-raw://a8b78909a6db032e68906729c03fb6e3b8183264fc34fe4009c4c0a598a00a7a\",\"dweb:/ipfs/QmaGEKqDiifEftwiPbBEnaduhZzUwzEBbj89xEdzkx1iB7\"]},\"contracts/interfaces/IMCR.sol\":{\"keccak256\":\"0xfe501e970cfca32e379ff35233f5c149a6b84345e2d76cc4e9d3f351ae9c9317\",\"urls\":[\"bzz-raw://8c67be9e233b4f1f26aee5cbbd19a0b65d64b5a416089940498e906347753317\",\"dweb:/ipfs/QmS1D3y8xGr11FpZu51KzbFTHrwYYMMAk3mazP4mCZW8VJ\"]},\"contracts/interfaces/IPool.sol\":{\"keccak256\":\"0x4f981cd82fa7f4289d185d8b5c307a7626328196619922bf638f0214bcd42f23\",\"urls\":[\"bzz-raw://6446bfc6a64d4ebfdc35a4757c7eaf735b80bc69d07021428b97d51ac11b63ea\",\"dweb:/ipfs/QmXdu5Dtjj9eW2bCe3Q5VBEfMivRYxgPwMgwVLbUQgXRzp\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x55036158b0f3523fa36f2a576743f39dd46bb84bee57e51cd2406c906638cea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c5558c241a34b3fa54c848d99844850c88b03869b47e1fc05f6f261c54aaa35\",\"dweb:/ipfs/QmbeeMn9RKhT8DmEvDCNdfiDGtDw1YVB2D5HTLqTzefYPb\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x39194d726021816f8a5f2b821574349a4884833cf841378dc8e6862e5f789ed6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08cfffa942e4589c4d927db3fecfea998e9486ff41f48ee905fdda34d152a846\",\"dweb:/ipfs/QmQKwHL48iBd5XzRAnSNnGBXo6Ykt22iADEReEusX1SQvK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 591,
								"contract": "contracts/cover/Cover.sol:Cover",
								"label": "_coverData",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_struct(CoverData)976_storage)"
							},
							{
								"astId": 593,
								"contract": "contracts/cover/Cover.sol:Cover",
								"label": "activeCoverAmount",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 596,
								"contract": "contracts/cover/Cover.sol:Cover",
								"label": "master",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(Master)570"
							},
							{
								"astId": 599,
								"contract": "contracts/cover/Cover.sol:Cover",
								"label": "coverNFT",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(ICoverNFT)1068"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(ICoverNFT)1068": {
								"encoding": "inplace",
								"label": "contract ICoverNFT",
								"numberOfBytes": "20"
							},
							"t_contract(Master)570": {
								"encoding": "inplace",
								"label": "contract Master",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_struct(CoverData)976_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct CoverData)",
								"numberOfBytes": "32",
								"value": "t_struct(CoverData)976_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(CoverData)976_storage": {
								"encoding": "inplace",
								"label": "struct CoverData",
								"members": [
									{
										"astId": 955,
										"contract": "contracts/cover/Cover.sol:Cover",
										"label": "amountPaidOut",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 957,
										"contract": "contracts/cover/Cover.sol:Cover",
										"label": "totalClaimAmount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 959,
										"contract": "contracts/cover/Cover.sol:Cover",
										"label": "start",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 961,
										"contract": "contracts/cover/Cover.sol:Cover",
										"label": "period",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 963,
										"contract": "contracts/cover/Cover.sol:Cover",
										"label": "token0",
										"offset": 0,
										"slot": "4",
										"type": "t_address"
									},
									{
										"astId": 965,
										"contract": "contracts/cover/Cover.sol:Cover",
										"label": "token1",
										"offset": 0,
										"slot": "5",
										"type": "t_address"
									},
									{
										"astId": 967,
										"contract": "contracts/cover/Cover.sol:Cover",
										"label": "token0Qty",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 969,
										"contract": "contracts/cover/Cover.sol:Cover",
										"label": "token1Qty",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 971,
										"contract": "contracts/cover/Cover.sol:Cover",
										"label": "lowerBoundRatio",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 973,
										"contract": "contracts/cover/Cover.sol:Cover",
										"label": "upperBoundRatio",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 975,
										"contract": "contracts/cover/Cover.sol:Cover",
										"label": "pairStr",
										"offset": 0,
										"slot": "10",
										"type": "t_string_storage"
									}
								],
								"numberOfBytes": "352"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/ICover.sol": {
				"ICover": {
					"abi": [
						{
							"inputs": [],
							"name": "InsufficientEthSent",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReturningEthRemainderToSenderFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SendingEthToCommissionDestinationFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SendingEthToPoolFailed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "token0",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "token1",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "token1Qty",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "token0Qty",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lowerBoundRatio",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "upperBoundRatio",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "period",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "pairStr",
											"type": "string"
										}
									],
									"internalType": "struct BuyCoverParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "buyCover",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "coverId",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "coverDataCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "count",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "token0",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "token1",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "token1Qty",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "token0Qty",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lowerBoundRatio",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "upperBoundRatio",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "period",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "pairStr",
											"type": "string"
										}
									],
									"internalType": "struct BuyCoverParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "coverPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "decActiveCoverInETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "coverId",
									"type": "uint256"
								}
							],
							"name": "getCoverData",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "amountPaidOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "totalClaimAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "start",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "period",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "token0",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "token1",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "token0Qty",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "token1Qty",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lowerBoundRatio",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "upperBoundRatio",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "pairStr",
											"type": "string"
										}
									],
									"internalType": "struct CoverData",
									"name": "coverData",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalActiveCoverInETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"buyCover((address,address,uint256,uint256,uint256,uint256,uint256,string))": "a71467a8",
							"coverDataCount()": "404730f4",
							"coverPrice((address,address,uint256,uint256,uint256,uint256,uint256,string))": "6c57b95d",
							"decActiveCoverInETH(uint256)": "4b61a44b",
							"getCoverData(uint256)": "00407d2a",
							"totalActiveCoverInETH()": "ed3b657a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InsufficientEthSent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReturningEthRemainderToSenderFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SendingEthToCommissionDestinationFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SendingEthToPoolFailed\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"token1Qty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0Qty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerBoundRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upperBoundRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pairStr\",\"type\":\"string\"}],\"internalType\":\"struct BuyCoverParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"buyCover\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"coverId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"coverDataCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"token1Qty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0Qty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerBoundRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upperBoundRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pairStr\",\"type\":\"string\"}],\"internalType\":\"struct BuyCoverParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"coverPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"decActiveCoverInETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"coverId\",\"type\":\"uint256\"}],\"name\":\"getCoverData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amountPaidOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalClaimAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"token0Qty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1Qty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerBoundRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upperBoundRatio\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pairStr\",\"type\":\"string\"}],\"internalType\":\"struct CoverData\",\"name\":\"coverData\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalActiveCoverInETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ICover.sol\":\"ICover\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ICover.sol\":{\"keccak256\":\"0x618e047fdc777235144edfe506efa4cf92b8d7078c625a1f6a35274ded18b539\",\"urls\":[\"bzz-raw://1b6bbde4fd32cf465f535b0fa2d60c1a5d10a9d790ff55272d636fab8472d7d9\",\"dweb:/ipfs/Qmbu29eAmxZ5ZYYLNH9J7SsVEsvmBp9AxLFsm6jMwSAtoK\"]},\"contracts/interfaces/ICoverNFT.sol\":{\"keccak256\":\"0x79d602e1cd332d73b59651d0af301a23071e4ca225097b24d80f9947393e2582\",\"urls\":[\"bzz-raw://a8b78909a6db032e68906729c03fb6e3b8183264fc34fe4009c4c0a598a00a7a\",\"dweb:/ipfs/QmaGEKqDiifEftwiPbBEnaduhZzUwzEBbj89xEdzkx1iB7\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x55036158b0f3523fa36f2a576743f39dd46bb84bee57e51cd2406c906638cea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c5558c241a34b3fa54c848d99844850c88b03869b47e1fc05f6f261c54aaa35\",\"dweb:/ipfs/QmbeeMn9RKhT8DmEvDCNdfiDGtDw1YVB2D5HTLqTzefYPb\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x39194d726021816f8a5f2b821574349a4884833cf841378dc8e6862e5f789ed6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08cfffa942e4589c4d927db3fecfea998e9486ff41f48ee905fdda34d152a846\",\"dweb:/ipfs/QmQKwHL48iBd5XzRAnSNnGBXo6Ykt22iADEReEusX1SQvK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/ICoverNFT.sol": {
				"ICoverNFT": {
					"abi": [
						{
							"inputs": [],
							"name": "AlreadyMinted",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidNewNFTDescriptorAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidNewOperatorAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidRecipient",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotAuthorized",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotMinted",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotOperator",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UnsafeRecipient",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "WrongFrom",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "isApprovedOrOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"isApprovedOrOwner(address,uint256)": "430c2081",
							"mint(address)": "6a627842",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AlreadyMinted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNewNFTDescriptorAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNewOperatorAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotMinted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsafeRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongFrom\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"isApprovedOrOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ICoverNFT.sol\":\"ICoverNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ICoverNFT.sol\":{\"keccak256\":\"0x79d602e1cd332d73b59651d0af301a23071e4ca225097b24d80f9947393e2582\",\"urls\":[\"bzz-raw://a8b78909a6db032e68906729c03fb6e3b8183264fc34fe4009c4c0a598a00a7a\",\"dweb:/ipfs/QmaGEKqDiifEftwiPbBEnaduhZzUwzEBbj89xEdzkx1iB7\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x55036158b0f3523fa36f2a576743f39dd46bb84bee57e51cd2406c906638cea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c5558c241a34b3fa54c848d99844850c88b03869b47e1fc05f6f261c54aaa35\",\"dweb:/ipfs/QmbeeMn9RKhT8DmEvDCNdfiDGtDw1YVB2D5HTLqTzefYPb\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x39194d726021816f8a5f2b821574349a4884833cf841378dc8e6862e5f789ed6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08cfffa942e4589c4d927db3fecfea998e9486ff41f48ee905fdda34d152a846\",\"dweb:/ipfs/QmQKwHL48iBd5XzRAnSNnGBXo6Ykt22iADEReEusX1SQvK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IMCR.sol": {
				"IMCR": {
					"abi": [
						{
							"inputs": [],
							"name": "getMCR",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "updateMCRInternal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getMCR()": "44936b10",
							"updateMCRInternal()": "aa5da046"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getMCR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateMCRInternal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IMCR.sol\":\"IMCR\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IMCR.sol\":{\"keccak256\":\"0xfe501e970cfca32e379ff35233f5c149a6b84345e2d76cc4e9d3f351ae9c9317\",\"urls\":[\"bzz-raw://8c67be9e233b4f1f26aee5cbbd19a0b65d64b5a416089940498e906347753317\",\"dweb:/ipfs/QmS1D3y8xGr11FpZu51KzbFTHrwYYMMAk3mazP4mCZW8VJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IPool.sol": {
				"IPool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "minTokensOut",
									"type": "uint256"
								}
							],
							"name": "buyHEDH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minEthOut",
									"type": "uint256"
								}
							],
							"name": "sellHEDH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "payoutAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "sendPayout",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"buyHEDH(uint256)": "06833ffd",
							"sellHEDH(uint256,uint256)": "bdf4872b",
							"sendPayout(address,uint256)": "cf8d133f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minTokensOut\",\"type\":\"uint256\"}],\"name\":\"buyHEDH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minEthOut\",\"type\":\"uint256\"}],\"name\":\"sellHEDH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"payoutAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sendPayout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPool.sol\":\"IPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IPool.sol\":{\"keccak256\":\"0x4f981cd82fa7f4289d185d8b5c307a7626328196619922bf638f0214bcd42f23\",\"urls\":[\"bzz-raw://6446bfc6a64d4ebfdc35a4757c7eaf735b80bc69d07021428b97d51ac11b63ea\",\"dweb:/ipfs/QmXdu5Dtjj9eW2bCe3Q5VBEfMivRYxgPwMgwVLbUQgXRzp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x55036158b0f3523fa36f2a576743f39dd46bb84bee57e51cd2406c906638cea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c5558c241a34b3fa54c848d99844850c88b03869b47e1fc05f6f261c54aaa35\",\"dweb:/ipfs/QmbeeMn9RKhT8DmEvDCNdfiDGtDw1YVB2D5HTLqTzefYPb\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x39194d726021816f8a5f2b821574349a4884833cf841378dc8e6862e5f789ed6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08cfffa942e4589c4d927db3fecfea998e9486ff41f48ee905fdda34d152a846\",\"dweb:/ipfs/QmQKwHL48iBd5XzRAnSNnGBXo6Ykt22iADEReEusX1SQvK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x39194d726021816f8a5f2b821574349a4884833cf841378dc8e6862e5f789ed6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08cfffa942e4589c4d927db3fecfea998e9486ff41f48ee905fdda34d152a846\",\"dweb:/ipfs/QmQKwHL48iBd5XzRAnSNnGBXo6Ykt22iADEReEusX1SQvK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Master.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Master.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/cover/Cover.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/cover/Cover.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/interfaces/ICover.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/interfaces/ICover.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/interfaces/ICoverNFT.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/interfaces/ICoverNFT.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/interfaces/IMCR.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/interfaces/IMCR.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/interfaces/IPool.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/interfaces/IPool.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3420",
				"formattedMessage": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.19;\"\n--> contracts/interfaces/ICoverNFT.sol\n\n",
				"message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.19;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/interfaces/ICoverNFT.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3420",
				"formattedMessage": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.19;\"\n--> contracts/interfaces/IPool.sol\n\n",
				"message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.19;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/interfaces/IPool.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3420",
				"formattedMessage": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.19;\"\n--> contracts/interfaces/IMCR.sol\n\n",
				"message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.19;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/interfaces/IMCR.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/cover/Cover.sol:60:31:\n   |\n60 |     function coverAmountInETH(BuyCoverParams calldata params) public returns (uint amount){\n   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2051,
					"file": "contracts/cover/Cover.sol",
					"start": 2021
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/cover/Cover.sol:63:25:\n   |\n63 |     function coverPrice(BuyCoverParams calldata params) public returns (uint price){\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2173,
					"file": "contracts/cover/Cover.sol",
					"start": 2143
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/cover/Cover.sol:66:95:\n   |\n66 |     function retrievePayment(uint premiumInPaymentAsset, uint paymentAsset) internal returns (bool success){\n   |                                                                                               ^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2372,
					"file": "contracts/cover/Cover.sol",
					"start": 2360
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> contracts/cover/Cover.sol:60:5:\n   |\n60 |     function coverAmountInETH(BuyCoverParams calldata params) public returns (uint amount){\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 2118,
					"file": "contracts/cover/Cover.sol",
					"start": 1995
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> contracts/cover/Cover.sol:63:5:\n   |\n63 |     function coverPrice(BuyCoverParams calldata params) public returns (uint price){\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 2239,
					"file": "contracts/cover/Cover.sol",
					"start": 2123
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						]
					},
					"id": 46,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "67:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "102:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "110:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "136:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "136:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:7:0"
									},
									"scope": 45,
									"src": "93:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "156:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "193:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "193:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:15:0"
									},
									"scope": 45,
									"src": "147:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "221:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "254:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:9:0"
									},
									"scope": 45,
									"src": "212:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "276:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "296:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "289:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "289:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:17:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "355:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "348:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "348:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "377:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "370:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "370:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "399:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "391:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "424:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "416:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "416:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "448:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "441:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "441:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "340:129:0"
									},
									"scope": 45,
									"src": "267:203:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "483:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "498:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "550:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "543:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "543:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "572:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "565:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 35,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "594:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "586:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "619:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "611:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "643:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "636:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "636:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "535:129:0"
									},
									"scope": 45,
									"src": "474:191:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 46,
							"src": "57:610:0",
							"usedErrors": []
						}
					],
					"src": "32:636:0"
				},
				"id": 0
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
					"exportedSymbols": {
						"IUniswapV3Pool": [
							67
						],
						"IUniswapV3PoolActions": [
							163
						],
						"IUniswapV3PoolDerivedState": [
							194
						],
						"IUniswapV3PoolEvents": [
							313
						],
						"IUniswapV3PoolImmutables": [
							353
						],
						"IUniswapV3PoolOwnerActions": [
							379
						],
						"IUniswapV3PoolState": [
							487
						]
					},
					"id": 68,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 47,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:1"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
							"file": "./pool/IUniswapV3PoolImmutables.sol",
							"id": 48,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 68,
							"sourceUnit": 354,
							"src": "71:45:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
							"file": "./pool/IUniswapV3PoolState.sol",
							"id": 49,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 68,
							"sourceUnit": 488,
							"src": "117:40:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
							"file": "./pool/IUniswapV3PoolDerivedState.sol",
							"id": 50,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 68,
							"sourceUnit": 195,
							"src": "158:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
							"file": "./pool/IUniswapV3PoolActions.sol",
							"id": 51,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 68,
							"sourceUnit": 164,
							"src": "206:42:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
							"file": "./pool/IUniswapV3PoolOwnerActions.sol",
							"id": 52,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 68,
							"sourceUnit": 380,
							"src": "249:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
							"file": "./pool/IUniswapV3PoolEvents.sol",
							"id": 53,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 68,
							"sourceUnit": 314,
							"src": "297:41:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 55,
										"name": "IUniswapV3PoolImmutables",
										"nameLocations": [
											"637:24:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 353,
										"src": "637:24:1"
									},
									"id": 56,
									"nodeType": "InheritanceSpecifier",
									"src": "637:24:1"
								},
								{
									"baseName": {
										"id": 57,
										"name": "IUniswapV3PoolState",
										"nameLocations": [
											"667:19:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 487,
										"src": "667:19:1"
									},
									"id": 58,
									"nodeType": "InheritanceSpecifier",
									"src": "667:19:1"
								},
								{
									"baseName": {
										"id": 59,
										"name": "IUniswapV3PoolDerivedState",
										"nameLocations": [
											"692:26:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "692:26:1"
									},
									"id": 60,
									"nodeType": "InheritanceSpecifier",
									"src": "692:26:1"
								},
								{
									"baseName": {
										"id": 61,
										"name": "IUniswapV3PoolActions",
										"nameLocations": [
											"724:21:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 163,
										"src": "724:21:1"
									},
									"id": 62,
									"nodeType": "InheritanceSpecifier",
									"src": "724:21:1"
								},
								{
									"baseName": {
										"id": 63,
										"name": "IUniswapV3PoolOwnerActions",
										"nameLocations": [
											"751:26:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 379,
										"src": "751:26:1"
									},
									"id": 64,
									"nodeType": "InheritanceSpecifier",
									"src": "751:26:1"
								},
								{
									"baseName": {
										"id": 65,
										"name": "IUniswapV3PoolEvents",
										"nameLocations": [
											"783:20:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 313,
										"src": "783:20:1"
									},
									"id": 66,
									"nodeType": "InheritanceSpecifier",
									"src": "783:20:1"
								}
							],
							"canonicalName": "IUniswapV3Pool",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 54,
								"nodeType": "StructuredDocumentation",
								"src": "340:265:1",
								"text": "@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"
							},
							"fullyImplemented": false,
							"id": 67,
							"linearizedBaseContracts": [
								67,
								313,
								379,
								163,
								194,
								487,
								353
							],
							"name": "IUniswapV3Pool",
							"nameLocation": "615:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 68,
							"src": "605:203:1",
							"usedErrors": []
						}
					],
					"src": "45:764:1"
				},
				"id": 1
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolActions": [
							163
						]
					},
					"id": 164,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 69,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 70,
								"nodeType": "StructuredDocumentation",
								"src": "71:102:2",
								"text": "@title Permissionless pool actions\n @notice Contains pool methods that can be called by anyone"
							},
							"fullyImplemented": false,
							"id": 163,
							"linearizedBaseContracts": [
								163
							],
							"name": "IUniswapV3PoolActions",
							"nameLocation": "183:21:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "211:206:2",
										"text": "@notice Sets the initial price for the pool\n @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96"
									},
									"functionSelector": "f637731d",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "431:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "450:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "442:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 72,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "442:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:22:2"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "472:0:2"
									},
									"scope": 163,
									"src": "422:51:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "479:1029:2",
										"text": "@notice Adds liquidity for the given recipient/tickLower/tickUpper position\n @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n on tickLower, tickUpper, the amount of liquidity, and the current price.\n @param recipient The address for which the liquidity will be created\n @param tickLower The lower tick of the position in which to add liquidity\n @param tickUpper The upper tick of the position in which to add liquidity\n @param amount The amount of liquidity to mint\n @param data Any data that should be passed through to the callback\n @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
									},
									"functionSelector": "3c8a7d8d",
									"id": 94,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1522:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1544:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1536:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1536:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1569:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1563:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 80,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1563:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "1594:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1588:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 82,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1588:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1621:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1613:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 84,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1652:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1637:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 86,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1637:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1526:136:2"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1689:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1681:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1706:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1698:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1698:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:34:2"
									},
									"scope": 163,
									"src": "1513:202:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "1721:1053:2",
										"text": "@notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param tickLower The lower tick of the position for which to collect fees\n @param tickUpper The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "4f1eb3d8",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nameLocation": "2788:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2813:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "2805:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2838:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "2832:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 98,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2832:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2863:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "2857:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 100,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2857:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nameLocation": "2890:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "2882:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 102,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nameLocation": "2924:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "2916:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 104,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2916:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2795:151:2"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2973:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "2965:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 107,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2965:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "2982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 109,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2982:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2964:34:2"
									},
									"scope": 163,
									"src": "2779:220:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "3005:631:2",
										"text": "@notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param tickLower The lower tick of the position for which to burn liquidity\n @param tickUpper The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"
									},
									"functionSelector": "a34123a7",
									"id": 126,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "3650:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "3670:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "3664:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 114,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3664:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "3695:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "3689:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 116,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3689:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3722:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "3714:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 118,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3714:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3654:80:2"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3761:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "3753:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3778:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "3770:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3752:34:2"
									},
									"scope": 163,
									"src": "3641:146:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "3793:1015:2",
										"text": "@notice Swap token0 for token1, or token1 for token0\n @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n @param recipient The address to receive the output of the swap\n @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
									},
									"functionSelector": "128acb08",
									"id": 144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "4822:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4844:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "4836:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4836:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nameLocation": "4868:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "4863:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 130,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "amountSpecified",
												"nameLocation": "4895:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "4888:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 132,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4888:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "sqrtPriceLimitX96",
												"nameLocation": "4928:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "4920:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 134,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4920:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4970:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "4955:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 136,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4955:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4826:154:2"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5006:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "4999:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 139,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4999:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5022:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "5015:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 141,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5015:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4998:32:2"
									},
									"scope": 163,
									"src": "4813:218:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "5037:657:2",
										"text": "@notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n with 0 amount{0,1} and sending the donation amount(s) from the callback\n @param recipient The address which will receive the token0 and token1 amounts\n @param amount0 The amount of token0 to send\n @param amount1 The amount of token1 to send\n @param data Any data to be passed through to the callback"
									},
									"functionSelector": "490e6cbc",
									"id": 156,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flash",
									"nameLocation": "5708:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5731:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "5723:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5723:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5758:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "5750:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5750:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5783:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "5775:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5775:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5815:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "5800:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 152,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5800:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5713:112:2"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5834:0:2"
									},
									"scope": 163,
									"src": "5699:136:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 157,
										"nodeType": "StructuredDocumentation",
										"src": "5841:367:2",
										"text": "@notice Increase the maximum number of price and liquidity observations that this pool will store\n @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n the input observationCardinalityNext.\n @param observationCardinalityNext The desired minimum number of observations for the pool to store"
									},
									"functionSelector": "32148f67",
									"id": 162,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseObservationCardinalityNext",
									"nameLocation": "6222:34:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "6264:26:2",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "6257:33:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 158,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6256:35:2"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6300:0:2"
									},
									"scope": 163,
									"src": "6213:88:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 164,
							"src": "173:6130:2",
							"usedErrors": []
						}
					],
					"src": "45:6259:2"
				},
				"id": 2
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolDerivedState": [
							194
						]
					},
					"id": 195,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 165,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolDerivedState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 166,
								"nodeType": "StructuredDocumentation",
								"src": "71:222:3",
								"text": "@title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs."
							},
							"fullyImplemented": false,
							"id": 194,
							"linearizedBaseContracts": [
								194
							],
							"name": "IUniswapV3PoolDerivedState",
							"nameLocation": "303:26:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "336:1045:3",
										"text": "@notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n timestamp"
									},
									"functionSelector": "883bdbfd",
									"id": 179,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observe",
									"nameLocation": "1395:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "secondsAgos",
												"nameLocation": "1421:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1403:29:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 168,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "1403:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 169,
													"nodeType": "ArrayTypeName",
													"src": "1403:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1402:31:3"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "tickCumulatives",
												"nameLocation": "1496:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1481:30:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
													"typeString": "int56[]"
												},
												"typeName": {
													"baseType": {
														"id": 172,
														"name": "int56",
														"nodeType": "ElementaryTypeName",
														"src": "1481:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"id": 173,
													"nodeType": "ArrayTypeName",
													"src": "1481:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
														"typeString": "int56[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128s",
												"nameLocation": "1530:34:3",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1513:51:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 175,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "1513:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 176,
													"nodeType": "ArrayTypeName",
													"src": "1513:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1480:85:3"
									},
									"scope": 194,
									"src": "1386:180:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "1572:771:3",
										"text": "@notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n snapshot is taken and the second snapshot is taken.\n @param tickLower The lower tick of the range\n @param tickUpper The upper tick of the range\n @return tickCumulativeInside The snapshot of the tick accumulator for the range\n @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n @return secondsInside The snapshot of seconds per liquidity for the range"
									},
									"functionSelector": "a38807f2",
									"id": 193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "snapshotCumulativesInside",
									"nameLocation": "2357:25:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2389:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "2383:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 181,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2383:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2406:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "2400:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 183,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2400:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2382:34:3"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "tickCumulativeInside",
												"nameLocation": "2483:20:3",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "2477:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 186,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "2477:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "secondsPerLiquidityInsideX128",
												"nameLocation": "2525:29:3",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "2517:37:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 188,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2517:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "secondsInside",
												"nameLocation": "2575:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "2568:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 190,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2463:135:3"
									},
									"scope": 194,
									"src": "2348:251:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 195,
							"src": "293:2308:3",
							"usedErrors": []
						}
					],
					"src": "45:2557:3"
				},
				"id": 3
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
					"exportedSymbols": {
						"IUniswapV3PoolEvents": [
							313
						]
					},
					"id": 314,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolEvents",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "71:88:4",
								"text": "@title Events emitted by a pool\n @notice Contains all events emitted by the pool"
							},
							"fullyImplemented": true,
							"id": 313,
							"linearizedBaseContracts": [
								313
							],
							"name": "IUniswapV3PoolEvents",
							"nameLocation": "169:20:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "196:344:4",
										"text": "@notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
									},
									"eventSelector": "98636036cb66a9c19a37435efc1e90142190214e8abeb821bdba3f2990dd4c95",
									"id": 204,
									"name": "Initialize",
									"nameLocation": "551:10:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "570:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "562:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 199,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "590:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "584:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 201,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "584:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "561:34:4"
									},
									"src": "545:51:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "602:551:4",
										"text": "@notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"
									},
									"eventSelector": "7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde",
									"id": 221,
									"name": "Mint",
									"nameLocation": "1164:4:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1186:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1178:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1218:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1202:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1202:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1247:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1233:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 210,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1233:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "1280:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1266:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 212,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1266:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1307:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1299:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 214,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1331:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1323:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1356:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1348:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1168:201:4"
									},
									"src": "1158:212:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "1376:493:4",
										"text": "@notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"
									},
									"eventSelector": "70935338e69775456a85ddef226c395fb668b63fa0115f5f20610b388e6ca9c0",
									"id": 236,
									"name": "Collect",
									"nameLocation": "1880:7:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1913:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "1897:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1897:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1936:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "1928:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1928:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1969:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "1955:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 227,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1955:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2002:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "1988:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 229,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1988:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2029:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2021:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 231,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2054:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2046:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 233,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2046:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1887:180:4"
									},
									"src": "1874:194:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "2074:523:4",
										"text": "@notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"
									},
									"eventSelector": "0c396cd989a39f4459b5fa1aed6a9a8dcdbc45908acfd67e028cd568da98982c",
									"id": 251,
									"name": "Burn",
									"nameLocation": "2608:4:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2638:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2622:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2622:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2667:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2653:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 240,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2653:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2700:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2686:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 242,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2686:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2719:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 244,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2751:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2743:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2743:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2776:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2768:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:177:4"
									},
									"src": "2602:188:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "2796:600:4",
										"text": "@notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap"
									},
									"eventSelector": "c42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca67",
									"id": 268,
									"name": "Swap",
									"nameLocation": "3407:4:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3437:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3421:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3421:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3469:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3453:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3453:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3495:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3488:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 257,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3488:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3519:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3512:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 259,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3512:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "3544:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3536:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 261,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3536:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3574:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3566:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 263,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "3599:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3593:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 265,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3593:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3411:198:4"
									},
									"src": "3401:209:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "3616:562:4",
										"text": "@notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"
									},
									"eventSelector": "bdbdb71d7860376ba52b25a5028beea23581364a40522f6bcfb86bb1f2dca633",
									"id": 283,
									"name": "Flash",
									"nameLocation": "4189:5:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4220:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "4204:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4204:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4252:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "4236:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "4279:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "4271:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4271:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "4304:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "4296:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4296:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid0",
												"nameLocation": "4329:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "4321:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4321:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid1",
												"nameLocation": "4352:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "4344:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4344:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4194:169:4"
									},
									"src": "4183:181:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "4370:451:4",
										"text": "@notice Emitted by the pool for increases to the number of observations that can be stored\n @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n just before a mint/swap/burn.\n @param observationCardinalityNextOld The previous value of the next observation cardinality\n @param observationCardinalityNextNew The updated value of the next observation cardinality"
									},
									"eventSelector": "ac49e518f90a358f652e4400164f05a5d8f7e35e7747279bc3a93dbf584e125a",
									"id": 290,
									"name": "IncreaseObservationCardinalityNext",
									"nameLocation": "4832:34:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextOld",
												"nameLocation": "4883:29:4",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "4876:36:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 285,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4876:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextNew",
												"nameLocation": "4929:29:4",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "4922:36:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 287,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4922:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4866:98:4"
									},
									"src": "4826:139:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "4971:370:4",
										"text": "@notice Emitted when the protocol fee is changed by the pool\n @param feeProtocol0Old The previous value of the token0 protocol fee\n @param feeProtocol1Old The previous value of the token1 protocol fee\n @param feeProtocol0New The updated value of the token0 protocol fee\n @param feeProtocol1New The updated value of the token1 protocol fee"
									},
									"eventSelector": "973d8d92bb299f4af6ce49b52a8adb85ae46b9f214c4c4fc06ac77401237b133",
									"id": 301,
									"name": "SetFeeProtocol",
									"nameLocation": "5352:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0Old",
												"nameLocation": "5373:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "5367:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 292,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5367:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1Old",
												"nameLocation": "5396:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "5390:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 294,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5390:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0New",
												"nameLocation": "5419:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "5413:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 296,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5413:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1New",
												"nameLocation": "5442:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "5436:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 298,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5436:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5366:92:4"
									},
									"src": "5346:113:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "5465:384:4",
										"text": "@notice Emitted when the collected protocol fees are withdrawn by the factory owner\n @param sender The address that collects the protocol fees\n @param recipient The address that receives the collected protocol fees\n @param amount0 The amount of token0 protocol fees that is withdrawn\n @param amount0 The amount of token1 protocol fees that is withdrawn"
									},
									"eventSelector": "596b573906218d3411850b26a6b437d6c4522fdb43d2d2386263f86d50b8b151",
									"id": 312,
									"name": "CollectProtocol",
									"nameLocation": "5860:15:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5892:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5876:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5876:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5916:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5900:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5935:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5927:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 307,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5927:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5952:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5944:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 309,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5944:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5875:85:4"
									},
									"src": "5854:107:4"
								}
							],
							"scope": 314,
							"src": "159:5804:4",
							"usedErrors": []
						}
					],
					"src": "45:5919:4"
				},
				"id": 4
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
					"exportedSymbols": {
						"IUniswapV3PoolImmutables": [
							353
						]
					},
					"id": 354,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 315,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolImmutables",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 316,
								"nodeType": "StructuredDocumentation",
								"src": "71:153:5",
								"text": "@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
							},
							"fullyImplemented": false,
							"id": 353,
							"linearizedBaseContracts": [
								353
							],
							"name": "IUniswapV3PoolImmutables",
							"nameLocation": "234:24:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "265:138:5",
										"text": "@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"
									},
									"functionSelector": "c45a0155",
									"id": 322,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "417:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "424:2:5"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "450:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "450:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "449:9:5"
									},
									"scope": 353,
									"src": "408:51:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "465:113:5",
										"text": "@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "0dfe1681",
									"id": 328,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "592:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "598:2:5"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "624:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:9:5"
									},
									"scope": 353,
									"src": "583:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "639:114:5",
										"text": "@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "d21220a7",
									"id": 334,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "767:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "773:2:5"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "799:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:9:5"
									},
									"scope": 353,
									"src": "758:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "814:84:5",
										"text": "@notice The pool's fee in hundredths of a bip, i.e. 1e-6\n @return The fee"
									},
									"functionSelector": "ddca3f43",
									"id": 340,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fee",
									"nameLocation": "912:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "915:2:5"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "941:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 337,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "941:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "940:8:5"
									},
									"scope": 353,
									"src": "903:46:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "955:358:5",
										"text": "@notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"
									},
									"functionSelector": "d0c93a7c",
									"id": 346,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickSpacing",
									"nameLocation": "1327:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1338:2:5"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1364:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 343,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1364:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1363:7:5"
									},
									"scope": 353,
									"src": "1318:53:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "1377:363:5",
										"text": "@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"
									},
									"functionSelector": "70cf754a",
									"id": 352,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxLiquidityPerTick",
									"nameLocation": "1754:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:5"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "1799:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 349,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1798:9:5"
									},
									"scope": 353,
									"src": "1745:63:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 354,
							"src": "224:1586:5",
							"usedErrors": []
						}
					],
					"src": "45:1766:5"
				},
				"id": 5
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolOwnerActions": [
							379
						]
					},
					"id": 380,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 355,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolOwnerActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 356,
								"nodeType": "StructuredDocumentation",
								"src": "71:116:6",
								"text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
							},
							"fullyImplemented": false,
							"id": 379,
							"linearizedBaseContracts": [
								379
							],
							"name": "IUniswapV3PoolOwnerActions",
							"nameLocation": "197:26:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 357,
										"nodeType": "StructuredDocumentation",
										"src": "230:205:6",
										"text": "@notice Set the denominator of the protocol's % share of the fees\n @param feeProtocol0 new protocol fee for token0 of the pool\n @param feeProtocol1 new protocol fee for token1 of the pool"
									},
									"functionSelector": "8206a4d1",
									"id": 364,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeProtocol",
									"nameLocation": "449:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "feeProtocol0",
												"nameLocation": "470:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "464:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 358,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "464:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "feeProtocol1",
												"nameLocation": "490:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "484:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 360,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "484:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "463:40:6"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:0:6"
									},
									"scope": 379,
									"src": "440:73:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "519:483:6",
										"text": "@notice Collect the protocol fee accrued to the pool\n @param recipient The address to which collected protocol fees should be sent\n @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n @return amount0 The protocol fee collected in token0\n @return amount1 The protocol fee collected in token1"
									},
									"functionSelector": "85b66729",
									"id": 378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectProtocol",
									"nameLocation": "1016:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1049:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "1041:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1041:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nameLocation": "1076:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "1068:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 368,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1068:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nameLocation": "1110:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "1102:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 370,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1031:101:6"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1159:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "1151:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 373,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1176:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "1168:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 375,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1150:34:6"
									},
									"scope": 379,
									"src": "1007:178:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 380,
							"src": "187:1000:6",
							"usedErrors": []
						}
					],
					"src": "45:1143:6"
				},
				"id": 6
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolState": [
							487
						]
					},
					"id": 488,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 381,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 382,
								"nodeType": "StructuredDocumentation",
								"src": "71:169:7",
								"text": "@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"
							},
							"fullyImplemented": false,
							"id": 487,
							"linearizedBaseContracts": [
								487
							],
							"name": "IUniswapV3PoolState",
							"nameLocation": "250:19:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "276:1140:7",
										"text": "@notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n when accessed externally.\n @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n tick The current tick of the pool, i.e. according to the last tick transition that was run.\n This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n boundary.\n observationIndex The index of the last oracle observation that was written,\n observationCardinality The current maximum number of observations stored in the pool,\n observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n feeProtocol The protocol fee for both tokens of the pool.\n Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n unlocked Whether the pool is currently locked to reentrancy"
									},
									"functionSelector": "3850c7bd",
									"id": 400,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slot0",
									"nameLocation": "1430:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1435:2:7"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1506:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1498:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 385,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1498:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "1538:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1532:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 387,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1532:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "observationIndex",
												"nameLocation": "1563:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1556:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 389,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1556:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "observationCardinality",
												"nameLocation": "1600:22:7",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1593:29:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 391,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1593:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "1643:26:7",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1636:33:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 393,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1636:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "feeProtocol",
												"nameLocation": "1689:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1683:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 395,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1683:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "unlocked",
												"nameLocation": "1719:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1714:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1714:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1484:253:7"
									},
									"scope": 487,
									"src": "1421:317:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "1744:168:7",
										"text": "@notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "f3058399",
									"id": 406,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal0X128",
									"nameLocation": "1926:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1946:2:7"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "1972:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1972:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1971:9:7"
									},
									"scope": 487,
									"src": "1917:64:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "1987:168:7",
										"text": "@notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "46141319",
									"id": 412,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal1X128",
									"nameLocation": "2169:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2189:2:7"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2215:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2215:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2214:9:7"
									},
									"scope": 487,
									"src": "2160:64:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "2230:147:7",
										"text": "@notice The amounts of token0 and token1 that are owed to the protocol\n @dev Protocol fees will never exceed uint128 max in either token"
									},
									"functionSelector": "1ad8b03b",
									"id": 420,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "protocolFees",
									"nameLocation": "2391:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2403:2:7"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "2437:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "2429:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 415,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "2453:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "2445:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 417,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2428:32:7"
									},
									"scope": 487,
									"src": "2382:79:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "2467:150:7",
										"text": "@notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks"
									},
									"functionSelector": "1a686502",
									"id": 426,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidity",
									"nameLocation": "2631:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:2:7"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2666:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 423,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:9:7"
									},
									"scope": 487,
									"src": "2622:53:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "2681:1244:7",
										"text": "@notice Look up information about a specific tick in the pool\n @param tick The tick to look up\n @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n tick upper,\n liquidityNet how much liquidity changes when the pool price crosses the tick,\n feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n secondsOutside the seconds spent on the other side of the tick from the current tick,\n initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."
									},
									"functionSelector": "f30dba93",
									"id": 448,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ticks",
									"nameLocation": "3939:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "3951:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3945:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 428,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3945:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3944:12:7"
									},
									"returnParameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "liquidityGross",
												"nameLocation": "4025:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "4017:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 431,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4017:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "liquidityNet",
												"nameLocation": "4060:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "4053:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 433,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "4053:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "feeGrowthOutside0X128",
												"nameLocation": "4094:21:7",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "4086:29:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "feeGrowthOutside1X128",
												"nameLocation": "4137:21:7",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "4129:29:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4129:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "tickCumulativeOutside",
												"nameLocation": "4178:21:7",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "4172:27:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 439,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "4172:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "secondsPerLiquidityOutsideX128",
												"nameLocation": "4221:30:7",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "4213:38:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 441,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4213:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "secondsOutside",
												"nameLocation": "4272:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "4265:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 443,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4265:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "4305:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "4300:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 445,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4300:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:323:7"
									},
									"scope": 487,
									"src": "3930:397:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 449,
										"nodeType": "StructuredDocumentation",
										"src": "4333:99:7",
										"text": "@notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
									},
									"functionSelector": "5339c296",
									"id": 456,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickBitmap",
									"nameLocation": "4446:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "wordPosition",
												"nameLocation": "4463:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "4457:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 450,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "4457:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:20:7"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "4500:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4500:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4499:9:7"
									},
									"scope": 487,
									"src": "4437:72:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "4515:700:7",
										"text": "@notice Returns the information about a position by the position's key\n @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n @return _liquidity The amount of liquidity in the position,\n Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
									},
									"functionSelector": "514ea4bf",
									"id": 472,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nameLocation": "5229:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "5247:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "5239:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 458,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5239:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5238:13:7"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "_liquidity",
												"nameLocation": "5320:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "5312:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 461,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5312:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nameLocation": "5352:24:7",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "5344:32:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5344:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nameLocation": "5398:24:7",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "5390:32:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5390:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nameLocation": "5444:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "5436:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 467,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5436:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nameLocation": "5477:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "5469:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 469,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5469:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5298:200:7"
									},
									"scope": 487,
									"src": "5220:279:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "5505:749:7",
										"text": "@notice Returns data about a specific observation index\n @param index The element of the observations array to fetch\n @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n ago, rather than at a specific index in the array.\n @return blockTimestamp The timestamp of the observation,\n Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n Returns initialized whether the observation has been initialized and the values are safe to use"
									},
									"functionSelector": "252c09d7",
									"id": 486,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observations",
									"nameLocation": "6268:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "6289:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "6281:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6281:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6280:15:7"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "blockTimestamp",
												"nameLocation": "6363:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "6356:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 477,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6356:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "tickCumulative",
												"nameLocation": "6397:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "6391:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 479,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "6391:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128",
												"nameLocation": "6433:33:7",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "6425:41:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 481,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6425:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "6485:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "6480:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 483,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6480:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6342:164:7"
									},
									"scope": 487,
									"src": "6259:248:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 488,
							"src": "240:6269:7",
							"usedErrors": []
						}
					],
					"src": "45:6465:7"
				},
				"id": 7
			},
			"contracts/Master.sol": {
				"ast": {
					"absolutePath": "contracts/Master.sol",
					"exportedSymbols": {
						"Master": [
							570
						]
					},
					"id": 571,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 489,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Master",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 570,
							"linearizedBaseContracts": [
								570
							],
							"name": "Master",
							"nameLocation": "34:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "9ccc903d",
									"id": 495,
									"mutability": "mutable",
									"name": "PoolAddress",
									"nameLocation": "63:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 570,
									"src": "47:42:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 490,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "47:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307830",
												"id": 493,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "85:3:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0x0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"id": 492,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "77:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 491,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "77:7:8",
												"typeDescriptions": {}
											}
										},
										"id": 494,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "77:12:8",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7abc3964",
									"id": 501,
									"mutability": "mutable",
									"name": "CommissionDestination",
									"nameLocation": "111:21:8",
									"nodeType": "VariableDeclaration",
									"scope": 570,
									"src": "95:52:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 496,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "95:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307830",
												"id": 499,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "143:3:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0x0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"id": 498,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "135:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 497,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "135:7:8",
												"typeDescriptions": {}
											}
										},
										"id": 500,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "135:12:8",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e67cdafd",
									"id": 507,
									"mutability": "mutable",
									"name": "CoverAddress",
									"nameLocation": "169:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 570,
									"src": "153:43:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 502,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "153:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307830",
												"id": 505,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "192:3:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0x0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"id": 504,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "184:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 503,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "184:7:8",
												"typeDescriptions": {}
											}
										},
										"id": 506,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "184:12:8",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "88ea0751",
									"id": 513,
									"mutability": "mutable",
									"name": "MCRAddress",
									"nameLocation": "218:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 570,
									"src": "202:41:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 508,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "202:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307830",
												"id": 511,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "239:3:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0x0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"id": 510,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "231:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 509,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "231:7:8",
												"typeDescriptions": {}
											}
										},
										"id": 512,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "231:12:8",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ff5f1b9f",
									"id": 519,
									"mutability": "mutable",
									"name": "AssessmentAddress",
									"nameLocation": "265:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 570,
									"src": "249:48:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 514,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "249:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307830",
												"id": 517,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "293:3:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0x0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"id": 516,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "285:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 515,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "285:7:8",
												"typeDescriptions": {}
											}
										},
										"id": 518,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "285:12:8",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "347:32:8",
										"statements": [
											{
												"expression": {
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 524,
														"name": "PoolAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "357:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 525,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "371:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "357:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "357:15:8"
											}
										]
									},
									"functionSelector": "e9e15b4f",
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setPoolAddress",
									"nameLocation": "313:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "337:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "329:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "329:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "328:11:8"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "347:0:8"
									},
									"scope": 570,
									"src": "304:75:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 538,
										"nodeType": "Block",
										"src": "436:42:8",
										"statements": [
											{
												"expression": {
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 534,
														"name": "CommissionDestination",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "446:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 535,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "470:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "446:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "446:25:8"
											}
										]
									},
									"functionSelector": "6178cfca",
									"id": 539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setCommissionDestination",
									"nameLocation": "393:24:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "427:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "419:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "419:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "418:11:8"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "436:0:8"
									},
									"scope": 570,
									"src": "384:94:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "527:33:8",
										"statements": [
											{
												"expression": {
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 544,
														"name": "CoverAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 507,
														"src": "537:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 545,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 541,
														"src": "552:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "537:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "537:16:8"
											}
										]
									},
									"functionSelector": "e07ee06d",
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setCoverAddress",
									"nameLocation": "492:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "517:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "509:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "509:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "508:11:8"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "527:0:8"
									},
									"scope": 570,
									"src": "483:77:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "607:31:8",
										"statements": [
											{
												"expression": {
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 554,
														"name": "MCRAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "617:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 555,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 551,
														"src": "630:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "617:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 557,
												"nodeType": "ExpressionStatement",
												"src": "617:14:8"
											}
										]
									},
									"functionSelector": "7346d3f8",
									"id": 559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setMCRAddress",
									"nameLocation": "574:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "597:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "589:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "589:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "588:11:8"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "607:0:8"
									},
									"scope": 570,
									"src": "565:73:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 568,
										"nodeType": "Block",
										"src": "691:38:8",
										"statements": [
											{
												"expression": {
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 564,
														"name": "AssessmentAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "701:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 565,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 561,
														"src": "721:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "701:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 567,
												"nodeType": "ExpressionStatement",
												"src": "701:21:8"
											}
										]
									},
									"functionSelector": "75924419",
									"id": 569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setAssessmentAddress",
									"nameLocation": "652:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "681:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "673:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "673:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:11:8"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "691:0:8"
									},
									"scope": 570,
									"src": "643:86:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 571,
							"src": "25:706:8",
							"usedErrors": []
						}
					],
					"src": "0:731:8"
				},
				"id": 8
			},
			"contracts/cover/Cover.sol": {
				"ast": {
					"absolutePath": "contracts/cover/Cover.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						],
						"BuyCoverParams": [
							953
						],
						"Cover": [
							933
						],
						"CoverData": [
							976
						],
						"ETH_ASSET_ID": [
							581
						],
						"ICover": [
							1024
						],
						"ICoverNFT": [
							1068
						],
						"IERC165": [
							1228
						],
						"IERC721": [
							1216
						],
						"IMCR": [
							1078
						],
						"IPool": [
							1099
						],
						"IUniswapV3Pool": [
							67
						],
						"IUniswapV3PoolActions": [
							163
						],
						"IUniswapV3PoolDerivedState": [
							194
						],
						"IUniswapV3PoolEvents": [
							313
						],
						"IUniswapV3PoolImmutables": [
							353
						],
						"IUniswapV3PoolOwnerActions": [
							379
						],
						"IUniswapV3PoolState": [
							487
						],
						"Master": [
							570
						],
						"commissionRate": [
							584
						]
					},
					"id": 934,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 572,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".",
								"*"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:9"
						},
						{
							"absolutePath": "contracts/interfaces/ICover.sol",
							"file": "../interfaces/ICover.sol",
							"id": 573,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 934,
							"sourceUnit": 1025,
							"src": "24:34:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Master.sol",
							"file": "../Master.sol",
							"id": 574,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 934,
							"sourceUnit": 571,
							"src": "59:23:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IPool.sol",
							"file": "../interfaces/IPool.sol",
							"id": 575,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 934,
							"sourceUnit": 1100,
							"src": "83:33:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IMCR.sol",
							"file": "../interfaces/IMCR.sol",
							"id": 576,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 934,
							"sourceUnit": 1079,
							"src": "117:32:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"id": 577,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 934,
							"sourceUnit": 68,
							"src": "151:66:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"id": 578,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 934,
							"sourceUnit": 46,
							"src": "218:76:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"constant": true,
							"id": 581,
							"mutability": "constant",
							"name": "ETH_ASSET_ID",
							"nameLocation": "393:12:9",
							"nodeType": "VariableDeclaration",
							"scope": 934,
							"src": "377:32:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint32",
								"typeString": "uint32"
							},
							"typeName": {
								"id": 579,
								"name": "uint32",
								"nodeType": "ElementaryTypeName",
								"src": "377:6:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint32",
									"typeString": "uint32"
								}
							},
							"value": {
								"hexValue": "30",
								"id": 580,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "408:1:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_0_by_1",
									"typeString": "int_const 0"
								},
								"value": "0"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 584,
							"mutability": "constant",
							"name": "commissionRate",
							"nameLocation": "427:14:9",
							"nodeType": "VariableDeclaration",
							"scope": 934,
							"src": "411:36:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint32",
								"typeString": "uint32"
							},
							"typeName": {
								"id": 582,
								"name": "uint32",
								"nodeType": "ElementaryTypeName",
								"src": "411:6:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint32",
									"typeString": "uint32"
								}
							},
							"value": {
								"hexValue": "313031",
								"id": 583,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "444:3:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_101_by_1",
									"typeString": "int_const 101"
								},
								"value": "101"
							},
							"visibility": "internal"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 585,
										"name": "ICover",
										"nameLocations": [
											"474:6:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1024,
										"src": "474:6:9"
									},
									"id": 586,
									"nodeType": "InheritanceSpecifier",
									"src": "474:6:9"
								}
							],
							"canonicalName": "Cover",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933,
								1024
							],
							"name": "Cover",
							"nameLocation": "465:5:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 591,
									"mutability": "mutable",
									"name": "_coverData",
									"nameLocation": "522:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 933,
									"src": "487:45:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_CoverData_$976_storage_$",
										"typeString": "mapping(uint256 => struct CoverData)"
									},
									"typeName": {
										"id": 590,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 587,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "495:4:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "487:26:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_CoverData_$976_storage_$",
											"typeString": "mapping(uint256 => struct CoverData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 589,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 588,
												"name": "CoverData",
												"nameLocations": [
													"503:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 976,
												"src": "503:9:9"
											},
											"referencedDeclaration": 976,
											"src": "503:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_CoverData_$976_storage_ptr",
												"typeString": "struct CoverData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "7e9e1abe",
									"id": 593,
									"mutability": "mutable",
									"name": "activeCoverAmount",
									"nameLocation": "617:17:9",
									"nodeType": "VariableDeclaration",
									"scope": 933,
									"src": "602:32:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 592,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "602:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ee97f7f3",
									"id": 596,
									"mutability": "mutable",
									"name": "master",
									"nameLocation": "655:6:9",
									"nodeType": "VariableDeclaration",
									"scope": 933,
									"src": "641:20:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_Master_$570",
										"typeString": "contract Master"
									},
									"typeName": {
										"id": 595,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 594,
											"name": "Master",
											"nameLocations": [
												"641:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 570,
											"src": "641:6:9"
										},
										"referencedDeclaration": 570,
										"src": "641:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Master_$570",
											"typeString": "contract Master"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "42e53fcf",
									"id": 599,
									"mutability": "mutable",
									"name": "coverNFT",
									"nameLocation": "685:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 933,
									"src": "667:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ICoverNFT_$1068",
										"typeString": "contract ICoverNFT"
									},
									"typeName": {
										"id": 598,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 597,
											"name": "ICoverNFT",
											"nameLocations": [
												"667:9:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1068,
											"src": "667:9:9"
										},
										"referencedDeclaration": 1068,
										"src": "667:9:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ICoverNFT_$1068",
											"typeString": "contract ICoverNFT"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "778:170:9",
										"statements": [
											{
												"expression": {
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 607,
														"name": "coverNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "850:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ICoverNFT_$1068",
															"typeString": "contract ICoverNFT"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 608,
														"name": "_coverNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "861:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ICoverNFT_$1068",
															"typeString": "contract ICoverNFT"
														}
													},
													"src": "850:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ICoverNFT_$1068",
														"typeString": "contract ICoverNFT"
													}
												},
												"id": 610,
												"nodeType": "ExpressionStatement",
												"src": "850:20:9"
											},
											{
												"expression": {
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 611,
														"name": "activeCoverAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "880:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 612,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "900:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "880:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 614,
												"nodeType": "ExpressionStatement",
												"src": "880:21:9"
											},
											{
												"expression": {
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 615,
														"name": "master",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "911:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Master_$570",
															"typeString": "contract Master"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 617,
																"name": "masterAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 604,
																"src": "927:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 616,
															"name": "Master",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "920:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Master_$570_$",
																"typeString": "type(contract Master)"
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "920:21:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Master_$570",
															"typeString": "contract Master"
														}
													},
													"src": "911:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Master_$570",
														"typeString": "contract Master"
													}
												},
												"id": 620,
												"nodeType": "ExpressionStatement",
												"src": "911:30:9"
											}
										]
									},
									"id": 622,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "_coverNFT",
												"nameLocation": "731:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "721:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ICoverNFT_$1068",
													"typeString": "contract ICoverNFT"
												},
												"typeName": {
													"id": 601,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 600,
														"name": "ICoverNFT",
														"nameLocations": [
															"721:9:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1068,
														"src": "721:9:9"
													},
													"referencedDeclaration": 1068,
													"src": "721:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ICoverNFT_$1068",
														"typeString": "contract ICoverNFT"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "masterAddress",
												"nameLocation": "758:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "750:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "750:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "711:66:9"
									},
									"returnParameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "778:0:9"
									},
									"scope": 933,
									"src": "700:248:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1005
									],
									"body": {
										"id": 634,
										"nodeType": "Block",
										"src": "1032:43:9",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 630,
														"name": "_coverData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "1049:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_CoverData_$976_storage_$",
															"typeString": "mapping(uint256 => struct CoverData storage ref)"
														}
													},
													"id": 632,
													"indexExpression": {
														"id": 631,
														"name": "coverid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "1060:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1049:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CoverData_$976_storage",
														"typeString": "struct CoverData storage ref"
													}
												},
												"functionReturnParameters": 629,
												"id": 633,
												"nodeType": "Return",
												"src": "1042:26:9"
											}
										]
									},
									"functionSelector": "00407d2a",
									"id": 635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCoverData",
									"nameLocation": "962:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "coverid",
												"nameLocation": "980:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "975:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "975:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "974:14:9"
									},
									"returnParameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "1013:16:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_CoverData_$976_memory_ptr",
													"typeString": "struct CoverData"
												},
												"typeName": {
													"id": 627,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 626,
														"name": "CoverData",
														"nameLocations": [
															"1013:9:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 976,
														"src": "1013:9:9"
													},
													"referencedDeclaration": 976,
													"src": "1013:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CoverData_$976_storage_ptr",
														"typeString": "struct CoverData"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1012:19:9"
									},
									"scope": 933,
									"src": "953:122:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										984
									],
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "1169:717:9",
										"statements": [
											{
												"expression": {
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 643,
														"name": "coverId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 641,
														"src": "1197:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 646,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1221:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1225:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1221:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 644,
																"name": "coverNFT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 599,
																"src": "1207:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ICoverNFT_$1068",
																	"typeString": "contract ICoverNFT"
																}
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1216:4:9",
															"memberName": "mint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1044,
															"src": "1207:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) external returns (uint256)"
															}
														},
														"id": 648,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1207:25:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1197:35:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 650,
												"nodeType": "ExpressionStatement",
												"src": "1197:35:9"
											},
											{
												"expression": {
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 651,
															"name": "_coverData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "1242:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_CoverData_$976_storage_$",
																"typeString": "mapping(uint256 => struct CoverData storage ref)"
															}
														},
														"id": 653,
														"indexExpression": {
															"id": 652,
															"name": "coverId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "1253:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1242:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_CoverData_$976_storage",
															"typeString": "struct CoverData storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1274:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"arguments": [
																	{
																		"id": 657,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 638,
																		"src": "1294:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BuyCoverParams_$953_calldata_ptr",
																			"typeString": "struct BuyCoverParams calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_BuyCoverParams_$953_calldata_ptr",
																			"typeString": "struct BuyCoverParams calldata"
																		}
																	],
																	"id": 656,
																	"name": "coverAmountInETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 734,
																	"src": "1277:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_BuyCoverParams_$953_calldata_ptr_$returns$_t_uint256_$",
																		"typeString": "function (struct BuyCoverParams calldata) returns (uint256)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1277:24:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 659,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1345:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1351:9:9",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1345:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 661,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "1383:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BuyCoverParams_$953_calldata_ptr",
																		"typeString": "struct BuyCoverParams calldata"
																	}
																},
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1390:6:9",
																"memberName": "period",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 950,
																"src": "1383:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 663,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "1422:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BuyCoverParams_$953_calldata_ptr",
																		"typeString": "struct BuyCoverParams calldata"
																	}
																},
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1429:6:9",
																"memberName": "token0",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 938,
																"src": "1422:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"id": 665,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "1449:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BuyCoverParams_$953_calldata_ptr",
																		"typeString": "struct BuyCoverParams calldata"
																	}
																},
																"id": 666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1456:6:9",
																"memberName": "token1",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 940,
																"src": "1449:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"id": 667,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "1476:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BuyCoverParams_$953_calldata_ptr",
																		"typeString": "struct BuyCoverParams calldata"
																	}
																},
																"id": 668,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1483:9:9",
																"memberName": "token0Qty",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 944,
																"src": "1476:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 669,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "1506:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BuyCoverParams_$953_calldata_ptr",
																		"typeString": "struct BuyCoverParams calldata"
																	}
																},
																"id": 670,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1513:9:9",
																"memberName": "token1Qty",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 942,
																"src": "1506:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 671,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "1536:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BuyCoverParams_$953_calldata_ptr",
																		"typeString": "struct BuyCoverParams calldata"
																	}
																},
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1543:15:9",
																"memberName": "lowerBoundRatio",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 946,
																"src": "1536:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 673,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "1572:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BuyCoverParams_$953_calldata_ptr",
																		"typeString": "struct BuyCoverParams calldata"
																	}
																},
																"id": 674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1579:15:9",
																"memberName": "upperBoundRatio",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 948,
																"src": "1572:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 675,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "1608:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BuyCoverParams_$953_calldata_ptr",
																		"typeString": "struct BuyCoverParams calldata"
																	}
																},
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1615:7:9",
																"memberName": "pairStr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 952,
																"src": "1608:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_calldata_ptr",
																	"typeString": "string calldata"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_string_calldata_ptr",
																	"typeString": "string calldata"
																}
															],
															"id": 654,
															"name": "CoverData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "1264:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_CoverData_$976_storage_ptr_$",
																"typeString": "type(struct CoverData storage pointer)"
															}
														},
														"id": 677,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1264:368:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_CoverData_$976_memory_ptr",
															"typeString": "struct CoverData memory"
														}
													},
													"src": "1242:390:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CoverData_$976_storage",
														"typeString": "struct CoverData storage ref"
													}
												},
												"id": 679,
												"nodeType": "ExpressionStatement",
												"src": "1242:390:9"
											},
											{
												"assignments": [
													681
												],
												"declarations": [
													{
														"constant": false,
														"id": 681,
														"mutability": "mutable",
														"name": "premiumToPay",
														"nameLocation": "1647:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 712,
														"src": "1642:17:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 680,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1642:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 685,
												"initialValue": {
													"arguments": [
														{
															"id": 683,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "1673:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BuyCoverParams_$953_calldata_ptr",
																"typeString": "struct BuyCoverParams calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_BuyCoverParams_$953_calldata_ptr",
																"typeString": "struct BuyCoverParams calldata"
															}
														],
														"id": 682,
														"name": "coverPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 745,
														"src": "1662:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_BuyCoverParams_$953_calldata_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct BuyCoverParams calldata) returns (uint256)"
														}
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1662:18:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1642:38:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 687,
															"name": "premiumToPay",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "1706:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 688,
															"name": "ETH_ASSET_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "1719:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														],
														"id": 686,
														"name": "retrievePayment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "1690:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (uint256,uint256) returns (bool)"
														}
													},
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1690:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 690,
												"nodeType": "ExpressionStatement",
												"src": "1690:42:9"
											},
											{
												"expression": {
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 691,
														"name": "activeCoverAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "1742:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"baseExpression": {
																"id": 692,
																"name": "_coverData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 591,
																"src": "1763:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_CoverData_$976_storage_$",
																	"typeString": "mapping(uint256 => struct CoverData storage ref)"
																}
															},
															"id": 694,
															"indexExpression": {
																"id": 693,
																"name": "coverId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 641,
																"src": "1774:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1763:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CoverData_$976_storage",
																"typeString": "struct CoverData storage ref"
															}
														},
														"id": 695,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1783:16:9",
														"memberName": "totalClaimAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 957,
														"src": "1763:36:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1742:57:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 697,
												"nodeType": "ExpressionStatement",
												"src": "1742:57:9"
											},
											{
												"assignments": [
													700
												],
												"declarations": [
													{
														"constant": false,
														"id": 700,
														"mutability": "mutable",
														"name": "mcr",
														"nameLocation": "1814:3:9",
														"nodeType": "VariableDeclaration",
														"scope": 712,
														"src": "1809:8:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMCR_$1078",
															"typeString": "contract IMCR"
														},
														"typeName": {
															"id": 699,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 698,
																"name": "IMCR",
																"nameLocations": [
																	"1809:4:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1078,
																"src": "1809:4:9"
															},
															"referencedDeclaration": 1078,
															"src": "1809:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMCR_$1078",
																"typeString": "contract IMCR"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 706,
												"initialValue": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 702,
																	"name": "master",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 596,
																	"src": "1825:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Master_$570",
																		"typeString": "contract Master"
																	}
																},
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1832:10:9",
																"memberName": "MCRAddress",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 513,
																"src": "1825:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																	"typeString": "function () view external returns (address)"
																}
															},
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1825:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 701,
														"name": "IMCR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1078,
														"src": "1820:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IMCR_$1078_$",
															"typeString": "type(contract IMCR)"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1820:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMCR_$1078",
														"typeString": "contract IMCR"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1809:36:9"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 707,
															"name": "mcr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "1855:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMCR_$1078",
																"typeString": "contract IMCR"
															}
														},
														"id": 709,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1859:17:9",
														"memberName": "updateMCRInternal",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1077,
														"src": "1855:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
															"typeString": "function () external"
														}
													},
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1855:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "1855:23:9"
											}
										]
									},
									"functionSelector": "a71467a8",
									"id": 713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyCover",
									"nameLocation": "1089:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1122:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "1098:30:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BuyCoverParams_$953_calldata_ptr",
													"typeString": "struct BuyCoverParams"
												},
												"typeName": {
													"id": 637,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 636,
														"name": "BuyCoverParams",
														"nameLocations": [
															"1098:14:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 953,
														"src": "1098:14:9"
													},
													"referencedDeclaration": 953,
													"src": "1098:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BuyCoverParams_$953_storage_ptr",
														"typeString": "struct BuyCoverParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1097:32:9"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "coverId",
												"nameLocation": "1161:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "1156:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1156:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1155:14:9"
									},
									"scope": 933,
									"src": "1080:806:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										997
									],
									"body": {
										"id": 722,
										"nodeType": "Block",
										"src": "1944:46:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 718,
															"name": "coverNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "1961:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICoverNFT_$1068",
																"typeString": "contract ICoverNFT"
															}
														},
														"id": 719,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1970:11:9",
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1049,
														"src": "1961:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1961:22:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 717,
												"id": 721,
												"nodeType": "Return",
												"src": "1954:29:9"
											}
										]
									},
									"functionSelector": "404730f4",
									"id": 723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "coverDataCount",
									"nameLocation": "1900:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1914:2:9"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "1938:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 715,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1938:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1937:7:9"
									},
									"scope": 933,
									"src": "1891:99:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 733,
										"nodeType": "Block",
										"src": "2081:37:9",
										"statements": [
											{
												"expression": {
													"hexValue": "31303030303030303030303030",
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2098:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000_by_1",
														"typeString": "int_const 1000000000000"
													},
													"value": "1000000000000"
												},
												"functionReturnParameters": 730,
												"id": 732,
												"nodeType": "Return",
												"src": "2091:20:9"
											}
										]
									},
									"functionSelector": "c9b10d3f",
									"id": 734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "coverAmountInETH",
									"nameLocation": "2004:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2045:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "2021:30:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BuyCoverParams_$953_calldata_ptr",
													"typeString": "struct BuyCoverParams"
												},
												"typeName": {
													"id": 725,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 724,
														"name": "BuyCoverParams",
														"nameLocations": [
															"2021:14:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 953,
														"src": "2021:14:9"
													},
													"referencedDeclaration": 953,
													"src": "2021:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BuyCoverParams_$953_storage_ptr",
														"typeString": "struct BuyCoverParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2020:32:9"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2074:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "2069:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2069:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:13:9"
									},
									"scope": 933,
									"src": "1995:123:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										992
									],
									"body": {
										"id": 744,
										"nodeType": "Block",
										"src": "2202:37:9",
										"statements": [
											{
												"expression": {
													"hexValue": "31303030303030303030303030",
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2219:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000_by_1",
														"typeString": "int_const 1000000000000"
													},
													"value": "1000000000000"
												},
												"functionReturnParameters": 741,
												"id": 743,
												"nodeType": "Return",
												"src": "2212:20:9"
											}
										]
									},
									"functionSelector": "6c57b95d",
									"id": 745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "coverPrice",
									"nameLocation": "2132:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2167:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "2143:30:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BuyCoverParams_$953_calldata_ptr",
													"typeString": "struct BuyCoverParams"
												},
												"typeName": {
													"id": 736,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 735,
														"name": "BuyCoverParams",
														"nameLocations": [
															"2143:14:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 953,
														"src": "2143:14:9"
													},
													"referencedDeclaration": 953,
													"src": "2143:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BuyCoverParams_$953_storage_ptr",
														"typeString": "struct BuyCoverParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2142:32:9"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "2196:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "2191:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2191:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2190:12:9"
									},
									"scope": 933,
									"src": "2123:116:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "2373:1226:9",
										"statements": [
											{
												"assignments": [
													756
												],
												"declarations": [
													{
														"constant": false,
														"id": 756,
														"mutability": "mutable",
														"name": "_pool",
														"nameLocation": "2390:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 864,
														"src": "2384:11:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPool_$1099",
															"typeString": "contract IPool"
														},
														"typeName": {
															"id": 755,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 754,
																"name": "IPool",
																"nameLocations": [
																	"2384:5:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1099,
																"src": "2384:5:9"
															},
															"referencedDeclaration": 1099,
															"src": "2384:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPool_$1099",
																"typeString": "contract IPool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 759,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 757,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "2398:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IPool_$1099_$",
															"typeString": "function () view returns (contract IPool)"
														}
													},
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:6:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPool_$1099",
														"typeString": "contract IPool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2384:20:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 760,
														"name": "paymentAsset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "2418:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 761,
														"name": "ETH_ASSET_ID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "2434:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "2418:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 863,
												"nodeType": "IfStatement",
												"src": "2414:1155:9",
												"trueBody": {
													"id": 862,
													"nodeType": "Block",
													"src": "2448:1121:9",
													"statements": [
														{
															"assignments": [
																764
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 764,
																	"mutability": "mutable",
																	"name": "premiumWithCommission",
																	"nameLocation": "2463:21:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 862,
																	"src": "2458:26:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 763,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "2458:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 770,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 769,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 767,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 765,
																		"name": "commissionRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 584,
																		"src": "2487:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 766,
																		"name": "premiumInPaymentAsset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 747,
																		"src": "2502:21:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2487:36:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 768,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2524:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "2487:40:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2458:69:9"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 774,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 771,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2545:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2549:5:9",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "2545:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 773,
																	"name": "premiumInPaymentAsset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "2557:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2545:33:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 779,
															"nodeType": "IfStatement",
															"src": "2541:96:9",
															"trueBody": {
																"id": 778,
																"nodeType": "Block",
																"src": "2580:57:9",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 775,
																				"name": "InsufficientEthSent",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1017,
																				"src": "2605:19:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 776,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2605:21:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 777,
																		"nodeType": "RevertStatement",
																		"src": "2598:28:9"
																	}
																]
															}
														},
														{
															"assignments": [
																781
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 781,
																	"mutability": "mutable",
																	"name": "remainder",
																	"nameLocation": "2653:9:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 862,
																	"src": "2648:14:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 780,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "2648:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 786,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 782,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2665:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2669:5:9",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "2665:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 784,
																	"name": "premiumWithCommission",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 764,
																	"src": "2677:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2665:33:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2648:50:9"
														},
														{
															"id": 806,
															"nodeType": "Block",
															"src": "2706:270:9",
															"statements": [
																{
																	"assignments": [
																		788,
																		null
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 788,
																			"mutability": "mutable",
																			"name": "ok",
																			"nameLocation": "2824:2:9",
																			"nodeType": "VariableDeclaration",
																			"scope": 806,
																			"src": "2819:7:9",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"typeName": {
																				"id": 787,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "2819:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"visibility": "internal"
																		},
																		null
																	],
																	"id": 798,
																	"initialValue": {
																		"arguments": [
																			{
																				"hexValue": "",
																				"id": 796,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2892:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																					"typeString": "literal_string \"\""
																				},
																				"value": ""
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																					"typeString": "literal_string \"\""
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																						"typeString": "literal_string \"\""
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 791,
																							"name": "_pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 756,
																							"src": "2850:5:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IPool_$1099",
																								"typeString": "contract IPool"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_IPool_$1099",
																								"typeString": "contract IPool"
																							}
																						],
																						"id": 790,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "2842:7:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 789,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "2842:7:9",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 792,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2842:14:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"id": 793,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2857:4:9",
																				"memberName": "call",
																				"nodeType": "MemberAccess",
																				"src": "2842:19:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																					"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																				}
																			},
																			"id": 795,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"names": [
																				"value"
																			],
																			"nodeType": "FunctionCallOptions",
																			"options": [
																				{
																					"id": 794,
																					"name": "premiumInPaymentAsset",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 747,
																					"src": "2869:21:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"src": "2842:49:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																				"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																			}
																		},
																		"id": 797,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2842:53:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "tuple(bool,bytes memory)"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "2818:77:9"
																},
																{
																	"condition": {
																		"id": 800,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "2909:3:9",
																		"subExpression": {
																			"id": 799,
																			"name": "ok",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 788,
																			"src": "2910:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 805,
																	"nodeType": "IfStatement",
																	"src": "2905:63:9",
																	"trueBody": {
																		"id": 804,
																		"nodeType": "Block",
																		"src": "2914:54:9",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 801,
																						"name": "SendingEthToPoolFailed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1019,
																						"src": "2933:22:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 802,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2933:24:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 803,
																				"nodeType": "RevertStatement",
																				"src": "2926:31:9"
																			}
																		]
																	}
																}
															]
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 811,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 807,
																		"name": "premiumWithCommission",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 764,
																		"src": "3013:21:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 808,
																		"name": "premiumInPaymentAsset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 747,
																		"src": "3037:21:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3013:45:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3061:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3013:49:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 836,
															"nodeType": "IfStatement",
															"src": "3009:289:9",
															"trueBody": {
																"id": 835,
																"nodeType": "Block",
																"src": "3064:234:9",
																"statements": [
																	{
																		"assignments": [
																			813,
																			null
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 813,
																				"mutability": "mutable",
																				"name": "ok",
																				"nameLocation": "3080:2:9",
																				"nodeType": "VariableDeclaration",
																				"scope": 835,
																				"src": "3075:7:9",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"typeName": {
																					"id": 812,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "3075:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"visibility": "internal"
																			},
																			null
																		],
																		"id": 827,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "",
																					"id": 825,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3197:2:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																						"typeString": "literal_string \"\""
																					},
																					"value": ""
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																						"typeString": "literal_string \"\""
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																							"typeString": "literal_string \"\""
																						}
																					],
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"expression": {
																										"id": 816,
																										"name": "master",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 596,
																										"src": "3106:6:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_contract$_Master_$570",
																											"typeString": "contract Master"
																										}
																									},
																									"id": 817,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "3113:21:9",
																									"memberName": "CommissionDestination",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 501,
																									"src": "3106:28:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																										"typeString": "function () view external returns (address)"
																									}
																								},
																								"id": 818,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "3106:30:9",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"id": 815,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3098:7:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 814,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3098:7:9",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 819,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3098:39:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"id": 820,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3138:4:9",
																					"memberName": "call",
																					"nodeType": "MemberAccess",
																					"src": "3098:44:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																						"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																					}
																				},
																				"id": 824,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"names": [
																					"value"
																				],
																				"nodeType": "FunctionCallOptions",
																				"options": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 823,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 821,
																							"name": "premiumWithCommission",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 764,
																							"src": "3150:21:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 822,
																							"name": "premiumInPaymentAsset",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 747,
																							"src": "3174:21:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3150:45:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"src": "3098:98:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																					"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																				}
																			},
																			"id": 826,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3098:102:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																				"typeString": "tuple(bool,bytes memory)"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3074:126:9"
																	},
																	{
																		"condition": {
																			"id": 829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "3214:3:9",
																			"subExpression": {
																				"id": 828,
																				"name": "ok",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 813,
																				"src": "3215:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 834,
																		"nodeType": "IfStatement",
																		"src": "3210:80:9",
																		"trueBody": {
																			"id": 833,
																			"nodeType": "Block",
																			"src": "3219:71:9",
																			"statements": [
																				{
																					"errorCall": {
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 830,
																							"name": "SendingEthToCommissionDestinationFailed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1021,
																							"src": "3238:39:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_error_pure$__$returns$__$",
																								"typeString": "function () pure"
																							}
																						},
																						"id": 831,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3238:41:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 832,
																					"nodeType": "RevertStatement",
																					"src": "3231:48:9"
																				}
																			]
																		}
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 837,
																	"name": "remainder",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 781,
																	"src": "3310:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3322:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3310:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 861,
															"nodeType": "IfStatement",
															"src": "3306:252:9",
															"trueBody": {
																"id": 860,
																"nodeType": "Block",
																"src": "3325:233:9",
																"statements": [
																	{
																		"assignments": [
																			841,
																			null
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 841,
																				"mutability": "mutable",
																				"name": "ok",
																				"nameLocation": "3400:2:9",
																				"nodeType": "VariableDeclaration",
																				"scope": 860,
																				"src": "3395:7:9",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"typeName": {
																					"id": 840,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "3395:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"visibility": "internal"
																			},
																			null
																		],
																		"id": 852,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "",
																					"id": 850,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3461:2:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																						"typeString": "literal_string \"\""
																					},
																					"value": ""
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																						"typeString": "literal_string \"\""
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																							"typeString": "literal_string \"\""
																						}
																					],
																					"expression": {
																						"arguments": [
																							{
																								"expression": {
																									"id": 844,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967281,
																									"src": "3426:3:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 845,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "3430:6:9",
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"src": "3426:10:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"id": 843,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3418:7:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 842,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3418:7:9",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 846,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3418:19:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"id": 847,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3438:4:9",
																					"memberName": "call",
																					"nodeType": "MemberAccess",
																					"src": "3418:24:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																						"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																					}
																				},
																				"id": 849,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"names": [
																					"value"
																				],
																				"nodeType": "FunctionCallOptions",
																				"options": [
																					{
																						"id": 848,
																						"name": "remainder",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 781,
																						"src": "3450:9:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"src": "3418:42:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																					"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																				}
																			},
																			"id": 851,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3418:46:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																				"typeString": "tuple(bool,bytes memory)"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3394:70:9"
																	},
																	{
																		"condition": {
																			"id": 854,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "3478:3:9",
																			"subExpression": {
																				"id": 853,
																				"name": "ok",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 841,
																				"src": "3479:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 859,
																		"nodeType": "IfStatement",
																		"src": "3474:76:9",
																		"trueBody": {
																			"id": 858,
																			"nodeType": "Block",
																			"src": "3483:67:9",
																			"statements": [
																				{
																					"errorCall": {
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 855,
																							"name": "ReturningEthRemainderToSenderFailed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1023,
																							"src": "3502:35:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_error_pure$__$returns$__$",
																								"typeString": "function () pure"
																							}
																						},
																						"id": 856,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3502:37:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 857,
																					"nodeType": "RevertStatement",
																					"src": "3495:44:9"
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "retrievePayment",
									"nameLocation": "2279:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "premiumInPaymentAsset",
												"nameLocation": "2300:21:9",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "2295:26:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 746,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2295:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "paymentAsset",
												"nameLocation": "2328:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "2323:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 748,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2323:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2294:47:9"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2365:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "2360:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 751,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2360:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2359:14:9"
									},
									"scope": 933,
									"src": "2270:1329:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1015
									],
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "3651:40:9",
										"statements": [
											{
												"expression": {
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 870,
														"name": "activeCoverAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "3660:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 871,
														"name": "dec",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 867,
														"src": "3681:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3660:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "3660:24:9"
											}
										]
									},
									"functionSelector": "4b61a44b",
									"id": 875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decActiveCoverInETH",
									"nameLocation": "3614:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "dec",
												"nameLocation": "3639:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "3634:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 866,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3634:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3633:10:9"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3651:0:9"
									},
									"scope": 933,
									"src": "3605:86:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1010
									],
									"body": {
										"id": 882,
										"nodeType": "Block",
										"src": "3758:41:9",
										"statements": [
											{
												"expression": {
													"id": 880,
													"name": "activeCoverAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 593,
													"src": "3775:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 879,
												"id": 881,
												"nodeType": "Return",
												"src": "3768:24:9"
											}
										]
									},
									"functionSelector": "ed3b657a",
									"id": 883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalActiveCoverInETH",
									"nameLocation": "3705:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3726:2:9"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "3750:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3750:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3749:9:9"
									},
									"scope": 933,
									"src": "3696:103:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 895,
										"nodeType": "Block",
										"src": "3851:51:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 890,
																	"name": "master",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 596,
																	"src": "3874:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Master_$570",
																		"typeString": "contract Master"
																	}
																},
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3881:11:9",
																"memberName": "PoolAddress",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 495,
																"src": "3874:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																	"typeString": "function () view external returns (address)"
																}
															},
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3874:20:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 889,
														"name": "IPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1099,
														"src": "3868:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IPool_$1099_$",
															"typeString": "type(contract IPool)"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3868:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPool_$1099",
														"typeString": "contract IPool"
													}
												},
												"functionReturnParameters": 888,
												"id": 894,
												"nodeType": "Return",
												"src": "3861:34:9"
											}
										]
									},
									"id": 896,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pool",
									"nameLocation": "3814:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3818:2:9"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "3844:5:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IPool_$1099",
													"typeString": "contract IPool"
												},
												"typeName": {
													"id": 886,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 885,
														"name": "IPool",
														"nameLocations": [
															"3844:5:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1099,
														"src": "3844:5:9"
													},
													"referencedDeclaration": 1099,
													"src": "3844:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPool_$1099",
														"typeString": "contract IPool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3843:7:9"
									},
									"scope": 933,
									"src": "3805:97:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 913,
										"nodeType": "Block",
										"src": "3976:100:9",
										"statements": [
											{
												"assignments": [
													904,
													null,
													null,
													null,
													null,
													null,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 904,
														"mutability": "mutable",
														"name": "sqrtPX",
														"nameLocation": "3997:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 913,
														"src": "3989:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 903,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "3989:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null,
													null,
													null,
													null
												],
												"id": 910,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 906,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 898,
																	"src": "4034:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 905,
																"name": "IUniswapV3Pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "4019:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$67_$",
																	"typeString": "type(contract IUniswapV3Pool)"
																}
															},
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4019:17:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$67",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 908,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4037:5:9",
														"memberName": "slot0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 400,
														"src": "4019:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
															"typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
														}
													},
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4019:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
														"typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3988:56:9"
											},
											{
												"expression": {
													"id": 911,
													"name": "sqrtPX",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 904,
													"src": "4063:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"functionReturnParameters": 902,
												"id": 912,
												"nodeType": "Return",
												"src": "4056:13:9"
											}
										]
									},
									"functionSelector": "4230a777",
									"id": 914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLiveDataUniswap",
									"nameLocation": "3917:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3944:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "3936:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3935:11:9"
									},
									"returnParameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "3968:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 900,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3968:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3967:9:9"
									},
									"scope": 933,
									"src": "3908:168:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "4139:100:9",
										"statements": [
											{
												"assignments": [
													null,
													922,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 922,
														"mutability": "mutable",
														"name": "unitPX",
														"nameLocation": "4155:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 931,
														"src": "4151:10:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 921,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "4151:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 928,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 924,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 916,
																	"src": "4189:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 923,
																"name": "AggregatorV3Interface",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "4167:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																	"typeString": "type(contract AggregatorV3Interface)"
																}
															},
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4167:24:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 926,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4192:15:9",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "4167:40:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4167:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4149:60:9"
											},
											{
												"expression": {
													"id": 929,
													"name": "unitPX",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 922,
													"src": "4226:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 920,
												"id": 930,
												"nodeType": "Return",
												"src": "4219:13:9"
											}
										]
									},
									"functionSelector": "de071a0a",
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUnitPX",
									"nameLocation": "4093:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "4111:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "4103:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 915,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4103:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4102:11:9"
									},
									"returnParameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "4135:3:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 918,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "4135:3:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4134:5:9"
									},
									"scope": 933,
									"src": "4084:155:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 934,
							"src": "456:3787:9",
							"usedErrors": [
								1017,
								1019,
								1021,
								1023
							]
						}
					],
					"src": "0:4244:9"
				},
				"id": 9
			},
			"contracts/interfaces/ICover.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/ICover.sol",
					"exportedSymbols": {
						"BuyCoverParams": [
							953
						],
						"CoverData": [
							976
						],
						"ICover": [
							1024
						],
						"ICoverNFT": [
							1068
						],
						"IERC165": [
							1228
						],
						"IERC721": [
							1216
						]
					},
					"id": 1025,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:10"
						},
						{
							"absolutePath": "contracts/interfaces/ICoverNFT.sol",
							"file": "./ICoverNFT.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1025,
							"sourceUnit": 1069,
							"src": "25:25:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"canonicalName": "BuyCoverParams",
							"id": 953,
							"members": [
								{
									"constant": false,
									"id": 938,
									"mutability": "mutable",
									"name": "token0",
									"nameLocation": "88:6:10",
									"nodeType": "VariableDeclaration",
									"scope": 953,
									"src": "80:14:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 937,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "80:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 940,
									"mutability": "mutable",
									"name": "token1",
									"nameLocation": "108:6:10",
									"nodeType": "VariableDeclaration",
									"scope": 953,
									"src": "100:14:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 939,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "100:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 942,
									"mutability": "mutable",
									"name": "token1Qty",
									"nameLocation": "125:9:10",
									"nodeType": "VariableDeclaration",
									"scope": 953,
									"src": "120:14:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 941,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "120:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 944,
									"mutability": "mutable",
									"name": "token0Qty",
									"nameLocation": "145:9:10",
									"nodeType": "VariableDeclaration",
									"scope": 953,
									"src": "140:14:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 943,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "140:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 946,
									"mutability": "mutable",
									"name": "lowerBoundRatio",
									"nameLocation": "165:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 953,
									"src": "160:20:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 945,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "160:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 948,
									"mutability": "mutable",
									"name": "upperBoundRatio",
									"nameLocation": "191:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 953,
									"src": "186:20:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 947,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "186:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 950,
									"mutability": "mutable",
									"name": "period",
									"nameLocation": "217:6:10",
									"nodeType": "VariableDeclaration",
									"scope": 953,
									"src": "212:11:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 949,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "212:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 952,
									"mutability": "mutable",
									"name": "pairStr",
									"nameLocation": "236:7:10",
									"nodeType": "VariableDeclaration",
									"scope": 953,
									"src": "229:14:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 951,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "229:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "BuyCoverParams",
							"nameLocation": "59:14:10",
							"nodeType": "StructDefinition",
							"scope": 1025,
							"src": "52:194:10",
							"visibility": "public"
						},
						{
							"canonicalName": "CoverData",
							"id": 976,
							"members": [
								{
									"constant": false,
									"id": 955,
									"mutability": "mutable",
									"name": "amountPaidOut",
									"nameLocation": "277:13:10",
									"nodeType": "VariableDeclaration",
									"scope": 976,
									"src": "269:21:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 954,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "269:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 957,
									"mutability": "mutable",
									"name": "totalClaimAmount",
									"nameLocation": "302:16:10",
									"nodeType": "VariableDeclaration",
									"scope": 976,
									"src": "294:24:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 956,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "294:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 959,
									"mutability": "mutable",
									"name": "start",
									"nameLocation": "330:5:10",
									"nodeType": "VariableDeclaration",
									"scope": 976,
									"src": "322:13:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 958,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "322:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 961,
									"mutability": "mutable",
									"name": "period",
									"nameLocation": "347:6:10",
									"nodeType": "VariableDeclaration",
									"scope": 976,
									"src": "339:14:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 960,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "339:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 963,
									"mutability": "mutable",
									"name": "token0",
									"nameLocation": "380:6:10",
									"nodeType": "VariableDeclaration",
									"scope": 976,
									"src": "372:14:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 962,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "372:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 965,
									"mutability": "mutable",
									"name": "token1",
									"nameLocation": "400:6:10",
									"nodeType": "VariableDeclaration",
									"scope": 976,
									"src": "392:14:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 964,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "392:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 967,
									"mutability": "mutable",
									"name": "token0Qty",
									"nameLocation": "420:9:10",
									"nodeType": "VariableDeclaration",
									"scope": 976,
									"src": "412:17:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 966,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "412:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 969,
									"mutability": "mutable",
									"name": "token1Qty",
									"nameLocation": "443:9:10",
									"nodeType": "VariableDeclaration",
									"scope": 976,
									"src": "435:17:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 968,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "435:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 971,
									"mutability": "mutable",
									"name": "lowerBoundRatio",
									"nameLocation": "466:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 976,
									"src": "458:23:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 970,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "458:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 973,
									"mutability": "mutable",
									"name": "upperBoundRatio",
									"nameLocation": "495:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 976,
									"src": "487:23:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 972,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "487:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 975,
									"mutability": "mutable",
									"name": "pairStr",
									"nameLocation": "523:7:10",
									"nodeType": "VariableDeclaration",
									"scope": 976,
									"src": "516:14:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 974,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "516:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "CoverData",
							"nameLocation": "255:9:10",
							"nodeType": "StructDefinition",
							"scope": 1025,
							"src": "248:285:10",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ICover",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1024,
							"linearizedBaseContracts": [
								1024
							],
							"name": "ICover",
							"nameLocation": "547:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "a71467a8",
									"id": 984,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "buyCover",
									"nameLocation": "642:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "675:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "651:30:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BuyCoverParams_$953_calldata_ptr",
													"typeString": "struct BuyCoverParams"
												},
												"typeName": {
													"id": 978,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 977,
														"name": "BuyCoverParams",
														"nameLocations": [
															"651:14:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 953,
														"src": "651:14:10"
													},
													"referencedDeclaration": 953,
													"src": "651:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BuyCoverParams_$953_storage_ptr",
														"typeString": "struct BuyCoverParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "650:32:10"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "coverId",
												"nameLocation": "714:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "709:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 981,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "709:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:14:10"
									},
									"scope": 1024,
									"src": "633:90:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6c57b95d",
									"id": 992,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "coverPrice",
									"nameLocation": "738:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "773:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "749:30:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BuyCoverParams_$953_calldata_ptr",
													"typeString": "struct BuyCoverParams"
												},
												"typeName": {
													"id": 986,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 985,
														"name": "BuyCoverParams",
														"nameLocations": [
															"749:14:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 953,
														"src": "749:14:10"
													},
													"referencedDeclaration": 953,
													"src": "749:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BuyCoverParams_$953_storage_ptr",
														"typeString": "struct BuyCoverParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "748:32:10"
									},
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "804:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "799:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 989,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "799:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:12:10"
									},
									"scope": 1024,
									"src": "729:82:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "404730f4",
									"id": 997,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "coverDataCount",
									"nameLocation": "986:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1000:2:10"
									},
									"returnParameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "count",
												"nameLocation": "1031:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "1026:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 994,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1026:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1025:12:10"
									},
									"scope": 1024,
									"src": "977:61:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "00407d2a",
									"id": 1005,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCoverData",
									"nameLocation": "1053:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "coverId",
												"nameLocation": "1071:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "1066:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1066:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1065:14:10"
									},
									"returnParameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "coverData",
												"nameLocation": "1120:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "1103:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_CoverData_$976_memory_ptr",
													"typeString": "struct CoverData"
												},
												"typeName": {
													"id": 1002,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1001,
														"name": "CoverData",
														"nameLocations": [
															"1103:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 976,
														"src": "1103:9:10"
													},
													"referencedDeclaration": 976,
													"src": "1103:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CoverData_$976_storage_ptr",
														"typeString": "struct CoverData"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1102:28:10"
									},
									"scope": 1024,
									"src": "1044:87:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ed3b657a",
									"id": 1010,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalActiveCoverInETH",
									"nameLocation": "1145:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1166:2:10"
									},
									"returnParameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "1191:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1007,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1191:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1190:6:10"
									},
									"scope": 1024,
									"src": "1136:61:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4b61a44b",
									"id": 1015,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decActiveCoverInETH",
									"nameLocation": "1211:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "1231:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1231:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1230:7:10"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1246:0:10"
									},
									"scope": 1024,
									"src": "1202:45:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"errorSelector": "f244866f",
									"id": 1017,
									"name": "InsufficientEthSent",
									"nameLocation": "1279:19:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1298:2:10"
									},
									"src": "1273:28:10"
								},
								{
									"errorSelector": "ab1ee9bf",
									"id": 1019,
									"name": "SendingEthToPoolFailed",
									"nameLocation": "1312:22:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1334:2:10"
									},
									"src": "1306:31:10"
								},
								{
									"errorSelector": "204633a4",
									"id": 1021,
									"name": "SendingEthToCommissionDestinationFailed",
									"nameLocation": "1348:39:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1387:2:10"
									},
									"src": "1342:48:10"
								},
								{
									"errorSelector": "cd57d4da",
									"id": 1023,
									"name": "ReturningEthRemainderToSenderFailed",
									"nameLocation": "1401:35:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1436:2:10"
									},
									"src": "1395:44:10"
								}
							],
							"scope": 1025,
							"src": "537:904:10",
							"usedErrors": [
								1017,
								1019,
								1021,
								1023
							]
						}
					],
					"src": "0:1441:10"
				},
				"id": 10
			},
			"contracts/interfaces/ICoverNFT.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/ICoverNFT.sol",
					"exportedSymbols": {
						"ICoverNFT": [
							1068
						],
						"IERC165": [
							1228
						],
						"IERC721": [
							1216
						]
					},
					"id": 1069,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
							"id": 1026,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1069,
							"sourceUnit": 1217,
							"src": "1:111:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1027,
										"name": "IERC721",
										"nameLocations": [
											"137:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1216,
										"src": "137:7:11"
									},
									"id": 1028,
									"nodeType": "InheritanceSpecifier",
									"src": "137:7:11"
								}
							],
							"canonicalName": "ICoverNFT",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1068,
							"linearizedBaseContracts": [
								1068,
								1216,
								1228
							],
							"name": "ICoverNFT",
							"nameLocation": "124:9:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "430c2081",
									"id": 1037,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedOrOwner",
									"nameLocation": "159:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "185:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "177:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "177:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "199:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "194:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "194:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "176:31:11"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "226:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1034,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "226:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "225:6:11"
									},
									"scope": 1068,
									"src": "150:82:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6a627842",
									"id": 1044,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "247:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "260:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "252:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "252:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "251:12:11"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "287:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "282:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "282:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "281:14:11"
									},
									"scope": 1068,
									"src": "238:58:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 1049,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "343:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "354:2:11"
									},
									"returnParameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "380:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1046,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "380:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:6:11"
									},
									"scope": 1068,
									"src": "334:52:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"errorSelector": "7c214f04",
									"id": 1051,
									"name": "NotOperator",
									"nameLocation": "398:11:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "409:2:11"
									},
									"src": "392:20:11"
								},
								{
									"errorSelector": "4d5e5fb3",
									"id": 1053,
									"name": "NotMinted",
									"nameLocation": "423:9:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "432:2:11"
									},
									"src": "417:18:11"
								},
								{
									"errorSelector": "c6de3f25",
									"id": 1055,
									"name": "WrongFrom",
									"nameLocation": "446:9:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "455:2:11"
									},
									"src": "440:18:11"
								},
								{
									"errorSelector": "9c8d2cd2",
									"id": 1057,
									"name": "InvalidRecipient",
									"nameLocation": "469:16:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "485:2:11"
									},
									"src": "463:25:11"
								},
								{
									"errorSelector": "0ae7cb04",
									"id": 1059,
									"name": "InvalidNewOperatorAddress",
									"nameLocation": "499:25:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "524:2:11"
									},
									"src": "493:34:11"
								},
								{
									"errorSelector": "edb7f571",
									"id": 1061,
									"name": "InvalidNewNFTDescriptorAddress",
									"nameLocation": "538:30:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "568:2:11"
									},
									"src": "532:39:11"
								},
								{
									"errorSelector": "ea8e4eb5",
									"id": 1063,
									"name": "NotAuthorized",
									"nameLocation": "582:13:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "595:2:11"
									},
									"src": "576:22:11"
								},
								{
									"errorSelector": "3da63931",
									"id": 1065,
									"name": "UnsafeRecipient",
									"nameLocation": "609:15:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "624:2:11"
									},
									"src": "603:24:11"
								},
								{
									"errorSelector": "ddefae28",
									"id": 1067,
									"name": "AlreadyMinted",
									"nameLocation": "638:13:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "651:2:11"
									},
									"src": "632:22:11"
								}
							],
							"scope": 1069,
							"src": "114:728:11",
							"usedErrors": [
								1051,
								1053,
								1055,
								1057,
								1059,
								1061,
								1063,
								1065,
								1067
							]
						}
					],
					"src": "1:841:11"
				},
				"id": 11
			},
			"contracts/interfaces/IMCR.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IMCR.sol",
					"exportedSymbols": {
						"IMCR": [
							1078
						]
					},
					"id": 1079,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMCR",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1078,
							"linearizedBaseContracts": [
								1078
							],
							"name": "IMCR",
							"nameLocation": "10:4:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "44936b10",
									"id": 1074,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMCR",
									"nameLocation": "29:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35:2:12"
									},
									"returnParameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "61:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1071,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "61:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60:6:12"
									},
									"scope": 1078,
									"src": "20:47:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "aa5da046",
									"id": 1077,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateMCRInternal",
									"nameLocation": "81:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "98:2:12"
									},
									"returnParameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "109:0:12"
									},
									"scope": 1078,
									"src": "72:38:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1079,
							"src": "0:112:12",
							"usedErrors": []
						}
					],
					"src": "0:112:12"
				},
				"id": 12
			},
			"contracts/interfaces/IPool.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IPool.sol",
					"exportedSymbols": {
						"IPool": [
							1099
						]
					},
					"id": 1100,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPool",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1099,
							"linearizedBaseContracts": [
								1099
							],
							"name": "IPool",
							"nameLocation": "10:5:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "06833ffd",
									"id": 1084,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "buyHEDH",
									"nameLocation": "31:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "minTokensOut",
												"nameLocation": "44:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "39:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "39:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38:19:13"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "74:0:13"
									},
									"scope": 1099,
									"src": "22:53:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bdf4872b",
									"id": 1091,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sellHEDH",
									"nameLocation": "89:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "103:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "98:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "98:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "minEthOut",
												"nameLocation": "121:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "116:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1087,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "116:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "97:34:13"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "140:0:13"
									},
									"scope": 1099,
									"src": "80:61:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "cf8d133f",
									"id": 1098,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sendPayout",
									"nameLocation": "155:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "payoutAddress",
												"nameLocation": "182:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "166:29:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1092,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "166:15:13",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "202:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "197:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1094,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "197:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "165:44:13"
									},
									"returnParameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "218:0:13"
									},
									"scope": 1099,
									"src": "146:73:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1100,
							"src": "0:221:13",
							"usedErrors": []
						}
					],
					"src": "0:221:13"
				},
				"id": 13
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1228
						],
						"IERC721": [
							1216
						]
					},
					"id": 1217,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1101,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:25:14"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1103,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1217,
							"sourceUnit": 1229,
							"src": "135:62:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1102,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1228,
										"src": "143:7:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1105,
										"name": "IERC165",
										"nameLocations": [
											"288:7:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1228,
										"src": "288:7:14"
									},
									"id": 1106,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:14"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1104,
								"nodeType": "StructuredDocumentation",
								"src": "199:67:14",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1216,
							"linearizedBaseContracts": [
								1216,
								1228
							],
							"name": "IERC721",
							"nameLocation": "277:7:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1107,
										"nodeType": "StructuredDocumentation",
										"src": "302:88:14",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1115,
									"name": "Transfer",
									"nameLocation": "401:8:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1109,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "426:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "410:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1111,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "448:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "432:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "432:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "468:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "452:23:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "452:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:67:14"
									},
									"src": "395:82:14"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1116,
										"nodeType": "StructuredDocumentation",
										"src": "483:94:14",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1124,
									"name": "Approval",
									"nameLocation": "588:8:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "613:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "597:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "636:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "620:24:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1122,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "662:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "646:23:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "596:74:14"
									},
									"src": "582:89:14"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1125,
										"nodeType": "StructuredDocumentation",
										"src": "677:117:14",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1133,
									"name": "ApprovalForAll",
									"nameLocation": "805:14:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "836:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "820:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "859:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "843:24:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "843:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1131,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "874:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "869:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1130,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "869:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:64:14"
									},
									"src": "799:85:14"
								},
								{
									"documentation": {
										"id": 1134,
										"nodeType": "StructuredDocumentation",
										"src": "890:76:14",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "980:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "998:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "990:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:15:14"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1036:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "1028:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:17:14"
									},
									"scope": 1216,
									"src": "971:74:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1142,
										"nodeType": "StructuredDocumentation",
										"src": "1051:131:14",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1149,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1196:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1212:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "1204:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1204:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1203:17:14"
									},
									"returnParameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1252:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "1244:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1244:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:15:14"
									},
									"scope": 1216,
									"src": "1187:72:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1150,
										"nodeType": "StructuredDocumentation",
										"src": "1265:556:14",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1161,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1835:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1860:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "1852:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1852:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "1866:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1886:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "1878:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1910:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "1895:19:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1157,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1895:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1851:64:14"
									},
									"returnParameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1924:0:14"
									},
									"scope": 1216,
									"src": "1826:99:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1162,
										"nodeType": "StructuredDocumentation",
										"src": "1931:687:14",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1171,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2632:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2657:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "2649:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2649:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2671:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "2663:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2663:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2683:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "2675:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2648:43:14"
									},
									"returnParameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2700:0:14"
									},
									"scope": 1216,
									"src": "2623:78:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1172,
										"nodeType": "StructuredDocumentation",
										"src": "2707:732:14",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1181,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3453:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3474:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "3466:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3488:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "3480:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3480:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3500:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "3492:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3465:43:14"
									},
									"returnParameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3517:0:14"
									},
									"scope": 1216,
									"src": "3444:74:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1182,
										"nodeType": "StructuredDocumentation",
										"src": "3524:452:14",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3990:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4006:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "3998:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3998:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4018:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "4010:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4010:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3997:29:14"
									},
									"returnParameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4035:0:14"
									},
									"scope": 1216,
									"src": "3981:55:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1190,
										"nodeType": "StructuredDocumentation",
										"src": "4042:309:14",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1197,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4365:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4391:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "4383:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4383:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4406:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "4401:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1193,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4401:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4382:33:14"
									},
									"returnParameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4424:0:14"
									},
									"scope": 1216,
									"src": "4356:69:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1198,
										"nodeType": "StructuredDocumentation",
										"src": "4431:139:14",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1205,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4584:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4604:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "4596:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4596:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4595:17:14"
									},
									"returnParameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4644:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "4636:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4636:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4635:18:14"
									},
									"scope": 1216,
									"src": "4575:79:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1206,
										"nodeType": "StructuredDocumentation",
										"src": "4660:138:14",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1215,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4812:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4837:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "4829:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4829:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4852:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "4844:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4844:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4828:33:14"
									},
									"returnParameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "4885:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1212,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4885:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4884:6:14"
									},
									"scope": 1216,
									"src": "4803:88:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1217,
							"src": "267:4626:14",
							"usedErrors": []
						}
					],
					"src": "108:4786:14"
				},
				"id": 14
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1228
						]
					},
					"id": 1229,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1218,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1219,
								"nodeType": "StructuredDocumentation",
								"src": "126:279:15",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1228,
							"linearizedBaseContracts": [
								1228
							],
							"name": "IERC165",
							"nameLocation": "416:7:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1220,
										"nodeType": "StructuredDocumentation",
										"src": "430:340:15",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1227,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "784:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "809:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "802:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1221,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "802:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "801:20:15"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "845:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "845:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "844:6:15"
									},
									"scope": 1228,
									"src": "775:76:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1229,
							"src": "406:447:15",
							"usedErrors": []
						}
					],
					"src": "100:754:15"
				},
				"id": 15
			}
		}
	}
}
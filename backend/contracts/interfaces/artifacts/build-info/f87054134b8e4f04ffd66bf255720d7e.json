{
	"id": "f87054134b8e4f04ffd66bf255720d7e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/interfaces/IIndividualClaims.sol": {
				"content": "struct Claim {\n//   // The index of the assessment, stored in Assessment.sol\n//   uint80 assessmentId;\n  uint coverId;\n  address coverOwner;\n\n  bool payoutRedeemed;\n}\n\n\nstruct ClaimSubmission {\n  // The index of the claim, stored in Claims.sol\n  uint claimId;\n  // True when a previous submission exists\n  bool exists;\n}\n\ninterface IIndividualClaims {\n    // check if claim is after expiration within 15 days\n    function submitClaim(\n        uint32 coverId\n    ) external payable returns (Claim memory); \n    function redeemClaimPayout(uint id) external; // burn coverNFT\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/interfaces/IIndividualClaims.sol": {
				"IIndividualClaims": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "redeemClaimPayout",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "coverId",
									"type": "uint32"
								}
							],
							"name": "submitClaim",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "coverId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "coverOwner",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "payoutRedeemed",
											"type": "bool"
										}
									],
									"internalType": "struct Claim",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"redeemClaimPayout(uint256)": "72c3c31e",
							"submitClaim(uint32)": "caf30869"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"redeemClaimPayout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"coverId\",\"type\":\"uint32\"}],\"name\":\"submitClaim\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"coverId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"coverOwner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"payoutRedeemed\",\"type\":\"bool\"}],\"internalType\":\"struct Claim\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IIndividualClaims.sol\":\"IIndividualClaims\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IIndividualClaims.sol\":{\"keccak256\":\"0xd17042012a84ebc116df46f5023db65192b8d27c73ac3ba975a9ef9c0845dc05\",\"urls\":[\"bzz-raw://5cf1e15ae68af7b2d3db4ee05a5a1f13915f555cce334bfd7c14d73e0f76987b\",\"dweb:/ipfs/QmPHtaGcZo3CDBGsugNhUkYNrb9nYMhccz27c4jJPAbiKg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/interfaces/IIndividualClaims.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/interfaces/IIndividualClaims.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3420",
				"formattedMessage": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.21;\"\n--> contracts/interfaces/IIndividualClaims.sol\n\n",
				"message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.21;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/interfaces/IIndividualClaims.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/interfaces/IIndividualClaims.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IIndividualClaims.sol",
					"exportedSymbols": {
						"Claim": [
							7
						],
						"ClaimSubmission": [
							12
						],
						"IIndividualClaims": [
							26
						]
					},
					"id": 27,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"canonicalName": "Claim",
							"id": 7,
							"members": [
								{
									"constant": false,
									"id": 2,
									"mutability": "mutable",
									"name": "coverId",
									"nameLocation": "110:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 7,
									"src": "105:12:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "105:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4,
									"mutability": "mutable",
									"name": "coverOwner",
									"nameLocation": "129:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 7,
									"src": "121:18:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "121:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 6,
									"mutability": "mutable",
									"name": "payoutRedeemed",
									"nameLocation": "149:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 7,
									"src": "144:19:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 5,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "144:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Claim",
							"nameLocation": "7:5:0",
							"nodeType": "StructDefinition",
							"scope": 27,
							"src": "0:166:0",
							"visibility": "public"
						},
						{
							"canonicalName": "ClaimSubmission",
							"id": 12,
							"members": [
								{
									"constant": false,
									"id": 9,
									"mutability": "mutable",
									"name": "claimId",
									"nameLocation": "251:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 12,
									"src": "246:12:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "246:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 11,
									"mutability": "mutable",
									"name": "exists",
									"nameLocation": "311:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 12,
									"src": "306:11:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 10,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "306:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "ClaimSubmission",
							"nameLocation": "176:15:0",
							"nodeType": "StructDefinition",
							"scope": 27,
							"src": "169:151:0",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IIndividualClaims",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 26,
							"linearizedBaseContracts": [
								26
							],
							"name": "IIndividualClaims",
							"nameLocation": "332:17:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "caf30869",
									"id": 20,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "submitClaim",
									"nameLocation": "422:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "coverId",
												"nameLocation": "450:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "443:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 13,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "443:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "433:30:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "490:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Claim_$7_memory_ptr",
													"typeString": "struct Claim"
												},
												"typeName": {
													"id": 17,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 16,
														"name": "Claim",
														"nameLocations": [
															"490:5:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 7,
														"src": "490:5:0"
													},
													"referencedDeclaration": 7,
													"src": "490:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Claim_$7_storage_ptr",
														"typeString": "struct Claim"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "489:14:0"
									},
									"scope": 26,
									"src": "413:91:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "72c3c31e",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "redeemClaimPayout",
									"nameLocation": "519:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "542:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "537:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "537:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "536:9:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "554:0:0"
									},
									"scope": 26,
									"src": "510:45:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 27,
							"src": "322:253:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:575:0"
				},
				"id": 0
			}
		}
	}
}
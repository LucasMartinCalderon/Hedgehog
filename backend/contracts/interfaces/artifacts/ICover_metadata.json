{
	"compiler": {
		"version": "0.8.19+commit.7dd6d404"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"name": "InsufficientEthSent",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ReturningEthRemainderToSenderFailed",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "SendingEthToCommissionDestinationFailed",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "SendingEthToPoolFailed",
				"type": "error"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "token0",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "token1",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "token1Qty",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "token0Qty",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "intialPoolPrice",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "lowerBoundRatio",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "upperBoundRatio",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "period",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "pairStr",
								"type": "string"
							}
						],
						"internalType": "struct BuyCoverParams",
						"name": "params",
						"type": "tuple"
					}
				],
				"name": "buyCover",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "coverId",
						"type": "uint256"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "coverDataCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "count",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "token0",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "token1",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "token1Qty",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "token0Qty",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "intialPoolPrice",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "lowerBoundRatio",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "upperBoundRatio",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "period",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "pairStr",
								"type": "string"
							}
						],
						"internalType": "struct BuyCoverParams",
						"name": "params",
						"type": "tuple"
					}
				],
				"name": "coverPrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "decActiveCoverInETH",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "coverId",
						"type": "uint256"
					}
				],
				"name": "getCoverData",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "amountPaidOut",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "totalClaimAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "start",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "period",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "token0",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "token1",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "token0Qty",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "token1Qty",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "initialPoolPrice",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "lowerBoundRatio",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "upperBoundRatio",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "pairStr",
								"type": "string"
							}
						],
						"internalType": "struct CoverData",
						"name": "coverData",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalActiveCoverInETH",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/interfaces/ICover.sol": "ICover"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/interfaces/ICover.sol": {
			"keccak256": "0x3fd7fe80a5ef4d59757f8fec005cb4df234f72918a1d41b607152e65e49a1bc9",
			"urls": [
				"bzz-raw://83aa82c0b2752038a828720cc2d6af2235cf9f6ffd0dfee103d160dc61e55b0d",
				"dweb:/ipfs/QmYLGMPCxfipSfVUzrHJhKTi8PjRQ3z9WYgb2CA6rSmSjP"
			]
		},
		"contracts/interfaces/ICoverNFT.sol": {
			"keccak256": "0x79d602e1cd332d73b59651d0af301a23071e4ca225097b24d80f9947393e2582",
			"urls": [
				"bzz-raw://a8b78909a6db032e68906729c03fb6e3b8183264fc34fe4009c4c0a598a00a7a",
				"dweb:/ipfs/QmaGEKqDiifEftwiPbBEnaduhZzUwzEBbj89xEdzkx1iB7"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol": {
			"keccak256": "0x55036158b0f3523fa36f2a576743f39dd46bb84bee57e51cd2406c906638cea2",
			"license": "MIT",
			"urls": [
				"bzz-raw://9c5558c241a34b3fa54c848d99844850c88b03869b47e1fc05f6f261c54aaa35",
				"dweb:/ipfs/QmbeeMn9RKhT8DmEvDCNdfiDGtDw1YVB2D5HTLqTzefYPb"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0x39194d726021816f8a5f2b821574349a4884833cf841378dc8e6862e5f789ed6",
			"license": "MIT",
			"urls": [
				"bzz-raw://08cfffa942e4589c4d927db3fecfea998e9486ff41f48ee905fdda34d152a846",
				"dweb:/ipfs/QmQKwHL48iBd5XzRAnSNnGBXo6Ykt22iADEReEusX1SQvK"
			]
		}
	},
	"version": 1
}